// AutoGenerated by jni_gen. Do not edit.
// ignore_for_file: camel_case_types
// ignore_for_file: non_constant_identifier_names
// ignore_for_file: constant_identifier_names
// ignore_for_file: annotate_overrides
// ignore_for_file: no_leading_underscores_for_local_identifiers
// ignore_for_file: unused_element

import "dart:ffi" as ffi;

import "package:jni/jni.dart" as jni;
import "../../init.dart" show jlookup;

class BackupDataInputStream extends jni.JlObject {
  BackupDataInputStream.fromRef(ffi.Pointer<ffi.Void> ref) : super.fromRef(ref);

  static final _ctor = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_backup_BackupDataInputStream_new")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: void <init>(android.app.backup.BackupDataInput data)
  BackupDataInputStream(BackupDataInput data)
      : super.fromRef(_ctor(data.reference));

  static final _read =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_backup_BackupDataInputStream_read")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int read()
  int read() => _read(reference);

  static final _read_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Int32 Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Int32, ffi.Int32)>>(
          "android_app_backup_BackupDataInputStream_read_1")
      .asFunction<
          int Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int, int)>();

  /// from: public int read(byte[] b, int offset, int size)
  int read_1(jni.JlObject b, int offset, int size) =>
      _read_1(reference, b.reference, offset, size);

  static final _read_2 = jlookup<
              ffi.NativeFunction<
                  ffi.Int32 Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_backup_BackupDataInputStream_read_2")
      .asFunction<int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public int read(byte[] b)
  int read_2(jni.JlObject b) => _read_2(reference, b.reference);

  static final _getKey = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_backup_BackupDataInputStream_getKey")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.String getKey()
  jni.JlString getKey() => jni.JlString.fromRef(_getKey(reference));

  static final _size =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_backup_BackupDataInputStream_size")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int size()
  int size() => _size(reference);
}

class BackupHelper extends jni.JlObject {
  BackupHelper.fromRef(ffi.Pointer<ffi.Void> ref) : super.fromRef(ref);

  static final _performBackup = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>)>>(
          "android_app_backup_BackupHelper_performBackup")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public abstract void performBackup(android.os.ParcelFileDescriptor oldState, android.app.backup.BackupDataOutput data, android.os.ParcelFileDescriptor newState)
  void performBackup(jni.JlObject oldState, BackupDataOutput data,
          jni.JlObject newState) =>
      _performBackup(
          reference, oldState.reference, data.reference, newState.reference);

  static final _restoreEntity = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_backup_BackupHelper_restoreEntity")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public abstract void restoreEntity(android.app.backup.BackupDataInputStream data)
  void restoreEntity(BackupDataInputStream data) =>
      _restoreEntity(reference, data.reference);

  static final _writeNewStateDescription = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_backup_BackupHelper_writeNewStateDescription")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public abstract void writeNewStateDescription(android.os.ParcelFileDescriptor newState)
  void writeNewStateDescription(jni.JlObject newState) =>
      _writeNewStateDescription(reference, newState.reference);
}

class BackupManager extends jni.JlObject {
  BackupManager.fromRef(ffi.Pointer<ffi.Void> ref) : super.fromRef(ref);

  static final _ctor = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_backup_BackupManager_new")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void <init>(android.content.Context context)
  BackupManager(jni.JlObject context) : super.fromRef(_ctor(context.reference));

  static final _dataChanged =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_backup_BackupManager_dataChanged")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void dataChanged()
  void dataChanged() => _dataChanged(reference);

  static final _dataChanged_1 =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_backup_BackupManager_dataChanged_1")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: static public void dataChanged(java.lang.String packageName)
  static void dataChanged_1(jni.JlString packageName) =>
      _dataChanged_1(packageName.reference);

  static final _requestRestore = jlookup<
              ffi.NativeFunction<
                  ffi.Int32 Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_backup_BackupManager_requestRestore")
      .asFunction<int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public int requestRestore(android.app.backup.RestoreObserver observer)
  int requestRestore(RestoreObserver observer) =>
      _requestRestore(reference, observer.reference);
}

class FileBackupHelper extends jni.JlObject {
  FileBackupHelper.fromRef(ffi.Pointer<ffi.Void> ref) : super.fromRef(ref);

  static final _ctor = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_backup_FileBackupHelper_new")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void <init>(android.content.Context context, java.lang.String[] files)
  FileBackupHelper(jni.JlObject context, jni.JlObject files)
      : super.fromRef(_ctor(context.reference, files.reference));

  static final _performBackup = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>)>>(
          "android_app_backup_FileBackupHelper_performBackup")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void performBackup(android.os.ParcelFileDescriptor oldState, android.app.backup.BackupDataOutput data, android.os.ParcelFileDescriptor newState)
  void performBackup(jni.JlObject oldState, BackupDataOutput data,
          jni.JlObject newState) =>
      _performBackup(
          reference, oldState.reference, data.reference, newState.reference);

  static final _restoreEntity = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_backup_FileBackupHelper_restoreEntity")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void restoreEntity(android.app.backup.BackupDataInputStream data)
  void restoreEntity(BackupDataInputStream data) =>
      _restoreEntity(reference, data.reference);

  static final _writeNewStateDescription = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_backup_FileBackupHelper_writeNewStateDescription")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void writeNewStateDescription(android.os.ParcelFileDescriptor fd)
  void writeNewStateDescription(jni.JlObject fd) =>
      _writeNewStateDescription(reference, fd.reference);

  static final _finalize =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_backup_FileBackupHelper_finalize")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: protected void finalize()
  void finalize() => _finalize(reference);
}

class SharedPreferencesBackupHelper extends jni.JlObject {
  SharedPreferencesBackupHelper.fromRef(ffi.Pointer<ffi.Void> ref)
      : super.fromRef(ref);

  static final _ctor = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_backup_SharedPreferencesBackupHelper_new")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void <init>(android.content.Context context, java.lang.String[] prefGroups)
  SharedPreferencesBackupHelper(jni.JlObject context, jni.JlObject prefGroups)
      : super.fromRef(_ctor(context.reference, prefGroups.reference));

  static final _performBackup = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>)>>(
          "android_app_backup_SharedPreferencesBackupHelper_performBackup")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void performBackup(android.os.ParcelFileDescriptor oldState, android.app.backup.BackupDataOutput data, android.os.ParcelFileDescriptor newState)
  void performBackup(jni.JlObject oldState, BackupDataOutput data,
          jni.JlObject newState) =>
      _performBackup(
          reference, oldState.reference, data.reference, newState.reference);

  static final _restoreEntity = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_backup_SharedPreferencesBackupHelper_restoreEntity")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void restoreEntity(android.app.backup.BackupDataInputStream data)
  void restoreEntity(BackupDataInputStream data) =>
      _restoreEntity(reference, data.reference);

  static final _writeNewStateDescription = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_backup_SharedPreferencesBackupHelper_writeNewStateDescription")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void writeNewStateDescription(android.os.ParcelFileDescriptor fd)
  void writeNewStateDescription(jni.JlObject fd) =>
      _writeNewStateDescription(reference, fd.reference);

  static final _finalize =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_backup_SharedPreferencesBackupHelper_finalize")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: protected void finalize()
  void finalize() => _finalize(reference);
}

class BackupAgent extends jni.JlObject {
  BackupAgent.fromRef(ffi.Pointer<ffi.Void> ref) : super.fromRef(ref);

  /// from: static public final int FLAG_CLIENT_SIDE_ENCRYPTION_ENABLED
  static const FLAG_CLIENT_SIDE_ENCRYPTION_ENABLED = 1;

  /// from: static public final int FLAG_DEVICE_TO_DEVICE_TRANSFER
  static const FLAG_DEVICE_TO_DEVICE_TRANSFER = 2;

  /// from: static public final int TYPE_DIRECTORY
  static const TYPE_DIRECTORY = 2;

  /// from: static public final int TYPE_FILE
  static const TYPE_FILE = 1;

  static final _ctor =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "android_app_backup_BackupAgent_new")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();

  /// from: public void <init>()
  BackupAgent() : super.fromRef(_ctor());

  static final _onCreate =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_backup_BackupAgent_onCreate")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void onCreate()
  void onCreate() => _onCreate(reference);

  static final _onDestroy =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_backup_BackupAgent_onDestroy")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void onDestroy()
  void onDestroy() => _onDestroy(reference);

  static final _onBackup = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>)>>(
          "android_app_backup_BackupAgent_onBackup")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public abstract void onBackup(android.os.ParcelFileDescriptor oldState, android.app.backup.BackupDataOutput data, android.os.ParcelFileDescriptor newState)
  void onBackup(jni.JlObject oldState, BackupDataOutput data,
          jni.JlObject newState) =>
      _onBackup(
          reference, oldState.reference, data.reference, newState.reference);

  static final _onRestore = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Int32,
                      ffi.Pointer<ffi.Void>)>>(
          "android_app_backup_BackupAgent_onRestore")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int,
              ffi.Pointer<ffi.Void>)>();

  /// from: public abstract void onRestore(android.app.backup.BackupDataInput data, int appVersionCode, android.os.ParcelFileDescriptor newState)
  void onRestore(
          BackupDataInput data, int appVersionCode, jni.JlObject newState) =>
      _onRestore(reference, data.reference, appVersionCode, newState.reference);

  static final _onRestore_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Int64,
                      ffi.Pointer<ffi.Void>)>>(
          "android_app_backup_BackupAgent_onRestore_1")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int,
              ffi.Pointer<ffi.Void>)>();

  /// from: public void onRestore(android.app.backup.BackupDataInput data, long appVersionCode, android.os.ParcelFileDescriptor newState)
  void onRestore_1(
          BackupDataInput data, int appVersionCode, jni.JlObject newState) =>
      _onRestore_1(
          reference, data.reference, appVersionCode, newState.reference);

  static final _onFullBackup = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_backup_BackupAgent_onFullBackup")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void onFullBackup(android.app.backup.FullBackupDataOutput data)
  void onFullBackup(FullBackupDataOutput data) =>
      _onFullBackup(reference, data.reference);

  static final _onQuotaExceeded = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Int64,
                  ffi.Int64)>>("android_app_backup_BackupAgent_onQuotaExceeded")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int, int)>();

  /// from: public void onQuotaExceeded(long backupDataBytes, long quotaBytes)
  void onQuotaExceeded(int backupDataBytes, int quotaBytes) =>
      _onQuotaExceeded(reference, backupDataBytes, quotaBytes);

  static final _fullBackupFile = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_backup_BackupAgent_fullBackupFile")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public final void fullBackupFile(java.io.File file, android.app.backup.FullBackupDataOutput output)
  void fullBackupFile(jni.JlObject file, FullBackupDataOutput output) =>
      _fullBackupFile(reference, file.reference, output.reference);

  static final _onRestoreFile = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Int64,
                  ffi.Pointer<ffi.Void>,
                  ffi.Int32,
                  ffi.Int64,
                  ffi.Int64)>>("android_app_backup_BackupAgent_onRestoreFile")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int,
              ffi.Pointer<ffi.Void>, int, int, int)>();

  /// from: public void onRestoreFile(android.os.ParcelFileDescriptor data, long size, java.io.File destination, int type, long mode, long mtime)
  void onRestoreFile(jni.JlObject data, int size, jni.JlObject destination,
          int type, int mode, int mtime) =>
      _onRestoreFile(reference, data.reference, size, destination.reference,
          type, mode, mtime);

  static final _onRestoreFinished =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_backup_BackupAgent_onRestoreFinished")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void onRestoreFinished()
  void onRestoreFinished() => _onRestoreFinished(reference);
}

class FullBackupDataOutput extends jni.JlObject {
  FullBackupDataOutput.fromRef(ffi.Pointer<ffi.Void> ref) : super.fromRef(ref);

  static final _ctor =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function(ffi.Int64)>>(
              "android_app_backup_FullBackupDataOutput_new")
          .asFunction<ffi.Pointer<ffi.Void> Function(int)>();

  /// from: void <init>(long quota)
  FullBackupDataOutput(int quota) : super.fromRef(_ctor(quota));

  static final _getQuota =
      jlookup<ffi.NativeFunction<ffi.Int64 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_backup_FullBackupDataOutput_getQuota")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public long getQuota()
  int getQuota() => _getQuota(reference);

  static final _getTransportFlags =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_backup_FullBackupDataOutput_getTransportFlags")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int getTransportFlags()
  int getTransportFlags() => _getTransportFlags(reference);
}

class BackupDataOutput extends jni.JlObject {
  BackupDataOutput.fromRef(ffi.Pointer<ffi.Void> ref) : super.fromRef(ref);

  static final _ctor = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_backup_BackupDataOutput_new")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: void <init>(java.io.FileDescriptor fd)
  BackupDataOutput(jni.JlObject fd) : super.fromRef(_ctor(fd.reference));

  static final _getQuota =
      jlookup<ffi.NativeFunction<ffi.Int64 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_backup_BackupDataOutput_getQuota")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public long getQuota()
  int getQuota() => _getQuota(reference);

  static final _getTransportFlags =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_backup_BackupDataOutput_getTransportFlags")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int getTransportFlags()
  int getTransportFlags() => _getTransportFlags(reference);

  static final _writeEntityHeader = jlookup<
              ffi.NativeFunction<
                  ffi.Int32 Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "android_app_backup_BackupDataOutput_writeEntityHeader")
      .asFunction<
          int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public int writeEntityHeader(java.lang.String key, int dataSize)
  int writeEntityHeader(jni.JlString key, int dataSize) =>
      _writeEntityHeader(reference, key.reference, dataSize);

  static final _writeEntityData = jlookup<
              ffi.NativeFunction<
                  ffi.Int32 Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "android_app_backup_BackupDataOutput_writeEntityData")
      .asFunction<
          int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public int writeEntityData(byte[] data, int size)
  int writeEntityData(jni.JlObject data, int size) =>
      _writeEntityData(reference, data.reference, size);

  static final _finalize =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_backup_BackupDataOutput_finalize")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: protected void finalize()
  void finalize() => _finalize(reference);
}

class RestoreObserver extends jni.JlObject {
  RestoreObserver.fromRef(ffi.Pointer<ffi.Void> ref) : super.fromRef(ref);

  static final _ctor =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "android_app_backup_RestoreObserver_new")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();

  /// from: public void <init>()
  RestoreObserver() : super.fromRef(_ctor());

  static final _restoreStarting = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "android_app_backup_RestoreObserver_restoreStarting")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public void restoreStarting(int numPackages)
  void restoreStarting(int numPackages) =>
      _restoreStarting(reference, numPackages);

  static final _onUpdate = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Int32,
                      ffi.Pointer<ffi.Void>)>>(
          "android_app_backup_RestoreObserver_onUpdate")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, int, ffi.Pointer<ffi.Void>)>();

  /// from: public void onUpdate(int nowBeingRestored, java.lang.String currentPackage)
  void onUpdate(int nowBeingRestored, jni.JlString currentPackage) =>
      _onUpdate(reference, nowBeingRestored, currentPackage.reference);

  static final _restoreFinished = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "android_app_backup_RestoreObserver_restoreFinished")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public void restoreFinished(int error)
  void restoreFinished(int error) => _restoreFinished(reference, error);
}

class BackupAgentHelper extends BackupAgent {
  BackupAgentHelper.fromRef(ffi.Pointer<ffi.Void> ref) : super.fromRef(ref);

  static final _ctor =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "android_app_backup_BackupAgentHelper_new")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();

  /// from: public void <init>()
  BackupAgentHelper() : super.fromRef(_ctor());

  static final _onBackup = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>)>>(
          "android_app_backup_BackupAgentHelper_onBackup")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void onBackup(android.os.ParcelFileDescriptor oldState, android.app.backup.BackupDataOutput data, android.os.ParcelFileDescriptor newState)
  void onBackup(jni.JlObject oldState, BackupDataOutput data,
          jni.JlObject newState) =>
      _onBackup(
          reference, oldState.reference, data.reference, newState.reference);

  static final _onRestore = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Int32,
                      ffi.Pointer<ffi.Void>)>>(
          "android_app_backup_BackupAgentHelper_onRestore")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int,
              ffi.Pointer<ffi.Void>)>();

  /// from: public void onRestore(android.app.backup.BackupDataInput data, int appVersionCode, android.os.ParcelFileDescriptor newState)
  void onRestore(
          BackupDataInput data, int appVersionCode, jni.JlObject newState) =>
      _onRestore(reference, data.reference, appVersionCode, newState.reference);

  static final _addHelper = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_backup_BackupAgentHelper_addHelper")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public void addHelper(java.lang.String keyPrefix, android.app.backup.BackupHelper helper)
  void addHelper(jni.JlString keyPrefix, BackupHelper helper) =>
      _addHelper(reference, keyPrefix.reference, helper.reference);
}

class BackupDataInput extends jni.JlObject {
  BackupDataInput.fromRef(ffi.Pointer<ffi.Void> ref) : super.fromRef(ref);

  static final _ctor = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_backup_BackupDataInput_new")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: void <init>(java.io.FileDescriptor fd)
  BackupDataInput(jni.JlObject fd) : super.fromRef(_ctor(fd.reference));

  static final _finalize =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_backup_BackupDataInput_finalize")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: protected void finalize()
  void finalize() => _finalize(reference);

  static final _readNextHeader =
      jlookup<ffi.NativeFunction<ffi.Uint8 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_backup_BackupDataInput_readNextHeader")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public boolean readNextHeader()
  bool readNextHeader() => _readNextHeader(reference) != 0;

  static final _getKey = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_backup_BackupDataInput_getKey")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.String getKey()
  jni.JlString getKey() => jni.JlString.fromRef(_getKey(reference));

  static final _getDataSize =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_backup_BackupDataInput_getDataSize")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int getDataSize()
  int getDataSize() => _getDataSize(reference);

  static final _readEntityData = jlookup<
              ffi.NativeFunction<
                  ffi.Int32 Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Int32, ffi.Int32)>>(
          "android_app_backup_BackupDataInput_readEntityData")
      .asFunction<
          int Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int, int)>();

  /// from: public int readEntityData(byte[] data, int offset, int size)
  int readEntityData(jni.JlObject data, int offset, int size) =>
      _readEntityData(reference, data.reference, offset, size);

  static final _skipEntityData =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_backup_BackupDataInput_skipEntityData")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void skipEntityData()
  void skipEntityData() => _skipEntityData(reference);
}
