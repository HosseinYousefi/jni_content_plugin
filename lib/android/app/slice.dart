// AutoGenerated by jni_gen. Do not edit.
// ignore_for_file: camel_case_types
// ignore_for_file: non_constant_identifier_names
// ignore_for_file: constant_identifier_names
// ignore_for_file: annotate_overrides
// ignore_for_file: no_leading_underscores_for_local_identifiers
// ignore_for_file: unused_element

import "dart:ffi" as ffi;

import "package:jni/jni.dart" as jni;
import "../../init.dart" show jlookup;

class SliceManager extends jni.JlObject {
  SliceManager.fromRef(ffi.Pointer<ffi.Void> ref) : super.fromRef(ref);

  /// from: static public final java.lang.String CATEGORY_SLICE
  static const CATEGORY_SLICE = "android.app.slice.category.SLICE";

  /// from: static public final java.lang.String SLICE_METADATA_KEY
  static const SLICE_METADATA_KEY = "android.metadata.SLICE_URI";

  static final _ctor =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "android_app_slice_SliceManager_new")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();

  /// from: void <init>()
  SliceManager() : super.fromRef(_ctor());

  static final _pinSlice = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_slice_SliceManager_pinSlice")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public void pinSlice(android.net.Uri uri, java.util.Set<android.app.slice.SliceSpec> specs)
  void pinSlice(jni.JlObject uri, jni.JlObject specs) =>
      _pinSlice(reference, uri.reference, specs.reference);

  static final _unpinSlice = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_slice_SliceManager_unpinSlice")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void unpinSlice(android.net.Uri uri)
  void unpinSlice(jni.JlObject uri) => _unpinSlice(reference, uri.reference);

  static final _getPinnedSpecs = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_slice_SliceManager_getPinnedSpecs")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public java.util.Set<android.app.slice.SliceSpec> getPinnedSpecs(android.net.Uri uri)
  jni.JlObject getPinnedSpecs(jni.JlObject uri) =>
      jni.JlObject.fromRef(_getPinnedSpecs(reference, uri.reference));

  static final _getPinnedSlices = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_slice_SliceManager_getPinnedSlices")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.util.List<android.net.Uri> getPinnedSlices()
  jni.JlObject getPinnedSlices() =>
      jni.JlObject.fromRef(_getPinnedSlices(reference));

  static final _getSliceDescendants = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_slice_SliceManager_getSliceDescendants")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public java.util.Collection<android.net.Uri> getSliceDescendants(android.net.Uri uri)
  jni.JlObject getSliceDescendants(jni.JlObject uri) =>
      jni.JlObject.fromRef(_getSliceDescendants(reference, uri.reference));

  static final _bindSlice = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_slice_SliceManager_bindSlice")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.slice.Slice bindSlice(android.net.Uri uri, java.util.Set<android.app.slice.SliceSpec> supportedSpecs)
  Slice bindSlice(jni.JlObject uri, jni.JlObject supportedSpecs) =>
      Slice.fromRef(
          _bindSlice(reference, uri.reference, supportedSpecs.reference));

  static final _mapIntentToUri = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_slice_SliceManager_mapIntentToUri")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.net.Uri mapIntentToUri(android.content.Intent intent)
  jni.JlObject mapIntentToUri(jni.JlObject intent) =>
      jni.JlObject.fromRef(_mapIntentToUri(reference, intent.reference));

  static final _bindSlice_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_slice_SliceManager_bindSlice_1")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.slice.Slice bindSlice(android.content.Intent intent, java.util.Set<android.app.slice.SliceSpec> supportedSpecs)
  Slice bindSlice_1(jni.JlObject intent, jni.JlObject supportedSpecs) =>
      Slice.fromRef(
          _bindSlice_1(reference, intent.reference, supportedSpecs.reference));

  static final _checkSlicePermission = jlookup<
              ffi.NativeFunction<
                  ffi.Int32 Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Int32, ffi.Int32)>>(
          "android_app_slice_SliceManager_checkSlicePermission")
      .asFunction<
          int Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int, int)>();

  /// from: public int checkSlicePermission(android.net.Uri uri, int pid, int uid)
  int checkSlicePermission(jni.JlObject uri, int pid, int uid) =>
      _checkSlicePermission(reference, uri.reference, pid, uid);

  static final _grantSlicePermission = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_slice_SliceManager_grantSlicePermission")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public void grantSlicePermission(java.lang.String toPackage, android.net.Uri uri)
  void grantSlicePermission(jni.JlString toPackage, jni.JlObject uri) =>
      _grantSlicePermission(reference, toPackage.reference, uri.reference);

  static final _revokeSlicePermission = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_slice_SliceManager_revokeSlicePermission")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public void revokeSlicePermission(java.lang.String toPackage, android.net.Uri uri)
  void revokeSlicePermission(jni.JlString toPackage, jni.JlObject uri) =>
      _revokeSlicePermission(reference, toPackage.reference, uri.reference);
}

class SliceMetrics extends jni.JlObject {
  SliceMetrics.fromRef(ffi.Pointer<ffi.Void> ref) : super.fromRef(ref);

  static final _ctor = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("android_app_slice_SliceMetrics_new")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void <init>(android.content.Context context, android.net.Uri uri)
  SliceMetrics(jni.JlObject context, jni.JlObject uri)
      : super.fromRef(_ctor(context.reference, uri.reference));

  static final _logVisible =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_slice_SliceMetrics_logVisible")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void logVisible()
  void logVisible() => _logVisible(reference);

  static final _logHidden =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_slice_SliceMetrics_logHidden")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void logHidden()
  void logHidden() => _logHidden(reference);

  static final _logTouch = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Int32,
                      ffi.Pointer<ffi.Void>)>>(
          "android_app_slice_SliceMetrics_logTouch")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, int, ffi.Pointer<ffi.Void>)>();

  /// from: public void logTouch(int actionType, android.net.Uri subSlice)
  void logTouch(int actionType, jni.JlObject subSlice) =>
      _logTouch(reference, actionType, subSlice.reference);
}

class SliceItem extends jni.JlObject {
  SliceItem.fromRef(ffi.Pointer<ffi.Void> ref) : super.fromRef(ref);

  /// from: static public final android.os.Parcelable.Creator<android.app.slice.SliceItem> CREATOR
  static final _getCREATOR =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "get_android_app_slice_SliceItem_CREATOR")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();
  static jni.JlObject get CREATOR => jni.JlObject.fromRef(_getCREATOR());

  /// from: static public final java.lang.String FORMAT_ACTION
  static const FORMAT_ACTION = "action";

  /// from: static public final java.lang.String FORMAT_BUNDLE
  static const FORMAT_BUNDLE = "bundle";

  /// from: static public final java.lang.String FORMAT_IMAGE
  static const FORMAT_IMAGE = "image";

  /// from: static public final java.lang.String FORMAT_INT
  static const FORMAT_INT = "int";

  /// from: static public final java.lang.String FORMAT_LONG
  static const FORMAT_LONG = "long";

  /// from: static public final java.lang.String FORMAT_REMOTE_INPUT
  static const FORMAT_REMOTE_INPUT = "input";

  /// from: static public final java.lang.String FORMAT_SLICE
  static const FORMAT_SLICE = "slice";

  /// from: static public final java.lang.String FORMAT_TEXT
  static const FORMAT_TEXT = "text";

  static final _ctor = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
                  ffi.Pointer<ffi.Void>)>>("android_app_slice_SliceItem_new")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: void <init>(android.os.Parcel in)
  SliceItem(jni.JlObject in_) : super.fromRef(_ctor(in_.reference));

  static final _getHints = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_slice_SliceItem_getHints")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.util.List<java.lang.String> getHints()
  jni.JlObject getHints() => jni.JlObject.fromRef(_getHints(reference));

  static final _getFormat = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_slice_SliceItem_getFormat")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.String getFormat()
  jni.JlString getFormat() => jni.JlString.fromRef(_getFormat(reference));

  static final _getSubType = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_slice_SliceItem_getSubType")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.String getSubType()
  jni.JlString getSubType() => jni.JlString.fromRef(_getSubType(reference));

  static final _getText = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_slice_SliceItem_getText")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.CharSequence getText()
  jni.JlObject getText() => jni.JlObject.fromRef(_getText(reference));

  static final _getBundle = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_slice_SliceItem_getBundle")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.os.Bundle getBundle()
  jni.JlObject getBundle() => jni.JlObject.fromRef(_getBundle(reference));

  static final _getIcon = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_slice_SliceItem_getIcon")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.graphics.drawable.Icon getIcon()
  jni.JlObject getIcon() => jni.JlObject.fromRef(_getIcon(reference));

  static final _getAction = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_slice_SliceItem_getAction")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.PendingIntent getAction()
  jni.JlObject getAction() => jni.JlObject.fromRef(_getAction(reference));

  static final _getRemoteInput = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_slice_SliceItem_getRemoteInput")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.RemoteInput getRemoteInput()
  jni.JlObject getRemoteInput() =>
      jni.JlObject.fromRef(_getRemoteInput(reference));

  static final _getInt =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_slice_SliceItem_getInt")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int getInt()
  int getInt() => _getInt(reference);

  static final _getSlice = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_slice_SliceItem_getSlice")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.slice.Slice getSlice()
  Slice getSlice() => Slice.fromRef(_getSlice(reference));

  static final _getLong =
      jlookup<ffi.NativeFunction<ffi.Int64 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_slice_SliceItem_getLong")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public long getLong()
  int getLong() => _getLong(reference);

  static final _hasHint = jlookup<
              ffi.NativeFunction<
                  ffi.Uint8 Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_slice_SliceItem_hasHint")
      .asFunction<int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public boolean hasHint(java.lang.String hint)
  bool hasHint(jni.JlString hint) => _hasHint(reference, hint.reference) != 0;

  static final _describeContents =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_slice_SliceItem_describeContents")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int describeContents()
  int describeContents() => _describeContents(reference);

  static final _writeToParcel = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_app_slice_SliceItem_writeToParcel")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public void writeToParcel(android.os.Parcel dest, int flags)
  void writeToParcel(jni.JlObject dest, int flags) =>
      _writeToParcel(reference, dest.reference, flags);
}

class SliceProvider extends jni.JlObject {
  SliceProvider.fromRef(ffi.Pointer<ffi.Void> ref) : super.fromRef(ref);

  /// from: static public final java.lang.String SLICE_TYPE
  static const SLICE_TYPE = "vnd.android.slice";

  static final _ctor = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_slice_SliceProvider_new")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void <init>(java.lang.String[] autoGrantPermissions)
  SliceProvider(jni.JlObject autoGrantPermissions)
      : super.fromRef(_ctor(autoGrantPermissions.reference));

  static final _ctor_1 =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "android_app_slice_SliceProvider_new_1")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();

  /// from: public void <init>()
  SliceProvider.ctor_1() : super.fromRef(_ctor_1());

  static final _attachInfo = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_slice_SliceProvider_attachInfo")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public void attachInfo(android.content.Context context, android.content.pm.ProviderInfo info)
  void attachInfo(jni.JlObject context, jni.JlObject info) =>
      _attachInfo(reference, context.reference, info.reference);

  static final _onBindSlice = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_slice_SliceProvider_onBindSlice")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.slice.Slice onBindSlice(android.net.Uri sliceUri, java.util.Set<android.app.slice.SliceSpec> supportedSpecs)
  Slice onBindSlice(jni.JlObject sliceUri, jni.JlObject supportedSpecs) =>
      Slice.fromRef(_onBindSlice(
          reference, sliceUri.reference, supportedSpecs.reference));

  static final _onSlicePinned = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_slice_SliceProvider_onSlicePinned")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void onSlicePinned(android.net.Uri sliceUri)
  void onSlicePinned(jni.JlObject sliceUri) =>
      _onSlicePinned(reference, sliceUri.reference);

  static final _onSliceUnpinned = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_slice_SliceProvider_onSliceUnpinned")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void onSliceUnpinned(android.net.Uri sliceUri)
  void onSliceUnpinned(jni.JlObject sliceUri) =>
      _onSliceUnpinned(reference, sliceUri.reference);

  static final _onGetSliceDescendants = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_slice_SliceProvider_onGetSliceDescendants")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public java.util.Collection<android.net.Uri> onGetSliceDescendants(android.net.Uri uri)
  jni.JlObject onGetSliceDescendants(jni.JlObject uri) =>
      jni.JlObject.fromRef(_onGetSliceDescendants(reference, uri.reference));

  static final _onMapIntentToUri = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_slice_SliceProvider_onMapIntentToUri")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.net.Uri onMapIntentToUri(android.content.Intent intent)
  jni.JlObject onMapIntentToUri(jni.JlObject intent) =>
      jni.JlObject.fromRef(_onMapIntentToUri(reference, intent.reference));

  static final _onCreatePermissionRequest = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_slice_SliceProvider_onCreatePermissionRequest")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.PendingIntent onCreatePermissionRequest(android.net.Uri sliceUri)
  jni.JlObject onCreatePermissionRequest(jni.JlObject sliceUri) =>
      jni.JlObject.fromRef(
          _onCreatePermissionRequest(reference, sliceUri.reference));

  static final _update = jlookup<
              ffi.NativeFunction<
                  ffi.Int32 Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>)>>(
          "android_app_slice_SliceProvider_update")
      .asFunction<
          int Function(
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public final int update(android.net.Uri uri, android.content.ContentValues values, java.lang.String selection, java.lang.String[] selectionArgs)
  int update(jni.JlObject uri, jni.JlObject values, jni.JlString selection,
          jni.JlObject selectionArgs) =>
      _update(reference, uri.reference, values.reference, selection.reference,
          selectionArgs.reference);

  static final _delete_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Int32 Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>)>>(
          "android_app_slice_SliceProvider_delete_1")
      .asFunction<
          int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public final int delete(android.net.Uri uri, java.lang.String selection, java.lang.String[] selectionArgs)
  int delete_1(jni.JlObject uri, jni.JlString selection,
          jni.JlObject selectionArgs) =>
      _delete_1(reference, uri.reference, selection.reference,
          selectionArgs.reference);

  static final _query = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>)>>(
          "android_app_slice_SliceProvider_query")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public final android.database.Cursor query(android.net.Uri uri, java.lang.String[] projection, java.lang.String selection, java.lang.String[] selectionArgs, java.lang.String sortOrder)
  jni.JlObject query(
          jni.JlObject uri,
          jni.JlObject projection,
          jni.JlString selection,
          jni.JlObject selectionArgs,
          jni.JlString sortOrder) =>
      jni.JlObject.fromRef(_query(
          reference,
          uri.reference,
          projection.reference,
          selection.reference,
          selectionArgs.reference,
          sortOrder.reference));

  static final _query_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>)>>(
          "android_app_slice_SliceProvider_query_1")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public final android.database.Cursor query(android.net.Uri uri, java.lang.String[] projection, java.lang.String selection, java.lang.String[] selectionArgs, java.lang.String sortOrder, android.os.CancellationSignal cancellationSignal)
  jni.JlObject query_1(
          jni.JlObject uri,
          jni.JlObject projection,
          jni.JlString selection,
          jni.JlObject selectionArgs,
          jni.JlString sortOrder,
          jni.JlObject cancellationSignal) =>
      jni.JlObject.fromRef(_query_1(
          reference,
          uri.reference,
          projection.reference,
          selection.reference,
          selectionArgs.reference,
          sortOrder.reference,
          cancellationSignal.reference));

  static final _query_2 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>)>>(
          "android_app_slice_SliceProvider_query_2")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public final android.database.Cursor query(android.net.Uri uri, java.lang.String[] projection, android.os.Bundle queryArgs, android.os.CancellationSignal cancellationSignal)
  jni.JlObject query_2(jni.JlObject uri, jni.JlObject projection,
          jni.JlObject queryArgs, jni.JlObject cancellationSignal) =>
      jni.JlObject.fromRef(_query_2(
          reference,
          uri.reference,
          projection.reference,
          queryArgs.reference,
          cancellationSignal.reference));

  static final _insert = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_slice_SliceProvider_insert")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public final android.net.Uri insert(android.net.Uri uri, android.content.ContentValues values)
  jni.JlObject insert(jni.JlObject uri, jni.JlObject values) =>
      jni.JlObject.fromRef(_insert(reference, uri.reference, values.reference));

  static final _getType = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_slice_SliceProvider_getType")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public final java.lang.String getType(android.net.Uri uri)
  jni.JlString getType(jni.JlObject uri) =>
      jni.JlString.fromRef(_getType(reference, uri.reference));

  static final _call = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>)>>(
          "android_app_slice_SliceProvider_call")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public android.os.Bundle call(java.lang.String method, java.lang.String arg, android.os.Bundle extras)
  jni.JlObject call(
          jni.JlString method, jni.JlString arg, jni.JlObject extras) =>
      jni.JlObject.fromRef(
          _call(reference, method.reference, arg.reference, extras.reference));
}

class SliceSpec extends jni.JlObject {
  SliceSpec.fromRef(ffi.Pointer<ffi.Void> ref) : super.fromRef(ref);

  /// from: static public final android.os.Parcelable.Creator<android.app.slice.SliceSpec> CREATOR
  static final _getCREATOR =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "get_android_app_slice_SliceSpec_CREATOR")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();
  static jni.JlObject get CREATOR => jni.JlObject.fromRef(_getCREATOR());

  static final _ctor = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_app_slice_SliceSpec_new")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public void <init>(java.lang.String type, int revision)
  SliceSpec(jni.JlString type, int revision)
      : super.fromRef(_ctor(type.reference, revision));

  static final _describeContents =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_slice_SliceSpec_describeContents")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int describeContents()
  int describeContents() => _describeContents(reference);

  static final _writeToParcel = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_app_slice_SliceSpec_writeToParcel")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public void writeToParcel(android.os.Parcel dest, int flags)
  void writeToParcel(jni.JlObject dest, int flags) =>
      _writeToParcel(reference, dest.reference, flags);

  static final _getType = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_slice_SliceSpec_getType")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.String getType()
  jni.JlString getType() => jni.JlString.fromRef(_getType(reference));

  static final _getRevision =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_slice_SliceSpec_getRevision")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int getRevision()
  int getRevision() => _getRevision(reference);

  static final _canRender = jlookup<
              ffi.NativeFunction<
                  ffi.Uint8 Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_slice_SliceSpec_canRender")
      .asFunction<int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public boolean canRender(android.app.slice.SliceSpec candidate)
  bool canRender(SliceSpec candidate) =>
      _canRender(reference, candidate.reference) != 0;

  static final _equals_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Uint8 Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_slice_SliceSpec_equals_1")
      .asFunction<int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public boolean equals(java.lang.Object obj)
  bool equals_1(jni.JlObject obj) => _equals_1(reference, obj.reference) != 0;

  static final _toString_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_slice_SliceSpec_toString_1")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.String toString()
  jni.JlString toString_1() => jni.JlString.fromRef(_toString_1(reference));
}

class Slice extends jni.JlObject {
  Slice.fromRef(ffi.Pointer<ffi.Void> ref) : super.fromRef(ref);

  /// from: static public final android.os.Parcelable.Creator<android.app.slice.Slice> CREATOR
  static final _getCREATOR =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "get_android_app_slice_Slice_CREATOR")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();
  static jni.JlObject get CREATOR => jni.JlObject.fromRef(_getCREATOR());

  /// from: static public final java.lang.String EXTRA_RANGE_VALUE
  static const EXTRA_RANGE_VALUE = "android.app.slice.extra.RANGE_VALUE";

  /// from: static public final java.lang.String EXTRA_TOGGLE_STATE
  static const EXTRA_TOGGLE_STATE = "android.app.slice.extra.TOGGLE_STATE";

  /// from: static public final java.lang.String HINT_ACTIONS
  static const HINT_ACTIONS = "actions";

  /// from: static public final java.lang.String HINT_ERROR
  static const HINT_ERROR = "error";

  /// from: static public final java.lang.String HINT_HORIZONTAL
  static const HINT_HORIZONTAL = "horizontal";

  /// from: static public final java.lang.String HINT_KEYWORDS
  static const HINT_KEYWORDS = "keywords";

  /// from: static public final java.lang.String HINT_LARGE
  static const HINT_LARGE = "large";

  /// from: static public final java.lang.String HINT_LAST_UPDATED
  static const HINT_LAST_UPDATED = "last_updated";

  /// from: static public final java.lang.String HINT_LIST
  static const HINT_LIST = "list";

  /// from: static public final java.lang.String HINT_LIST_ITEM
  static const HINT_LIST_ITEM = "list_item";

  /// from: static public final java.lang.String HINT_NO_TINT
  static const HINT_NO_TINT = "no_tint";

  /// from: static public final java.lang.String HINT_PARTIAL
  static const HINT_PARTIAL = "partial";

  /// from: static public final java.lang.String HINT_PERMISSION_REQUEST
  static const HINT_PERMISSION_REQUEST = "permission_request";

  /// from: static public final java.lang.String HINT_SEE_MORE
  static const HINT_SEE_MORE = "see_more";

  /// from: static public final java.lang.String HINT_SELECTED
  static const HINT_SELECTED = "selected";

  /// from: static public final java.lang.String HINT_SHORTCUT
  static const HINT_SHORTCUT = "shortcut";

  /// from: static public final java.lang.String HINT_SUMMARY
  static const HINT_SUMMARY = "summary";

  /// from: static public final java.lang.String HINT_TITLE
  static const HINT_TITLE = "title";

  /// from: static public final java.lang.String HINT_TTL
  static const HINT_TTL = "ttl";

  /// from: static public final java.lang.String SUBTYPE_COLOR
  static const SUBTYPE_COLOR = "color";

  /// from: static public final java.lang.String SUBTYPE_CONTENT_DESCRIPTION
  static const SUBTYPE_CONTENT_DESCRIPTION = "content_description";

  /// from: static public final java.lang.String SUBTYPE_LAYOUT_DIRECTION
  static const SUBTYPE_LAYOUT_DIRECTION = "layout_direction";

  /// from: static public final java.lang.String SUBTYPE_MAX
  static const SUBTYPE_MAX = "max";

  /// from: static public final java.lang.String SUBTYPE_MESSAGE
  static const SUBTYPE_MESSAGE = "message";

  /// from: static public final java.lang.String SUBTYPE_MILLIS
  static const SUBTYPE_MILLIS = "millis";

  /// from: static public final java.lang.String SUBTYPE_PRIORITY
  static const SUBTYPE_PRIORITY = "priority";

  /// from: static public final java.lang.String SUBTYPE_RANGE
  static const SUBTYPE_RANGE = "range";

  /// from: static public final java.lang.String SUBTYPE_SOURCE
  static const SUBTYPE_SOURCE = "source";

  /// from: static public final java.lang.String SUBTYPE_TOGGLE
  static const SUBTYPE_TOGGLE = "toggle";

  /// from: static public final java.lang.String SUBTYPE_VALUE
  static const SUBTYPE_VALUE = "value";

  static final _ctor = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
                  ffi.Pointer<ffi.Void>)>>("android_app_slice_Slice_new")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: protected void <init>(android.os.Parcel in)
  Slice(jni.JlObject in_) : super.fromRef(_ctor(in_.reference));

  static final _getSpec = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
                  ffi.Pointer<ffi.Void>)>>("android_app_slice_Slice_getSpec")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.slice.SliceSpec getSpec()
  SliceSpec getSpec() => SliceSpec.fromRef(_getSpec(reference));

  static final _getUri = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
                  ffi.Pointer<ffi.Void>)>>("android_app_slice_Slice_getUri")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.net.Uri getUri()
  jni.JlObject getUri() => jni.JlObject.fromRef(_getUri(reference));

  static final _getItems = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
                  ffi.Pointer<ffi.Void>)>>("android_app_slice_Slice_getItems")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.util.List<android.app.slice.SliceItem> getItems()
  jni.JlObject getItems() => jni.JlObject.fromRef(_getItems(reference));

  static final _getHints = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
                  ffi.Pointer<ffi.Void>)>>("android_app_slice_Slice_getHints")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.util.List<java.lang.String> getHints()
  jni.JlObject getHints() => jni.JlObject.fromRef(_getHints(reference));

  static final _writeToParcel = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_app_slice_Slice_writeToParcel")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public void writeToParcel(android.os.Parcel dest, int flags)
  void writeToParcel(jni.JlObject dest, int flags) =>
      _writeToParcel(reference, dest.reference, flags);

  static final _describeContents =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_slice_Slice_describeContents")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int describeContents()
  int describeContents() => _describeContents(reference);

  static final _isCallerNeeded =
      jlookup<ffi.NativeFunction<ffi.Uint8 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_slice_Slice_isCallerNeeded")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public boolean isCallerNeeded()
  bool isCallerNeeded() => _isCallerNeeded(reference) != 0;

  static final _toString_1 = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
                  ffi.Pointer<ffi.Void>)>>("android_app_slice_Slice_toString_1")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.String toString()
  jni.JlString toString_1() => jni.JlString.fromRef(_toString_1(reference));
}

class Slice_Builder extends jni.JlObject {
  Slice_Builder.fromRef(ffi.Pointer<ffi.Void> ref) : super.fromRef(ref);

  static final _ctor = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_slice_Slice__Builder_new")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void <init>(android.net.Uri uri, android.app.slice.SliceSpec spec)
  Slice_Builder(jni.JlObject uri, SliceSpec spec)
      : super.fromRef(_ctor(uri.reference, spec.reference));

  static final _ctor_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_slice_Slice__Builder_new_1")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void <init>(android.app.slice.Slice.Builder parent)
  Slice_Builder.ctor_1(Slice_Builder parent)
      : super.fromRef(_ctor_1(parent.reference));

  static final _setCallerNeeded = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Uint8)>>(
          "android_app_slice_Slice__Builder_setCallerNeeded")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public android.app.slice.Slice.Builder setCallerNeeded(boolean callerNeeded)
  Slice_Builder setCallerNeeded(bool callerNeeded) =>
      Slice_Builder.fromRef(_setCallerNeeded(reference, callerNeeded ? 1 : 0));

  static final _addHints = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_slice_Slice__Builder_addHints")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.slice.Slice.Builder addHints(java.util.List<java.lang.String> hints)
  Slice_Builder addHints(jni.JlObject hints) =>
      Slice_Builder.fromRef(_addHints(reference, hints.reference));

  static final _addSubSlice = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_slice_Slice__Builder_addSubSlice")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.slice.Slice.Builder addSubSlice(android.app.slice.Slice slice, java.lang.String subType)
  Slice_Builder addSubSlice(Slice slice, jni.JlString subType) =>
      Slice_Builder.fromRef(
          _addSubSlice(reference, slice.reference, subType.reference));

  static final _addAction = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>)>>(
          "android_app_slice_Slice__Builder_addAction")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.slice.Slice.Builder addAction(android.app.PendingIntent action, android.app.slice.Slice s, java.lang.String subType)
  Slice_Builder addAction(jni.JlObject action, Slice s, jni.JlString subType) =>
      Slice_Builder.fromRef(_addAction(
          reference, action.reference, s.reference, subType.reference));

  static final _addText = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>)>>(
          "android_app_slice_Slice__Builder_addText")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.slice.Slice.Builder addText(java.lang.CharSequence text, java.lang.String subType, java.util.List<java.lang.String> hints)
  Slice_Builder addText(
          jni.JlObject text, jni.JlString subType, jni.JlObject hints) =>
      Slice_Builder.fromRef(_addText(
          reference, text.reference, subType.reference, hints.reference));

  static final _addIcon = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>)>>(
          "android_app_slice_Slice__Builder_addIcon")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.slice.Slice.Builder addIcon(android.graphics.drawable.Icon icon, java.lang.String subType, java.util.List<java.lang.String> hints)
  Slice_Builder addIcon(
          jni.JlObject icon, jni.JlString subType, jni.JlObject hints) =>
      Slice_Builder.fromRef(_addIcon(
          reference, icon.reference, subType.reference, hints.reference));

  static final _addRemoteInput = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>)>>(
          "android_app_slice_Slice__Builder_addRemoteInput")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.slice.Slice.Builder addRemoteInput(android.app.RemoteInput remoteInput, java.lang.String subType, java.util.List<java.lang.String> hints)
  Slice_Builder addRemoteInput(
          jni.JlObject remoteInput, jni.JlString subType, jni.JlObject hints) =>
      Slice_Builder.fromRef(_addRemoteInput(reference, remoteInput.reference,
          subType.reference, hints.reference));

  static final _addInt = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Int32,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>)>>(
          "android_app_slice_Slice__Builder_addInt")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.slice.Slice.Builder addInt(int value, java.lang.String subType, java.util.List<java.lang.String> hints)
  Slice_Builder addInt(int value, jni.JlString subType, jni.JlObject hints) =>
      Slice_Builder.fromRef(
          _addInt(reference, value, subType.reference, hints.reference));

  static final _addLong = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Int64,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>)>>(
          "android_app_slice_Slice__Builder_addLong")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.slice.Slice.Builder addLong(long value, java.lang.String subType, java.util.List<java.lang.String> hints)
  Slice_Builder addLong(int value, jni.JlString subType, jni.JlObject hints) =>
      Slice_Builder.fromRef(
          _addLong(reference, value, subType.reference, hints.reference));

  static final _addBundle = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>)>>(
          "android_app_slice_Slice__Builder_addBundle")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.slice.Slice.Builder addBundle(android.os.Bundle bundle, java.lang.String subType, java.util.List<java.lang.String> hints)
  Slice_Builder addBundle(
          jni.JlObject bundle, jni.JlString subType, jni.JlObject hints) =>
      Slice_Builder.fromRef(_addBundle(
          reference, bundle.reference, subType.reference, hints.reference));

  static final _build = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_slice_Slice__Builder_build")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.slice.Slice build()
  Slice build() => Slice.fromRef(_build(reference));
}
