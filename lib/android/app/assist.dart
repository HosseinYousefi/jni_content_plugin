// AutoGenerated by jni_gen. Do not edit.
// ignore_for_file: camel_case_types
// ignore_for_file: non_constant_identifier_names
// ignore_for_file: constant_identifier_names
// ignore_for_file: annotate_overrides
// ignore_for_file: no_leading_underscores_for_local_identifiers
// ignore_for_file: unused_element

import "dart:ffi" as ffi;

import "package:jni/jni.dart" as jni;
import "package:content_plugin/android/os.dart" as os;

import "package:content_plugin/android/content.dart" as content;
import "../../init.dart" show jlookup;

class AssistStructure extends jni.JlObject {
  AssistStructure.fromRef(ffi.Pointer<ffi.Void> ref) : super.fromRef(ref);

  /// from: static public final android.os.Parcelable.Creator<android.app.assist.AssistStructure> CREATOR
  static final _getCREATOR =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "get_android_app_assist_AssistStructure_CREATOR")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();
  static os.Parcelable_Creator get CREATOR =>
      os.Parcelable_Creator.fromRef(_getCREATOR());

  static final _ctor =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "android_app_assist_AssistStructure_new")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();

  /// from: public void <init>()
  AssistStructure() : super.fromRef(_ctor());

  static final _getAcquisitionStartTime =
      jlookup<ffi.NativeFunction<ffi.Int64 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_assist_AssistStructure_getAcquisitionStartTime")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public long getAcquisitionStartTime()
  int getAcquisitionStartTime() => _getAcquisitionStartTime(reference);

  static final _getAcquisitionEndTime =
      jlookup<ffi.NativeFunction<ffi.Int64 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_assist_AssistStructure_getAcquisitionEndTime")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public long getAcquisitionEndTime()
  int getAcquisitionEndTime() => _getAcquisitionEndTime(reference);

  static final _getActivityComponent = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_assist_AssistStructure_getActivityComponent")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.content.ComponentName getActivityComponent()
  content.ComponentName getActivityComponent() =>
      content.ComponentName.fromRef(_getActivityComponent(reference));

  static final _isHomeActivity =
      jlookup<ffi.NativeFunction<ffi.Uint8 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_assist_AssistStructure_isHomeActivity")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public boolean isHomeActivity()
  bool isHomeActivity() => _isHomeActivity(reference) != 0;

  static final _getWindowNodeCount =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_assist_AssistStructure_getWindowNodeCount")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int getWindowNodeCount()
  int getWindowNodeCount() => _getWindowNodeCount(reference);

  static final _getWindowNodeAt = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "android_app_assist_AssistStructure_getWindowNodeAt")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public android.app.assist.AssistStructure.WindowNode getWindowNodeAt(int index)
  AssistStructure_WindowNode getWindowNodeAt(int index) =>
      AssistStructure_WindowNode.fromRef(_getWindowNodeAt(reference, index));

  static final _describeContents =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_assist_AssistStructure_describeContents")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int describeContents()
  int describeContents() => _describeContents(reference);

  static final _writeToParcel = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "android_app_assist_AssistStructure_writeToParcel")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public void writeToParcel(android.os.Parcel out, int flags)
  void writeToParcel(os.Parcel out, int flags) =>
      _writeToParcel(reference, out.reference, flags);
}

class AssistStructure_WindowNode extends jni.JlObject {
  AssistStructure_WindowNode.fromRef(ffi.Pointer<ffi.Void> ref)
      : super.fromRef(ref);

  static final _ctor =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "android_app_assist_AssistStructure__WindowNode_new")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();

  /// from: void <init>()
  AssistStructure_WindowNode() : super.fromRef(_ctor());

  static final _getLeft =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_assist_AssistStructure__WindowNode_getLeft")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int getLeft()
  int getLeft() => _getLeft(reference);

  static final _getTop =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_assist_AssistStructure__WindowNode_getTop")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int getTop()
  int getTop() => _getTop(reference);

  static final _getWidth =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_assist_AssistStructure__WindowNode_getWidth")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int getWidth()
  int getWidth() => _getWidth(reference);

  static final _getHeight =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_assist_AssistStructure__WindowNode_getHeight")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int getHeight()
  int getHeight() => _getHeight(reference);

  static final _getTitle = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_assist_AssistStructure__WindowNode_getTitle")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.CharSequence getTitle()
  jni.JlObject getTitle() => jni.JlObject.fromRef(_getTitle(reference));

  static final _getDisplayId =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_assist_AssistStructure__WindowNode_getDisplayId")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int getDisplayId()
  int getDisplayId() => _getDisplayId(reference);

  static final _getRootViewNode = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_assist_AssistStructure__WindowNode_getRootViewNode")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.assist.AssistStructure.ViewNode getRootViewNode()
  AssistStructure_ViewNode getRootViewNode() =>
      AssistStructure_ViewNode.fromRef(_getRootViewNode(reference));
}

class AssistStructure_ViewNode extends jni.JlObject {
  AssistStructure_ViewNode.fromRef(ffi.Pointer<ffi.Void> ref)
      : super.fromRef(ref);

  /// from: static public final int TEXT_COLOR_UNDEFINED
  static const TEXT_COLOR_UNDEFINED = 1;

  /// from: static public final int TEXT_STYLE_BOLD
  static const TEXT_STYLE_BOLD = 1;

  /// from: static public final int TEXT_STYLE_ITALIC
  static const TEXT_STYLE_ITALIC = 2;

  /// from: static public final int TEXT_STYLE_STRIKE_THRU
  static const TEXT_STYLE_STRIKE_THRU = 8;

  /// from: static public final int TEXT_STYLE_UNDERLINE
  static const TEXT_STYLE_UNDERLINE = 4;

  static final _ctor =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "android_app_assist_AssistStructure__ViewNode_new")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();

  /// from: void <init>()
  AssistStructure_ViewNode() : super.fromRef(_ctor());

  static final _getId =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_assist_AssistStructure__ViewNode_getId")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int getId()
  int getId() => _getId(reference);

  static final _getIdPackage = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_assist_AssistStructure__ViewNode_getIdPackage")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.String getIdPackage()
  jni.JlString getIdPackage() => jni.JlString.fromRef(_getIdPackage(reference));

  static final _getIdType = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_assist_AssistStructure__ViewNode_getIdType")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.String getIdType()
  jni.JlString getIdType() => jni.JlString.fromRef(_getIdType(reference));

  static final _getIdEntry = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_assist_AssistStructure__ViewNode_getIdEntry")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.String getIdEntry()
  jni.JlString getIdEntry() => jni.JlString.fromRef(_getIdEntry(reference));

  static final _getAutofillId = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_assist_AssistStructure__ViewNode_getAutofillId")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.view.autofill.AutofillId getAutofillId()
  jni.JlObject getAutofillId() =>
      jni.JlObject.fromRef(_getAutofillId(reference));

  static final _getAutofillType =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_assist_AssistStructure__ViewNode_getAutofillType")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int getAutofillType()
  int getAutofillType() => _getAutofillType(reference);

  static final _getAutofillHints = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_assist_AssistStructure__ViewNode_getAutofillHints")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.String[] getAutofillHints()
  jni.JlObject getAutofillHints() =>
      jni.JlObject.fromRef(_getAutofillHints(reference));

  static final _getAutofillValue = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_assist_AssistStructure__ViewNode_getAutofillValue")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.view.autofill.AutofillValue getAutofillValue()
  jni.JlObject getAutofillValue() =>
      jni.JlObject.fromRef(_getAutofillValue(reference));

  static final _getAutofillOptions = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_assist_AssistStructure__ViewNode_getAutofillOptions")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.CharSequence[] getAutofillOptions()
  jni.JlObject getAutofillOptions() =>
      jni.JlObject.fromRef(_getAutofillOptions(reference));

  static final _getInputType =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_assist_AssistStructure__ViewNode_getInputType")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int getInputType()
  int getInputType() => _getInputType(reference);

  static final _getLeft =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_assist_AssistStructure__ViewNode_getLeft")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int getLeft()
  int getLeft() => _getLeft(reference);

  static final _getTop =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_assist_AssistStructure__ViewNode_getTop")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int getTop()
  int getTop() => _getTop(reference);

  static final _getScrollX =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_assist_AssistStructure__ViewNode_getScrollX")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int getScrollX()
  int getScrollX() => _getScrollX(reference);

  static final _getScrollY =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_assist_AssistStructure__ViewNode_getScrollY")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int getScrollY()
  int getScrollY() => _getScrollY(reference);

  static final _getWidth =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_assist_AssistStructure__ViewNode_getWidth")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int getWidth()
  int getWidth() => _getWidth(reference);

  static final _getHeight =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_assist_AssistStructure__ViewNode_getHeight")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int getHeight()
  int getHeight() => _getHeight(reference);

  static final _getTransformation = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_assist_AssistStructure__ViewNode_getTransformation")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.graphics.Matrix getTransformation()
  jni.JlObject getTransformation() =>
      jni.JlObject.fromRef(_getTransformation(reference));

  static final _getElevation =
      jlookup<ffi.NativeFunction<ffi.Float Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_assist_AssistStructure__ViewNode_getElevation")
          .asFunction<double Function(ffi.Pointer<ffi.Void>)>();

  /// from: public float getElevation()
  double getElevation() => _getElevation(reference);

  static final _getAlpha =
      jlookup<ffi.NativeFunction<ffi.Float Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_assist_AssistStructure__ViewNode_getAlpha")
          .asFunction<double Function(ffi.Pointer<ffi.Void>)>();

  /// from: public float getAlpha()
  double getAlpha() => _getAlpha(reference);

  static final _getVisibility =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_assist_AssistStructure__ViewNode_getVisibility")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int getVisibility()
  int getVisibility() => _getVisibility(reference);

  static final _isAssistBlocked =
      jlookup<ffi.NativeFunction<ffi.Uint8 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_assist_AssistStructure__ViewNode_isAssistBlocked")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public boolean isAssistBlocked()
  bool isAssistBlocked() => _isAssistBlocked(reference) != 0;

  static final _isEnabled =
      jlookup<ffi.NativeFunction<ffi.Uint8 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_assist_AssistStructure__ViewNode_isEnabled")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public boolean isEnabled()
  bool isEnabled() => _isEnabled(reference) != 0;

  static final _isClickable =
      jlookup<ffi.NativeFunction<ffi.Uint8 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_assist_AssistStructure__ViewNode_isClickable")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public boolean isClickable()
  bool isClickable() => _isClickable(reference) != 0;

  static final _isFocusable =
      jlookup<ffi.NativeFunction<ffi.Uint8 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_assist_AssistStructure__ViewNode_isFocusable")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public boolean isFocusable()
  bool isFocusable() => _isFocusable(reference) != 0;

  static final _isFocused =
      jlookup<ffi.NativeFunction<ffi.Uint8 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_assist_AssistStructure__ViewNode_isFocused")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public boolean isFocused()
  bool isFocused() => _isFocused(reference) != 0;

  static final _isAccessibilityFocused = jlookup<
              ffi.NativeFunction<ffi.Uint8 Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_assist_AssistStructure__ViewNode_isAccessibilityFocused")
      .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public boolean isAccessibilityFocused()
  bool isAccessibilityFocused() => _isAccessibilityFocused(reference) != 0;

  static final _isCheckable =
      jlookup<ffi.NativeFunction<ffi.Uint8 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_assist_AssistStructure__ViewNode_isCheckable")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public boolean isCheckable()
  bool isCheckable() => _isCheckable(reference) != 0;

  static final _isChecked =
      jlookup<ffi.NativeFunction<ffi.Uint8 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_assist_AssistStructure__ViewNode_isChecked")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public boolean isChecked()
  bool isChecked() => _isChecked(reference) != 0;

  static final _isSelected =
      jlookup<ffi.NativeFunction<ffi.Uint8 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_assist_AssistStructure__ViewNode_isSelected")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public boolean isSelected()
  bool isSelected() => _isSelected(reference) != 0;

  static final _isActivated =
      jlookup<ffi.NativeFunction<ffi.Uint8 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_assist_AssistStructure__ViewNode_isActivated")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public boolean isActivated()
  bool isActivated() => _isActivated(reference) != 0;

  static final _isOpaque =
      jlookup<ffi.NativeFunction<ffi.Uint8 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_assist_AssistStructure__ViewNode_isOpaque")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public boolean isOpaque()
  bool isOpaque() => _isOpaque(reference) != 0;

  static final _isLongClickable =
      jlookup<ffi.NativeFunction<ffi.Uint8 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_assist_AssistStructure__ViewNode_isLongClickable")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public boolean isLongClickable()
  bool isLongClickable() => _isLongClickable(reference) != 0;

  static final _isContextClickable =
      jlookup<ffi.NativeFunction<ffi.Uint8 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_assist_AssistStructure__ViewNode_isContextClickable")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public boolean isContextClickable()
  bool isContextClickable() => _isContextClickable(reference) != 0;

  static final _getClassName = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_assist_AssistStructure__ViewNode_getClassName")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.String getClassName()
  jni.JlString getClassName() => jni.JlString.fromRef(_getClassName(reference));

  static final _getContentDescription = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_assist_AssistStructure__ViewNode_getContentDescription")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.CharSequence getContentDescription()
  jni.JlObject getContentDescription() =>
      jni.JlObject.fromRef(_getContentDescription(reference));

  static final _getWebDomain = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_assist_AssistStructure__ViewNode_getWebDomain")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.String getWebDomain()
  jni.JlString getWebDomain() => jni.JlString.fromRef(_getWebDomain(reference));

  static final _getWebScheme = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_assist_AssistStructure__ViewNode_getWebScheme")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.String getWebScheme()
  jni.JlString getWebScheme() => jni.JlString.fromRef(_getWebScheme(reference));

  static final _getHtmlInfo = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_assist_AssistStructure__ViewNode_getHtmlInfo")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.view.ViewStructure.HtmlInfo getHtmlInfo()
  jni.JlObject getHtmlInfo() => jni.JlObject.fromRef(_getHtmlInfo(reference));

  static final _getLocaleList = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_assist_AssistStructure__ViewNode_getLocaleList")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.os.LocaleList getLocaleList()
  os.LocaleList getLocaleList() =>
      os.LocaleList.fromRef(_getLocaleList(reference));

  static final _getText = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_assist_AssistStructure__ViewNode_getText")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.CharSequence getText()
  jni.JlObject getText() => jni.JlObject.fromRef(_getText(reference));

  static final _getTextSelectionStart = jlookup<
              ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_assist_AssistStructure__ViewNode_getTextSelectionStart")
      .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int getTextSelectionStart()
  int getTextSelectionStart() => _getTextSelectionStart(reference);

  static final _getTextSelectionEnd = jlookup<
              ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_assist_AssistStructure__ViewNode_getTextSelectionEnd")
      .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int getTextSelectionEnd()
  int getTextSelectionEnd() => _getTextSelectionEnd(reference);

  static final _getTextColor =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_assist_AssistStructure__ViewNode_getTextColor")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int getTextColor()
  int getTextColor() => _getTextColor(reference);

  static final _getTextBackgroundColor = jlookup<
              ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_assist_AssistStructure__ViewNode_getTextBackgroundColor")
      .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int getTextBackgroundColor()
  int getTextBackgroundColor() => _getTextBackgroundColor(reference);

  static final _getTextSize =
      jlookup<ffi.NativeFunction<ffi.Float Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_assist_AssistStructure__ViewNode_getTextSize")
          .asFunction<double Function(ffi.Pointer<ffi.Void>)>();

  /// from: public float getTextSize()
  double getTextSize() => _getTextSize(reference);

  static final _getTextStyle =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_assist_AssistStructure__ViewNode_getTextStyle")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int getTextStyle()
  int getTextStyle() => _getTextStyle(reference);

  static final _getTextLineCharOffsets = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_assist_AssistStructure__ViewNode_getTextLineCharOffsets")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int[] getTextLineCharOffsets()
  jni.JlObject getTextLineCharOffsets() =>
      jni.JlObject.fromRef(_getTextLineCharOffsets(reference));

  static final _getTextLineBaselines = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_assist_AssistStructure__ViewNode_getTextLineBaselines")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int[] getTextLineBaselines()
  jni.JlObject getTextLineBaselines() =>
      jni.JlObject.fromRef(_getTextLineBaselines(reference));

  static final _getTextIdEntry = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_assist_AssistStructure__ViewNode_getTextIdEntry")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.String getTextIdEntry()
  jni.JlString getTextIdEntry() =>
      jni.JlString.fromRef(_getTextIdEntry(reference));

  static final _getHint = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_assist_AssistStructure__ViewNode_getHint")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.String getHint()
  jni.JlString getHint() => jni.JlString.fromRef(_getHint(reference));

  static final _getExtras = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_assist_AssistStructure__ViewNode_getExtras")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.os.Bundle getExtras()
  os.Bundle getExtras() => os.Bundle.fromRef(_getExtras(reference));

  static final _getChildCount =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_assist_AssistStructure__ViewNode_getChildCount")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int getChildCount()
  int getChildCount() => _getChildCount(reference);

  static final _getChildAt = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "android_app_assist_AssistStructure__ViewNode_getChildAt")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public android.app.assist.AssistStructure.ViewNode getChildAt(int index)
  AssistStructure_ViewNode getChildAt(int index) =>
      AssistStructure_ViewNode.fromRef(_getChildAt(reference, index));

  static final _getMinTextEms =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_assist_AssistStructure__ViewNode_getMinTextEms")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int getMinTextEms()
  int getMinTextEms() => _getMinTextEms(reference);

  static final _getMaxTextEms =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_assist_AssistStructure__ViewNode_getMaxTextEms")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int getMaxTextEms()
  int getMaxTextEms() => _getMaxTextEms(reference);

  static final _getMaxTextLength =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_assist_AssistStructure__ViewNode_getMaxTextLength")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int getMaxTextLength()
  int getMaxTextLength() => _getMaxTextLength(reference);

  static final _getImportantForAutofill = jlookup<
              ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_assist_AssistStructure__ViewNode_getImportantForAutofill")
      .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int getImportantForAutofill()
  int getImportantForAutofill() => _getImportantForAutofill(reference);
}

class AssistContent extends jni.JlObject {
  AssistContent.fromRef(ffi.Pointer<ffi.Void> ref) : super.fromRef(ref);

  /// from: static public final android.os.Parcelable.Creator<android.app.assist.AssistContent> CREATOR
  static final _getCREATOR =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "get_android_app_assist_AssistContent_CREATOR")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();
  static os.Parcelable_Creator get CREATOR =>
      os.Parcelable_Creator.fromRef(_getCREATOR());

  static final _ctor =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "android_app_assist_AssistContent_new")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();

  /// from: public void <init>()
  AssistContent() : super.fromRef(_ctor());

  static final _setIntent = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_assist_AssistContent_setIntent")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void setIntent(android.content.Intent intent)
  void setIntent(content.Intent intent) =>
      _setIntent(reference, intent.reference);

  static final _getIntent = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_assist_AssistContent_getIntent")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.content.Intent getIntent()
  content.Intent getIntent() => content.Intent.fromRef(_getIntent(reference));

  static final _isAppProvidedIntent =
      jlookup<ffi.NativeFunction<ffi.Uint8 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_assist_AssistContent_isAppProvidedIntent")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public boolean isAppProvidedIntent()
  bool isAppProvidedIntent() => _isAppProvidedIntent(reference) != 0;

  static final _setClipData = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_assist_AssistContent_setClipData")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void setClipData(android.content.ClipData clip)
  void setClipData(content.ClipData clip) =>
      _setClipData(reference, clip.reference);

  static final _getClipData = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_assist_AssistContent_getClipData")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.content.ClipData getClipData()
  content.ClipData getClipData() =>
      content.ClipData.fromRef(_getClipData(reference));

  static final _setStructuredData = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_assist_AssistContent_setStructuredData")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void setStructuredData(java.lang.String structuredData)
  void setStructuredData(jni.JlString structuredData) =>
      _setStructuredData(reference, structuredData.reference);

  static final _getStructuredData = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_assist_AssistContent_getStructuredData")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.String getStructuredData()
  jni.JlString getStructuredData() =>
      jni.JlString.fromRef(_getStructuredData(reference));

  static final _setWebUri = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_assist_AssistContent_setWebUri")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void setWebUri(android.net.Uri uri)
  void setWebUri(jni.JlObject uri) => _setWebUri(reference, uri.reference);

  static final _getWebUri = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_assist_AssistContent_getWebUri")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.net.Uri getWebUri()
  jni.JlObject getWebUri() => jni.JlObject.fromRef(_getWebUri(reference));

  static final _isAppProvidedWebUri =
      jlookup<ffi.NativeFunction<ffi.Uint8 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_assist_AssistContent_isAppProvidedWebUri")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public boolean isAppProvidedWebUri()
  bool isAppProvidedWebUri() => _isAppProvidedWebUri(reference) != 0;

  static final _getExtras = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_assist_AssistContent_getExtras")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.os.Bundle getExtras()
  os.Bundle getExtras() => os.Bundle.fromRef(_getExtras(reference));

  static final _describeContents =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_assist_AssistContent_describeContents")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int describeContents()
  int describeContents() => _describeContents(reference);

  static final _writeToParcel = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_app_assist_AssistContent_writeToParcel")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public void writeToParcel(android.os.Parcel dest, int flags)
  void writeToParcel(os.Parcel dest, int flags) =>
      _writeToParcel(reference, dest.reference, flags);
}
