// AutoGenerated by jni_gen. Do not edit.
// ignore_for_file: camel_case_types
// ignore_for_file: non_constant_identifier_names
// ignore_for_file: constant_identifier_names
// ignore_for_file: annotate_overrides
// ignore_for_file: no_leading_underscores_for_local_identifiers
// ignore_for_file: unused_element

import "dart:ffi" as ffi;

import "package:jni/jni.dart" as jni;
import "package:content_plugin/android/os.dart" as os;

import "package:content_plugin/android/content/res.dart" as res;
import "../../init.dart" show jlookup;

class UsageStatsManager extends jni.JlObject {
  UsageStatsManager.fromRef(ffi.Pointer<ffi.Void> ref) : super.fromRef(ref);

  /// from: static public final int INTERVAL_BEST
  static const INTERVAL_BEST = 4;

  /// from: static public final int INTERVAL_DAILY
  static const INTERVAL_DAILY = 0;

  /// from: static public final int INTERVAL_MONTHLY
  static const INTERVAL_MONTHLY = 2;

  /// from: static public final int INTERVAL_WEEKLY
  static const INTERVAL_WEEKLY = 1;

  /// from: static public final int INTERVAL_YEARLY
  static const INTERVAL_YEARLY = 3;

  /// from: static public final int STANDBY_BUCKET_ACTIVE
  static const STANDBY_BUCKET_ACTIVE = 10;

  /// from: static public final int STANDBY_BUCKET_FREQUENT
  static const STANDBY_BUCKET_FREQUENT = 30;

  /// from: static public final int STANDBY_BUCKET_RARE
  static const STANDBY_BUCKET_RARE = 40;

  /// from: static public final int STANDBY_BUCKET_WORKING_SET
  static const STANDBY_BUCKET_WORKING_SET = 20;

  static final _ctor =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "android_app_usage_UsageStatsManager_new")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();

  /// from: void <init>()
  UsageStatsManager() : super.fromRef(_ctor());

  static final _queryUsageStats = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Int32, ffi.Int64, ffi.Int64)>>(
          "android_app_usage_UsageStatsManager_queryUsageStats")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, int, int, int)>();

  /// from: public java.util.List<android.app.usage.UsageStats> queryUsageStats(int intervalType, long beginTime, long endTime)
  jni.JlObject queryUsageStats(int intervalType, int beginTime, int endTime) =>
      jni.JlObject.fromRef(
          _queryUsageStats(reference, intervalType, beginTime, endTime));

  static final _queryConfigurations = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Int32, ffi.Int64, ffi.Int64)>>(
          "android_app_usage_UsageStatsManager_queryConfigurations")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, int, int, int)>();

  /// from: public java.util.List<android.app.usage.ConfigurationStats> queryConfigurations(int intervalType, long beginTime, long endTime)
  jni.JlObject queryConfigurations(
          int intervalType, int beginTime, int endTime) =>
      jni.JlObject.fromRef(
          _queryConfigurations(reference, intervalType, beginTime, endTime));

  static final _queryEventStats = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Int32, ffi.Int64, ffi.Int64)>>(
          "android_app_usage_UsageStatsManager_queryEventStats")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, int, int, int)>();

  /// from: public java.util.List<android.app.usage.EventStats> queryEventStats(int intervalType, long beginTime, long endTime)
  jni.JlObject queryEventStats(int intervalType, int beginTime, int endTime) =>
      jni.JlObject.fromRef(
          _queryEventStats(reference, intervalType, beginTime, endTime));

  static final _queryEvents = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Int64, ffi.Int64)>>(
          "android_app_usage_UsageStatsManager_queryEvents")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int, int)>();

  /// from: public android.app.usage.UsageEvents queryEvents(long beginTime, long endTime)
  UsageEvents queryEvents(int beginTime, int endTime) =>
      UsageEvents.fromRef(_queryEvents(reference, beginTime, endTime));

  static final _queryEventsForSelf = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Int64, ffi.Int64)>>(
          "android_app_usage_UsageStatsManager_queryEventsForSelf")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int, int)>();

  /// from: public android.app.usage.UsageEvents queryEventsForSelf(long beginTime, long endTime)
  UsageEvents queryEventsForSelf(int beginTime, int endTime) =>
      UsageEvents.fromRef(_queryEventsForSelf(reference, beginTime, endTime));

  static final _queryAndAggregateUsageStats = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Int64, ffi.Int64)>>(
          "android_app_usage_UsageStatsManager_queryAndAggregateUsageStats")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int, int)>();

  /// from: public java.util.Map<java.lang.String,android.app.usage.UsageStats> queryAndAggregateUsageStats(long beginTime, long endTime)
  jni.JlObject queryAndAggregateUsageStats(int beginTime, int endTime) =>
      jni.JlObject.fromRef(
          _queryAndAggregateUsageStats(reference, beginTime, endTime));

  static final _isAppInactive = jlookup<
              ffi.NativeFunction<
                  ffi.Uint8 Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_usage_UsageStatsManager_isAppInactive")
      .asFunction<int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public boolean isAppInactive(java.lang.String packageName)
  bool isAppInactive(jni.JlString packageName) =>
      _isAppInactive(reference, packageName.reference) != 0;

  static final _getAppStandbyBucket =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_usage_UsageStatsManager_getAppStandbyBucket")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int getAppStandbyBucket()
  int getAppStandbyBucket() => _getAppStandbyBucket(reference);
}

class NetworkStatsManager extends jni.JlObject {
  NetworkStatsManager.fromRef(ffi.Pointer<ffi.Void> ref) : super.fromRef(ref);

  static final _ctor =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "android_app_usage_NetworkStatsManager_new")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();

  /// from: void <init>()
  NetworkStatsManager() : super.fromRef(_ctor());

  static final _querySummaryForDevice = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                      ffi.Int32, ffi.Pointer<ffi.Void>, ffi.Int64, ffi.Int64)>>(
          "android_app_usage_NetworkStatsManager_querySummaryForDevice")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, int, ffi.Pointer<ffi.Void>, int, int)>();

  /// from: public android.app.usage.NetworkStats.Bucket querySummaryForDevice(int networkType, java.lang.String subscriberId, long startTime, long endTime)
  NetworkStats_Bucket querySummaryForDevice(int networkType,
          jni.JlString subscriberId, int startTime, int endTime) =>
      NetworkStats_Bucket.fromRef(_querySummaryForDevice(
          reference, networkType, subscriberId.reference, startTime, endTime));

  static final _querySummaryForUser = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                      ffi.Int32, ffi.Pointer<ffi.Void>, ffi.Int64, ffi.Int64)>>(
          "android_app_usage_NetworkStatsManager_querySummaryForUser")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, int, ffi.Pointer<ffi.Void>, int, int)>();

  /// from: public android.app.usage.NetworkStats.Bucket querySummaryForUser(int networkType, java.lang.String subscriberId, long startTime, long endTime)
  NetworkStats_Bucket querySummaryForUser(int networkType,
          jni.JlString subscriberId, int startTime, int endTime) =>
      NetworkStats_Bucket.fromRef(_querySummaryForUser(
          reference, networkType, subscriberId.reference, startTime, endTime));

  static final _querySummary = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                      ffi.Int32, ffi.Pointer<ffi.Void>, ffi.Int64, ffi.Int64)>>(
          "android_app_usage_NetworkStatsManager_querySummary")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, int, ffi.Pointer<ffi.Void>, int, int)>();

  /// from: public android.app.usage.NetworkStats querySummary(int networkType, java.lang.String subscriberId, long startTime, long endTime)
  NetworkStats querySummary(int networkType, jni.JlString subscriberId,
          int startTime, int endTime) =>
      NetworkStats.fromRef(_querySummary(
          reference, networkType, subscriberId.reference, startTime, endTime));

  static final _queryDetailsForUid = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Int32,
                      ffi.Pointer<ffi.Void>,
                      ffi.Int64,
                      ffi.Int64,
                      ffi.Int32)>>(
          "android_app_usage_NetworkStatsManager_queryDetailsForUid")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int,
              ffi.Pointer<ffi.Void>, int, int, int)>();

  /// from: public android.app.usage.NetworkStats queryDetailsForUid(int networkType, java.lang.String subscriberId, long startTime, long endTime, int uid)
  NetworkStats queryDetailsForUid(int networkType, jni.JlString subscriberId,
          int startTime, int endTime, int uid) =>
      NetworkStats.fromRef(_queryDetailsForUid(reference, networkType,
          subscriberId.reference, startTime, endTime, uid));

  static final _queryDetailsForUidTag = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Int32,
                      ffi.Pointer<ffi.Void>,
                      ffi.Int64,
                      ffi.Int64,
                      ffi.Int32,
                      ffi.Int32)>>(
          "android_app_usage_NetworkStatsManager_queryDetailsForUidTag")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int,
              ffi.Pointer<ffi.Void>, int, int, int, int)>();

  /// from: public android.app.usage.NetworkStats queryDetailsForUidTag(int networkType, java.lang.String subscriberId, long startTime, long endTime, int uid, int tag)
  NetworkStats queryDetailsForUidTag(int networkType, jni.JlString subscriberId,
          int startTime, int endTime, int uid, int tag) =>
      NetworkStats.fromRef(_queryDetailsForUidTag(reference, networkType,
          subscriberId.reference, startTime, endTime, uid, tag));

  static final _queryDetailsForUidTagState = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Int32,
                      ffi.Pointer<ffi.Void>,
                      ffi.Int64,
                      ffi.Int64,
                      ffi.Int32,
                      ffi.Int32,
                      ffi.Int32)>>(
          "android_app_usage_NetworkStatsManager_queryDetailsForUidTagState")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int,
              ffi.Pointer<ffi.Void>, int, int, int, int, int)>();

  /// from: public android.app.usage.NetworkStats queryDetailsForUidTagState(int networkType, java.lang.String subscriberId, long startTime, long endTime, int uid, int tag, int state)
  NetworkStats queryDetailsForUidTagState(
          int networkType,
          jni.JlString subscriberId,
          int startTime,
          int endTime,
          int uid,
          int tag,
          int state) =>
      NetworkStats.fromRef(_queryDetailsForUidTagState(reference, networkType,
          subscriberId.reference, startTime, endTime, uid, tag, state));

  static final _queryDetails = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                      ffi.Int32, ffi.Pointer<ffi.Void>, ffi.Int64, ffi.Int64)>>(
          "android_app_usage_NetworkStatsManager_queryDetails")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, int, ffi.Pointer<ffi.Void>, int, int)>();

  /// from: public android.app.usage.NetworkStats queryDetails(int networkType, java.lang.String subscriberId, long startTime, long endTime)
  NetworkStats queryDetails(int networkType, jni.JlString subscriberId,
          int startTime, int endTime) =>
      NetworkStats.fromRef(_queryDetails(
          reference, networkType, subscriberId.reference, startTime, endTime));

  static final _registerUsageCallback = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Int32,
                      ffi.Pointer<ffi.Void>,
                      ffi.Int64,
                      ffi.Pointer<ffi.Void>)>>(
          "android_app_usage_NetworkStatsManager_registerUsageCallback")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, int, ffi.Pointer<ffi.Void>, int,
              ffi.Pointer<ffi.Void>)>();

  /// from: public void registerUsageCallback(int networkType, java.lang.String subscriberId, long thresholdBytes, android.app.usage.NetworkStatsManager.UsageCallback callback)
  void registerUsageCallback(int networkType, jni.JlString subscriberId,
          int thresholdBytes, NetworkStatsManager_UsageCallback callback) =>
      _registerUsageCallback(reference, networkType, subscriberId.reference,
          thresholdBytes, callback.reference);

  static final _registerUsageCallback_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Int32,
                      ffi.Pointer<ffi.Void>,
                      ffi.Int64,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>)>>(
          "android_app_usage_NetworkStatsManager_registerUsageCallback_1")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, int, ffi.Pointer<ffi.Void>, int,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void registerUsageCallback(int networkType, java.lang.String subscriberId, long thresholdBytes, android.app.usage.NetworkStatsManager.UsageCallback callback, android.os.Handler handler)
  void registerUsageCallback_1(
          int networkType,
          jni.JlString subscriberId,
          int thresholdBytes,
          NetworkStatsManager_UsageCallback callback,
          os.Handler handler) =>
      _registerUsageCallback_1(reference, networkType, subscriberId.reference,
          thresholdBytes, callback.reference, handler.reference);

  static final _unregisterUsageCallback = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_usage_NetworkStatsManager_unregisterUsageCallback")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void unregisterUsageCallback(android.app.usage.NetworkStatsManager.UsageCallback callback)
  void unregisterUsageCallback(NetworkStatsManager_UsageCallback callback) =>
      _unregisterUsageCallback(reference, callback.reference);
}

class NetworkStatsManager_UsageCallback extends jni.JlObject {
  NetworkStatsManager_UsageCallback.fromRef(ffi.Pointer<ffi.Void> ref)
      : super.fromRef(ref);

  static final _ctor =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "android_app_usage_NetworkStatsManager__UsageCallback_new")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();

  /// from: public void <init>()
  NetworkStatsManager_UsageCallback() : super.fromRef(_ctor());

  static final _onThresholdReached = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Int32,
                      ffi.Pointer<ffi.Void>)>>(
          "android_app_usage_NetworkStatsManager__UsageCallback_onThresholdReached")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, int, ffi.Pointer<ffi.Void>)>();

  /// from: public abstract void onThresholdReached(int networkType, java.lang.String subscriberId)
  void onThresholdReached(int networkType, jni.JlString subscriberId) =>
      _onThresholdReached(reference, networkType, subscriberId.reference);
}

class StorageStatsManager extends jni.JlObject {
  StorageStatsManager.fromRef(ffi.Pointer<ffi.Void> ref) : super.fromRef(ref);

  static final _ctor =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "android_app_usage_StorageStatsManager_new")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();

  /// from: void <init>()
  StorageStatsManager() : super.fromRef(_ctor());

  static final _getTotalBytes = jlookup<
              ffi.NativeFunction<
                  ffi.Int64 Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_usage_StorageStatsManager_getTotalBytes")
      .asFunction<int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public long getTotalBytes(java.util.UUID storageUuid)
  int getTotalBytes(jni.JlObject storageUuid) =>
      _getTotalBytes(reference, storageUuid.reference);

  static final _getFreeBytes = jlookup<
              ffi.NativeFunction<
                  ffi.Int64 Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_usage_StorageStatsManager_getFreeBytes")
      .asFunction<int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public long getFreeBytes(java.util.UUID storageUuid)
  int getFreeBytes(jni.JlObject storageUuid) =>
      _getFreeBytes(reference, storageUuid.reference);

  static final _queryStatsForPackage = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>)>>(
          "android_app_usage_StorageStatsManager_queryStatsForPackage")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.usage.StorageStats queryStatsForPackage(java.util.UUID storageUuid, java.lang.String packageName, android.os.UserHandle user)
  StorageStats queryStatsForPackage(jni.JlObject storageUuid,
          jni.JlString packageName, os.UserHandle user) =>
      StorageStats.fromRef(_queryStatsForPackage(reference,
          storageUuid.reference, packageName.reference, user.reference));

  static final _queryStatsForUid = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "android_app_usage_StorageStatsManager_queryStatsForUid")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public android.app.usage.StorageStats queryStatsForUid(java.util.UUID storageUuid, int uid)
  StorageStats queryStatsForUid(jni.JlObject storageUuid, int uid) =>
      StorageStats.fromRef(
          _queryStatsForUid(reference, storageUuid.reference, uid));

  static final _queryStatsForUser = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_usage_StorageStatsManager_queryStatsForUser")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.usage.StorageStats queryStatsForUser(java.util.UUID storageUuid, android.os.UserHandle user)
  StorageStats queryStatsForUser(
          jni.JlObject storageUuid, os.UserHandle user) =>
      StorageStats.fromRef(
          _queryStatsForUser(reference, storageUuid.reference, user.reference));

  static final _queryExternalStatsForUser = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_usage_StorageStatsManager_queryExternalStatsForUser")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.usage.ExternalStorageStats queryExternalStatsForUser(java.util.UUID storageUuid, android.os.UserHandle user)
  ExternalStorageStats queryExternalStatsForUser(
          jni.JlObject storageUuid, os.UserHandle user) =>
      ExternalStorageStats.fromRef(_queryExternalStatsForUser(
          reference, storageUuid.reference, user.reference));
}

class UsageStats extends jni.JlObject {
  UsageStats.fromRef(ffi.Pointer<ffi.Void> ref) : super.fromRef(ref);

  /// from: static public final android.os.Parcelable.Creator<android.app.usage.UsageStats> CREATOR
  static final _getCREATOR =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "get_android_app_usage_UsageStats_CREATOR")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();
  static os.Parcelable_Creator get CREATOR =>
      os.Parcelable_Creator.fromRef(_getCREATOR());

  static final _ctor = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
                  ffi.Pointer<ffi.Void>)>>("android_app_usage_UsageStats_new")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void <init>(android.app.usage.UsageStats stats)
  UsageStats(UsageStats stats) : super.fromRef(_ctor(stats.reference));

  static final _getPackageName = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_usage_UsageStats_getPackageName")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.String getPackageName()
  jni.JlString getPackageName() =>
      jni.JlString.fromRef(_getPackageName(reference));

  static final _getFirstTimeStamp =
      jlookup<ffi.NativeFunction<ffi.Int64 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_usage_UsageStats_getFirstTimeStamp")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public long getFirstTimeStamp()
  int getFirstTimeStamp() => _getFirstTimeStamp(reference);

  static final _getLastTimeStamp =
      jlookup<ffi.NativeFunction<ffi.Int64 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_usage_UsageStats_getLastTimeStamp")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public long getLastTimeStamp()
  int getLastTimeStamp() => _getLastTimeStamp(reference);

  static final _getLastTimeUsed =
      jlookup<ffi.NativeFunction<ffi.Int64 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_usage_UsageStats_getLastTimeUsed")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public long getLastTimeUsed()
  int getLastTimeUsed() => _getLastTimeUsed(reference);

  static final _getTotalTimeInForeground =
      jlookup<ffi.NativeFunction<ffi.Int64 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_usage_UsageStats_getTotalTimeInForeground")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public long getTotalTimeInForeground()
  int getTotalTimeInForeground() => _getTotalTimeInForeground(reference);

  static final _add = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("android_app_usage_UsageStats_add")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void add(android.app.usage.UsageStats right)
  void add(UsageStats right) => _add(reference, right.reference);

  static final _describeContents =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_usage_UsageStats_describeContents")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int describeContents()
  int describeContents() => _describeContents(reference);

  static final _writeToParcel = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_app_usage_UsageStats_writeToParcel")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public void writeToParcel(android.os.Parcel dest, int flags)
  void writeToParcel(os.Parcel dest, int flags) =>
      _writeToParcel(reference, dest.reference, flags);
}

class UsageEvents extends jni.JlObject {
  UsageEvents.fromRef(ffi.Pointer<ffi.Void> ref) : super.fromRef(ref);

  /// from: static public final android.os.Parcelable.Creator<android.app.usage.UsageEvents> CREATOR
  static final _getCREATOR =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "get_android_app_usage_UsageEvents_CREATOR")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();
  static os.Parcelable_Creator get CREATOR =>
      os.Parcelable_Creator.fromRef(_getCREATOR());

  static final _ctor =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "android_app_usage_UsageEvents_new")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();

  /// from: void <init>()
  UsageEvents() : super.fromRef(_ctor());

  static final _hasNextEvent =
      jlookup<ffi.NativeFunction<ffi.Uint8 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_usage_UsageEvents_hasNextEvent")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public boolean hasNextEvent()
  bool hasNextEvent() => _hasNextEvent(reference) != 0;

  static final _getNextEvent = jlookup<
              ffi.NativeFunction<
                  ffi.Uint8 Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_usage_UsageEvents_getNextEvent")
      .asFunction<int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public boolean getNextEvent(android.app.usage.UsageEvents.Event eventOut)
  bool getNextEvent(UsageEvents_Event eventOut) =>
      _getNextEvent(reference, eventOut.reference) != 0;

  static final _describeContents =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_usage_UsageEvents_describeContents")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int describeContents()
  int describeContents() => _describeContents(reference);

  static final _writeToParcel = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_app_usage_UsageEvents_writeToParcel")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public void writeToParcel(android.os.Parcel dest, int flags)
  void writeToParcel(os.Parcel dest, int flags) =>
      _writeToParcel(reference, dest.reference, flags);
}

class UsageEvents_Event extends jni.JlObject {
  UsageEvents_Event.fromRef(ffi.Pointer<ffi.Void> ref) : super.fromRef(ref);

  /// from: static public final int CONFIGURATION_CHANGE
  static const CONFIGURATION_CHANGE = 5;

  /// from: static public final int KEYGUARD_HIDDEN
  static const KEYGUARD_HIDDEN = 18;

  /// from: static public final int KEYGUARD_SHOWN
  static const KEYGUARD_SHOWN = 17;

  /// from: static public final int MOVE_TO_BACKGROUND
  static const MOVE_TO_BACKGROUND = 2;

  /// from: static public final int MOVE_TO_FOREGROUND
  static const MOVE_TO_FOREGROUND = 1;

  /// from: static public final int NONE
  static const NONE = 0;

  /// from: static public final int SCREEN_INTERACTIVE
  static const SCREEN_INTERACTIVE = 15;

  /// from: static public final int SCREEN_NON_INTERACTIVE
  static const SCREEN_NON_INTERACTIVE = 16;

  /// from: static public final int SHORTCUT_INVOCATION
  static const SHORTCUT_INVOCATION = 8;

  /// from: static public final int STANDBY_BUCKET_CHANGED
  static const STANDBY_BUCKET_CHANGED = 11;

  /// from: static public final int USER_INTERACTION
  static const USER_INTERACTION = 7;

  static final _ctor =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "android_app_usage_UsageEvents__Event_new")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();

  /// from: public void <init>()
  UsageEvents_Event() : super.fromRef(_ctor());

  static final _getPackageName = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_usage_UsageEvents__Event_getPackageName")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.String getPackageName()
  jni.JlString getPackageName() =>
      jni.JlString.fromRef(_getPackageName(reference));

  static final _getClassName = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_usage_UsageEvents__Event_getClassName")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.String getClassName()
  jni.JlString getClassName() => jni.JlString.fromRef(_getClassName(reference));

  static final _getTimeStamp =
      jlookup<ffi.NativeFunction<ffi.Int64 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_usage_UsageEvents__Event_getTimeStamp")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public long getTimeStamp()
  int getTimeStamp() => _getTimeStamp(reference);

  static final _getEventType =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_usage_UsageEvents__Event_getEventType")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int getEventType()
  int getEventType() => _getEventType(reference);

  static final _getConfiguration = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_usage_UsageEvents__Event_getConfiguration")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.content.res.Configuration getConfiguration()
  res.Configuration getConfiguration() =>
      res.Configuration.fromRef(_getConfiguration(reference));

  static final _getShortcutId = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_usage_UsageEvents__Event_getShortcutId")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.String getShortcutId()
  jni.JlString getShortcutId() =>
      jni.JlString.fromRef(_getShortcutId(reference));

  static final _getAppStandbyBucket =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_usage_UsageEvents__Event_getAppStandbyBucket")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int getAppStandbyBucket()
  int getAppStandbyBucket() => _getAppStandbyBucket(reference);
}

class EventStats extends jni.JlObject {
  EventStats.fromRef(ffi.Pointer<ffi.Void> ref) : super.fromRef(ref);

  /// from: static public final android.os.Parcelable.Creator<android.app.usage.EventStats> CREATOR
  static final _getCREATOR =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "get_android_app_usage_EventStats_CREATOR")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();
  static os.Parcelable_Creator get CREATOR =>
      os.Parcelable_Creator.fromRef(_getCREATOR());

  static final _ctor = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
                  ffi.Pointer<ffi.Void>)>>("android_app_usage_EventStats_new")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void <init>(android.app.usage.EventStats stats)
  EventStats(EventStats stats) : super.fromRef(_ctor(stats.reference));

  static final _getEventType =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_usage_EventStats_getEventType")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int getEventType()
  int getEventType() => _getEventType(reference);

  static final _getFirstTimeStamp =
      jlookup<ffi.NativeFunction<ffi.Int64 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_usage_EventStats_getFirstTimeStamp")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public long getFirstTimeStamp()
  int getFirstTimeStamp() => _getFirstTimeStamp(reference);

  static final _getLastTimeStamp =
      jlookup<ffi.NativeFunction<ffi.Int64 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_usage_EventStats_getLastTimeStamp")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public long getLastTimeStamp()
  int getLastTimeStamp() => _getLastTimeStamp(reference);

  static final _getLastEventTime =
      jlookup<ffi.NativeFunction<ffi.Int64 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_usage_EventStats_getLastEventTime")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public long getLastEventTime()
  int getLastEventTime() => _getLastEventTime(reference);

  static final _getCount =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_usage_EventStats_getCount")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int getCount()
  int getCount() => _getCount(reference);

  static final _getTotalTime =
      jlookup<ffi.NativeFunction<ffi.Int64 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_usage_EventStats_getTotalTime")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public long getTotalTime()
  int getTotalTime() => _getTotalTime(reference);

  static final _add = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("android_app_usage_EventStats_add")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void add(android.app.usage.EventStats right)
  void add(EventStats right) => _add(reference, right.reference);

  static final _describeContents =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_usage_EventStats_describeContents")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int describeContents()
  int describeContents() => _describeContents(reference);

  static final _writeToParcel = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_app_usage_EventStats_writeToParcel")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public void writeToParcel(android.os.Parcel dest, int flags)
  void writeToParcel(os.Parcel dest, int flags) =>
      _writeToParcel(reference, dest.reference, flags);
}

class StorageStats extends jni.JlObject {
  StorageStats.fromRef(ffi.Pointer<ffi.Void> ref) : super.fromRef(ref);

  /// from: static public final android.os.Parcelable.Creator<android.app.usage.StorageStats> CREATOR
  static final _getCREATOR =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "get_android_app_usage_StorageStats_CREATOR")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();
  static os.Parcelable_Creator get CREATOR =>
      os.Parcelable_Creator.fromRef(_getCREATOR());

  static final _ctor =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "android_app_usage_StorageStats_new")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();

  /// from: void <init>()
  StorageStats() : super.fromRef(_ctor());

  static final _getAppBytes =
      jlookup<ffi.NativeFunction<ffi.Int64 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_usage_StorageStats_getAppBytes")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public long getAppBytes()
  int getAppBytes() => _getAppBytes(reference);

  static final _getDataBytes =
      jlookup<ffi.NativeFunction<ffi.Int64 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_usage_StorageStats_getDataBytes")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public long getDataBytes()
  int getDataBytes() => _getDataBytes(reference);

  static final _getCacheBytes =
      jlookup<ffi.NativeFunction<ffi.Int64 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_usage_StorageStats_getCacheBytes")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public long getCacheBytes()
  int getCacheBytes() => _getCacheBytes(reference);

  static final _describeContents =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_usage_StorageStats_describeContents")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int describeContents()
  int describeContents() => _describeContents(reference);

  static final _writeToParcel = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_app_usage_StorageStats_writeToParcel")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public void writeToParcel(android.os.Parcel dest, int flags)
  void writeToParcel(os.Parcel dest, int flags) =>
      _writeToParcel(reference, dest.reference, flags);
}

class ExternalStorageStats extends jni.JlObject {
  ExternalStorageStats.fromRef(ffi.Pointer<ffi.Void> ref) : super.fromRef(ref);

  /// from: static public final android.os.Parcelable.Creator<android.app.usage.ExternalStorageStats> CREATOR
  static final _getCREATOR =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "get_android_app_usage_ExternalStorageStats_CREATOR")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();
  static os.Parcelable_Creator get CREATOR =>
      os.Parcelable_Creator.fromRef(_getCREATOR());

  static final _ctor =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "android_app_usage_ExternalStorageStats_new")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();

  /// from: void <init>()
  ExternalStorageStats() : super.fromRef(_ctor());

  static final _getTotalBytes =
      jlookup<ffi.NativeFunction<ffi.Int64 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_usage_ExternalStorageStats_getTotalBytes")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public long getTotalBytes()
  int getTotalBytes() => _getTotalBytes(reference);

  static final _getAudioBytes =
      jlookup<ffi.NativeFunction<ffi.Int64 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_usage_ExternalStorageStats_getAudioBytes")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public long getAudioBytes()
  int getAudioBytes() => _getAudioBytes(reference);

  static final _getVideoBytes =
      jlookup<ffi.NativeFunction<ffi.Int64 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_usage_ExternalStorageStats_getVideoBytes")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public long getVideoBytes()
  int getVideoBytes() => _getVideoBytes(reference);

  static final _getImageBytes =
      jlookup<ffi.NativeFunction<ffi.Int64 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_usage_ExternalStorageStats_getImageBytes")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public long getImageBytes()
  int getImageBytes() => _getImageBytes(reference);

  static final _getAppBytes =
      jlookup<ffi.NativeFunction<ffi.Int64 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_usage_ExternalStorageStats_getAppBytes")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public long getAppBytes()
  int getAppBytes() => _getAppBytes(reference);

  static final _describeContents =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_usage_ExternalStorageStats_describeContents")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int describeContents()
  int describeContents() => _describeContents(reference);

  static final _writeToParcel = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "android_app_usage_ExternalStorageStats_writeToParcel")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public void writeToParcel(android.os.Parcel dest, int flags)
  void writeToParcel(os.Parcel dest, int flags) =>
      _writeToParcel(reference, dest.reference, flags);
}

class NetworkStats extends jni.JlObject {
  NetworkStats.fromRef(ffi.Pointer<ffi.Void> ref) : super.fromRef(ref);

  static final _ctor =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "android_app_usage_NetworkStats_new")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();

  /// from: void <init>()
  NetworkStats() : super.fromRef(_ctor());

  static final _finalize =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_usage_NetworkStats_finalize")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: protected void finalize()
  void finalize() => _finalize(reference);

  static final _getNextBucket = jlookup<
              ffi.NativeFunction<
                  ffi.Uint8 Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_usage_NetworkStats_getNextBucket")
      .asFunction<int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public boolean getNextBucket(android.app.usage.NetworkStats.Bucket bucketOut)
  bool getNextBucket(NetworkStats_Bucket bucketOut) =>
      _getNextBucket(reference, bucketOut.reference) != 0;

  static final _hasNextBucket =
      jlookup<ffi.NativeFunction<ffi.Uint8 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_usage_NetworkStats_hasNextBucket")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public boolean hasNextBucket()
  bool hasNextBucket() => _hasNextBucket(reference) != 0;

  static final _close =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_usage_NetworkStats_close")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void close()
  void close() => _close(reference);
}

class NetworkStats_Bucket extends jni.JlObject {
  NetworkStats_Bucket.fromRef(ffi.Pointer<ffi.Void> ref) : super.fromRef(ref);

  /// from: static public final int DEFAULT_NETWORK_ALL
  static const DEFAULT_NETWORK_ALL = -1;

  /// from: static public final int DEFAULT_NETWORK_NO
  static const DEFAULT_NETWORK_NO = 1;

  /// from: static public final int DEFAULT_NETWORK_YES
  static const DEFAULT_NETWORK_YES = 2;

  /// from: static public final int METERED_ALL
  static const METERED_ALL = -1;

  /// from: static public final int METERED_NO
  static const METERED_NO = 1;

  /// from: static public final int METERED_YES
  static const METERED_YES = 2;

  /// from: static public final int ROAMING_ALL
  static const ROAMING_ALL = -1;

  /// from: static public final int ROAMING_NO
  static const ROAMING_NO = 1;

  /// from: static public final int ROAMING_YES
  static const ROAMING_YES = 2;

  /// from: static public final int STATE_ALL
  static const STATE_ALL = -1;

  /// from: static public final int STATE_DEFAULT
  static const STATE_DEFAULT = 1;

  /// from: static public final int STATE_FOREGROUND
  static const STATE_FOREGROUND = 2;

  /// from: static public final int TAG_NONE
  static const TAG_NONE = 0;

  /// from: static public final int UID_ALL
  static const UID_ALL = -1;

  /// from: static public final int UID_REMOVED
  static const UID_REMOVED = -4;

  /// from: static public final int UID_TETHERING
  static const UID_TETHERING = -5;

  static final _ctor =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "android_app_usage_NetworkStats__Bucket_new")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();

  /// from: public void <init>()
  NetworkStats_Bucket() : super.fromRef(_ctor());

  static final _getUid =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_usage_NetworkStats__Bucket_getUid")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int getUid()
  int getUid() => _getUid(reference);

  static final _getTag =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_usage_NetworkStats__Bucket_getTag")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int getTag()
  int getTag() => _getTag(reference);

  static final _getState =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_usage_NetworkStats__Bucket_getState")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int getState()
  int getState() => _getState(reference);

  static final _getMetered =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_usage_NetworkStats__Bucket_getMetered")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int getMetered()
  int getMetered() => _getMetered(reference);

  static final _getRoaming =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_usage_NetworkStats__Bucket_getRoaming")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int getRoaming()
  int getRoaming() => _getRoaming(reference);

  static final _getDefaultNetworkStatus =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_usage_NetworkStats__Bucket_getDefaultNetworkStatus")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int getDefaultNetworkStatus()
  int getDefaultNetworkStatus() => _getDefaultNetworkStatus(reference);

  static final _getStartTimeStamp =
      jlookup<ffi.NativeFunction<ffi.Int64 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_usage_NetworkStats__Bucket_getStartTimeStamp")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public long getStartTimeStamp()
  int getStartTimeStamp() => _getStartTimeStamp(reference);

  static final _getEndTimeStamp =
      jlookup<ffi.NativeFunction<ffi.Int64 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_usage_NetworkStats__Bucket_getEndTimeStamp")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public long getEndTimeStamp()
  int getEndTimeStamp() => _getEndTimeStamp(reference);

  static final _getRxBytes =
      jlookup<ffi.NativeFunction<ffi.Int64 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_usage_NetworkStats__Bucket_getRxBytes")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public long getRxBytes()
  int getRxBytes() => _getRxBytes(reference);

  static final _getTxBytes =
      jlookup<ffi.NativeFunction<ffi.Int64 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_usage_NetworkStats__Bucket_getTxBytes")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public long getTxBytes()
  int getTxBytes() => _getTxBytes(reference);

  static final _getRxPackets =
      jlookup<ffi.NativeFunction<ffi.Int64 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_usage_NetworkStats__Bucket_getRxPackets")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public long getRxPackets()
  int getRxPackets() => _getRxPackets(reference);

  static final _getTxPackets =
      jlookup<ffi.NativeFunction<ffi.Int64 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_usage_NetworkStats__Bucket_getTxPackets")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public long getTxPackets()
  int getTxPackets() => _getTxPackets(reference);
}

class ConfigurationStats extends jni.JlObject {
  ConfigurationStats.fromRef(ffi.Pointer<ffi.Void> ref) : super.fromRef(ref);

  /// from: static public final android.os.Parcelable.Creator<android.app.usage.ConfigurationStats> CREATOR
  static final _getCREATOR =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "get_android_app_usage_ConfigurationStats_CREATOR")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();
  static os.Parcelable_Creator get CREATOR =>
      os.Parcelable_Creator.fromRef(_getCREATOR());

  static final _ctor = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_usage_ConfigurationStats_new")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void <init>(android.app.usage.ConfigurationStats stats)
  ConfigurationStats(ConfigurationStats stats)
      : super.fromRef(_ctor(stats.reference));

  static final _getConfiguration = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_usage_ConfigurationStats_getConfiguration")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.content.res.Configuration getConfiguration()
  res.Configuration getConfiguration() =>
      res.Configuration.fromRef(_getConfiguration(reference));

  static final _getFirstTimeStamp =
      jlookup<ffi.NativeFunction<ffi.Int64 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_usage_ConfigurationStats_getFirstTimeStamp")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public long getFirstTimeStamp()
  int getFirstTimeStamp() => _getFirstTimeStamp(reference);

  static final _getLastTimeStamp =
      jlookup<ffi.NativeFunction<ffi.Int64 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_usage_ConfigurationStats_getLastTimeStamp")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public long getLastTimeStamp()
  int getLastTimeStamp() => _getLastTimeStamp(reference);

  static final _getLastTimeActive =
      jlookup<ffi.NativeFunction<ffi.Int64 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_usage_ConfigurationStats_getLastTimeActive")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public long getLastTimeActive()
  int getLastTimeActive() => _getLastTimeActive(reference);

  static final _getTotalTimeActive =
      jlookup<ffi.NativeFunction<ffi.Int64 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_usage_ConfigurationStats_getTotalTimeActive")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public long getTotalTimeActive()
  int getTotalTimeActive() => _getTotalTimeActive(reference);

  static final _getActivationCount =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_usage_ConfigurationStats_getActivationCount")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int getActivationCount()
  int getActivationCount() => _getActivationCount(reference);

  static final _describeContents =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_usage_ConfigurationStats_describeContents")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int describeContents()
  int describeContents() => _describeContents(reference);

  static final _writeToParcel = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "android_app_usage_ConfigurationStats_writeToParcel")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public void writeToParcel(android.os.Parcel dest, int flags)
  void writeToParcel(os.Parcel dest, int flags) =>
      _writeToParcel(reference, dest.reference, flags);
}
