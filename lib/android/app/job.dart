// AutoGenerated by jni_gen. Do not edit.
// ignore_for_file: camel_case_types
// ignore_for_file: non_constant_identifier_names
// ignore_for_file: constant_identifier_names
// ignore_for_file: annotate_overrides
// ignore_for_file: no_leading_underscores_for_local_identifiers
// ignore_for_file: unused_element

import "dart:ffi" as ffi;

import "package:jni/jni.dart" as jni;
import "../../init.dart" show jlookup;

class JobInfo extends jni.JlObject {
  JobInfo.fromRef(ffi.Pointer<ffi.Void> ref) : super.fromRef(ref);

  /// from: static public final int BACKOFF_POLICY_EXPONENTIAL
  static const BACKOFF_POLICY_EXPONENTIAL = 1;

  /// from: static public final int BACKOFF_POLICY_LINEAR
  static const BACKOFF_POLICY_LINEAR = 0;

  /// from: static public final android.os.Parcelable.Creator<android.app.job.JobInfo> CREATOR
  static final _getCREATOR =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "get_android_app_job_JobInfo_CREATOR")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();
  static jni.JlObject get CREATOR => jni.JlObject.fromRef(_getCREATOR());

  /// from: static public final long DEFAULT_INITIAL_BACKOFF_MILLIS
  static const DEFAULT_INITIAL_BACKOFF_MILLIS = 30000;

  /// from: static public final long MAX_BACKOFF_DELAY_MILLIS
  static const MAX_BACKOFF_DELAY_MILLIS = 18000000;

  /// from: static public final int NETWORK_BYTES_UNKNOWN
  static const NETWORK_BYTES_UNKNOWN = -1;

  /// from: static public final int NETWORK_TYPE_ANY
  static const NETWORK_TYPE_ANY = 1;

  /// from: static public final int NETWORK_TYPE_CELLULAR
  static const NETWORK_TYPE_CELLULAR = 4;

  /// from: static public final int NETWORK_TYPE_METERED
  static const NETWORK_TYPE_METERED = 4;

  /// from: static public final int NETWORK_TYPE_NONE
  static const NETWORK_TYPE_NONE = 0;

  /// from: static public final int NETWORK_TYPE_NOT_ROAMING
  static const NETWORK_TYPE_NOT_ROAMING = 3;

  /// from: static public final int NETWORK_TYPE_UNMETERED
  static const NETWORK_TYPE_UNMETERED = 2;

  static final _ctor = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
                  ffi.Pointer<ffi.Void>)>>("android_app_job_JobInfo_new")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: void <init>(android.os.Parcel in)
  JobInfo(jni.JlObject in_) : super.fromRef(_ctor(in_.reference));

  static final _getMinPeriodMillis =
      jlookup<ffi.NativeFunction<ffi.Int64 Function()>>(
              "android_app_job_JobInfo_getMinPeriodMillis")
          .asFunction<int Function()>();

  /// from: static public final long getMinPeriodMillis()
  static int getMinPeriodMillis() => _getMinPeriodMillis();

  static final _getMinFlexMillis =
      jlookup<ffi.NativeFunction<ffi.Int64 Function()>>(
              "android_app_job_JobInfo_getMinFlexMillis")
          .asFunction<int Function()>();

  /// from: static public final long getMinFlexMillis()
  static int getMinFlexMillis() => _getMinFlexMillis();

  static final _getId =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_job_JobInfo_getId")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int getId()
  int getId() => _getId(reference);

  static final _getExtras = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
                  ffi.Pointer<ffi.Void>)>>("android_app_job_JobInfo_getExtras")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.os.PersistableBundle getExtras()
  jni.JlObject getExtras() => jni.JlObject.fromRef(_getExtras(reference));

  static final _getTransientExtras = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_job_JobInfo_getTransientExtras")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.os.Bundle getTransientExtras()
  jni.JlObject getTransientExtras() =>
      jni.JlObject.fromRef(_getTransientExtras(reference));

  static final _getClipData = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_job_JobInfo_getClipData")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.content.ClipData getClipData()
  jni.JlObject getClipData() => jni.JlObject.fromRef(_getClipData(reference));

  static final _getClipGrantFlags =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_job_JobInfo_getClipGrantFlags")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int getClipGrantFlags()
  int getClipGrantFlags() => _getClipGrantFlags(reference);

  static final _getService = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
                  ffi.Pointer<ffi.Void>)>>("android_app_job_JobInfo_getService")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.content.ComponentName getService()
  jni.JlObject getService() => jni.JlObject.fromRef(_getService(reference));

  static final _isRequireCharging =
      jlookup<ffi.NativeFunction<ffi.Uint8 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_job_JobInfo_isRequireCharging")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public boolean isRequireCharging()
  bool isRequireCharging() => _isRequireCharging(reference) != 0;

  static final _isRequireBatteryNotLow =
      jlookup<ffi.NativeFunction<ffi.Uint8 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_job_JobInfo_isRequireBatteryNotLow")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public boolean isRequireBatteryNotLow()
  bool isRequireBatteryNotLow() => _isRequireBatteryNotLow(reference) != 0;

  static final _isRequireDeviceIdle =
      jlookup<ffi.NativeFunction<ffi.Uint8 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_job_JobInfo_isRequireDeviceIdle")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public boolean isRequireDeviceIdle()
  bool isRequireDeviceIdle() => _isRequireDeviceIdle(reference) != 0;

  static final _isRequireStorageNotLow =
      jlookup<ffi.NativeFunction<ffi.Uint8 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_job_JobInfo_isRequireStorageNotLow")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public boolean isRequireStorageNotLow()
  bool isRequireStorageNotLow() => _isRequireStorageNotLow(reference) != 0;

  static final _getTriggerContentUris = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_job_JobInfo_getTriggerContentUris")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.job.JobInfo.TriggerContentUri[] getTriggerContentUris()
  jni.JlObject getTriggerContentUris() =>
      jni.JlObject.fromRef(_getTriggerContentUris(reference));

  static final _getTriggerContentUpdateDelay =
      jlookup<ffi.NativeFunction<ffi.Int64 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_job_JobInfo_getTriggerContentUpdateDelay")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public long getTriggerContentUpdateDelay()
  int getTriggerContentUpdateDelay() =>
      _getTriggerContentUpdateDelay(reference);

  static final _getTriggerContentMaxDelay =
      jlookup<ffi.NativeFunction<ffi.Int64 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_job_JobInfo_getTriggerContentMaxDelay")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public long getTriggerContentMaxDelay()
  int getTriggerContentMaxDelay() => _getTriggerContentMaxDelay(reference);

  static final _getNetworkType =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_job_JobInfo_getNetworkType")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int getNetworkType()
  int getNetworkType() => _getNetworkType(reference);

  static final _getRequiredNetwork = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_job_JobInfo_getRequiredNetwork")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.net.NetworkRequest getRequiredNetwork()
  jni.JlObject getRequiredNetwork() =>
      jni.JlObject.fromRef(_getRequiredNetwork(reference));

  static final _getEstimatedNetworkDownloadBytes =
      jlookup<ffi.NativeFunction<ffi.Int64 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_job_JobInfo_getEstimatedNetworkDownloadBytes")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public long getEstimatedNetworkDownloadBytes()
  int getEstimatedNetworkDownloadBytes() =>
      _getEstimatedNetworkDownloadBytes(reference);

  static final _getEstimatedNetworkUploadBytes =
      jlookup<ffi.NativeFunction<ffi.Int64 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_job_JobInfo_getEstimatedNetworkUploadBytes")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public long getEstimatedNetworkUploadBytes()
  int getEstimatedNetworkUploadBytes() =>
      _getEstimatedNetworkUploadBytes(reference);

  static final _getMinLatencyMillis =
      jlookup<ffi.NativeFunction<ffi.Int64 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_job_JobInfo_getMinLatencyMillis")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public long getMinLatencyMillis()
  int getMinLatencyMillis() => _getMinLatencyMillis(reference);

  static final _getMaxExecutionDelayMillis =
      jlookup<ffi.NativeFunction<ffi.Int64 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_job_JobInfo_getMaxExecutionDelayMillis")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public long getMaxExecutionDelayMillis()
  int getMaxExecutionDelayMillis() => _getMaxExecutionDelayMillis(reference);

  static final _isPeriodic =
      jlookup<ffi.NativeFunction<ffi.Uint8 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_job_JobInfo_isPeriodic")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public boolean isPeriodic()
  bool isPeriodic() => _isPeriodic(reference) != 0;

  static final _isPersisted =
      jlookup<ffi.NativeFunction<ffi.Uint8 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_job_JobInfo_isPersisted")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public boolean isPersisted()
  bool isPersisted() => _isPersisted(reference) != 0;

  static final _getIntervalMillis =
      jlookup<ffi.NativeFunction<ffi.Int64 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_job_JobInfo_getIntervalMillis")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public long getIntervalMillis()
  int getIntervalMillis() => _getIntervalMillis(reference);

  static final _getFlexMillis =
      jlookup<ffi.NativeFunction<ffi.Int64 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_job_JobInfo_getFlexMillis")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public long getFlexMillis()
  int getFlexMillis() => _getFlexMillis(reference);

  static final _getInitialBackoffMillis =
      jlookup<ffi.NativeFunction<ffi.Int64 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_job_JobInfo_getInitialBackoffMillis")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public long getInitialBackoffMillis()
  int getInitialBackoffMillis() => _getInitialBackoffMillis(reference);

  static final _getBackoffPolicy =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_job_JobInfo_getBackoffPolicy")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int getBackoffPolicy()
  int getBackoffPolicy() => _getBackoffPolicy(reference);

  static final _isImportantWhileForeground =
      jlookup<ffi.NativeFunction<ffi.Uint8 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_job_JobInfo_isImportantWhileForeground")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public boolean isImportantWhileForeground()
  bool isImportantWhileForeground() =>
      _isImportantWhileForeground(reference) != 0;

  static final _isPrefetch =
      jlookup<ffi.NativeFunction<ffi.Uint8 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_job_JobInfo_isPrefetch")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public boolean isPrefetch()
  bool isPrefetch() => _isPrefetch(reference) != 0;

  static final _equals_1 = jlookup<
          ffi.NativeFunction<
              ffi.Uint8 Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("android_app_job_JobInfo_equals_1")
      .asFunction<int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public boolean equals(java.lang.Object o)
  bool equals_1(jni.JlObject o) => _equals_1(reference, o.reference) != 0;

  static final _hashCode_1 =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_job_JobInfo_hashCode_1")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int hashCode()
  int hashCode_1() => _hashCode_1(reference);

  static final _describeContents =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_job_JobInfo_describeContents")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int describeContents()
  int describeContents() => _describeContents(reference);

  static final _writeToParcel = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_app_job_JobInfo_writeToParcel")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public void writeToParcel(android.os.Parcel out, int flags)
  void writeToParcel(jni.JlObject out, int flags) =>
      _writeToParcel(reference, out.reference, flags);

  static final _toString_1 = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
                  ffi.Pointer<ffi.Void>)>>("android_app_job_JobInfo_toString_1")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.String toString()
  jni.JlString toString_1() => jni.JlString.fromRef(_toString_1(reference));
}

class JobInfo_TriggerContentUri extends jni.JlObject {
  JobInfo_TriggerContentUri.fromRef(ffi.Pointer<ffi.Void> ref)
      : super.fromRef(ref);

  /// from: static public final android.os.Parcelable.Creator<android.app.job.JobInfo.TriggerContentUri> CREATOR
  static final _getCREATOR =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "get_android_app_job_JobInfo__TriggerContentUri_CREATOR")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();
  static jni.JlObject get CREATOR => jni.JlObject.fromRef(_getCREATOR());

  /// from: static public final int FLAG_NOTIFY_FOR_DESCENDANTS
  static const FLAG_NOTIFY_FOR_DESCENDANTS = 1;

  static final _ctor = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_app_job_JobInfo__TriggerContentUri_new")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public void <init>(android.net.Uri uri, int flags)
  JobInfo_TriggerContentUri(jni.JlObject uri, int flags)
      : super.fromRef(_ctor(uri.reference, flags));

  static final _getUri = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_job_JobInfo__TriggerContentUri_getUri")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.net.Uri getUri()
  jni.JlObject getUri() => jni.JlObject.fromRef(_getUri(reference));

  static final _getFlags =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_job_JobInfo__TriggerContentUri_getFlags")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int getFlags()
  int getFlags() => _getFlags(reference);

  static final _equals_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Uint8 Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_job_JobInfo__TriggerContentUri_equals_1")
      .asFunction<int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public boolean equals(java.lang.Object o)
  bool equals_1(jni.JlObject o) => _equals_1(reference, o.reference) != 0;

  static final _hashCode_1 =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_job_JobInfo__TriggerContentUri_hashCode_1")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int hashCode()
  int hashCode_1() => _hashCode_1(reference);

  static final _describeContents =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_job_JobInfo__TriggerContentUri_describeContents")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int describeContents()
  int describeContents() => _describeContents(reference);

  static final _writeToParcel = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "android_app_job_JobInfo__TriggerContentUri_writeToParcel")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public void writeToParcel(android.os.Parcel out, int flags)
  void writeToParcel(jni.JlObject out, int flags) =>
      _writeToParcel(reference, out.reference, flags);
}

class JobInfo_Builder extends jni.JlObject {
  JobInfo_Builder.fromRef(ffi.Pointer<ffi.Void> ref) : super.fromRef(ref);

  static final _ctor = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Int32, ffi.Pointer<ffi.Void>)>>(
          "android_app_job_JobInfo__Builder_new")
      .asFunction<ffi.Pointer<ffi.Void> Function(int, ffi.Pointer<ffi.Void>)>();

  /// from: public void <init>(int jobId, android.content.ComponentName jobService)
  JobInfo_Builder(int jobId, jni.JlObject jobService)
      : super.fromRef(_ctor(jobId, jobService.reference));

  static final _setExtras = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_job_JobInfo__Builder_setExtras")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.job.JobInfo.Builder setExtras(android.os.PersistableBundle extras)
  JobInfo_Builder setExtras(jni.JlObject extras) =>
      JobInfo_Builder.fromRef(_setExtras(reference, extras.reference));

  static final _setTransientExtras = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_job_JobInfo__Builder_setTransientExtras")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.job.JobInfo.Builder setTransientExtras(android.os.Bundle extras)
  JobInfo_Builder setTransientExtras(jni.JlObject extras) =>
      JobInfo_Builder.fromRef(_setTransientExtras(reference, extras.reference));

  static final _setClipData = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_app_job_JobInfo__Builder_setClipData")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public android.app.job.JobInfo.Builder setClipData(android.content.ClipData clip, int grantFlags)
  JobInfo_Builder setClipData(jni.JlObject clip, int grantFlags) =>
      JobInfo_Builder.fromRef(
          _setClipData(reference, clip.reference, grantFlags));

  static final _setRequiredNetworkType = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "android_app_job_JobInfo__Builder_setRequiredNetworkType")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public android.app.job.JobInfo.Builder setRequiredNetworkType(int networkType)
  JobInfo_Builder setRequiredNetworkType(int networkType) =>
      JobInfo_Builder.fromRef(_setRequiredNetworkType(reference, networkType));

  static final _setRequiredNetwork = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_job_JobInfo__Builder_setRequiredNetwork")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.job.JobInfo.Builder setRequiredNetwork(android.net.NetworkRequest networkRequest)
  JobInfo_Builder setRequiredNetwork(jni.JlObject networkRequest) =>
      JobInfo_Builder.fromRef(
          _setRequiredNetwork(reference, networkRequest.reference));

  static final _setEstimatedNetworkBytes = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Int64, ffi.Int64)>>(
          "android_app_job_JobInfo__Builder_setEstimatedNetworkBytes")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int, int)>();

  /// from: public android.app.job.JobInfo.Builder setEstimatedNetworkBytes(long downloadBytes, long uploadBytes)
  JobInfo_Builder setEstimatedNetworkBytes(
          int downloadBytes, int uploadBytes) =>
      JobInfo_Builder.fromRef(
          _setEstimatedNetworkBytes(reference, downloadBytes, uploadBytes));

  static final _setRequiresCharging = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Uint8)>>(
          "android_app_job_JobInfo__Builder_setRequiresCharging")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public android.app.job.JobInfo.Builder setRequiresCharging(boolean requiresCharging)
  JobInfo_Builder setRequiresCharging(bool requiresCharging) =>
      JobInfo_Builder.fromRef(
          _setRequiresCharging(reference, requiresCharging ? 1 : 0));

  static final _setRequiresBatteryNotLow = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Uint8)>>(
          "android_app_job_JobInfo__Builder_setRequiresBatteryNotLow")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public android.app.job.JobInfo.Builder setRequiresBatteryNotLow(boolean batteryNotLow)
  JobInfo_Builder setRequiresBatteryNotLow(bool batteryNotLow) =>
      JobInfo_Builder.fromRef(
          _setRequiresBatteryNotLow(reference, batteryNotLow ? 1 : 0));

  static final _setRequiresDeviceIdle = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Uint8)>>(
          "android_app_job_JobInfo__Builder_setRequiresDeviceIdle")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public android.app.job.JobInfo.Builder setRequiresDeviceIdle(boolean requiresDeviceIdle)
  JobInfo_Builder setRequiresDeviceIdle(bool requiresDeviceIdle) =>
      JobInfo_Builder.fromRef(
          _setRequiresDeviceIdle(reference, requiresDeviceIdle ? 1 : 0));

  static final _setRequiresStorageNotLow = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Uint8)>>(
          "android_app_job_JobInfo__Builder_setRequiresStorageNotLow")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public android.app.job.JobInfo.Builder setRequiresStorageNotLow(boolean storageNotLow)
  JobInfo_Builder setRequiresStorageNotLow(bool storageNotLow) =>
      JobInfo_Builder.fromRef(
          _setRequiresStorageNotLow(reference, storageNotLow ? 1 : 0));

  static final _addTriggerContentUri = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_job_JobInfo__Builder_addTriggerContentUri")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.job.JobInfo.Builder addTriggerContentUri(android.app.job.JobInfo.TriggerContentUri uri)
  JobInfo_Builder addTriggerContentUri(JobInfo_TriggerContentUri uri) =>
      JobInfo_Builder.fromRef(_addTriggerContentUri(reference, uri.reference));

  static final _setTriggerContentUpdateDelay = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Int64)>>(
          "android_app_job_JobInfo__Builder_setTriggerContentUpdateDelay")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public android.app.job.JobInfo.Builder setTriggerContentUpdateDelay(long durationMs)
  JobInfo_Builder setTriggerContentUpdateDelay(int durationMs) =>
      JobInfo_Builder.fromRef(
          _setTriggerContentUpdateDelay(reference, durationMs));

  static final _setTriggerContentMaxDelay = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Int64)>>(
          "android_app_job_JobInfo__Builder_setTriggerContentMaxDelay")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public android.app.job.JobInfo.Builder setTriggerContentMaxDelay(long durationMs)
  JobInfo_Builder setTriggerContentMaxDelay(int durationMs) =>
      JobInfo_Builder.fromRef(
          _setTriggerContentMaxDelay(reference, durationMs));

  static final _setPeriodic = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                  ffi.Int64)>>("android_app_job_JobInfo__Builder_setPeriodic")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public android.app.job.JobInfo.Builder setPeriodic(long intervalMillis)
  JobInfo_Builder setPeriodic(int intervalMillis) =>
      JobInfo_Builder.fromRef(_setPeriodic(reference, intervalMillis));

  static final _setPeriodic_1 = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, ffi.Int64,
                  ffi.Int64)>>("android_app_job_JobInfo__Builder_setPeriodic_1")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int, int)>();

  /// from: public android.app.job.JobInfo.Builder setPeriodic(long intervalMillis, long flexMillis)
  JobInfo_Builder setPeriodic_1(int intervalMillis, int flexMillis) =>
      JobInfo_Builder.fromRef(
          _setPeriodic_1(reference, intervalMillis, flexMillis));

  static final _setMinimumLatency = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Int64)>>(
          "android_app_job_JobInfo__Builder_setMinimumLatency")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public android.app.job.JobInfo.Builder setMinimumLatency(long minLatencyMillis)
  JobInfo_Builder setMinimumLatency(int minLatencyMillis) =>
      JobInfo_Builder.fromRef(_setMinimumLatency(reference, minLatencyMillis));

  static final _setOverrideDeadline = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Int64)>>(
          "android_app_job_JobInfo__Builder_setOverrideDeadline")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public android.app.job.JobInfo.Builder setOverrideDeadline(long maxExecutionDelayMillis)
  JobInfo_Builder setOverrideDeadline(int maxExecutionDelayMillis) =>
      JobInfo_Builder.fromRef(
          _setOverrideDeadline(reference, maxExecutionDelayMillis));

  static final _setBackoffCriteria = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Int64, ffi.Int32)>>(
          "android_app_job_JobInfo__Builder_setBackoffCriteria")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int, int)>();

  /// from: public android.app.job.JobInfo.Builder setBackoffCriteria(long initialBackoffMillis, int backoffPolicy)
  JobInfo_Builder setBackoffCriteria(
          int initialBackoffMillis, int backoffPolicy) =>
      JobInfo_Builder.fromRef(
          _setBackoffCriteria(reference, initialBackoffMillis, backoffPolicy));

  static final _setImportantWhileForeground = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Uint8)>>(
          "android_app_job_JobInfo__Builder_setImportantWhileForeground")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public android.app.job.JobInfo.Builder setImportantWhileForeground(boolean importantWhileForeground)
  JobInfo_Builder setImportantWhileForeground(bool importantWhileForeground) =>
      JobInfo_Builder.fromRef(_setImportantWhileForeground(
          reference, importantWhileForeground ? 1 : 0));

  static final _setPrefetch = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                  ffi.Uint8)>>("android_app_job_JobInfo__Builder_setPrefetch")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public android.app.job.JobInfo.Builder setPrefetch(boolean prefetch)
  JobInfo_Builder setPrefetch(bool prefetch) =>
      JobInfo_Builder.fromRef(_setPrefetch(reference, prefetch ? 1 : 0));

  static final _setPersisted = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                  ffi.Uint8)>>("android_app_job_JobInfo__Builder_setPersisted")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public android.app.job.JobInfo.Builder setPersisted(boolean isPersisted)
  JobInfo_Builder setPersisted(bool isPersisted) =>
      JobInfo_Builder.fromRef(_setPersisted(reference, isPersisted ? 1 : 0));

  static final _build = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_job_JobInfo__Builder_build")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.job.JobInfo build()
  JobInfo build() => JobInfo.fromRef(_build(reference));
}

class JobParameters extends jni.JlObject {
  JobParameters.fromRef(ffi.Pointer<ffi.Void> ref) : super.fromRef(ref);

  /// from: static public final android.os.Parcelable.Creator<android.app.job.JobParameters> CREATOR
  static final _getCREATOR =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "get_android_app_job_JobParameters_CREATOR")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();
  static jni.JlObject get CREATOR => jni.JlObject.fromRef(_getCREATOR());

  static final _ctor = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
                  ffi.Pointer<ffi.Void>)>>("android_app_job_JobParameters_new")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: void <init>(android.os.Parcel in)
  JobParameters(jni.JlObject in_) : super.fromRef(_ctor(in_.reference));

  static final _getJobId =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_job_JobParameters_getJobId")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int getJobId()
  int getJobId() => _getJobId(reference);

  static final _getExtras = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_job_JobParameters_getExtras")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.os.PersistableBundle getExtras()
  jni.JlObject getExtras() => jni.JlObject.fromRef(_getExtras(reference));

  static final _getTransientExtras = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_job_JobParameters_getTransientExtras")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.os.Bundle getTransientExtras()
  jni.JlObject getTransientExtras() =>
      jni.JlObject.fromRef(_getTransientExtras(reference));

  static final _getClipData = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_job_JobParameters_getClipData")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.content.ClipData getClipData()
  jni.JlObject getClipData() => jni.JlObject.fromRef(_getClipData(reference));

  static final _getClipGrantFlags =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_job_JobParameters_getClipGrantFlags")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int getClipGrantFlags()
  int getClipGrantFlags() => _getClipGrantFlags(reference);

  static final _isOverrideDeadlineExpired =
      jlookup<ffi.NativeFunction<ffi.Uint8 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_job_JobParameters_isOverrideDeadlineExpired")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public boolean isOverrideDeadlineExpired()
  bool isOverrideDeadlineExpired() =>
      _isOverrideDeadlineExpired(reference) != 0;

  static final _getTriggeredContentUris = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_job_JobParameters_getTriggeredContentUris")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.net.Uri[] getTriggeredContentUris()
  jni.JlObject getTriggeredContentUris() =>
      jni.JlObject.fromRef(_getTriggeredContentUris(reference));

  static final _getTriggeredContentAuthorities = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_job_JobParameters_getTriggeredContentAuthorities")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.String[] getTriggeredContentAuthorities()
  jni.JlObject getTriggeredContentAuthorities() =>
      jni.JlObject.fromRef(_getTriggeredContentAuthorities(reference));

  static final _getNetwork = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_job_JobParameters_getNetwork")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.net.Network getNetwork()
  jni.JlObject getNetwork() => jni.JlObject.fromRef(_getNetwork(reference));

  static final _dequeueWork = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_job_JobParameters_dequeueWork")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.job.JobWorkItem dequeueWork()
  JobWorkItem dequeueWork() => JobWorkItem.fromRef(_dequeueWork(reference));

  static final _completeWork = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_job_JobParameters_completeWork")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void completeWork(android.app.job.JobWorkItem work)
  void completeWork(JobWorkItem work) =>
      _completeWork(reference, work.reference);

  static final _describeContents =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_job_JobParameters_describeContents")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int describeContents()
  int describeContents() => _describeContents(reference);

  static final _writeToParcel = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_app_job_JobParameters_writeToParcel")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public void writeToParcel(android.os.Parcel dest, int flags)
  void writeToParcel(jni.JlObject dest, int flags) =>
      _writeToParcel(reference, dest.reference, flags);
}

class JobWorkItem extends jni.JlObject {
  JobWorkItem.fromRef(ffi.Pointer<ffi.Void> ref) : super.fromRef(ref);

  /// from: static public final android.os.Parcelable.Creator<android.app.job.JobWorkItem> CREATOR
  static final _getCREATOR =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "get_android_app_job_JobWorkItem_CREATOR")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();
  static jni.JlObject get CREATOR => jni.JlObject.fromRef(_getCREATOR());

  static final _ctor = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
                  ffi.Pointer<ffi.Void>)>>("android_app_job_JobWorkItem_new")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void <init>(android.content.Intent intent)
  JobWorkItem(jni.JlObject intent) : super.fromRef(_ctor(intent.reference));

  static final _ctor_1 = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, ffi.Int64,
                  ffi.Int64)>>("android_app_job_JobWorkItem_new_1")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int, int)>();

  /// from: public void <init>(android.content.Intent intent, long downloadBytes, long uploadBytes)
  JobWorkItem.ctor_1(jni.JlObject intent, int downloadBytes, int uploadBytes)
      : super.fromRef(_ctor_1(intent.reference, downloadBytes, uploadBytes));

  static final _getIntent = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_job_JobWorkItem_getIntent")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.content.Intent getIntent()
  jni.JlObject getIntent() => jni.JlObject.fromRef(_getIntent(reference));

  static final _getEstimatedNetworkDownloadBytes =
      jlookup<ffi.NativeFunction<ffi.Int64 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_job_JobWorkItem_getEstimatedNetworkDownloadBytes")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public long getEstimatedNetworkDownloadBytes()
  int getEstimatedNetworkDownloadBytes() =>
      _getEstimatedNetworkDownloadBytes(reference);

  static final _getEstimatedNetworkUploadBytes =
      jlookup<ffi.NativeFunction<ffi.Int64 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_job_JobWorkItem_getEstimatedNetworkUploadBytes")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public long getEstimatedNetworkUploadBytes()
  int getEstimatedNetworkUploadBytes() =>
      _getEstimatedNetworkUploadBytes(reference);

  static final _getDeliveryCount =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_job_JobWorkItem_getDeliveryCount")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int getDeliveryCount()
  int getDeliveryCount() => _getDeliveryCount(reference);

  static final _toString_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_job_JobWorkItem_toString_1")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.String toString()
  jni.JlString toString_1() => jni.JlString.fromRef(_toString_1(reference));

  static final _describeContents =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_job_JobWorkItem_describeContents")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int describeContents()
  int describeContents() => _describeContents(reference);

  static final _writeToParcel = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_app_job_JobWorkItem_writeToParcel")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public void writeToParcel(android.os.Parcel out, int flags)
  void writeToParcel(jni.JlObject out, int flags) =>
      _writeToParcel(reference, out.reference, flags);
}

class JobScheduler extends jni.JlObject {
  JobScheduler.fromRef(ffi.Pointer<ffi.Void> ref) : super.fromRef(ref);

  /// from: static public final int RESULT_FAILURE
  static const RESULT_FAILURE = 0;

  /// from: static public final int RESULT_SUCCESS
  static const RESULT_SUCCESS = 1;

  static final _ctor =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "android_app_job_JobScheduler_new")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();

  /// from: public void <init>()
  JobScheduler() : super.fromRef(_ctor());

  static final _schedule = jlookup<
              ffi.NativeFunction<
                  ffi.Int32 Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_job_JobScheduler_schedule")
      .asFunction<int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public abstract int schedule(android.app.job.JobInfo job)
  int schedule(JobInfo job) => _schedule(reference, job.reference);

  static final _enqueue = jlookup<
              ffi.NativeFunction<
                  ffi.Int32 Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_job_JobScheduler_enqueue")
      .asFunction<
          int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public abstract int enqueue(android.app.job.JobInfo job, android.app.job.JobWorkItem work)
  int enqueue(JobInfo job, JobWorkItem work) =>
      _enqueue(reference, job.reference, work.reference);

  static final _cancel = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_app_job_JobScheduler_cancel")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public abstract void cancel(int jobId)
  void cancel(int jobId) => _cancel(reference, jobId);

  static final _cancelAll =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_job_JobScheduler_cancelAll")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: public abstract void cancelAll()
  void cancelAll() => _cancelAll(reference);

  static final _getAllPendingJobs = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_job_JobScheduler_getAllPendingJobs")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public abstract java.util.List<android.app.job.JobInfo> getAllPendingJobs()
  jni.JlObject getAllPendingJobs() =>
      jni.JlObject.fromRef(_getAllPendingJobs(reference));

  static final _getPendingJob = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_app_job_JobScheduler_getPendingJob")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public abstract android.app.job.JobInfo getPendingJob(int jobId)
  JobInfo getPendingJob(int jobId) =>
      JobInfo.fromRef(_getPendingJob(reference, jobId));
}

class JobService extends jni.JlObject {
  JobService.fromRef(ffi.Pointer<ffi.Void> ref) : super.fromRef(ref);

  /// from: static public final java.lang.String PERMISSION_BIND
  static const PERMISSION_BIND = "android.permission.BIND_JOB_SERVICE";

  static final _ctor =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "android_app_job_JobService_new")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();

  /// from: public void <init>()
  JobService() : super.fromRef(_ctor());

  static final _onBind = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("android_app_job_JobService_onBind")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public final android.os.IBinder onBind(android.content.Intent intent)
  jni.JlObject onBind(jni.JlObject intent) =>
      jni.JlObject.fromRef(_onBind(reference, intent.reference));

  static final _jobFinished = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
                  ffi.Uint8)>>("android_app_job_JobService_jobFinished")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public final void jobFinished(android.app.job.JobParameters params, boolean wantsReschedule)
  void jobFinished(JobParameters params, bool wantsReschedule) =>
      _jobFinished(reference, params.reference, wantsReschedule ? 1 : 0);

  static final _onStartJob = jlookup<
              ffi.NativeFunction<
                  ffi.Uint8 Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_job_JobService_onStartJob")
      .asFunction<int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public abstract boolean onStartJob(android.app.job.JobParameters params)
  bool onStartJob(JobParameters params) =>
      _onStartJob(reference, params.reference) != 0;

  static final _onStopJob = jlookup<
              ffi.NativeFunction<
                  ffi.Uint8 Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_job_JobService_onStopJob")
      .asFunction<int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public abstract boolean onStopJob(android.app.job.JobParameters params)
  bool onStopJob(JobParameters params) =>
      _onStopJob(reference, params.reference) != 0;
}

class JobServiceEngine extends jni.JlObject {
  JobServiceEngine.fromRef(ffi.Pointer<ffi.Void> ref) : super.fromRef(ref);

  static final _ctor = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_job_JobServiceEngine_new")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void <init>(android.app.Service service)
  JobServiceEngine(jni.JlObject service)
      : super.fromRef(_ctor(service.reference));

  static final _getBinder = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_job_JobServiceEngine_getBinder")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public final android.os.IBinder getBinder()
  jni.JlObject getBinder() => jni.JlObject.fromRef(_getBinder(reference));

  static final _onStartJob = jlookup<
              ffi.NativeFunction<
                  ffi.Uint8 Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_job_JobServiceEngine_onStartJob")
      .asFunction<int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public abstract boolean onStartJob(android.app.job.JobParameters params)
  bool onStartJob(JobParameters params) =>
      _onStartJob(reference, params.reference) != 0;

  static final _onStopJob = jlookup<
              ffi.NativeFunction<
                  ffi.Uint8 Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_job_JobServiceEngine_onStopJob")
      .asFunction<int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public abstract boolean onStopJob(android.app.job.JobParameters params)
  bool onStopJob(JobParameters params) =>
      _onStopJob(reference, params.reference) != 0;

  static final _jobFinished = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
                  ffi.Uint8)>>("android_app_job_JobServiceEngine_jobFinished")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public void jobFinished(android.app.job.JobParameters params, boolean needsReschedule)
  void jobFinished(JobParameters params, bool needsReschedule) =>
      _jobFinished(reference, params.reference, needsReschedule ? 1 : 0);
}
