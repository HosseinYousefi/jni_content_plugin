// AutoGenerated by jni_gen. Do not edit.
// ignore_for_file: camel_case_types
// ignore_for_file: non_constant_identifier_names
// ignore_for_file: constant_identifier_names
// ignore_for_file: annotate_overrides
// ignore_for_file: no_leading_underscores_for_local_identifiers
// ignore_for_file: unused_element

import "dart:ffi" as ffi;

import "package:jni/jni.dart" as jni;
import "package:content_plugin/android/content.dart" as content;

import "package:content_plugin/android/os.dart" as os;

import "app/assist.dart" as assist;

import "package:content_plugin/android/content/res.dart" as res;

import "package:content_plugin/android/content/pm.dart" as pm;
import "../init.dart" show jlookup;

class Activity extends jni.JlObject {
  Activity.fromRef(ffi.Pointer<ffi.Void> ref) : super.fromRef(ref);

  /// from: static public final int DEFAULT_KEYS_DIALER
  static const DEFAULT_KEYS_DIALER = 1;

  /// from: static public final int DEFAULT_KEYS_DISABLE
  static const DEFAULT_KEYS_DISABLE = 0;

  /// from: static public final int DEFAULT_KEYS_SEARCH_GLOBAL
  static const DEFAULT_KEYS_SEARCH_GLOBAL = 4;

  /// from: static public final int DEFAULT_KEYS_SEARCH_LOCAL
  static const DEFAULT_KEYS_SEARCH_LOCAL = 3;

  /// from: static public final int DEFAULT_KEYS_SHORTCUT
  static const DEFAULT_KEYS_SHORTCUT = 2;

  /// from: static protected final int[] FOCUSED_STATE_SET
  static final _getFOCUSED_STATE_SET =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "get_android_app_Activity_FOCUSED_STATE_SET")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();
  static jni.JlObject get FOCUSED_STATE_SET =>
      jni.JlObject.fromRef(_getFOCUSED_STATE_SET());

  /// from: static public final int RESULT_CANCELED
  static const RESULT_CANCELED = 0;

  /// from: static public final int RESULT_FIRST_USER
  static const RESULT_FIRST_USER = 1;

  /// from: static public final int RESULT_OK
  static const RESULT_OK = -1;

  static final _ctor =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "android_app_Activity_new")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();

  /// from: public void <init>()
  Activity() : super.fromRef(_ctor());

  static final _getIntent = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
                  ffi.Pointer<ffi.Void>)>>("android_app_Activity_getIntent")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.content.Intent getIntent()
  content.Intent getIntent() => content.Intent.fromRef(_getIntent(reference));

  static final _setIntent = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("android_app_Activity_setIntent")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void setIntent(android.content.Intent newIntent)
  void setIntent(content.Intent newIntent) =>
      _setIntent(reference, newIntent.reference);

  static final _getApplication = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_Activity_getApplication")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public final android.app.Application getApplication()
  Application getApplication() =>
      Application.fromRef(_getApplication(reference));

  static final _isChild =
      jlookup<ffi.NativeFunction<ffi.Uint8 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_Activity_isChild")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public final boolean isChild()
  bool isChild() => _isChild(reference) != 0;

  static final _getParent = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
                  ffi.Pointer<ffi.Void>)>>("android_app_Activity_getParent")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public final android.app.Activity getParent()
  Activity getParent() => Activity.fromRef(_getParent(reference));

  static final _getWindowManager = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_Activity_getWindowManager")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.view.WindowManager getWindowManager()
  jni.JlObject getWindowManager() =>
      jni.JlObject.fromRef(_getWindowManager(reference));

  static final _getWindow = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
                  ffi.Pointer<ffi.Void>)>>("android_app_Activity_getWindow")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.view.Window getWindow()
  jni.JlObject getWindow() => jni.JlObject.fromRef(_getWindow(reference));

  static final _getLoaderManager = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_Activity_getLoaderManager")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.LoaderManager getLoaderManager()
  LoaderManager getLoaderManager() =>
      LoaderManager.fromRef(_getLoaderManager(reference));

  static final _getCurrentFocus = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_Activity_getCurrentFocus")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.view.View getCurrentFocus()
  jni.JlObject getCurrentFocus() =>
      jni.JlObject.fromRef(_getCurrentFocus(reference));

  static final _attachBaseContext = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Activity_attachBaseContext")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: protected void attachBaseContext(android.content.Context newBase)
  void attachBaseContext(content.Context newBase) =>
      _attachBaseContext(reference, newBase.reference);

  static final _onCreate = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("android_app_Activity_onCreate")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: protected void onCreate(android.os.Bundle savedInstanceState)
  void onCreate(os.Bundle savedInstanceState) =>
      _onCreate(reference, savedInstanceState.reference);

  static final _onCreate_1 = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("android_app_Activity_onCreate_1")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public void onCreate(android.os.Bundle savedInstanceState, android.os.PersistableBundle persistentState)
  void onCreate_1(
          os.Bundle savedInstanceState, os.PersistableBundle persistentState) =>
      _onCreate_1(
          reference, savedInstanceState.reference, persistentState.reference);

  static final _onRestoreInstanceState = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Activity_onRestoreInstanceState")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: protected void onRestoreInstanceState(android.os.Bundle savedInstanceState)
  void onRestoreInstanceState(os.Bundle savedInstanceState) =>
      _onRestoreInstanceState(reference, savedInstanceState.reference);

  static final _onRestoreInstanceState_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Activity_onRestoreInstanceState_1")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public void onRestoreInstanceState(android.os.Bundle savedInstanceState, android.os.PersistableBundle persistentState)
  void onRestoreInstanceState_1(
          os.Bundle savedInstanceState, os.PersistableBundle persistentState) =>
      _onRestoreInstanceState_1(
          reference, savedInstanceState.reference, persistentState.reference);

  static final _onPostCreate = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("android_app_Activity_onPostCreate")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: protected void onPostCreate(android.os.Bundle savedInstanceState)
  void onPostCreate(os.Bundle savedInstanceState) =>
      _onPostCreate(reference, savedInstanceState.reference);

  static final _onPostCreate_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Activity_onPostCreate_1")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public void onPostCreate(android.os.Bundle savedInstanceState, android.os.PersistableBundle persistentState)
  void onPostCreate_1(
          os.Bundle savedInstanceState, os.PersistableBundle persistentState) =>
      _onPostCreate_1(
          reference, savedInstanceState.reference, persistentState.reference);

  static final _onStart =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_Activity_onStart")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: protected void onStart()
  void onStart() => _onStart(reference);

  static final _onRestart =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_Activity_onRestart")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: protected void onRestart()
  void onRestart() => _onRestart(reference);

  static final _onStateNotSaved =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_Activity_onStateNotSaved")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void onStateNotSaved()
  void onStateNotSaved() => _onStateNotSaved(reference);

  static final _onResume =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_Activity_onResume")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: protected void onResume()
  void onResume() => _onResume(reference);

  static final _onPostResume =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_Activity_onPostResume")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: protected void onPostResume()
  void onPostResume() => _onPostResume(reference);

  static final _isVoiceInteraction =
      jlookup<ffi.NativeFunction<ffi.Uint8 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_Activity_isVoiceInteraction")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public boolean isVoiceInteraction()
  bool isVoiceInteraction() => _isVoiceInteraction(reference) != 0;

  static final _isVoiceInteractionRoot =
      jlookup<ffi.NativeFunction<ffi.Uint8 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_Activity_isVoiceInteractionRoot")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public boolean isVoiceInteractionRoot()
  bool isVoiceInteractionRoot() => _isVoiceInteractionRoot(reference) != 0;

  static final _getVoiceInteractor = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_Activity_getVoiceInteractor")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.VoiceInteractor getVoiceInteractor()
  VoiceInteractor getVoiceInteractor() =>
      VoiceInteractor.fromRef(_getVoiceInteractor(reference));

  static final _isLocalVoiceInteractionSupported =
      jlookup<ffi.NativeFunction<ffi.Uint8 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_Activity_isLocalVoiceInteractionSupported")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public boolean isLocalVoiceInteractionSupported()
  bool isLocalVoiceInteractionSupported() =>
      _isLocalVoiceInteractionSupported(reference) != 0;

  static final _startLocalVoiceInteraction = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Activity_startLocalVoiceInteraction")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void startLocalVoiceInteraction(android.os.Bundle privateOptions)
  void startLocalVoiceInteraction(os.Bundle privateOptions) =>
      _startLocalVoiceInteraction(reference, privateOptions.reference);

  static final _onLocalVoiceInteractionStarted =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_Activity_onLocalVoiceInteractionStarted")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void onLocalVoiceInteractionStarted()
  void onLocalVoiceInteractionStarted() =>
      _onLocalVoiceInteractionStarted(reference);

  static final _onLocalVoiceInteractionStopped =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_Activity_onLocalVoiceInteractionStopped")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void onLocalVoiceInteractionStopped()
  void onLocalVoiceInteractionStopped() =>
      _onLocalVoiceInteractionStopped(reference);

  static final _stopLocalVoiceInteraction =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_Activity_stopLocalVoiceInteraction")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void stopLocalVoiceInteraction()
  void stopLocalVoiceInteraction() => _stopLocalVoiceInteraction(reference);

  static final _onNewIntent = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("android_app_Activity_onNewIntent")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: protected void onNewIntent(android.content.Intent intent)
  void onNewIntent(content.Intent intent) =>
      _onNewIntent(reference, intent.reference);

  static final _onSaveInstanceState = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Activity_onSaveInstanceState")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: protected void onSaveInstanceState(android.os.Bundle outState)
  void onSaveInstanceState(os.Bundle outState) =>
      _onSaveInstanceState(reference, outState.reference);

  static final _onSaveInstanceState_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Activity_onSaveInstanceState_1")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public void onSaveInstanceState(android.os.Bundle outState, android.os.PersistableBundle outPersistentState)
  void onSaveInstanceState_1(
          os.Bundle outState, os.PersistableBundle outPersistentState) =>
      _onSaveInstanceState_1(
          reference, outState.reference, outPersistentState.reference);

  static final _onPause =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_Activity_onPause")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: protected void onPause()
  void onPause() => _onPause(reference);

  static final _onUserLeaveHint =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_Activity_onUserLeaveHint")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: protected void onUserLeaveHint()
  void onUserLeaveHint() => _onUserLeaveHint(reference);

  static final _onCreateThumbnail = jlookup<
              ffi.NativeFunction<
                  ffi.Uint8 Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Activity_onCreateThumbnail")
      .asFunction<
          int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public boolean onCreateThumbnail(android.graphics.Bitmap outBitmap, android.graphics.Canvas canvas)
  bool onCreateThumbnail(jni.JlObject outBitmap, jni.JlObject canvas) =>
      _onCreateThumbnail(reference, outBitmap.reference, canvas.reference) != 0;

  static final _onCreateDescription = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_Activity_onCreateDescription")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.CharSequence onCreateDescription()
  jni.JlObject onCreateDescription() =>
      jni.JlObject.fromRef(_onCreateDescription(reference));

  static final _onProvideAssistData = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Activity_onProvideAssistData")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void onProvideAssistData(android.os.Bundle data)
  void onProvideAssistData(os.Bundle data) =>
      _onProvideAssistData(reference, data.reference);

  static final _onProvideAssistContent = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Activity_onProvideAssistContent")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void onProvideAssistContent(android.app.assist.AssistContent outContent)
  void onProvideAssistContent(assist.AssistContent outContent) =>
      _onProvideAssistContent(reference, outContent.reference);

  static final _requestShowKeyboardShortcuts =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_Activity_requestShowKeyboardShortcuts")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: public final void requestShowKeyboardShortcuts()
  void requestShowKeyboardShortcuts() =>
      _requestShowKeyboardShortcuts(reference);

  static final _dismissKeyboardShortcutsHelper =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_Activity_dismissKeyboardShortcutsHelper")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: public final void dismissKeyboardShortcutsHelper()
  void dismissKeyboardShortcutsHelper() =>
      _dismissKeyboardShortcutsHelper(reference);

  static final _onProvideKeyboardShortcuts = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Int32)>>(
          "android_app_Activity_onProvideKeyboardShortcuts")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, int)>();

  /// from: public void onProvideKeyboardShortcuts(java.util.List<android.view.KeyboardShortcutGroup> data, android.view.Menu menu, int deviceId)
  void onProvideKeyboardShortcuts(
          jni.JlObject data, jni.JlObject menu, int deviceId) =>
      _onProvideKeyboardShortcuts(
          reference, data.reference, menu.reference, deviceId);

  static final _showAssist = jlookup<
          ffi.NativeFunction<
              ffi.Uint8 Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("android_app_Activity_showAssist")
      .asFunction<int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public boolean showAssist(android.os.Bundle args)
  bool showAssist(os.Bundle args) =>
      _showAssist(reference, args.reference) != 0;

  static final _onStop =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_Activity_onStop")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: protected void onStop()
  void onStop() => _onStop(reference);

  static final _onDestroy =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_Activity_onDestroy")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: protected void onDestroy()
  void onDestroy() => _onDestroy(reference);

  static final _reportFullyDrawn =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_Activity_reportFullyDrawn")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void reportFullyDrawn()
  void reportFullyDrawn() => _reportFullyDrawn(reference);

  static final _onMultiWindowModeChanged = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Uint8,
                      ffi.Pointer<ffi.Void>)>>(
          "android_app_Activity_onMultiWindowModeChanged")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, int, ffi.Pointer<ffi.Void>)>();

  /// from: public void onMultiWindowModeChanged(boolean isInMultiWindowMode, android.content.res.Configuration newConfig)
  void onMultiWindowModeChanged(
          bool isInMultiWindowMode, res.Configuration newConfig) =>
      _onMultiWindowModeChanged(
          reference, isInMultiWindowMode ? 1 : 0, newConfig.reference);

  static final _onMultiWindowModeChanged_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Uint8)>>(
          "android_app_Activity_onMultiWindowModeChanged_1")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public void onMultiWindowModeChanged(boolean isInMultiWindowMode)
  void onMultiWindowModeChanged_1(bool isInMultiWindowMode) =>
      _onMultiWindowModeChanged_1(reference, isInMultiWindowMode ? 1 : 0);

  static final _isInMultiWindowMode =
      jlookup<ffi.NativeFunction<ffi.Uint8 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_Activity_isInMultiWindowMode")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public boolean isInMultiWindowMode()
  bool isInMultiWindowMode() => _isInMultiWindowMode(reference) != 0;

  static final _onPictureInPictureModeChanged = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Uint8,
                      ffi.Pointer<ffi.Void>)>>(
          "android_app_Activity_onPictureInPictureModeChanged")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, int, ffi.Pointer<ffi.Void>)>();

  /// from: public void onPictureInPictureModeChanged(boolean isInPictureInPictureMode, android.content.res.Configuration newConfig)
  void onPictureInPictureModeChanged(
          bool isInPictureInPictureMode, res.Configuration newConfig) =>
      _onPictureInPictureModeChanged(
          reference, isInPictureInPictureMode ? 1 : 0, newConfig.reference);

  static final _onPictureInPictureModeChanged_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Uint8)>>(
          "android_app_Activity_onPictureInPictureModeChanged_1")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public void onPictureInPictureModeChanged(boolean isInPictureInPictureMode)
  void onPictureInPictureModeChanged_1(bool isInPictureInPictureMode) =>
      _onPictureInPictureModeChanged_1(
          reference, isInPictureInPictureMode ? 1 : 0);

  static final _isInPictureInPictureMode =
      jlookup<ffi.NativeFunction<ffi.Uint8 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_Activity_isInPictureInPictureMode")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public boolean isInPictureInPictureMode()
  bool isInPictureInPictureMode() => _isInPictureInPictureMode(reference) != 0;

  static final _enterPictureInPictureMode =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_Activity_enterPictureInPictureMode")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void enterPictureInPictureMode()
  void enterPictureInPictureMode() => _enterPictureInPictureMode(reference);

  static final _enterPictureInPictureMode_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Uint8 Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Activity_enterPictureInPictureMode_1")
      .asFunction<int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public boolean enterPictureInPictureMode(android.app.PictureInPictureParams params)
  bool enterPictureInPictureMode_1(PictureInPictureParams params) =>
      _enterPictureInPictureMode_1(reference, params.reference) != 0;

  static final _setPictureInPictureParams = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Activity_setPictureInPictureParams")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void setPictureInPictureParams(android.app.PictureInPictureParams params)
  void setPictureInPictureParams(PictureInPictureParams params) =>
      _setPictureInPictureParams(reference, params.reference);

  static final _getMaxNumPictureInPictureActions =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_Activity_getMaxNumPictureInPictureActions")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int getMaxNumPictureInPictureActions()
  int getMaxNumPictureInPictureActions() =>
      _getMaxNumPictureInPictureActions(reference);

  static final _onConfigurationChanged = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Activity_onConfigurationChanged")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void onConfigurationChanged(android.content.res.Configuration newConfig)
  void onConfigurationChanged(res.Configuration newConfig) =>
      _onConfigurationChanged(reference, newConfig.reference);

  static final _getChangingConfigurations =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_Activity_getChangingConfigurations")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int getChangingConfigurations()
  int getChangingConfigurations() => _getChangingConfigurations(reference);

  static final _getLastNonConfigurationInstance = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_Activity_getLastNonConfigurationInstance")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.Object getLastNonConfigurationInstance()
  jni.JlObject getLastNonConfigurationInstance() =>
      jni.JlObject.fromRef(_getLastNonConfigurationInstance(reference));

  static final _onRetainNonConfigurationInstance = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_Activity_onRetainNonConfigurationInstance")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.Object onRetainNonConfigurationInstance()
  jni.JlObject onRetainNonConfigurationInstance() =>
      jni.JlObject.fromRef(_onRetainNonConfigurationInstance(reference));

  static final _onLowMemory =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_Activity_onLowMemory")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void onLowMemory()
  void onLowMemory() => _onLowMemory(reference);

  static final _onTrimMemory = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_app_Activity_onTrimMemory")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public void onTrimMemory(int level)
  void onTrimMemory(int level) => _onTrimMemory(reference, level);

  static final _getFragmentManager = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_Activity_getFragmentManager")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.FragmentManager getFragmentManager()
  FragmentManager getFragmentManager() =>
      FragmentManager.fromRef(_getFragmentManager(reference));

  static final _onAttachFragment = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Activity_onAttachFragment")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void onAttachFragment(android.app.Fragment fragment)
  void onAttachFragment(Fragment fragment) =>
      _onAttachFragment(reference, fragment.reference);

  static final _managedQuery = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("android_app_Activity_managedQuery")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public final android.database.Cursor managedQuery(android.net.Uri uri, java.lang.String[] projection, java.lang.String selection, java.lang.String[] selectionArgs, java.lang.String sortOrder)
  jni.JlObject managedQuery(
          jni.JlObject uri,
          jni.JlObject projection,
          jni.JlString selection,
          jni.JlObject selectionArgs,
          jni.JlString sortOrder) =>
      jni.JlObject.fromRef(_managedQuery(
          reference,
          uri.reference,
          projection.reference,
          selection.reference,
          selectionArgs.reference,
          sortOrder.reference));

  static final _startManagingCursor = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Activity_startManagingCursor")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void startManagingCursor(android.database.Cursor c)
  void startManagingCursor(jni.JlObject c) =>
      _startManagingCursor(reference, c.reference);

  static final _stopManagingCursor = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Activity_stopManagingCursor")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void stopManagingCursor(android.database.Cursor c)
  void stopManagingCursor(jni.JlObject c) =>
      _stopManagingCursor(reference, c.reference);

  static final _getActionBar = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
                  ffi.Pointer<ffi.Void>)>>("android_app_Activity_getActionBar")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.ActionBar getActionBar()
  ActionBar getActionBar() => ActionBar.fromRef(_getActionBar(reference));

  static final _setActionBar = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("android_app_Activity_setActionBar")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void setActionBar(android.widget.Toolbar toolbar)
  void setActionBar(jni.JlObject toolbar) =>
      _setActionBar(reference, toolbar.reference);

  static final _setContentView = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_app_Activity_setContentView")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public void setContentView(int layoutResID)
  void setContentView(int layoutResID) =>
      _setContentView(reference, layoutResID);

  static final _setContentView_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Activity_setContentView_1")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void setContentView(android.view.View view)
  void setContentView_1(jni.JlObject view) =>
      _setContentView_1(reference, view.reference);

  static final _setContentView_2 = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Activity_setContentView_2")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public void setContentView(android.view.View view, android.view.ViewGroup.LayoutParams params)
  void setContentView_2(jni.JlObject view, jni.JlObject params) =>
      _setContentView_2(reference, view.reference, params.reference);

  static final _addContentView = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Activity_addContentView")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public void addContentView(android.view.View view, android.view.ViewGroup.LayoutParams params)
  void addContentView(jni.JlObject view, jni.JlObject params) =>
      _addContentView(reference, view.reference, params.reference);

  static final _getContentTransitionManager = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_Activity_getContentTransitionManager")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.transition.TransitionManager getContentTransitionManager()
  jni.JlObject getContentTransitionManager() =>
      jni.JlObject.fromRef(_getContentTransitionManager(reference));

  static final _setContentTransitionManager = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Activity_setContentTransitionManager")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void setContentTransitionManager(android.transition.TransitionManager tm)
  void setContentTransitionManager(jni.JlObject tm) =>
      _setContentTransitionManager(reference, tm.reference);

  static final _getContentScene = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_Activity_getContentScene")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.transition.Scene getContentScene()
  jni.JlObject getContentScene() =>
      jni.JlObject.fromRef(_getContentScene(reference));

  static final _setFinishOnTouchOutside = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  ffi.Uint8)>>("android_app_Activity_setFinishOnTouchOutside")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public void setFinishOnTouchOutside(boolean finish)
  void setFinishOnTouchOutside(bool finish) =>
      _setFinishOnTouchOutside(reference, finish ? 1 : 0);

  static final _setDefaultKeyMode = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_app_Activity_setDefaultKeyMode")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public final void setDefaultKeyMode(int mode)
  void setDefaultKeyMode(int mode) => _setDefaultKeyMode(reference, mode);

  static final _onKeyDown = jlookup<
          ffi.NativeFunction<
              ffi.Uint8 Function(ffi.Pointer<ffi.Void>, ffi.Int32,
                  ffi.Pointer<ffi.Void>)>>("android_app_Activity_onKeyDown")
      .asFunction<
          int Function(ffi.Pointer<ffi.Void>, int, ffi.Pointer<ffi.Void>)>();

  /// from: public boolean onKeyDown(int keyCode, android.view.KeyEvent event)
  bool onKeyDown(int keyCode, jni.JlObject event) =>
      _onKeyDown(reference, keyCode, event.reference) != 0;

  static final _onKeyLongPress = jlookup<
              ffi.NativeFunction<
                  ffi.Uint8 Function(ffi.Pointer<ffi.Void>, ffi.Int32,
                      ffi.Pointer<ffi.Void>)>>(
          "android_app_Activity_onKeyLongPress")
      .asFunction<
          int Function(ffi.Pointer<ffi.Void>, int, ffi.Pointer<ffi.Void>)>();

  /// from: public boolean onKeyLongPress(int keyCode, android.view.KeyEvent event)
  bool onKeyLongPress(int keyCode, jni.JlObject event) =>
      _onKeyLongPress(reference, keyCode, event.reference) != 0;

  static final _onKeyUp = jlookup<
          ffi.NativeFunction<
              ffi.Uint8 Function(ffi.Pointer<ffi.Void>, ffi.Int32,
                  ffi.Pointer<ffi.Void>)>>("android_app_Activity_onKeyUp")
      .asFunction<
          int Function(ffi.Pointer<ffi.Void>, int, ffi.Pointer<ffi.Void>)>();

  /// from: public boolean onKeyUp(int keyCode, android.view.KeyEvent event)
  bool onKeyUp(int keyCode, jni.JlObject event) =>
      _onKeyUp(reference, keyCode, event.reference) != 0;

  static final _onKeyMultiple = jlookup<
          ffi.NativeFunction<
              ffi.Uint8 Function(ffi.Pointer<ffi.Void>, ffi.Int32, ffi.Int32,
                  ffi.Pointer<ffi.Void>)>>("android_app_Activity_onKeyMultiple")
      .asFunction<
          int Function(
              ffi.Pointer<ffi.Void>, int, int, ffi.Pointer<ffi.Void>)>();

  /// from: public boolean onKeyMultiple(int keyCode, int repeatCount, android.view.KeyEvent event)
  bool onKeyMultiple(int keyCode, int repeatCount, jni.JlObject event) =>
      _onKeyMultiple(reference, keyCode, repeatCount, event.reference) != 0;

  static final _onBackPressed =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_Activity_onBackPressed")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void onBackPressed()
  void onBackPressed() => _onBackPressed(reference);

  static final _onKeyShortcut = jlookup<
          ffi.NativeFunction<
              ffi.Uint8 Function(ffi.Pointer<ffi.Void>, ffi.Int32,
                  ffi.Pointer<ffi.Void>)>>("android_app_Activity_onKeyShortcut")
      .asFunction<
          int Function(ffi.Pointer<ffi.Void>, int, ffi.Pointer<ffi.Void>)>();

  /// from: public boolean onKeyShortcut(int keyCode, android.view.KeyEvent event)
  bool onKeyShortcut(int keyCode, jni.JlObject event) =>
      _onKeyShortcut(reference, keyCode, event.reference) != 0;

  static final _onTouchEvent = jlookup<
          ffi.NativeFunction<
              ffi.Uint8 Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("android_app_Activity_onTouchEvent")
      .asFunction<int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public boolean onTouchEvent(android.view.MotionEvent event)
  bool onTouchEvent(jni.JlObject event) =>
      _onTouchEvent(reference, event.reference) != 0;

  static final _onTrackballEvent = jlookup<
              ffi.NativeFunction<
                  ffi.Uint8 Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Activity_onTrackballEvent")
      .asFunction<int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public boolean onTrackballEvent(android.view.MotionEvent event)
  bool onTrackballEvent(jni.JlObject event) =>
      _onTrackballEvent(reference, event.reference) != 0;

  static final _onGenericMotionEvent = jlookup<
              ffi.NativeFunction<
                  ffi.Uint8 Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Activity_onGenericMotionEvent")
      .asFunction<int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public boolean onGenericMotionEvent(android.view.MotionEvent event)
  bool onGenericMotionEvent(jni.JlObject event) =>
      _onGenericMotionEvent(reference, event.reference) != 0;

  static final _onUserInteraction =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_Activity_onUserInteraction")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void onUserInteraction()
  void onUserInteraction() => _onUserInteraction(reference);

  static final _onWindowAttributesChanged = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Activity_onWindowAttributesChanged")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void onWindowAttributesChanged(android.view.WindowManager.LayoutParams params)
  void onWindowAttributesChanged(jni.JlObject params) =>
      _onWindowAttributesChanged(reference, params.reference);

  static final _onContentChanged =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_Activity_onContentChanged")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void onContentChanged()
  void onContentChanged() => _onContentChanged(reference);

  static final _onWindowFocusChanged = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  ffi.Uint8)>>("android_app_Activity_onWindowFocusChanged")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public void onWindowFocusChanged(boolean hasFocus)
  void onWindowFocusChanged(bool hasFocus) =>
      _onWindowFocusChanged(reference, hasFocus ? 1 : 0);

  static final _onAttachedToWindow =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_Activity_onAttachedToWindow")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void onAttachedToWindow()
  void onAttachedToWindow() => _onAttachedToWindow(reference);

  static final _onDetachedFromWindow =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_Activity_onDetachedFromWindow")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void onDetachedFromWindow()
  void onDetachedFromWindow() => _onDetachedFromWindow(reference);

  static final _hasWindowFocus =
      jlookup<ffi.NativeFunction<ffi.Uint8 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_Activity_hasWindowFocus")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public boolean hasWindowFocus()
  bool hasWindowFocus() => _hasWindowFocus(reference) != 0;

  static final _dispatchKeyEvent = jlookup<
              ffi.NativeFunction<
                  ffi.Uint8 Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Activity_dispatchKeyEvent")
      .asFunction<int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public boolean dispatchKeyEvent(android.view.KeyEvent event)
  bool dispatchKeyEvent(jni.JlObject event) =>
      _dispatchKeyEvent(reference, event.reference) != 0;

  static final _dispatchKeyShortcutEvent = jlookup<
              ffi.NativeFunction<
                  ffi.Uint8 Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Activity_dispatchKeyShortcutEvent")
      .asFunction<int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public boolean dispatchKeyShortcutEvent(android.view.KeyEvent event)
  bool dispatchKeyShortcutEvent(jni.JlObject event) =>
      _dispatchKeyShortcutEvent(reference, event.reference) != 0;

  static final _dispatchTouchEvent = jlookup<
              ffi.NativeFunction<
                  ffi.Uint8 Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Activity_dispatchTouchEvent")
      .asFunction<int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public boolean dispatchTouchEvent(android.view.MotionEvent ev)
  bool dispatchTouchEvent(jni.JlObject ev) =>
      _dispatchTouchEvent(reference, ev.reference) != 0;

  static final _dispatchTrackballEvent = jlookup<
              ffi.NativeFunction<
                  ffi.Uint8 Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Activity_dispatchTrackballEvent")
      .asFunction<int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public boolean dispatchTrackballEvent(android.view.MotionEvent ev)
  bool dispatchTrackballEvent(jni.JlObject ev) =>
      _dispatchTrackballEvent(reference, ev.reference) != 0;

  static final _dispatchGenericMotionEvent = jlookup<
              ffi.NativeFunction<
                  ffi.Uint8 Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Activity_dispatchGenericMotionEvent")
      .asFunction<int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public boolean dispatchGenericMotionEvent(android.view.MotionEvent ev)
  bool dispatchGenericMotionEvent(jni.JlObject ev) =>
      _dispatchGenericMotionEvent(reference, ev.reference) != 0;

  static final _dispatchPopulateAccessibilityEvent = jlookup<
              ffi.NativeFunction<
                  ffi.Uint8 Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Activity_dispatchPopulateAccessibilityEvent")
      .asFunction<int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent event)
  bool dispatchPopulateAccessibilityEvent(jni.JlObject event) =>
      _dispatchPopulateAccessibilityEvent(reference, event.reference) != 0;

  static final _onCreatePanelView = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_app_Activity_onCreatePanelView")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public android.view.View onCreatePanelView(int featureId)
  jni.JlObject onCreatePanelView(int featureId) =>
      jni.JlObject.fromRef(_onCreatePanelView(reference, featureId));

  static final _onCreatePanelMenu = jlookup<
              ffi.NativeFunction<
                  ffi.Uint8 Function(ffi.Pointer<ffi.Void>, ffi.Int32,
                      ffi.Pointer<ffi.Void>)>>(
          "android_app_Activity_onCreatePanelMenu")
      .asFunction<
          int Function(ffi.Pointer<ffi.Void>, int, ffi.Pointer<ffi.Void>)>();

  /// from: public boolean onCreatePanelMenu(int featureId, android.view.Menu menu)
  bool onCreatePanelMenu(int featureId, jni.JlObject menu) =>
      _onCreatePanelMenu(reference, featureId, menu.reference) != 0;

  static final _onPreparePanel = jlookup<
              ffi.NativeFunction<
                  ffi.Uint8 Function(ffi.Pointer<ffi.Void>, ffi.Int32,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Activity_onPreparePanel")
      .asFunction<
          int Function(ffi.Pointer<ffi.Void>, int, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public boolean onPreparePanel(int featureId, android.view.View view, android.view.Menu menu)
  bool onPreparePanel(int featureId, jni.JlObject view, jni.JlObject menu) =>
      _onPreparePanel(reference, featureId, view.reference, menu.reference) !=
      0;

  static final _onMenuOpened = jlookup<
          ffi.NativeFunction<
              ffi.Uint8 Function(ffi.Pointer<ffi.Void>, ffi.Int32,
                  ffi.Pointer<ffi.Void>)>>("android_app_Activity_onMenuOpened")
      .asFunction<
          int Function(ffi.Pointer<ffi.Void>, int, ffi.Pointer<ffi.Void>)>();

  /// from: public boolean onMenuOpened(int featureId, android.view.Menu menu)
  bool onMenuOpened(int featureId, jni.JlObject menu) =>
      _onMenuOpened(reference, featureId, menu.reference) != 0;

  static final _onMenuItemSelected = jlookup<
              ffi.NativeFunction<
                  ffi.Uint8 Function(ffi.Pointer<ffi.Void>, ffi.Int32,
                      ffi.Pointer<ffi.Void>)>>(
          "android_app_Activity_onMenuItemSelected")
      .asFunction<
          int Function(ffi.Pointer<ffi.Void>, int, ffi.Pointer<ffi.Void>)>();

  /// from: public boolean onMenuItemSelected(int featureId, android.view.MenuItem item)
  bool onMenuItemSelected(int featureId, jni.JlObject item) =>
      _onMenuItemSelected(reference, featureId, item.reference) != 0;

  static final _onPanelClosed = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Int32,
                  ffi.Pointer<ffi.Void>)>>("android_app_Activity_onPanelClosed")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, int, ffi.Pointer<ffi.Void>)>();

  /// from: public void onPanelClosed(int featureId, android.view.Menu menu)
  void onPanelClosed(int featureId, jni.JlObject menu) =>
      _onPanelClosed(reference, featureId, menu.reference);

  static final _invalidateOptionsMenu =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_Activity_invalidateOptionsMenu")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void invalidateOptionsMenu()
  void invalidateOptionsMenu() => _invalidateOptionsMenu(reference);

  static final _onCreateOptionsMenu = jlookup<
              ffi.NativeFunction<
                  ffi.Uint8 Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Activity_onCreateOptionsMenu")
      .asFunction<int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public boolean onCreateOptionsMenu(android.view.Menu menu)
  bool onCreateOptionsMenu(jni.JlObject menu) =>
      _onCreateOptionsMenu(reference, menu.reference) != 0;

  static final _onPrepareOptionsMenu = jlookup<
              ffi.NativeFunction<
                  ffi.Uint8 Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Activity_onPrepareOptionsMenu")
      .asFunction<int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public boolean onPrepareOptionsMenu(android.view.Menu menu)
  bool onPrepareOptionsMenu(jni.JlObject menu) =>
      _onPrepareOptionsMenu(reference, menu.reference) != 0;

  static final _onOptionsItemSelected = jlookup<
              ffi.NativeFunction<
                  ffi.Uint8 Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Activity_onOptionsItemSelected")
      .asFunction<int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public boolean onOptionsItemSelected(android.view.MenuItem item)
  bool onOptionsItemSelected(jni.JlObject item) =>
      _onOptionsItemSelected(reference, item.reference) != 0;

  static final _onNavigateUp =
      jlookup<ffi.NativeFunction<ffi.Uint8 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_Activity_onNavigateUp")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public boolean onNavigateUp()
  bool onNavigateUp() => _onNavigateUp(reference) != 0;

  static final _onNavigateUpFromChild = jlookup<
              ffi.NativeFunction<
                  ffi.Uint8 Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Activity_onNavigateUpFromChild")
      .asFunction<int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public boolean onNavigateUpFromChild(android.app.Activity child)
  bool onNavigateUpFromChild(Activity child) =>
      _onNavigateUpFromChild(reference, child.reference) != 0;

  static final _onCreateNavigateUpTaskStack = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Activity_onCreateNavigateUpTaskStack")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void onCreateNavigateUpTaskStack(android.app.TaskStackBuilder builder)
  void onCreateNavigateUpTaskStack(TaskStackBuilder builder) =>
      _onCreateNavigateUpTaskStack(reference, builder.reference);

  static final _onPrepareNavigateUpTaskStack = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Activity_onPrepareNavigateUpTaskStack")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void onPrepareNavigateUpTaskStack(android.app.TaskStackBuilder builder)
  void onPrepareNavigateUpTaskStack(TaskStackBuilder builder) =>
      _onPrepareNavigateUpTaskStack(reference, builder.reference);

  static final _onOptionsMenuClosed = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Activity_onOptionsMenuClosed")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void onOptionsMenuClosed(android.view.Menu menu)
  void onOptionsMenuClosed(jni.JlObject menu) =>
      _onOptionsMenuClosed(reference, menu.reference);

  static final _openOptionsMenu =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_Activity_openOptionsMenu")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void openOptionsMenu()
  void openOptionsMenu() => _openOptionsMenu(reference);

  static final _closeOptionsMenu =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_Activity_closeOptionsMenu")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void closeOptionsMenu()
  void closeOptionsMenu() => _closeOptionsMenu(reference);

  static final _onCreateContextMenu = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>)>>(
          "android_app_Activity_onCreateContextMenu")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void onCreateContextMenu(android.view.ContextMenu menu, android.view.View v, android.view.ContextMenu.ContextMenuInfo menuInfo)
  void onCreateContextMenu(
          jni.JlObject menu, jni.JlObject v, jni.JlObject menuInfo) =>
      _onCreateContextMenu(
          reference, menu.reference, v.reference, menuInfo.reference);

  static final _registerForContextMenu = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Activity_registerForContextMenu")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void registerForContextMenu(android.view.View view)
  void registerForContextMenu(jni.JlObject view) =>
      _registerForContextMenu(reference, view.reference);

  static final _unregisterForContextMenu = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Activity_unregisterForContextMenu")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void unregisterForContextMenu(android.view.View view)
  void unregisterForContextMenu(jni.JlObject view) =>
      _unregisterForContextMenu(reference, view.reference);

  static final _openContextMenu = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Activity_openContextMenu")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void openContextMenu(android.view.View view)
  void openContextMenu(jni.JlObject view) =>
      _openContextMenu(reference, view.reference);

  static final _closeContextMenu =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_Activity_closeContextMenu")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void closeContextMenu()
  void closeContextMenu() => _closeContextMenu(reference);

  static final _onContextItemSelected = jlookup<
              ffi.NativeFunction<
                  ffi.Uint8 Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Activity_onContextItemSelected")
      .asFunction<int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public boolean onContextItemSelected(android.view.MenuItem item)
  bool onContextItemSelected(jni.JlObject item) =>
      _onContextItemSelected(reference, item.reference) != 0;

  static final _onContextMenuClosed = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Activity_onContextMenuClosed")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void onContextMenuClosed(android.view.Menu menu)
  void onContextMenuClosed(jni.JlObject menu) =>
      _onContextMenuClosed(reference, menu.reference);

  static final _onCreateDialog = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_app_Activity_onCreateDialog")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: protected android.app.Dialog onCreateDialog(int id)
  Dialog onCreateDialog(int id) =>
      Dialog.fromRef(_onCreateDialog(reference, id));

  static final _onCreateDialog_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                      ffi.Int32, ffi.Pointer<ffi.Void>)>>(
          "android_app_Activity_onCreateDialog_1")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, int, ffi.Pointer<ffi.Void>)>();

  /// from: protected android.app.Dialog onCreateDialog(int id, android.os.Bundle args)
  Dialog onCreateDialog_1(int id, os.Bundle args) =>
      Dialog.fromRef(_onCreateDialog_1(reference, id, args.reference));

  static final _onPrepareDialog = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Int32,
                      ffi.Pointer<ffi.Void>)>>(
          "android_app_Activity_onPrepareDialog")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, int, ffi.Pointer<ffi.Void>)>();

  /// from: protected void onPrepareDialog(int id, android.app.Dialog dialog)
  void onPrepareDialog(int id, Dialog dialog) =>
      _onPrepareDialog(reference, id, dialog.reference);

  static final _onPrepareDialog_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Int32,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Activity_onPrepareDialog_1")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, int, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: protected void onPrepareDialog(int id, android.app.Dialog dialog, android.os.Bundle args)
  void onPrepareDialog_1(int id, Dialog dialog, os.Bundle args) =>
      _onPrepareDialog_1(reference, id, dialog.reference, args.reference);

  static final _showDialog = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_app_Activity_showDialog")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public final void showDialog(int id)
  void showDialog(int id) => _showDialog(reference, id);

  static final _showDialog_1 = jlookup<
          ffi.NativeFunction<
              ffi.Uint8 Function(ffi.Pointer<ffi.Void>, ffi.Int32,
                  ffi.Pointer<ffi.Void>)>>("android_app_Activity_showDialog_1")
      .asFunction<
          int Function(ffi.Pointer<ffi.Void>, int, ffi.Pointer<ffi.Void>)>();

  /// from: public final boolean showDialog(int id, android.os.Bundle args)
  bool showDialog_1(int id, os.Bundle args) =>
      _showDialog_1(reference, id, args.reference) != 0;

  static final _dismissDialog = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_app_Activity_dismissDialog")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public final void dismissDialog(int id)
  void dismissDialog(int id) => _dismissDialog(reference, id);

  static final _removeDialog = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_app_Activity_removeDialog")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public final void removeDialog(int id)
  void removeDialog(int id) => _removeDialog(reference, id);

  static final _onSearchRequested = jlookup<
              ffi.NativeFunction<
                  ffi.Uint8 Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Activity_onSearchRequested")
      .asFunction<int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public boolean onSearchRequested(android.view.SearchEvent searchEvent)
  bool onSearchRequested(jni.JlObject searchEvent) =>
      _onSearchRequested(reference, searchEvent.reference) != 0;

  static final _onSearchRequested_1 =
      jlookup<ffi.NativeFunction<ffi.Uint8 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_Activity_onSearchRequested_1")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public boolean onSearchRequested()
  bool onSearchRequested_1() => _onSearchRequested_1(reference) != 0;

  static final _getSearchEvent = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_Activity_getSearchEvent")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public final android.view.SearchEvent getSearchEvent()
  jni.JlObject getSearchEvent() =>
      jni.JlObject.fromRef(_getSearchEvent(reference));

  static final _startSearch = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Uint8,
                  ffi.Pointer<ffi.Void>,
                  ffi.Uint8)>>("android_app_Activity_startSearch")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int,
              ffi.Pointer<ffi.Void>, int)>();

  /// from: public void startSearch(java.lang.String initialQuery, boolean selectInitialQuery, android.os.Bundle appSearchData, boolean globalSearch)
  void startSearch(jni.JlString initialQuery, bool selectInitialQuery,
          os.Bundle appSearchData, bool globalSearch) =>
      _startSearch(
          reference,
          initialQuery.reference,
          selectInitialQuery ? 1 : 0,
          appSearchData.reference,
          globalSearch ? 1 : 0);

  static final _triggerSearch = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("android_app_Activity_triggerSearch")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public void triggerSearch(java.lang.String query, android.os.Bundle appSearchData)
  void triggerSearch(jni.JlString query, os.Bundle appSearchData) =>
      _triggerSearch(reference, query.reference, appSearchData.reference);

  static final _takeKeyEvents = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  ffi.Uint8)>>("android_app_Activity_takeKeyEvents")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public void takeKeyEvents(boolean get)
  void takeKeyEvents(bool get_) => _takeKeyEvents(reference, get_ ? 1 : 0);

  static final _requestWindowFeature = jlookup<
          ffi.NativeFunction<
              ffi.Uint8 Function(ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_app_Activity_requestWindowFeature")
      .asFunction<int Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public final boolean requestWindowFeature(int featureId)
  bool requestWindowFeature(int featureId) =>
      _requestWindowFeature(reference, featureId) != 0;

  static final _setFeatureDrawableResource = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Int32, ffi.Int32)>>(
          "android_app_Activity_setFeatureDrawableResource")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int, int)>();

  /// from: public final void setFeatureDrawableResource(int featureId, int resId)
  void setFeatureDrawableResource(int featureId, int resId) =>
      _setFeatureDrawableResource(reference, featureId, resId);

  static final _setFeatureDrawableUri = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Int32,
                      ffi.Pointer<ffi.Void>)>>(
          "android_app_Activity_setFeatureDrawableUri")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, int, ffi.Pointer<ffi.Void>)>();

  /// from: public final void setFeatureDrawableUri(int featureId, android.net.Uri uri)
  void setFeatureDrawableUri(int featureId, jni.JlObject uri) =>
      _setFeatureDrawableUri(reference, featureId, uri.reference);

  static final _setFeatureDrawable = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Int32,
                      ffi.Pointer<ffi.Void>)>>(
          "android_app_Activity_setFeatureDrawable")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, int, ffi.Pointer<ffi.Void>)>();

  /// from: public final void setFeatureDrawable(int featureId, android.graphics.drawable.Drawable drawable)
  void setFeatureDrawable(int featureId, jni.JlObject drawable) =>
      _setFeatureDrawable(reference, featureId, drawable.reference);

  static final _setFeatureDrawableAlpha = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Int32,
                  ffi.Int32)>>("android_app_Activity_setFeatureDrawableAlpha")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int, int)>();

  /// from: public final void setFeatureDrawableAlpha(int featureId, int alpha)
  void setFeatureDrawableAlpha(int featureId, int alpha) =>
      _setFeatureDrawableAlpha(reference, featureId, alpha);

  static final _getLayoutInflater = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_Activity_getLayoutInflater")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.view.LayoutInflater getLayoutInflater()
  jni.JlObject getLayoutInflater() =>
      jni.JlObject.fromRef(_getLayoutInflater(reference));

  static final _getMenuInflater = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_Activity_getMenuInflater")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.view.MenuInflater getMenuInflater()
  jni.JlObject getMenuInflater() =>
      jni.JlObject.fromRef(_getMenuInflater(reference));

  static final _setTheme = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_app_Activity_setTheme")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public void setTheme(int resid)
  void setTheme(int resid) => _setTheme(reference, resid);

  static final _onApplyThemeResource = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Int32,
                  ffi.Uint8)>>("android_app_Activity_onApplyThemeResource")
      .asFunction<
          void Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int, int)>();

  /// from: protected void onApplyThemeResource(android.content.res.Resources.Theme theme, int resid, boolean first)
  void onApplyThemeResource(res.Resources_Theme theme, int resid, bool first) =>
      _onApplyThemeResource(reference, theme.reference, resid, first ? 1 : 0);

  static final _requestPermissions = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_app_Activity_requestPermissions")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public final void requestPermissions(java.lang.String[] permissions, int requestCode)
  void requestPermissions(jni.JlObject permissions, int requestCode) =>
      _requestPermissions(reference, permissions.reference, requestCode);

  static final _onRequestPermissionsResult = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Int32,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Activity_onRequestPermissionsResult")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, int, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public void onRequestPermissionsResult(int requestCode, java.lang.String[] permissions, int[] grantResults)
  void onRequestPermissionsResult(int requestCode, jni.JlObject permissions,
          jni.JlObject grantResults) =>
      _onRequestPermissionsResult(reference, requestCode, permissions.reference,
          grantResults.reference);

  static final _shouldShowRequestPermissionRationale = jlookup<
              ffi.NativeFunction<
                  ffi.Uint8 Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Activity_shouldShowRequestPermissionRationale")
      .asFunction<int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public boolean shouldShowRequestPermissionRationale(java.lang.String permission)
  bool shouldShowRequestPermissionRationale(jni.JlString permission) =>
      _shouldShowRequestPermissionRationale(reference, permission.reference) !=
      0;

  static final _startActivityForResult = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_app_Activity_startActivityForResult")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public void startActivityForResult(android.content.Intent intent, int requestCode)
  void startActivityForResult(content.Intent intent, int requestCode) =>
      _startActivityForResult(reference, intent.reference, requestCode);

  static final _startActivityForResult_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Int32,
                      ffi.Pointer<ffi.Void>)>>(
          "android_app_Activity_startActivityForResult_1")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int,
              ffi.Pointer<ffi.Void>)>();

  /// from: public void startActivityForResult(android.content.Intent intent, int requestCode, android.os.Bundle options)
  void startActivityForResult_1(
          content.Intent intent, int requestCode, os.Bundle options) =>
      _startActivityForResult_1(
          reference, intent.reference, requestCode, options.reference);

  static final _isActivityTransitionRunning =
      jlookup<ffi.NativeFunction<ffi.Uint8 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_Activity_isActivityTransitionRunning")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public boolean isActivityTransitionRunning()
  bool isActivityTransitionRunning() =>
      _isActivityTransitionRunning(reference) != 0;

  static final _startIntentSenderForResult = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Int32,
                      ffi.Pointer<ffi.Void>,
                      ffi.Int32,
                      ffi.Int32,
                      ffi.Int32)>>(
          "android_app_Activity_startIntentSenderForResult")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int,
              ffi.Pointer<ffi.Void>, int, int, int)>();

  /// from: public void startIntentSenderForResult(android.content.IntentSender intent, int requestCode, android.content.Intent fillInIntent, int flagsMask, int flagsValues, int extraFlags)
  void startIntentSenderForResult(
          content.IntentSender intent,
          int requestCode,
          content.Intent fillInIntent,
          int flagsMask,
          int flagsValues,
          int extraFlags) =>
      _startIntentSenderForResult(reference, intent.reference, requestCode,
          fillInIntent.reference, flagsMask, flagsValues, extraFlags);

  static final _startIntentSenderForResult_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Int32,
                      ffi.Pointer<ffi.Void>,
                      ffi.Int32,
                      ffi.Int32,
                      ffi.Int32,
                      ffi.Pointer<ffi.Void>)>>(
          "android_app_Activity_startIntentSenderForResult_1")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int,
              ffi.Pointer<ffi.Void>, int, int, int, ffi.Pointer<ffi.Void>)>();

  /// from: public void startIntentSenderForResult(android.content.IntentSender intent, int requestCode, android.content.Intent fillInIntent, int flagsMask, int flagsValues, int extraFlags, android.os.Bundle options)
  void startIntentSenderForResult_1(
          content.IntentSender intent,
          int requestCode,
          content.Intent fillInIntent,
          int flagsMask,
          int flagsValues,
          int extraFlags,
          os.Bundle options) =>
      _startIntentSenderForResult_1(
          reference,
          intent.reference,
          requestCode,
          fillInIntent.reference,
          flagsMask,
          flagsValues,
          extraFlags,
          options.reference);

  static final _startActivity = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("android_app_Activity_startActivity")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void startActivity(android.content.Intent intent)
  void startActivity(content.Intent intent) =>
      _startActivity(reference, intent.reference);

  static final _startActivity_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Activity_startActivity_1")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public void startActivity(android.content.Intent intent, android.os.Bundle options)
  void startActivity_1(content.Intent intent, os.Bundle options) =>
      _startActivity_1(reference, intent.reference, options.reference);

  static final _startActivities = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Activity_startActivities")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void startActivities(android.content.Intent[] intents)
  void startActivities(jni.JlObject intents) =>
      _startActivities(reference, intents.reference);

  static final _startActivities_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Activity_startActivities_1")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public void startActivities(android.content.Intent[] intents, android.os.Bundle options)
  void startActivities_1(jni.JlObject intents, os.Bundle options) =>
      _startActivities_1(reference, intents.reference, options.reference);

  static final _startIntentSender = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Int32,
                  ffi.Int32,
                  ffi.Int32)>>("android_app_Activity_startIntentSender")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, int, int, int)>();

  /// from: public void startIntentSender(android.content.IntentSender intent, android.content.Intent fillInIntent, int flagsMask, int flagsValues, int extraFlags)
  void startIntentSender(
          content.IntentSender intent,
          content.Intent fillInIntent,
          int flagsMask,
          int flagsValues,
          int extraFlags) =>
      _startIntentSender(reference, intent.reference, fillInIntent.reference,
          flagsMask, flagsValues, extraFlags);

  static final _startIntentSender_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Int32,
                      ffi.Int32,
                      ffi.Int32,
                      ffi.Pointer<ffi.Void>)>>(
          "android_app_Activity_startIntentSender_1")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, int, int, int, ffi.Pointer<ffi.Void>)>();

  /// from: public void startIntentSender(android.content.IntentSender intent, android.content.Intent fillInIntent, int flagsMask, int flagsValues, int extraFlags, android.os.Bundle options)
  void startIntentSender_1(
          content.IntentSender intent,
          content.Intent fillInIntent,
          int flagsMask,
          int flagsValues,
          int extraFlags,
          os.Bundle options) =>
      _startIntentSender_1(reference, intent.reference, fillInIntent.reference,
          flagsMask, flagsValues, extraFlags, options.reference);

  static final _startActivityIfNeeded = jlookup<
          ffi.NativeFunction<
              ffi.Uint8 Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_app_Activity_startActivityIfNeeded")
      .asFunction<
          int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public boolean startActivityIfNeeded(android.content.Intent intent, int requestCode)
  bool startActivityIfNeeded(content.Intent intent, int requestCode) =>
      _startActivityIfNeeded(reference, intent.reference, requestCode) != 0;

  static final _startActivityIfNeeded_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Uint8 Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Int32,
                      ffi.Pointer<ffi.Void>)>>(
          "android_app_Activity_startActivityIfNeeded_1")
      .asFunction<
          int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int,
              ffi.Pointer<ffi.Void>)>();

  /// from: public boolean startActivityIfNeeded(android.content.Intent intent, int requestCode, android.os.Bundle options)
  bool startActivityIfNeeded_1(
          content.Intent intent, int requestCode, os.Bundle options) =>
      _startActivityIfNeeded_1(
          reference, intent.reference, requestCode, options.reference) !=
      0;

  static final _startNextMatchingActivity = jlookup<
              ffi.NativeFunction<
                  ffi.Uint8 Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Activity_startNextMatchingActivity")
      .asFunction<int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public boolean startNextMatchingActivity(android.content.Intent intent)
  bool startNextMatchingActivity(content.Intent intent) =>
      _startNextMatchingActivity(reference, intent.reference) != 0;

  static final _startNextMatchingActivity_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Uint8 Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Activity_startNextMatchingActivity_1")
      .asFunction<
          int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public boolean startNextMatchingActivity(android.content.Intent intent, android.os.Bundle options)
  bool startNextMatchingActivity_1(content.Intent intent, os.Bundle options) =>
      _startNextMatchingActivity_1(
          reference, intent.reference, options.reference) !=
      0;

  static final _startActivityFromChild = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_app_Activity_startActivityFromChild")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, int)>();

  /// from: public void startActivityFromChild(android.app.Activity child, android.content.Intent intent, int requestCode)
  void startActivityFromChild(
          Activity child, content.Intent intent, int requestCode) =>
      _startActivityFromChild(
          reference, child.reference, intent.reference, requestCode);

  static final _startActivityFromChild_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Int32,
                      ffi.Pointer<ffi.Void>)>>(
          "android_app_Activity_startActivityFromChild_1")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, int, ffi.Pointer<ffi.Void>)>();

  /// from: public void startActivityFromChild(android.app.Activity child, android.content.Intent intent, int requestCode, android.os.Bundle options)
  void startActivityFromChild_1(Activity child, content.Intent intent,
          int requestCode, os.Bundle options) =>
      _startActivityFromChild_1(reference, child.reference, intent.reference,
          requestCode, options.reference);

  static final _startActivityFromFragment = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_app_Activity_startActivityFromFragment")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, int)>();

  /// from: public void startActivityFromFragment(android.app.Fragment fragment, android.content.Intent intent, int requestCode)
  void startActivityFromFragment(
          Fragment fragment, content.Intent intent, int requestCode) =>
      _startActivityFromFragment(
          reference, fragment.reference, intent.reference, requestCode);

  static final _startActivityFromFragment_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Int32,
                      ffi.Pointer<ffi.Void>)>>(
          "android_app_Activity_startActivityFromFragment_1")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, int, ffi.Pointer<ffi.Void>)>();

  /// from: public void startActivityFromFragment(android.app.Fragment fragment, android.content.Intent intent, int requestCode, android.os.Bundle options)
  void startActivityFromFragment_1(Fragment fragment, content.Intent intent,
          int requestCode, os.Bundle options) =>
      _startActivityFromFragment_1(reference, fragment.reference,
          intent.reference, requestCode, options.reference);

  static final _startIntentSenderFromChild = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Int32,
                      ffi.Pointer<ffi.Void>,
                      ffi.Int32,
                      ffi.Int32,
                      ffi.Int32)>>(
          "android_app_Activity_startIntentSenderFromChild")
      .asFunction<
          void Function(
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              int,
              ffi.Pointer<ffi.Void>,
              int,
              int,
              int)>();

  /// from: public void startIntentSenderFromChild(android.app.Activity child, android.content.IntentSender intent, int requestCode, android.content.Intent fillInIntent, int flagsMask, int flagsValues, int extraFlags)
  void startIntentSenderFromChild(
          Activity child,
          content.IntentSender intent,
          int requestCode,
          content.Intent fillInIntent,
          int flagsMask,
          int flagsValues,
          int extraFlags) =>
      _startIntentSenderFromChild(
          reference,
          child.reference,
          intent.reference,
          requestCode,
          fillInIntent.reference,
          flagsMask,
          flagsValues,
          extraFlags);

  static final _startIntentSenderFromChild_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Int32,
                      ffi.Pointer<ffi.Void>,
                      ffi.Int32,
                      ffi.Int32,
                      ffi.Int32,
                      ffi.Pointer<ffi.Void>)>>(
          "android_app_Activity_startIntentSenderFromChild_1")
      .asFunction<
          void Function(
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              int,
              ffi.Pointer<ffi.Void>,
              int,
              int,
              int,
              ffi.Pointer<ffi.Void>)>();

  /// from: public void startIntentSenderFromChild(android.app.Activity child, android.content.IntentSender intent, int requestCode, android.content.Intent fillInIntent, int flagsMask, int flagsValues, int extraFlags, android.os.Bundle options)
  void startIntentSenderFromChild_1(
          Activity child,
          content.IntentSender intent,
          int requestCode,
          content.Intent fillInIntent,
          int flagsMask,
          int flagsValues,
          int extraFlags,
          os.Bundle options) =>
      _startIntentSenderFromChild_1(
          reference,
          child.reference,
          intent.reference,
          requestCode,
          fillInIntent.reference,
          flagsMask,
          flagsValues,
          extraFlags,
          options.reference);

  static final _overridePendingTransition = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Int32,
                  ffi.Int32)>>("android_app_Activity_overridePendingTransition")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int, int)>();

  /// from: public void overridePendingTransition(int enterAnim, int exitAnim)
  void overridePendingTransition(int enterAnim, int exitAnim) =>
      _overridePendingTransition(reference, enterAnim, exitAnim);

  static final _setResult = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_app_Activity_setResult")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public final void setResult(int resultCode)
  void setResult(int resultCode) => _setResult(reference, resultCode);

  static final _setResult_1 = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Int32,
                  ffi.Pointer<ffi.Void>)>>("android_app_Activity_setResult_1")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, int, ffi.Pointer<ffi.Void>)>();

  /// from: public final void setResult(int resultCode, android.content.Intent data)
  void setResult_1(int resultCode, content.Intent data) =>
      _setResult_1(reference, resultCode, data.reference);

  static final _getReferrer = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
                  ffi.Pointer<ffi.Void>)>>("android_app_Activity_getReferrer")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.net.Uri getReferrer()
  jni.JlObject getReferrer() => jni.JlObject.fromRef(_getReferrer(reference));

  static final _onProvideReferrer = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_Activity_onProvideReferrer")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.net.Uri onProvideReferrer()
  jni.JlObject onProvideReferrer() =>
      jni.JlObject.fromRef(_onProvideReferrer(reference));

  static final _getCallingPackage = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_Activity_getCallingPackage")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.String getCallingPackage()
  jni.JlString getCallingPackage() =>
      jni.JlString.fromRef(_getCallingPackage(reference));

  static final _getCallingActivity = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_Activity_getCallingActivity")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.content.ComponentName getCallingActivity()
  content.ComponentName getCallingActivity() =>
      content.ComponentName.fromRef(_getCallingActivity(reference));

  static final _setVisible = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  ffi.Uint8)>>("android_app_Activity_setVisible")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public void setVisible(boolean visible)
  void setVisible(bool visible) => _setVisible(reference, visible ? 1 : 0);

  static final _isFinishing =
      jlookup<ffi.NativeFunction<ffi.Uint8 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_Activity_isFinishing")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public boolean isFinishing()
  bool isFinishing() => _isFinishing(reference) != 0;

  static final _isDestroyed =
      jlookup<ffi.NativeFunction<ffi.Uint8 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_Activity_isDestroyed")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public boolean isDestroyed()
  bool isDestroyed() => _isDestroyed(reference) != 0;

  static final _isChangingConfigurations =
      jlookup<ffi.NativeFunction<ffi.Uint8 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_Activity_isChangingConfigurations")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public boolean isChangingConfigurations()
  bool isChangingConfigurations() => _isChangingConfigurations(reference) != 0;

  static final _recreate =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_Activity_recreate")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void recreate()
  void recreate() => _recreate(reference);

  static final _finish =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_Activity_finish")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void finish()
  void finish() => _finish(reference);

  static final _finishAffinity =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_Activity_finishAffinity")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void finishAffinity()
  void finishAffinity() => _finishAffinity(reference);

  static final _finishFromChild = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Activity_finishFromChild")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void finishFromChild(android.app.Activity child)
  void finishFromChild(Activity child) =>
      _finishFromChild(reference, child.reference);

  static final _finishAfterTransition =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_Activity_finishAfterTransition")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void finishAfterTransition()
  void finishAfterTransition() => _finishAfterTransition(reference);

  static final _finishActivity = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_app_Activity_finishActivity")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public void finishActivity(int requestCode)
  void finishActivity(int requestCode) =>
      _finishActivity(reference, requestCode);

  static final _finishActivityFromChild = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_app_Activity_finishActivityFromChild")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public void finishActivityFromChild(android.app.Activity child, int requestCode)
  void finishActivityFromChild(Activity child, int requestCode) =>
      _finishActivityFromChild(reference, child.reference, requestCode);

  static final _finishAndRemoveTask =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_Activity_finishAndRemoveTask")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void finishAndRemoveTask()
  void finishAndRemoveTask() => _finishAndRemoveTask(reference);

  static final _releaseInstance =
      jlookup<ffi.NativeFunction<ffi.Uint8 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_Activity_releaseInstance")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public boolean releaseInstance()
  bool releaseInstance() => _releaseInstance(reference) != 0;

  static final _onActivityResult = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Int32, ffi.Int32,
                      ffi.Pointer<ffi.Void>)>>(
          "android_app_Activity_onActivityResult")
      .asFunction<
          void Function(
              ffi.Pointer<ffi.Void>, int, int, ffi.Pointer<ffi.Void>)>();

  /// from: protected void onActivityResult(int requestCode, int resultCode, android.content.Intent data)
  void onActivityResult(int requestCode, int resultCode, content.Intent data) =>
      _onActivityResult(reference, requestCode, resultCode, data.reference);

  static final _onActivityReenter = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Int32,
                      ffi.Pointer<ffi.Void>)>>(
          "android_app_Activity_onActivityReenter")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, int, ffi.Pointer<ffi.Void>)>();

  /// from: public void onActivityReenter(int resultCode, android.content.Intent data)
  void onActivityReenter(int resultCode, content.Intent data) =>
      _onActivityReenter(reference, resultCode, data.reference);

  static final _createPendingResult = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Int32,
                  ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_app_Activity_createPendingResult")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, int, ffi.Pointer<ffi.Void>, int)>();

  /// from: public android.app.PendingIntent createPendingResult(int requestCode, android.content.Intent data, int flags)
  PendingIntent createPendingResult(
          int requestCode, content.Intent data, int flags) =>
      PendingIntent.fromRef(
          _createPendingResult(reference, requestCode, data.reference, flags));

  static final _setRequestedOrientation = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_app_Activity_setRequestedOrientation")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public void setRequestedOrientation(int requestedOrientation)
  void setRequestedOrientation(int requestedOrientation) =>
      _setRequestedOrientation(reference, requestedOrientation);

  static final _getRequestedOrientation =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_Activity_getRequestedOrientation")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int getRequestedOrientation()
  int getRequestedOrientation() => _getRequestedOrientation(reference);

  static final _getTaskId =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_Activity_getTaskId")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int getTaskId()
  int getTaskId() => _getTaskId(reference);

  static final _isTaskRoot =
      jlookup<ffi.NativeFunction<ffi.Uint8 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_Activity_isTaskRoot")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public boolean isTaskRoot()
  bool isTaskRoot() => _isTaskRoot(reference) != 0;

  static final _moveTaskToBack = jlookup<
          ffi.NativeFunction<
              ffi.Uint8 Function(ffi.Pointer<ffi.Void>,
                  ffi.Uint8)>>("android_app_Activity_moveTaskToBack")
      .asFunction<int Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public boolean moveTaskToBack(boolean nonRoot)
  bool moveTaskToBack(bool nonRoot) =>
      _moveTaskToBack(reference, nonRoot ? 1 : 0) != 0;

  static final _getLocalClassName = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_Activity_getLocalClassName")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.String getLocalClassName()
  jni.JlString getLocalClassName() =>
      jni.JlString.fromRef(_getLocalClassName(reference));

  static final _getComponentName = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_Activity_getComponentName")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.content.ComponentName getComponentName()
  content.ComponentName getComponentName() =>
      content.ComponentName.fromRef(_getComponentName(reference));

  static final _getPreferences = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_app_Activity_getPreferences")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public android.content.SharedPreferences getPreferences(int mode)
  content.SharedPreferences getPreferences(int mode) =>
      content.SharedPreferences.fromRef(_getPreferences(reference, mode));

  static final _getSystemService = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Activity_getSystemService")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.Object getSystemService(java.lang.String name)
  jni.JlObject getSystemService(jni.JlString name) =>
      jni.JlObject.fromRef(_getSystemService(reference, name.reference));

  static final _setTitle = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("android_app_Activity_setTitle")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void setTitle(java.lang.CharSequence title)
  void setTitle(jni.JlObject title) => _setTitle(reference, title.reference);

  static final _setTitle_1 = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_app_Activity_setTitle_1")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public void setTitle(int titleId)
  void setTitle_1(int titleId) => _setTitle_1(reference, titleId);

  static final _setTitleColor = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_app_Activity_setTitleColor")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public void setTitleColor(int textColor)
  void setTitleColor(int textColor) => _setTitleColor(reference, textColor);

  static final _getTitle = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
                  ffi.Pointer<ffi.Void>)>>("android_app_Activity_getTitle")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public final java.lang.CharSequence getTitle()
  jni.JlObject getTitle() => jni.JlObject.fromRef(_getTitle(reference));

  static final _getTitleColor =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_Activity_getTitleColor")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public final int getTitleColor()
  int getTitleColor() => _getTitleColor(reference);

  static final _onTitleChanged = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_app_Activity_onTitleChanged")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: protected void onTitleChanged(java.lang.CharSequence title, int color)
  void onTitleChanged(jni.JlObject title, int color) =>
      _onTitleChanged(reference, title.reference, color);

  static final _onChildTitleChanged = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Activity_onChildTitleChanged")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: protected void onChildTitleChanged(android.app.Activity childActivity, java.lang.CharSequence title)
  void onChildTitleChanged(Activity childActivity, jni.JlObject title) =>
      _onChildTitleChanged(reference, childActivity.reference, title.reference);

  static final _setTaskDescription = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Activity_setTaskDescription")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void setTaskDescription(android.app.ActivityManager.TaskDescription taskDescription)
  void setTaskDescription(ActivityManager_TaskDescription taskDescription) =>
      _setTaskDescription(reference, taskDescription.reference);

  static final _setProgressBarVisibility = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  ffi.Uint8)>>("android_app_Activity_setProgressBarVisibility")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public final void setProgressBarVisibility(boolean visible)
  void setProgressBarVisibility(bool visible) =>
      _setProgressBarVisibility(reference, visible ? 1 : 0);

  static final _setProgressBarIndeterminateVisibility = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Uint8)>>(
          "android_app_Activity_setProgressBarIndeterminateVisibility")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public final void setProgressBarIndeterminateVisibility(boolean visible)
  void setProgressBarIndeterminateVisibility(bool visible) =>
      _setProgressBarIndeterminateVisibility(reference, visible ? 1 : 0);

  static final _setProgressBarIndeterminate = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Uint8)>>(
          "android_app_Activity_setProgressBarIndeterminate")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public final void setProgressBarIndeterminate(boolean indeterminate)
  void setProgressBarIndeterminate(bool indeterminate) =>
      _setProgressBarIndeterminate(reference, indeterminate ? 1 : 0);

  static final _setProgress = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_app_Activity_setProgress")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public final void setProgress(int progress)
  void setProgress(int progress) => _setProgress(reference, progress);

  static final _setSecondaryProgress = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_app_Activity_setSecondaryProgress")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public final void setSecondaryProgress(int secondaryProgress)
  void setSecondaryProgress(int secondaryProgress) =>
      _setSecondaryProgress(reference, secondaryProgress);

  static final _setVolumeControlStream = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_app_Activity_setVolumeControlStream")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public final void setVolumeControlStream(int streamType)
  void setVolumeControlStream(int streamType) =>
      _setVolumeControlStream(reference, streamType);

  static final _getVolumeControlStream =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_Activity_getVolumeControlStream")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public final int getVolumeControlStream()
  int getVolumeControlStream() => _getVolumeControlStream(reference);

  static final _setMediaController = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Activity_setMediaController")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public final void setMediaController(android.media.session.MediaController controller)
  void setMediaController(jni.JlObject controller) =>
      _setMediaController(reference, controller.reference);

  static final _getMediaController = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_Activity_getMediaController")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public final android.media.session.MediaController getMediaController()
  jni.JlObject getMediaController() =>
      jni.JlObject.fromRef(_getMediaController(reference));

  static final _runOnUiThread = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("android_app_Activity_runOnUiThread")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public final void runOnUiThread(java.lang.Runnable action)
  void runOnUiThread(jni.JlObject action) =>
      _runOnUiThread(reference, action.reference);

  static final _onCreateView = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("android_app_Activity_onCreateView")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public android.view.View onCreateView(java.lang.String name, android.content.Context context, android.util.AttributeSet attrs)
  jni.JlObject onCreateView(
          jni.JlString name, content.Context context, jni.JlObject attrs) =>
      jni.JlObject.fromRef(_onCreateView(
          reference, name.reference, context.reference, attrs.reference));

  static final _onCreateView_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>)>>(
          "android_app_Activity_onCreateView_1")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public android.view.View onCreateView(android.view.View parent, java.lang.String name, android.content.Context context, android.util.AttributeSet attrs)
  jni.JlObject onCreateView_1(jni.JlObject parent, jni.JlString name,
          content.Context context, jni.JlObject attrs) =>
      jni.JlObject.fromRef(_onCreateView_1(reference, parent.reference,
          name.reference, context.reference, attrs.reference));

  static final _dump = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("android_app_Activity_dump")
      .asFunction<
          void Function(
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public void dump(java.lang.String prefix, java.io.FileDescriptor fd, java.io.PrintWriter writer, java.lang.String[] args)
  void dump(jni.JlString prefix, jni.JlObject fd, jni.JlObject writer,
          jni.JlObject args) =>
      _dump(reference, prefix.reference, fd.reference, writer.reference,
          args.reference);

  static final _isImmersive =
      jlookup<ffi.NativeFunction<ffi.Uint8 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_Activity_isImmersive")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public boolean isImmersive()
  bool isImmersive() => _isImmersive(reference) != 0;

  static final _requestVisibleBehind = jlookup<
          ffi.NativeFunction<
              ffi.Uint8 Function(ffi.Pointer<ffi.Void>,
                  ffi.Uint8)>>("android_app_Activity_requestVisibleBehind")
      .asFunction<int Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public boolean requestVisibleBehind(boolean visible)
  bool requestVisibleBehind(bool visible) =>
      _requestVisibleBehind(reference, visible ? 1 : 0) != 0;

  static final _onVisibleBehindCanceled =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_Activity_onVisibleBehindCanceled")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void onVisibleBehindCanceled()
  void onVisibleBehindCanceled() => _onVisibleBehindCanceled(reference);

  static final _onEnterAnimationComplete =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_Activity_onEnterAnimationComplete")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void onEnterAnimationComplete()
  void onEnterAnimationComplete() => _onEnterAnimationComplete(reference);

  static final _setImmersive = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  ffi.Uint8)>>("android_app_Activity_setImmersive")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public void setImmersive(boolean i)
  void setImmersive(bool i) => _setImmersive(reference, i ? 1 : 0);

  static final _setVrModeEnabled = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Uint8,
                      ffi.Pointer<ffi.Void>)>>(
          "android_app_Activity_setVrModeEnabled")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, int, ffi.Pointer<ffi.Void>)>();

  /// from: public void setVrModeEnabled(boolean enabled, android.content.ComponentName requestedComponent)
  void setVrModeEnabled(
          bool enabled, content.ComponentName requestedComponent) =>
      _setVrModeEnabled(
          reference, enabled ? 1 : 0, requestedComponent.reference);

  static final _startActionMode = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Activity_startActionMode")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.view.ActionMode startActionMode(android.view.ActionMode.Callback callback)
  jni.JlObject startActionMode(jni.JlObject callback) =>
      jni.JlObject.fromRef(_startActionMode(reference, callback.reference));

  static final _startActionMode_1 = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_app_Activity_startActionMode_1")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public android.view.ActionMode startActionMode(android.view.ActionMode.Callback callback, int type)
  jni.JlObject startActionMode_1(jni.JlObject callback, int type) =>
      jni.JlObject.fromRef(
          _startActionMode_1(reference, callback.reference, type));

  static final _onWindowStartingActionMode = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Activity_onWindowStartingActionMode")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode.Callback callback)
  jni.JlObject onWindowStartingActionMode(jni.JlObject callback) =>
      jni.JlObject.fromRef(
          _onWindowStartingActionMode(reference, callback.reference));

  static final _onWindowStartingActionMode_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "android_app_Activity_onWindowStartingActionMode_1")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode.Callback callback, int type)
  jni.JlObject onWindowStartingActionMode_1(jni.JlObject callback, int type) =>
      jni.JlObject.fromRef(
          _onWindowStartingActionMode_1(reference, callback.reference, type));

  static final _onActionModeStarted = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Activity_onActionModeStarted")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void onActionModeStarted(android.view.ActionMode mode)
  void onActionModeStarted(jni.JlObject mode) =>
      _onActionModeStarted(reference, mode.reference);

  static final _onActionModeFinished = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Activity_onActionModeFinished")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void onActionModeFinished(android.view.ActionMode mode)
  void onActionModeFinished(jni.JlObject mode) =>
      _onActionModeFinished(reference, mode.reference);

  static final _shouldUpRecreateTask = jlookup<
              ffi.NativeFunction<
                  ffi.Uint8 Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Activity_shouldUpRecreateTask")
      .asFunction<int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public boolean shouldUpRecreateTask(android.content.Intent targetIntent)
  bool shouldUpRecreateTask(content.Intent targetIntent) =>
      _shouldUpRecreateTask(reference, targetIntent.reference) != 0;

  static final _navigateUpTo = jlookup<
          ffi.NativeFunction<
              ffi.Uint8 Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("android_app_Activity_navigateUpTo")
      .asFunction<int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public boolean navigateUpTo(android.content.Intent upIntent)
  bool navigateUpTo(content.Intent upIntent) =>
      _navigateUpTo(reference, upIntent.reference) != 0;

  static final _navigateUpToFromChild = jlookup<
              ffi.NativeFunction<
                  ffi.Uint8 Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Activity_navigateUpToFromChild")
      .asFunction<
          int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public boolean navigateUpToFromChild(android.app.Activity child, android.content.Intent upIntent)
  bool navigateUpToFromChild(Activity child, content.Intent upIntent) =>
      _navigateUpToFromChild(reference, child.reference, upIntent.reference) !=
      0;

  static final _getParentActivityIntent = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_Activity_getParentActivityIntent")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.content.Intent getParentActivityIntent()
  content.Intent getParentActivityIntent() =>
      content.Intent.fromRef(_getParentActivityIntent(reference));

  static final _setEnterSharedElementCallback = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Activity_setEnterSharedElementCallback")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void setEnterSharedElementCallback(android.app.SharedElementCallback callback)
  void setEnterSharedElementCallback(SharedElementCallback callback) =>
      _setEnterSharedElementCallback(reference, callback.reference);

  static final _setExitSharedElementCallback = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Activity_setExitSharedElementCallback")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void setExitSharedElementCallback(android.app.SharedElementCallback callback)
  void setExitSharedElementCallback(SharedElementCallback callback) =>
      _setExitSharedElementCallback(reference, callback.reference);

  static final _postponeEnterTransition =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_Activity_postponeEnterTransition")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void postponeEnterTransition()
  void postponeEnterTransition() => _postponeEnterTransition(reference);

  static final _startPostponedEnterTransition =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_Activity_startPostponedEnterTransition")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void startPostponedEnterTransition()
  void startPostponedEnterTransition() =>
      _startPostponedEnterTransition(reference);

  static final _requestDragAndDropPermissions = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Activity_requestDragAndDropPermissions")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.view.DragAndDropPermissions requestDragAndDropPermissions(android.view.DragEvent event)
  jni.JlObject requestDragAndDropPermissions(jni.JlObject event) =>
      jni.JlObject.fromRef(
          _requestDragAndDropPermissions(reference, event.reference));

  static final _startLockTask =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_Activity_startLockTask")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void startLockTask()
  void startLockTask() => _startLockTask(reference);

  static final _stopLockTask =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_Activity_stopLockTask")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void stopLockTask()
  void stopLockTask() => _stopLockTask(reference);

  static final _showLockTaskEscapeMessage =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_Activity_showLockTaskEscapeMessage")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void showLockTaskEscapeMessage()
  void showLockTaskEscapeMessage() => _showLockTaskEscapeMessage(reference);

  static final _setShowWhenLocked = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  ffi.Uint8)>>("android_app_Activity_setShowWhenLocked")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public void setShowWhenLocked(boolean showWhenLocked)
  void setShowWhenLocked(bool showWhenLocked) =>
      _setShowWhenLocked(reference, showWhenLocked ? 1 : 0);

  static final _setTurnScreenOn = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  ffi.Uint8)>>("android_app_Activity_setTurnScreenOn")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public void setTurnScreenOn(boolean turnScreenOn)
  void setTurnScreenOn(bool turnScreenOn) =>
      _setTurnScreenOn(reference, turnScreenOn ? 1 : 0);
}

class LauncherActivity extends ListActivity {
  LauncherActivity.fromRef(ffi.Pointer<ffi.Void> ref) : super.fromRef(ref);

  static final _ctor =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "android_app_LauncherActivity_new")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();

  /// from: public void <init>()
  LauncherActivity() : super.fromRef(_ctor());

  static final _onCreate = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_LauncherActivity_onCreate")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: protected void onCreate(android.os.Bundle icicle)
  void onCreate(os.Bundle icicle) => _onCreate(reference, icicle.reference);

  static final _setTitle = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_LauncherActivity_setTitle")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void setTitle(java.lang.CharSequence title)
  void setTitle(jni.JlObject title) => _setTitle(reference, title.reference);

  static final _setTitle_1 = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_app_LauncherActivity_setTitle_1")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public void setTitle(int titleId)
  void setTitle_1(int titleId) => _setTitle_1(reference, titleId);

  static final _onSetContentView =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_LauncherActivity_onSetContentView")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: protected void onSetContentView()
  void onSetContentView() => _onSetContentView(reference);

  static final _onListItemClick = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Int32,
                  ffi.Int64)>>("android_app_LauncherActivity_onListItemClick")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, int, int)>();

  /// from: protected void onListItemClick(android.widget.ListView l, android.view.View v, int position, long id)
  void onListItemClick(jni.JlObject l, jni.JlObject v, int position, int id) =>
      _onListItemClick(reference, l.reference, v.reference, position, id);

  static final _intentForPosition = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_app_LauncherActivity_intentForPosition")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: protected android.content.Intent intentForPosition(int position)
  content.Intent intentForPosition(int position) =>
      content.Intent.fromRef(_intentForPosition(reference, position));

  static final _itemForPosition = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_app_LauncherActivity_itemForPosition")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: protected android.app.LauncherActivity.ListItem itemForPosition(int position)
  LauncherActivity_ListItem itemForPosition(int position) =>
      LauncherActivity_ListItem.fromRef(_itemForPosition(reference, position));

  static final _getTargetIntent = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_LauncherActivity_getTargetIntent")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: protected android.content.Intent getTargetIntent()
  content.Intent getTargetIntent() =>
      content.Intent.fromRef(_getTargetIntent(reference));

  static final _onQueryPackageManager = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_LauncherActivity_onQueryPackageManager")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: protected java.util.List<android.content.pm.ResolveInfo> onQueryPackageManager(android.content.Intent queryIntent)
  jni.JlObject onQueryPackageManager(content.Intent queryIntent) =>
      jni.JlObject.fromRef(
          _onQueryPackageManager(reference, queryIntent.reference));

  static final _makeListItems = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_LauncherActivity_makeListItems")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.util.List<android.app.LauncherActivity.ListItem> makeListItems()
  jni.JlObject makeListItems() =>
      jni.JlObject.fromRef(_makeListItems(reference));
}

class LauncherActivity_ListItem extends jni.JlObject {
  LauncherActivity_ListItem.fromRef(ffi.Pointer<ffi.Void> ref)
      : super.fromRef(ref);

  /// from: public java.lang.String className
  static final _getclassName = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_app_LauncherActivity__ListItem_className")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>();
  jni.JlString get className => jni.JlString.fromRef(_getclassName(reference));
  static final _setclassName = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "set_android_app_LauncherActivity__ListItem_className")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();
  set className(jni.JlString value) =>
      _setclassName(reference, value.reference);

  /// from: public android.os.Bundle extras
  static final _getextras = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_app_LauncherActivity__ListItem_extras")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>();
  os.Bundle get extras => os.Bundle.fromRef(_getextras(reference));
  static final _setextras = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "set_android_app_LauncherActivity__ListItem_extras")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();
  set extras(os.Bundle value) => _setextras(reference, value.reference);

  /// from: public android.graphics.drawable.Drawable icon
  static final _geticon = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_app_LauncherActivity__ListItem_icon")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>();
  jni.JlObject get icon => jni.JlObject.fromRef(_geticon(reference));
  static final _seticon = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "set_android_app_LauncherActivity__ListItem_icon")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();
  set icon(jni.JlObject value) => _seticon(reference, value.reference);

  /// from: public java.lang.CharSequence label
  static final _getlabel = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_app_LauncherActivity__ListItem_label")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>();
  jni.JlObject get label => jni.JlObject.fromRef(_getlabel(reference));
  static final _setlabel = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "set_android_app_LauncherActivity__ListItem_label")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();
  set label(jni.JlObject value) => _setlabel(reference, value.reference);

  /// from: public java.lang.String packageName
  static final _getpackageName = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_app_LauncherActivity__ListItem_packageName")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>();
  jni.JlString get packageName =>
      jni.JlString.fromRef(_getpackageName(reference));
  static final _setpackageName = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "set_android_app_LauncherActivity__ListItem_packageName")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();
  set packageName(jni.JlString value) =>
      _setpackageName(reference, value.reference);

  /// from: public android.content.pm.ResolveInfo resolveInfo
  static final _getresolveInfo = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_app_LauncherActivity__ListItem_resolveInfo")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>();
  pm.ResolveInfo get resolveInfo =>
      pm.ResolveInfo.fromRef(_getresolveInfo(reference));
  static final _setresolveInfo = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "set_android_app_LauncherActivity__ListItem_resolveInfo")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();
  set resolveInfo(pm.ResolveInfo value) =>
      _setresolveInfo(reference, value.reference);

  static final _ctor =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "android_app_LauncherActivity__ListItem_new")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();

  /// from: public void <init>()
  LauncherActivity_ListItem() : super.fromRef(_ctor());
}

class LauncherActivity_IconResizer extends jni.JlObject {
  LauncherActivity_IconResizer.fromRef(ffi.Pointer<ffi.Void> ref)
      : super.fromRef(ref);

  static final _ctor =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "android_app_LauncherActivity__IconResizer_new")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();

  /// from: public void <init>()
  LauncherActivity_IconResizer() : super.fromRef(_ctor());

  static final _createIconThumbnail = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_LauncherActivity__IconResizer_createIconThumbnail")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.graphics.drawable.Drawable createIconThumbnail(android.graphics.drawable.Drawable icon)
  jni.JlObject createIconThumbnail(jni.JlObject icon) =>
      jni.JlObject.fromRef(_createIconThumbnail(reference, icon.reference));
}

class Notification extends jni.JlObject {
  Notification.fromRef(ffi.Pointer<ffi.Void> ref) : super.fromRef(ref);

  /// from: static public final android.media.AudioAttributes AUDIO_ATTRIBUTES_DEFAULT
  static final _getAUDIO_ATTRIBUTES_DEFAULT =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "get_android_app_Notification_AUDIO_ATTRIBUTES_DEFAULT")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();
  static jni.JlObject get AUDIO_ATTRIBUTES_DEFAULT =>
      jni.JlObject.fromRef(_getAUDIO_ATTRIBUTES_DEFAULT());

  /// from: static public final int BADGE_ICON_LARGE
  static const BADGE_ICON_LARGE = 2;

  /// from: static public final int BADGE_ICON_NONE
  static const BADGE_ICON_NONE = 0;

  /// from: static public final int BADGE_ICON_SMALL
  static const BADGE_ICON_SMALL = 1;

  /// from: static public final java.lang.String CATEGORY_ALARM
  static const CATEGORY_ALARM = "alarm";

  /// from: static public final java.lang.String CATEGORY_CALL
  static const CATEGORY_CALL = "call";

  /// from: static public final java.lang.String CATEGORY_EMAIL
  static const CATEGORY_EMAIL = "email";

  /// from: static public final java.lang.String CATEGORY_ERROR
  static const CATEGORY_ERROR = "err";

  /// from: static public final java.lang.String CATEGORY_EVENT
  static const CATEGORY_EVENT = "event";

  /// from: static public final java.lang.String CATEGORY_MESSAGE
  static const CATEGORY_MESSAGE = "msg";

  /// from: static public final java.lang.String CATEGORY_NAVIGATION
  static const CATEGORY_NAVIGATION = "navigation";

  /// from: static public final java.lang.String CATEGORY_PROGRESS
  static const CATEGORY_PROGRESS = "progress";

  /// from: static public final java.lang.String CATEGORY_PROMO
  static const CATEGORY_PROMO = "promo";

  /// from: static public final java.lang.String CATEGORY_RECOMMENDATION
  static const CATEGORY_RECOMMENDATION = "recommendation";

  /// from: static public final java.lang.String CATEGORY_REMINDER
  static const CATEGORY_REMINDER = "reminder";

  /// from: static public final java.lang.String CATEGORY_SERVICE
  static const CATEGORY_SERVICE = "service";

  /// from: static public final java.lang.String CATEGORY_SOCIAL
  static const CATEGORY_SOCIAL = "social";

  /// from: static public final java.lang.String CATEGORY_STATUS
  static const CATEGORY_STATUS = "status";

  /// from: static public final java.lang.String CATEGORY_SYSTEM
  static const CATEGORY_SYSTEM = "sys";

  /// from: static public final java.lang.String CATEGORY_TRANSPORT
  static const CATEGORY_TRANSPORT = "transport";

  /// from: static public final int COLOR_DEFAULT
  static const COLOR_DEFAULT = 0;

  /// from: static public final android.os.Parcelable.Creator<android.app.Notification> CREATOR
  static final _getCREATOR =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "get_android_app_Notification_CREATOR")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();
  static os.Parcelable_Creator get CREATOR =>
      os.Parcelable_Creator.fromRef(_getCREATOR());

  /// from: static public final int DEFAULT_ALL
  static const DEFAULT_ALL = -1;

  /// from: static public final int DEFAULT_LIGHTS
  static const DEFAULT_LIGHTS = 4;

  /// from: static public final int DEFAULT_SOUND
  static const DEFAULT_SOUND = 1;

  /// from: static public final int DEFAULT_VIBRATE
  static const DEFAULT_VIBRATE = 2;

  /// from: static public final java.lang.String EXTRA_AUDIO_CONTENTS_URI
  static const EXTRA_AUDIO_CONTENTS_URI = "android.audioContents";

  /// from: static public final java.lang.String EXTRA_BACKGROUND_IMAGE_URI
  static const EXTRA_BACKGROUND_IMAGE_URI = "android.backgroundImageUri";

  /// from: static public final java.lang.String EXTRA_BIG_TEXT
  static const EXTRA_BIG_TEXT = "android.bigText";

  /// from: static public final java.lang.String EXTRA_CHANNEL_GROUP_ID
  static const EXTRA_CHANNEL_GROUP_ID = "android.intent.extra.CHANNEL_GROUP_ID";

  /// from: static public final java.lang.String EXTRA_CHANNEL_ID
  static const EXTRA_CHANNEL_ID = "android.intent.extra.CHANNEL_ID";

  /// from: static public final java.lang.String EXTRA_CHRONOMETER_COUNT_DOWN
  static const EXTRA_CHRONOMETER_COUNT_DOWN = "android.chronometerCountDown";

  /// from: static public final java.lang.String EXTRA_COLORIZED
  static const EXTRA_COLORIZED = "android.colorized";

  /// from: static public final java.lang.String EXTRA_COMPACT_ACTIONS
  static const EXTRA_COMPACT_ACTIONS = "android.compactActions";

  /// from: static public final java.lang.String EXTRA_CONVERSATION_TITLE
  static const EXTRA_CONVERSATION_TITLE = "android.conversationTitle";

  /// from: static public final java.lang.String EXTRA_HISTORIC_MESSAGES
  static const EXTRA_HISTORIC_MESSAGES = "android.messages.historic";

  /// from: static public final java.lang.String EXTRA_INFO_TEXT
  static const EXTRA_INFO_TEXT = "android.infoText";

  /// from: static public final java.lang.String EXTRA_IS_GROUP_CONVERSATION
  static const EXTRA_IS_GROUP_CONVERSATION = "android.isGroupConversation";

  /// from: static public final java.lang.String EXTRA_LARGE_ICON
  static const EXTRA_LARGE_ICON = "android.largeIcon";

  /// from: static public final java.lang.String EXTRA_LARGE_ICON_BIG
  static const EXTRA_LARGE_ICON_BIG = "android.largeIcon.big";

  /// from: static public final java.lang.String EXTRA_MEDIA_SESSION
  static const EXTRA_MEDIA_SESSION = "android.mediaSession";

  /// from: static public final java.lang.String EXTRA_MESSAGES
  static const EXTRA_MESSAGES = "android.messages";

  /// from: static public final java.lang.String EXTRA_MESSAGING_PERSON
  static const EXTRA_MESSAGING_PERSON = "android.messagingUser";

  /// from: static public final java.lang.String EXTRA_NOTIFICATION_ID
  static const EXTRA_NOTIFICATION_ID = "android.intent.extra.NOTIFICATION_ID";

  /// from: static public final java.lang.String EXTRA_NOTIFICATION_TAG
  static const EXTRA_NOTIFICATION_TAG = "android.intent.extra.NOTIFICATION_TAG";

  /// from: static public final java.lang.String EXTRA_PEOPLE
  static const EXTRA_PEOPLE = "android.people";

  /// from: static public final java.lang.String EXTRA_PEOPLE_LIST
  static const EXTRA_PEOPLE_LIST = "android.people.list";

  /// from: static public final java.lang.String EXTRA_PICTURE
  static const EXTRA_PICTURE = "android.picture";

  /// from: static public final java.lang.String EXTRA_PROGRESS
  static const EXTRA_PROGRESS = "android.progress";

  /// from: static public final java.lang.String EXTRA_PROGRESS_INDETERMINATE
  static const EXTRA_PROGRESS_INDETERMINATE = "android.progressIndeterminate";

  /// from: static public final java.lang.String EXTRA_PROGRESS_MAX
  static const EXTRA_PROGRESS_MAX = "android.progressMax";

  /// from: static public final java.lang.String EXTRA_REMOTE_INPUT_DRAFT
  static const EXTRA_REMOTE_INPUT_DRAFT = "android.remoteInputDraft";

  /// from: static public final java.lang.String EXTRA_REMOTE_INPUT_HISTORY
  static const EXTRA_REMOTE_INPUT_HISTORY = "android.remoteInputHistory";

  /// from: static public final java.lang.String EXTRA_SELF_DISPLAY_NAME
  static const EXTRA_SELF_DISPLAY_NAME = "android.selfDisplayName";

  /// from: static public final java.lang.String EXTRA_SHOW_CHRONOMETER
  static const EXTRA_SHOW_CHRONOMETER = "android.showChronometer";

  /// from: static public final java.lang.String EXTRA_SHOW_WHEN
  static const EXTRA_SHOW_WHEN = "android.showWhen";

  /// from: static public final java.lang.String EXTRA_SMALL_ICON
  static const EXTRA_SMALL_ICON = "android.icon";

  /// from: static public final java.lang.String EXTRA_SUB_TEXT
  static const EXTRA_SUB_TEXT = "android.subText";

  /// from: static public final java.lang.String EXTRA_SUMMARY_TEXT
  static const EXTRA_SUMMARY_TEXT = "android.summaryText";

  /// from: static public final java.lang.String EXTRA_TEMPLATE
  static const EXTRA_TEMPLATE = "android.template";

  /// from: static public final java.lang.String EXTRA_TEXT
  static const EXTRA_TEXT = "android.text";

  /// from: static public final java.lang.String EXTRA_TEXT_LINES
  static const EXTRA_TEXT_LINES = "android.textLines";

  /// from: static public final java.lang.String EXTRA_TITLE
  static const EXTRA_TITLE = "android.title";

  /// from: static public final java.lang.String EXTRA_TITLE_BIG
  static const EXTRA_TITLE_BIG = "android.title.big";

  /// from: static public final int FLAG_AUTO_CANCEL
  static const FLAG_AUTO_CANCEL = 16;

  /// from: static public final int FLAG_FOREGROUND_SERVICE
  static const FLAG_FOREGROUND_SERVICE = 64;

  /// from: static public final int FLAG_GROUP_SUMMARY
  static const FLAG_GROUP_SUMMARY = 512;

  /// from: static public final int FLAG_HIGH_PRIORITY
  static const FLAG_HIGH_PRIORITY = 128;

  /// from: static public final int FLAG_INSISTENT
  static const FLAG_INSISTENT = 4;

  /// from: static public final int FLAG_LOCAL_ONLY
  static const FLAG_LOCAL_ONLY = 256;

  /// from: static public final int FLAG_NO_CLEAR
  static const FLAG_NO_CLEAR = 32;

  /// from: static public final int FLAG_ONGOING_EVENT
  static const FLAG_ONGOING_EVENT = 2;

  /// from: static public final int FLAG_ONLY_ALERT_ONCE
  static const FLAG_ONLY_ALERT_ONCE = 8;

  /// from: static public final int FLAG_SHOW_LIGHTS
  static const FLAG_SHOW_LIGHTS = 1;

  /// from: static public final int GROUP_ALERT_ALL
  static const GROUP_ALERT_ALL = 0;

  /// from: static public final int GROUP_ALERT_CHILDREN
  static const GROUP_ALERT_CHILDREN = 2;

  /// from: static public final int GROUP_ALERT_SUMMARY
  static const GROUP_ALERT_SUMMARY = 1;

  /// from: static public final java.lang.String INTENT_CATEGORY_NOTIFICATION_PREFERENCES
  static const INTENT_CATEGORY_NOTIFICATION_PREFERENCES =
      "android.intent.category.NOTIFICATION_PREFERENCES";

  /// from: static public final int PRIORITY_DEFAULT
  static const PRIORITY_DEFAULT = 0;

  /// from: static public final int PRIORITY_HIGH
  static const PRIORITY_HIGH = 1;

  /// from: static public final int PRIORITY_LOW
  static const PRIORITY_LOW = -1;

  /// from: static public final int PRIORITY_MAX
  static const PRIORITY_MAX = 2;

  /// from: static public final int PRIORITY_MIN
  static const PRIORITY_MIN = -2;

  /// from: static public final int STREAM_DEFAULT
  static const STREAM_DEFAULT = -1;

  /// from: static public final int VISIBILITY_PRIVATE
  static const VISIBILITY_PRIVATE = 0;

  /// from: static public final int VISIBILITY_PUBLIC
  static const VISIBILITY_PUBLIC = 1;

  /// from: static public final int VISIBILITY_SECRET
  static const VISIBILITY_SECRET = -1;

  /// from: public android.app.Notification.Action[] actions
  static final _getactions = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_app_Notification_actions")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>();
  jni.JlObject get actions => jni.JlObject.fromRef(_getactions(reference));
  static final _setactions = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "set_android_app_Notification_actions")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();
  set actions(jni.JlObject value) => _setactions(reference, value.reference);

  /// from: public android.media.AudioAttributes audioAttributes
  static final _getaudioAttributes = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_app_Notification_audioAttributes")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>();
  jni.JlObject get audioAttributes =>
      jni.JlObject.fromRef(_getaudioAttributes(reference));
  static final _setaudioAttributes = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "set_android_app_Notification_audioAttributes")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();
  set audioAttributes(jni.JlObject value) =>
      _setaudioAttributes(reference, value.reference);

  /// from: public int audioStreamType
  static final _getaudioStreamType = jlookup<
          ffi.NativeFunction<
              ffi.Int32 Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_app_Notification_audioStreamType")
      .asFunction<
          int Function(
    ffi.Pointer<ffi.Void>,
  )>();
  int get audioStreamType => _getaudioStreamType(reference);
  static final _setaudioStreamType = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("set_android_app_Notification_audioStreamType")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();
  set audioStreamType(int value) => _setaudioStreamType(reference, value);

  /// from: public android.widget.RemoteViews bigContentView
  static final _getbigContentView = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_app_Notification_bigContentView")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>();
  jni.JlObject get bigContentView =>
      jni.JlObject.fromRef(_getbigContentView(reference));
  static final _setbigContentView = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "set_android_app_Notification_bigContentView")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();
  set bigContentView(jni.JlObject value) =>
      _setbigContentView(reference, value.reference);

  /// from: public java.lang.String category
  static final _getcategory = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_app_Notification_category")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>();
  jni.JlString get category => jni.JlString.fromRef(_getcategory(reference));
  static final _setcategory = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "set_android_app_Notification_category")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();
  set category(jni.JlString value) => _setcategory(reference, value.reference);

  /// from: public int color
  static final _getcolor = jlookup<
          ffi.NativeFunction<
              ffi.Int32 Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_app_Notification_color")
      .asFunction<
          int Function(
    ffi.Pointer<ffi.Void>,
  )>();
  int get color => _getcolor(reference);
  static final _setcolor = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("set_android_app_Notification_color")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();
  set color(int value) => _setcolor(reference, value);

  /// from: public android.app.PendingIntent contentIntent
  static final _getcontentIntent = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_app_Notification_contentIntent")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>();
  PendingIntent get contentIntent =>
      PendingIntent.fromRef(_getcontentIntent(reference));
  static final _setcontentIntent = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "set_android_app_Notification_contentIntent")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();
  set contentIntent(PendingIntent value) =>
      _setcontentIntent(reference, value.reference);

  /// from: public android.widget.RemoteViews contentView
  static final _getcontentView = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_app_Notification_contentView")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>();
  jni.JlObject get contentView =>
      jni.JlObject.fromRef(_getcontentView(reference));
  static final _setcontentView = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "set_android_app_Notification_contentView")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();
  set contentView(jni.JlObject value) =>
      _setcontentView(reference, value.reference);

  /// from: public int defaults
  static final _getdefaults = jlookup<
          ffi.NativeFunction<
              ffi.Int32 Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_app_Notification_defaults")
      .asFunction<
          int Function(
    ffi.Pointer<ffi.Void>,
  )>();
  int get defaults => _getdefaults(reference);
  static final _setdefaults = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("set_android_app_Notification_defaults")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();
  set defaults(int value) => _setdefaults(reference, value);

  /// from: public android.app.PendingIntent deleteIntent
  static final _getdeleteIntent = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_app_Notification_deleteIntent")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>();
  PendingIntent get deleteIntent =>
      PendingIntent.fromRef(_getdeleteIntent(reference));
  static final _setdeleteIntent = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "set_android_app_Notification_deleteIntent")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();
  set deleteIntent(PendingIntent value) =>
      _setdeleteIntent(reference, value.reference);

  /// from: public android.os.Bundle extras
  static final _getextras = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_app_Notification_extras")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>();
  os.Bundle get extras => os.Bundle.fromRef(_getextras(reference));
  static final _setextras = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "set_android_app_Notification_extras")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();
  set extras(os.Bundle value) => _setextras(reference, value.reference);

  /// from: public int flags
  static final _getflags = jlookup<
          ffi.NativeFunction<
              ffi.Int32 Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_app_Notification_flags")
      .asFunction<
          int Function(
    ffi.Pointer<ffi.Void>,
  )>();
  int get flags => _getflags(reference);
  static final _setflags = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("set_android_app_Notification_flags")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();
  set flags(int value) => _setflags(reference, value);

  /// from: public android.app.PendingIntent fullScreenIntent
  static final _getfullScreenIntent = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_app_Notification_fullScreenIntent")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>();
  PendingIntent get fullScreenIntent =>
      PendingIntent.fromRef(_getfullScreenIntent(reference));
  static final _setfullScreenIntent = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "set_android_app_Notification_fullScreenIntent")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();
  set fullScreenIntent(PendingIntent value) =>
      _setfullScreenIntent(reference, value.reference);

  /// from: public android.widget.RemoteViews headsUpContentView
  static final _getheadsUpContentView = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_app_Notification_headsUpContentView")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>();
  jni.JlObject get headsUpContentView =>
      jni.JlObject.fromRef(_getheadsUpContentView(reference));
  static final _setheadsUpContentView = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "set_android_app_Notification_headsUpContentView")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();
  set headsUpContentView(jni.JlObject value) =>
      _setheadsUpContentView(reference, value.reference);

  /// from: public int icon
  static final _geticon = jlookup<
          ffi.NativeFunction<
              ffi.Int32 Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_app_Notification_icon")
      .asFunction<
          int Function(
    ffi.Pointer<ffi.Void>,
  )>();
  int get icon => _geticon(reference);
  static final _seticon = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("set_android_app_Notification_icon")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();
  set icon(int value) => _seticon(reference, value);

  /// from: public int iconLevel
  static final _geticonLevel = jlookup<
          ffi.NativeFunction<
              ffi.Int32 Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_app_Notification_iconLevel")
      .asFunction<
          int Function(
    ffi.Pointer<ffi.Void>,
  )>();
  int get iconLevel => _geticonLevel(reference);
  static final _seticonLevel = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("set_android_app_Notification_iconLevel")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();
  set iconLevel(int value) => _seticonLevel(reference, value);

  /// from: public android.graphics.Bitmap largeIcon
  static final _getlargeIcon = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_app_Notification_largeIcon")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>();
  jni.JlObject get largeIcon => jni.JlObject.fromRef(_getlargeIcon(reference));
  static final _setlargeIcon = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "set_android_app_Notification_largeIcon")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();
  set largeIcon(jni.JlObject value) =>
      _setlargeIcon(reference, value.reference);

  /// from: public int ledARGB
  static final _getledARGB = jlookup<
          ffi.NativeFunction<
              ffi.Int32 Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_app_Notification_ledARGB")
      .asFunction<
          int Function(
    ffi.Pointer<ffi.Void>,
  )>();
  int get ledARGB => _getledARGB(reference);
  static final _setledARGB = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("set_android_app_Notification_ledARGB")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();
  set ledARGB(int value) => _setledARGB(reference, value);

  /// from: public int ledOffMS
  static final _getledOffMS = jlookup<
          ffi.NativeFunction<
              ffi.Int32 Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_app_Notification_ledOffMS")
      .asFunction<
          int Function(
    ffi.Pointer<ffi.Void>,
  )>();
  int get ledOffMS => _getledOffMS(reference);
  static final _setledOffMS = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("set_android_app_Notification_ledOffMS")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();
  set ledOffMS(int value) => _setledOffMS(reference, value);

  /// from: public int ledOnMS
  static final _getledOnMS = jlookup<
          ffi.NativeFunction<
              ffi.Int32 Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_app_Notification_ledOnMS")
      .asFunction<
          int Function(
    ffi.Pointer<ffi.Void>,
  )>();
  int get ledOnMS => _getledOnMS(reference);
  static final _setledOnMS = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("set_android_app_Notification_ledOnMS")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();
  set ledOnMS(int value) => _setledOnMS(reference, value);

  /// from: public int number
  static final _getnumber = jlookup<
          ffi.NativeFunction<
              ffi.Int32 Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_app_Notification_number")
      .asFunction<
          int Function(
    ffi.Pointer<ffi.Void>,
  )>();
  int get number => _getnumber(reference);
  static final _setnumber = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("set_android_app_Notification_number")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();
  set number(int value) => _setnumber(reference, value);

  /// from: public int priority
  static final _getpriority = jlookup<
          ffi.NativeFunction<
              ffi.Int32 Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_app_Notification_priority")
      .asFunction<
          int Function(
    ffi.Pointer<ffi.Void>,
  )>();
  int get priority => _getpriority(reference);
  static final _setpriority = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("set_android_app_Notification_priority")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();
  set priority(int value) => _setpriority(reference, value);

  /// from: public android.app.Notification publicVersion
  static final _getpublicVersion = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_app_Notification_publicVersion")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>();
  Notification get publicVersion =>
      Notification.fromRef(_getpublicVersion(reference));
  static final _setpublicVersion = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "set_android_app_Notification_publicVersion")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();
  set publicVersion(Notification value) =>
      _setpublicVersion(reference, value.reference);

  /// from: public android.net.Uri sound
  static final _getsound = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_app_Notification_sound")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>();
  jni.JlObject get sound => jni.JlObject.fromRef(_getsound(reference));
  static final _setsound = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("set_android_app_Notification_sound")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();
  set sound(jni.JlObject value) => _setsound(reference, value.reference);

  /// from: public java.lang.CharSequence tickerText
  static final _gettickerText = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_app_Notification_tickerText")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>();
  jni.JlObject get tickerText =>
      jni.JlObject.fromRef(_gettickerText(reference));
  static final _settickerText = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "set_android_app_Notification_tickerText")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();
  set tickerText(jni.JlObject value) =>
      _settickerText(reference, value.reference);

  /// from: public android.widget.RemoteViews tickerView
  static final _gettickerView = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_app_Notification_tickerView")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>();
  jni.JlObject get tickerView =>
      jni.JlObject.fromRef(_gettickerView(reference));
  static final _settickerView = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "set_android_app_Notification_tickerView")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();
  set tickerView(jni.JlObject value) =>
      _settickerView(reference, value.reference);

  /// from: public long[] vibrate
  static final _getvibrate = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_app_Notification_vibrate")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>();
  jni.JlObject get vibrate => jni.JlObject.fromRef(_getvibrate(reference));
  static final _setvibrate = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "set_android_app_Notification_vibrate")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();
  set vibrate(jni.JlObject value) => _setvibrate(reference, value.reference);

  /// from: public int visibility
  static final _getvisibility = jlookup<
          ffi.NativeFunction<
              ffi.Int32 Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_app_Notification_visibility")
      .asFunction<
          int Function(
    ffi.Pointer<ffi.Void>,
  )>();
  int get visibility => _getvisibility(reference);
  static final _setvisibility = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("set_android_app_Notification_visibility")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();
  set visibility(int value) => _setvisibility(reference, value);

  /// from: public long when
  static final _getwhen = jlookup<
          ffi.NativeFunction<
              ffi.Int64 Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_app_Notification_when")
      .asFunction<
          int Function(
    ffi.Pointer<ffi.Void>,
  )>();
  int get when => _getwhen(reference);
  static final _setwhen = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  ffi.Int64)>>("set_android_app_Notification_when")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();
  set when(int value) => _setwhen(reference, value);

  static final _ctor =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "android_app_Notification_new")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();

  /// from: public void <init>()
  Notification() : super.fromRef(_ctor());

  static final _ctor_1 = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(ffi.Int32, ffi.Pointer<ffi.Void>,
                  ffi.Int64)>>("android_app_Notification_new_1")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(int, ffi.Pointer<ffi.Void>, int)>();

  /// from: public void <init>(int icon, java.lang.CharSequence tickerText, long when)
  Notification.ctor_1(int icon, jni.JlObject tickerText, int when)
      : super.fromRef(_ctor_1(icon, tickerText.reference, when));

  static final _ctor_2 = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
                  ffi.Pointer<ffi.Void>)>>("android_app_Notification_new_2")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void <init>(android.os.Parcel parcel)
  Notification.ctor_2(os.Parcel parcel)
      : super.fromRef(_ctor_2(parcel.reference));

  static final _getGroup = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
                  ffi.Pointer<ffi.Void>)>>("android_app_Notification_getGroup")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.String getGroup()
  jni.JlString getGroup() => jni.JlString.fromRef(_getGroup(reference));

  static final _getSortKey = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_Notification_getSortKey")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.String getSortKey()
  jni.JlString getSortKey() => jni.JlString.fromRef(_getSortKey(reference));

  static final _clone = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
                  ffi.Pointer<ffi.Void>)>>("android_app_Notification_clone")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.Notification clone()
  Notification clone() => Notification.fromRef(_clone(reference));

  static final _describeContents =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_Notification_describeContents")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int describeContents()
  int describeContents() => _describeContents(reference);

  static final _writeToParcel = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_app_Notification_writeToParcel")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public void writeToParcel(android.os.Parcel parcel, int flags)
  void writeToParcel(os.Parcel parcel, int flags) =>
      _writeToParcel(reference, parcel.reference, flags);

  static final _toString_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_Notification_toString_1")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.String toString()
  jni.JlString toString_1() => jni.JlString.fromRef(_toString_1(reference));

  static final _getChannelId = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_Notification_getChannelId")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.String getChannelId()
  jni.JlString getChannelId() => jni.JlString.fromRef(_getChannelId(reference));

  static final _getTimeoutAfter =
      jlookup<ffi.NativeFunction<ffi.Int64 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_Notification_getTimeoutAfter")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public long getTimeoutAfter()
  int getTimeoutAfter() => _getTimeoutAfter(reference);

  static final _getBadgeIconType =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_Notification_getBadgeIconType")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int getBadgeIconType()
  int getBadgeIconType() => _getBadgeIconType(reference);

  static final _getShortcutId = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_Notification_getShortcutId")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.String getShortcutId()
  jni.JlString getShortcutId() =>
      jni.JlString.fromRef(_getShortcutId(reference));

  static final _getSettingsText = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_Notification_getSettingsText")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.CharSequence getSettingsText()
  jni.JlObject getSettingsText() =>
      jni.JlObject.fromRef(_getSettingsText(reference));

  static final _getGroupAlertBehavior =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_Notification_getGroupAlertBehavior")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int getGroupAlertBehavior()
  int getGroupAlertBehavior() => _getGroupAlertBehavior(reference);

  static final _getSmallIcon = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_Notification_getSmallIcon")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.graphics.drawable.Icon getSmallIcon()
  jni.JlObject getSmallIcon() => jni.JlObject.fromRef(_getSmallIcon(reference));

  static final _getLargeIcon = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_Notification_getLargeIcon")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.graphics.drawable.Icon getLargeIcon()
  jni.JlObject getLargeIcon() => jni.JlObject.fromRef(_getLargeIcon(reference));
}

class Notification_WearableExtender extends jni.JlObject {
  Notification_WearableExtender.fromRef(ffi.Pointer<ffi.Void> ref)
      : super.fromRef(ref);

  /// from: static public final int SCREEN_TIMEOUT_LONG
  static const SCREEN_TIMEOUT_LONG = -1;

  /// from: static public final int SCREEN_TIMEOUT_SHORT
  static const SCREEN_TIMEOUT_SHORT = 0;

  /// from: static public final int SIZE_DEFAULT
  static const SIZE_DEFAULT = 0;

  /// from: static public final int SIZE_FULL_SCREEN
  static const SIZE_FULL_SCREEN = 5;

  /// from: static public final int SIZE_LARGE
  static const SIZE_LARGE = 4;

  /// from: static public final int SIZE_MEDIUM
  static const SIZE_MEDIUM = 3;

  /// from: static public final int SIZE_SMALL
  static const SIZE_SMALL = 2;

  /// from: static public final int SIZE_XSMALL
  static const SIZE_XSMALL = 1;

  /// from: static public final int UNSET_ACTION_INDEX
  static const UNSET_ACTION_INDEX = -1;

  static final _ctor =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "android_app_Notification__WearableExtender_new")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();

  /// from: public void <init>()
  Notification_WearableExtender() : super.fromRef(_ctor());

  static final _ctor_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_Notification__WearableExtender_new_1")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void <init>(android.app.Notification notif)
  Notification_WearableExtender.ctor_1(Notification notif)
      : super.fromRef(_ctor_1(notif.reference));

  static final _extend = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Notification__WearableExtender_extend")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.Notification.Builder extend(android.app.Notification.Builder builder)
  Notification_Builder extend(Notification_Builder builder) =>
      Notification_Builder.fromRef(_extend(reference, builder.reference));

  static final _clone = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_Notification__WearableExtender_clone")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.Notification.WearableExtender clone()
  Notification_WearableExtender clone() =>
      Notification_WearableExtender.fromRef(_clone(reference));

  static final _addAction = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Notification__WearableExtender_addAction")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.Notification.WearableExtender addAction(android.app.Notification.Action action)
  Notification_WearableExtender addAction(Notification_Action action) =>
      Notification_WearableExtender.fromRef(
          _addAction(reference, action.reference));

  static final _addActions = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Notification__WearableExtender_addActions")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.Notification.WearableExtender addActions(java.util.List<android.app.Notification.Action> actions)
  Notification_WearableExtender addActions(jni.JlObject actions) =>
      Notification_WearableExtender.fromRef(
          _addActions(reference, actions.reference));

  static final _clearActions = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_Notification__WearableExtender_clearActions")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.Notification.WearableExtender clearActions()
  Notification_WearableExtender clearActions() =>
      Notification_WearableExtender.fromRef(_clearActions(reference));

  static final _getActions = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_Notification__WearableExtender_getActions")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.util.List<android.app.Notification.Action> getActions()
  jni.JlObject getActions() => jni.JlObject.fromRef(_getActions(reference));

  static final _setDisplayIntent = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Notification__WearableExtender_setDisplayIntent")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.Notification.WearableExtender setDisplayIntent(android.app.PendingIntent intent)
  Notification_WearableExtender setDisplayIntent(PendingIntent intent) =>
      Notification_WearableExtender.fromRef(
          _setDisplayIntent(reference, intent.reference));

  static final _getDisplayIntent = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_Notification__WearableExtender_getDisplayIntent")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.PendingIntent getDisplayIntent()
  PendingIntent getDisplayIntent() =>
      PendingIntent.fromRef(_getDisplayIntent(reference));

  static final _addPage = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Notification__WearableExtender_addPage")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.Notification.WearableExtender addPage(android.app.Notification page)
  Notification_WearableExtender addPage(Notification page) =>
      Notification_WearableExtender.fromRef(
          _addPage(reference, page.reference));

  static final _addPages = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Notification__WearableExtender_addPages")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.Notification.WearableExtender addPages(java.util.List<android.app.Notification> pages)
  Notification_WearableExtender addPages(jni.JlObject pages) =>
      Notification_WearableExtender.fromRef(
          _addPages(reference, pages.reference));

  static final _clearPages = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_Notification__WearableExtender_clearPages")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.Notification.WearableExtender clearPages()
  Notification_WearableExtender clearPages() =>
      Notification_WearableExtender.fromRef(_clearPages(reference));

  static final _getPages = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_Notification__WearableExtender_getPages")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.util.List<android.app.Notification> getPages()
  jni.JlObject getPages() => jni.JlObject.fromRef(_getPages(reference));

  static final _setBackground = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Notification__WearableExtender_setBackground")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.Notification.WearableExtender setBackground(android.graphics.Bitmap background)
  Notification_WearableExtender setBackground(jni.JlObject background) =>
      Notification_WearableExtender.fromRef(
          _setBackground(reference, background.reference));

  static final _getBackground = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_Notification__WearableExtender_getBackground")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.graphics.Bitmap getBackground()
  jni.JlObject getBackground() =>
      jni.JlObject.fromRef(_getBackground(reference));

  static final _setContentIcon = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "android_app_Notification__WearableExtender_setContentIcon")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public android.app.Notification.WearableExtender setContentIcon(int icon)
  Notification_WearableExtender setContentIcon(int icon) =>
      Notification_WearableExtender.fromRef(_setContentIcon(reference, icon));

  static final _getContentIcon =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_Notification__WearableExtender_getContentIcon")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int getContentIcon()
  int getContentIcon() => _getContentIcon(reference);

  static final _setContentIconGravity = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "android_app_Notification__WearableExtender_setContentIconGravity")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public android.app.Notification.WearableExtender setContentIconGravity(int contentIconGravity)
  Notification_WearableExtender setContentIconGravity(int contentIconGravity) =>
      Notification_WearableExtender.fromRef(
          _setContentIconGravity(reference, contentIconGravity));

  static final _getContentIconGravity = jlookup<
              ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_Notification__WearableExtender_getContentIconGravity")
      .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int getContentIconGravity()
  int getContentIconGravity() => _getContentIconGravity(reference);

  static final _setContentAction = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "android_app_Notification__WearableExtender_setContentAction")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public android.app.Notification.WearableExtender setContentAction(int actionIndex)
  Notification_WearableExtender setContentAction(int actionIndex) =>
      Notification_WearableExtender.fromRef(
          _setContentAction(reference, actionIndex));

  static final _getContentAction =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_Notification__WearableExtender_getContentAction")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int getContentAction()
  int getContentAction() => _getContentAction(reference);

  static final _setGravity = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "android_app_Notification__WearableExtender_setGravity")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public android.app.Notification.WearableExtender setGravity(int gravity)
  Notification_WearableExtender setGravity(int gravity) =>
      Notification_WearableExtender.fromRef(_setGravity(reference, gravity));

  static final _getGravity =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_Notification__WearableExtender_getGravity")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int getGravity()
  int getGravity() => _getGravity(reference);

  static final _setCustomSizePreset = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "android_app_Notification__WearableExtender_setCustomSizePreset")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public android.app.Notification.WearableExtender setCustomSizePreset(int sizePreset)
  Notification_WearableExtender setCustomSizePreset(int sizePreset) =>
      Notification_WearableExtender.fromRef(
          _setCustomSizePreset(reference, sizePreset));

  static final _getCustomSizePreset =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_Notification__WearableExtender_getCustomSizePreset")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int getCustomSizePreset()
  int getCustomSizePreset() => _getCustomSizePreset(reference);

  static final _setCustomContentHeight = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "android_app_Notification__WearableExtender_setCustomContentHeight")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public android.app.Notification.WearableExtender setCustomContentHeight(int height)
  Notification_WearableExtender setCustomContentHeight(int height) =>
      Notification_WearableExtender.fromRef(
          _setCustomContentHeight(reference, height));

  static final _getCustomContentHeight = jlookup<
              ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_Notification__WearableExtender_getCustomContentHeight")
      .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int getCustomContentHeight()
  int getCustomContentHeight() => _getCustomContentHeight(reference);

  static final _setStartScrollBottom = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Uint8)>>(
          "android_app_Notification__WearableExtender_setStartScrollBottom")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public android.app.Notification.WearableExtender setStartScrollBottom(boolean startScrollBottom)
  Notification_WearableExtender setStartScrollBottom(bool startScrollBottom) =>
      Notification_WearableExtender.fromRef(
          _setStartScrollBottom(reference, startScrollBottom ? 1 : 0));

  static final _getStartScrollBottom =
      jlookup<ffi.NativeFunction<ffi.Uint8 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_Notification__WearableExtender_getStartScrollBottom")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public boolean getStartScrollBottom()
  bool getStartScrollBottom() => _getStartScrollBottom(reference) != 0;

  static final _setContentIntentAvailableOffline = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Uint8)>>(
          "android_app_Notification__WearableExtender_setContentIntentAvailableOffline")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public android.app.Notification.WearableExtender setContentIntentAvailableOffline(boolean contentIntentAvailableOffline)
  Notification_WearableExtender setContentIntentAvailableOffline(
          bool contentIntentAvailableOffline) =>
      Notification_WearableExtender.fromRef(_setContentIntentAvailableOffline(
          reference, contentIntentAvailableOffline ? 1 : 0));

  static final _getContentIntentAvailableOffline = jlookup<
              ffi.NativeFunction<ffi.Uint8 Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_Notification__WearableExtender_getContentIntentAvailableOffline")
      .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public boolean getContentIntentAvailableOffline()
  bool getContentIntentAvailableOffline() =>
      _getContentIntentAvailableOffline(reference) != 0;

  static final _setHintHideIcon = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Uint8)>>(
          "android_app_Notification__WearableExtender_setHintHideIcon")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public android.app.Notification.WearableExtender setHintHideIcon(boolean hintHideIcon)
  Notification_WearableExtender setHintHideIcon(bool hintHideIcon) =>
      Notification_WearableExtender.fromRef(
          _setHintHideIcon(reference, hintHideIcon ? 1 : 0));

  static final _getHintHideIcon =
      jlookup<ffi.NativeFunction<ffi.Uint8 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_Notification__WearableExtender_getHintHideIcon")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public boolean getHintHideIcon()
  bool getHintHideIcon() => _getHintHideIcon(reference) != 0;

  static final _setHintShowBackgroundOnly = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Uint8)>>(
          "android_app_Notification__WearableExtender_setHintShowBackgroundOnly")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public android.app.Notification.WearableExtender setHintShowBackgroundOnly(boolean hintShowBackgroundOnly)
  Notification_WearableExtender setHintShowBackgroundOnly(
          bool hintShowBackgroundOnly) =>
      Notification_WearableExtender.fromRef(_setHintShowBackgroundOnly(
          reference, hintShowBackgroundOnly ? 1 : 0));

  static final _getHintShowBackgroundOnly = jlookup<
              ffi.NativeFunction<ffi.Uint8 Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_Notification__WearableExtender_getHintShowBackgroundOnly")
      .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public boolean getHintShowBackgroundOnly()
  bool getHintShowBackgroundOnly() =>
      _getHintShowBackgroundOnly(reference) != 0;

  static final _setHintAvoidBackgroundClipping = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Uint8)>>(
          "android_app_Notification__WearableExtender_setHintAvoidBackgroundClipping")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public android.app.Notification.WearableExtender setHintAvoidBackgroundClipping(boolean hintAvoidBackgroundClipping)
  Notification_WearableExtender setHintAvoidBackgroundClipping(
          bool hintAvoidBackgroundClipping) =>
      Notification_WearableExtender.fromRef(_setHintAvoidBackgroundClipping(
          reference, hintAvoidBackgroundClipping ? 1 : 0));

  static final _getHintAvoidBackgroundClipping = jlookup<
              ffi.NativeFunction<ffi.Uint8 Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_Notification__WearableExtender_getHintAvoidBackgroundClipping")
      .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public boolean getHintAvoidBackgroundClipping()
  bool getHintAvoidBackgroundClipping() =>
      _getHintAvoidBackgroundClipping(reference) != 0;

  static final _setHintScreenTimeout = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "android_app_Notification__WearableExtender_setHintScreenTimeout")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public android.app.Notification.WearableExtender setHintScreenTimeout(int timeout)
  Notification_WearableExtender setHintScreenTimeout(int timeout) =>
      Notification_WearableExtender.fromRef(
          _setHintScreenTimeout(reference, timeout));

  static final _getHintScreenTimeout =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_Notification__WearableExtender_getHintScreenTimeout")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int getHintScreenTimeout()
  int getHintScreenTimeout() => _getHintScreenTimeout(reference);

  static final _setHintAmbientBigPicture = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Uint8)>>(
          "android_app_Notification__WearableExtender_setHintAmbientBigPicture")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public android.app.Notification.WearableExtender setHintAmbientBigPicture(boolean hintAmbientBigPicture)
  Notification_WearableExtender setHintAmbientBigPicture(
          bool hintAmbientBigPicture) =>
      Notification_WearableExtender.fromRef(
          _setHintAmbientBigPicture(reference, hintAmbientBigPicture ? 1 : 0));

  static final _getHintAmbientBigPicture = jlookup<
              ffi.NativeFunction<ffi.Uint8 Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_Notification__WearableExtender_getHintAmbientBigPicture")
      .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public boolean getHintAmbientBigPicture()
  bool getHintAmbientBigPicture() => _getHintAmbientBigPicture(reference) != 0;

  static final _setHintContentIntentLaunchesActivity = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Uint8)>>(
          "android_app_Notification__WearableExtender_setHintContentIntentLaunchesActivity")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public android.app.Notification.WearableExtender setHintContentIntentLaunchesActivity(boolean hintContentIntentLaunchesActivity)
  Notification_WearableExtender setHintContentIntentLaunchesActivity(
          bool hintContentIntentLaunchesActivity) =>
      Notification_WearableExtender.fromRef(
          _setHintContentIntentLaunchesActivity(
              reference, hintContentIntentLaunchesActivity ? 1 : 0));

  static final _getHintContentIntentLaunchesActivity = jlookup<
              ffi.NativeFunction<ffi.Uint8 Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_Notification__WearableExtender_getHintContentIntentLaunchesActivity")
      .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public boolean getHintContentIntentLaunchesActivity()
  bool getHintContentIntentLaunchesActivity() =>
      _getHintContentIntentLaunchesActivity(reference) != 0;

  static final _setDismissalId = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Notification__WearableExtender_setDismissalId")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.Notification.WearableExtender setDismissalId(java.lang.String dismissalId)
  Notification_WearableExtender setDismissalId(jni.JlString dismissalId) =>
      Notification_WearableExtender.fromRef(
          _setDismissalId(reference, dismissalId.reference));

  static final _getDismissalId = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_Notification__WearableExtender_getDismissalId")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.String getDismissalId()
  jni.JlString getDismissalId() =>
      jni.JlString.fromRef(_getDismissalId(reference));

  static final _setBridgeTag = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Notification__WearableExtender_setBridgeTag")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.Notification.WearableExtender setBridgeTag(java.lang.String bridgeTag)
  Notification_WearableExtender setBridgeTag(jni.JlString bridgeTag) =>
      Notification_WearableExtender.fromRef(
          _setBridgeTag(reference, bridgeTag.reference));

  static final _getBridgeTag = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_Notification__WearableExtender_getBridgeTag")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.String getBridgeTag()
  jni.JlString getBridgeTag() => jni.JlString.fromRef(_getBridgeTag(reference));
}

class Notification_Style extends jni.JlObject {
  Notification_Style.fromRef(ffi.Pointer<ffi.Void> ref) : super.fromRef(ref);

  /// from: protected android.app.Notification.Builder mBuilder
  static final _getmBuilder = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_app_Notification__Style_mBuilder")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>();
  Notification_Builder get mBuilder =>
      Notification_Builder.fromRef(_getmBuilder(reference));
  static final _setmBuilder = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "set_android_app_Notification__Style_mBuilder")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();
  set mBuilder(Notification_Builder value) =>
      _setmBuilder(reference, value.reference);

  static final _ctor =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "android_app_Notification__Style_new")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();

  /// from: public void <init>()
  Notification_Style() : super.fromRef(_ctor());

  static final _internalSetBigContentTitle = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Notification__Style_internalSetBigContentTitle")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: protected void internalSetBigContentTitle(java.lang.CharSequence title)
  void internalSetBigContentTitle(jni.JlObject title) =>
      _internalSetBigContentTitle(reference, title.reference);

  static final _internalSetSummaryText = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Notification__Style_internalSetSummaryText")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: protected void internalSetSummaryText(java.lang.CharSequence cs)
  void internalSetSummaryText(jni.JlObject cs) =>
      _internalSetSummaryText(reference, cs.reference);

  static final _setBuilder = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Notification__Style_setBuilder")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void setBuilder(android.app.Notification.Builder builder)
  void setBuilder(Notification_Builder builder) =>
      _setBuilder(reference, builder.reference);

  static final _checkBuilder =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_Notification__Style_checkBuilder")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: protected void checkBuilder()
  void checkBuilder() => _checkBuilder(reference);

  static final _getStandardView = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "android_app_Notification__Style_getStandardView")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: protected android.widget.RemoteViews getStandardView(int layoutId)
  jni.JlObject getStandardView(int layoutId) =>
      jni.JlObject.fromRef(_getStandardView(reference, layoutId));

  static final _build = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_Notification__Style_build")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.Notification build()
  Notification build() => Notification.fromRef(_build(reference));
}

class Notification_MessagingStyle extends Notification_Style {
  Notification_MessagingStyle.fromRef(ffi.Pointer<ffi.Void> ref)
      : super.fromRef(ref);

  /// from: static public final int MAXIMUM_RETAINED_MESSAGES
  static const MAXIMUM_RETAINED_MESSAGES = 25;

  static final _ctor = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_Notification__MessagingStyle_new")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void <init>(java.lang.CharSequence userDisplayName)
  Notification_MessagingStyle(jni.JlObject userDisplayName)
      : super.fromRef(_ctor(userDisplayName.reference));

  static final _ctor_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_Notification__MessagingStyle_new_1")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void <init>(android.app.Person user)
  Notification_MessagingStyle.ctor_1(Person user)
      : super.fromRef(_ctor_1(user.reference));

  static final _getUser = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_Notification__MessagingStyle_getUser")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.Person getUser()
  Person getUser() => Person.fromRef(_getUser(reference));

  static final _getUserDisplayName = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_Notification__MessagingStyle_getUserDisplayName")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.CharSequence getUserDisplayName()
  jni.JlObject getUserDisplayName() =>
      jni.JlObject.fromRef(_getUserDisplayName(reference));

  static final _setConversationTitle = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Notification__MessagingStyle_setConversationTitle")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.Notification.MessagingStyle setConversationTitle(java.lang.CharSequence conversationTitle)
  Notification_MessagingStyle setConversationTitle(
          jni.JlObject conversationTitle) =>
      Notification_MessagingStyle.fromRef(
          _setConversationTitle(reference, conversationTitle.reference));

  static final _getConversationTitle = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_Notification__MessagingStyle_getConversationTitle")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.CharSequence getConversationTitle()
  jni.JlObject getConversationTitle() =>
      jni.JlObject.fromRef(_getConversationTitle(reference));

  static final _addMessage = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Int64,
                      ffi.Pointer<ffi.Void>)>>(
          "android_app_Notification__MessagingStyle_addMessage")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, int, ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.Notification.MessagingStyle addMessage(java.lang.CharSequence text, long timestamp, java.lang.CharSequence sender)
  Notification_MessagingStyle addMessage(
          jni.JlObject text, int timestamp, jni.JlObject sender) =>
      Notification_MessagingStyle.fromRef(
          _addMessage(reference, text.reference, timestamp, sender.reference));

  static final _addMessage_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Int64,
                      ffi.Pointer<ffi.Void>)>>(
          "android_app_Notification__MessagingStyle_addMessage_1")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, int, ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.Notification.MessagingStyle addMessage(java.lang.CharSequence text, long timestamp, android.app.Person sender)
  Notification_MessagingStyle addMessage_1(
          jni.JlObject text, int timestamp, Person sender) =>
      Notification_MessagingStyle.fromRef(_addMessage_1(
          reference, text.reference, timestamp, sender.reference));

  static final _addMessage_2 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Notification__MessagingStyle_addMessage_2")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.Notification.MessagingStyle addMessage(android.app.Notification.MessagingStyle.Message message)
  Notification_MessagingStyle addMessage_2(
          Notification_MessagingStyle_Message message) =>
      Notification_MessagingStyle.fromRef(
          _addMessage_2(reference, message.reference));

  static final _addHistoricMessage = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Notification__MessagingStyle_addHistoricMessage")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.Notification.MessagingStyle addHistoricMessage(android.app.Notification.MessagingStyle.Message message)
  Notification_MessagingStyle addHistoricMessage(
          Notification_MessagingStyle_Message message) =>
      Notification_MessagingStyle.fromRef(
          _addHistoricMessage(reference, message.reference));

  static final _getMessages = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_Notification__MessagingStyle_getMessages")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.util.List<android.app.Notification.MessagingStyle.Message> getMessages()
  jni.JlObject getMessages() => jni.JlObject.fromRef(_getMessages(reference));

  static final _getHistoricMessages = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_Notification__MessagingStyle_getHistoricMessages")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.util.List<android.app.Notification.MessagingStyle.Message> getHistoricMessages()
  jni.JlObject getHistoricMessages() =>
      jni.JlObject.fromRef(_getHistoricMessages(reference));

  static final _setGroupConversation = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Uint8)>>(
          "android_app_Notification__MessagingStyle_setGroupConversation")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public android.app.Notification.MessagingStyle setGroupConversation(boolean isGroupConversation)
  Notification_MessagingStyle setGroupConversation(bool isGroupConversation) =>
      Notification_MessagingStyle.fromRef(
          _setGroupConversation(reference, isGroupConversation ? 1 : 0));

  static final _isGroupConversation =
      jlookup<ffi.NativeFunction<ffi.Uint8 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_Notification__MessagingStyle_isGroupConversation")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public boolean isGroupConversation()
  bool isGroupConversation() => _isGroupConversation(reference) != 0;
}

class Notification_MessagingStyle_Message extends jni.JlObject {
  Notification_MessagingStyle_Message.fromRef(ffi.Pointer<ffi.Void> ref)
      : super.fromRef(ref);

  static final _ctor = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                      ffi.Int64, ffi.Pointer<ffi.Void>)>>(
          "android_app_Notification__MessagingStyle__Message_new")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, int, ffi.Pointer<ffi.Void>)>();

  /// from: public void <init>(java.lang.CharSequence text, long timestamp, java.lang.CharSequence sender)
  Notification_MessagingStyle_Message(
      jni.JlObject text, int timestamp, jni.JlObject sender)
      : super.fromRef(_ctor(text.reference, timestamp, sender.reference));

  static final _ctor_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                      ffi.Int64, ffi.Pointer<ffi.Void>)>>(
          "android_app_Notification__MessagingStyle__Message_new_1")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, int, ffi.Pointer<ffi.Void>)>();

  /// from: public void <init>(java.lang.CharSequence text, long timestamp, android.app.Person sender)
  Notification_MessagingStyle_Message.ctor_1(
      jni.JlObject text, int timestamp, Person sender)
      : super.fromRef(_ctor_1(text.reference, timestamp, sender.reference));

  static final _setData = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Notification__MessagingStyle__Message_setData")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.Notification.MessagingStyle.Message setData(java.lang.String dataMimeType, android.net.Uri dataUri)
  Notification_MessagingStyle_Message setData(
          jni.JlString dataMimeType, jni.JlObject dataUri) =>
      Notification_MessagingStyle_Message.fromRef(
          _setData(reference, dataMimeType.reference, dataUri.reference));

  static final _getText = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_Notification__MessagingStyle__Message_getText")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.CharSequence getText()
  jni.JlObject getText() => jni.JlObject.fromRef(_getText(reference));

  static final _getTimestamp =
      jlookup<ffi.NativeFunction<ffi.Int64 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_Notification__MessagingStyle__Message_getTimestamp")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public long getTimestamp()
  int getTimestamp() => _getTimestamp(reference);

  static final _getExtras = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_Notification__MessagingStyle__Message_getExtras")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.os.Bundle getExtras()
  os.Bundle getExtras() => os.Bundle.fromRef(_getExtras(reference));

  static final _getSender = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_Notification__MessagingStyle__Message_getSender")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.CharSequence getSender()
  jni.JlObject getSender() => jni.JlObject.fromRef(_getSender(reference));

  static final _getSenderPerson = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_Notification__MessagingStyle__Message_getSenderPerson")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.Person getSenderPerson()
  Person getSenderPerson() => Person.fromRef(_getSenderPerson(reference));

  static final _getDataMimeType = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_Notification__MessagingStyle__Message_getDataMimeType")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.String getDataMimeType()
  jni.JlString getDataMimeType() =>
      jni.JlString.fromRef(_getDataMimeType(reference));

  static final _getDataUri = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_Notification__MessagingStyle__Message_getDataUri")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.net.Uri getDataUri()
  jni.JlObject getDataUri() => jni.JlObject.fromRef(_getDataUri(reference));
}

class Notification_MediaStyle extends Notification_Style {
  Notification_MediaStyle.fromRef(ffi.Pointer<ffi.Void> ref)
      : super.fromRef(ref);

  static final _ctor =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "android_app_Notification__MediaStyle_new")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();

  /// from: public void <init>()
  Notification_MediaStyle() : super.fromRef(_ctor());

  static final _ctor_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_Notification__MediaStyle_new_1")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void <init>(android.app.Notification.Builder builder)
  Notification_MediaStyle.ctor_1(Notification_Builder builder)
      : super.fromRef(_ctor_1(builder.reference));

  static final _setShowActionsInCompactView = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Notification__MediaStyle_setShowActionsInCompactView")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.Notification.MediaStyle setShowActionsInCompactView(int[] actions)
  Notification_MediaStyle setShowActionsInCompactView(jni.JlObject actions) =>
      Notification_MediaStyle.fromRef(
          _setShowActionsInCompactView(reference, actions.reference));

  static final _setMediaSession = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Notification__MediaStyle_setMediaSession")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.Notification.MediaStyle setMediaSession(android.media.session.MediaSession.Token token)
  Notification_MediaStyle setMediaSession(jni.JlObject token) =>
      Notification_MediaStyle.fromRef(
          _setMediaSession(reference, token.reference));
}

class Notification_InboxStyle extends Notification_Style {
  Notification_InboxStyle.fromRef(ffi.Pointer<ffi.Void> ref)
      : super.fromRef(ref);

  static final _ctor =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "android_app_Notification__InboxStyle_new")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();

  /// from: public void <init>()
  Notification_InboxStyle() : super.fromRef(_ctor());

  static final _ctor_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_Notification__InboxStyle_new_1")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void <init>(android.app.Notification.Builder builder)
  Notification_InboxStyle.ctor_1(Notification_Builder builder)
      : super.fromRef(_ctor_1(builder.reference));

  static final _setBigContentTitle = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Notification__InboxStyle_setBigContentTitle")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.Notification.InboxStyle setBigContentTitle(java.lang.CharSequence title)
  Notification_InboxStyle setBigContentTitle(jni.JlObject title) =>
      Notification_InboxStyle.fromRef(
          _setBigContentTitle(reference, title.reference));

  static final _setSummaryText = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Notification__InboxStyle_setSummaryText")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.Notification.InboxStyle setSummaryText(java.lang.CharSequence cs)
  Notification_InboxStyle setSummaryText(jni.JlObject cs) =>
      Notification_InboxStyle.fromRef(_setSummaryText(reference, cs.reference));

  static final _addLine = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Notification__InboxStyle_addLine")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.Notification.InboxStyle addLine(java.lang.CharSequence cs)
  Notification_InboxStyle addLine(jni.JlObject cs) =>
      Notification_InboxStyle.fromRef(_addLine(reference, cs.reference));
}

class Notification_Extender extends jni.JlObject {
  Notification_Extender.fromRef(ffi.Pointer<ffi.Void> ref) : super.fromRef(ref);

  static final _extend = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Notification__Extender_extend")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public abstract android.app.Notification.Builder extend(android.app.Notification.Builder builder)
  Notification_Builder extend(Notification_Builder builder) =>
      Notification_Builder.fromRef(_extend(reference, builder.reference));
}

class Notification_DecoratedMediaCustomViewStyle
    extends Notification_MediaStyle {
  Notification_DecoratedMediaCustomViewStyle.fromRef(ffi.Pointer<ffi.Void> ref)
      : super.fromRef(ref);

  static final _ctor =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "android_app_Notification__DecoratedMediaCustomViewStyle_new")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();

  /// from: public void <init>()
  Notification_DecoratedMediaCustomViewStyle() : super.fromRef(_ctor());
}

class Notification_DecoratedCustomViewStyle extends Notification_Style {
  Notification_DecoratedCustomViewStyle.fromRef(ffi.Pointer<ffi.Void> ref)
      : super.fromRef(ref);

  static final _ctor =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "android_app_Notification__DecoratedCustomViewStyle_new")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();

  /// from: public void <init>()
  Notification_DecoratedCustomViewStyle() : super.fromRef(_ctor());
}

class Notification_CarExtender extends jni.JlObject {
  Notification_CarExtender.fromRef(ffi.Pointer<ffi.Void> ref)
      : super.fromRef(ref);

  static final _ctor =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "android_app_Notification__CarExtender_new")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();

  /// from: public void <init>()
  Notification_CarExtender() : super.fromRef(_ctor());

  static final _ctor_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_Notification__CarExtender_new_1")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void <init>(android.app.Notification notif)
  Notification_CarExtender.ctor_1(Notification notif)
      : super.fromRef(_ctor_1(notif.reference));

  static final _extend = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Notification__CarExtender_extend")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.Notification.Builder extend(android.app.Notification.Builder builder)
  Notification_Builder extend(Notification_Builder builder) =>
      Notification_Builder.fromRef(_extend(reference, builder.reference));

  static final _setColor = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_app_Notification__CarExtender_setColor")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public android.app.Notification.CarExtender setColor(int color)
  Notification_CarExtender setColor(int color) =>
      Notification_CarExtender.fromRef(_setColor(reference, color));

  static final _getColor =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_Notification__CarExtender_getColor")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int getColor()
  int getColor() => _getColor(reference);

  static final _setLargeIcon = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Notification__CarExtender_setLargeIcon")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.Notification.CarExtender setLargeIcon(android.graphics.Bitmap largeIcon)
  Notification_CarExtender setLargeIcon(jni.JlObject largeIcon) =>
      Notification_CarExtender.fromRef(
          _setLargeIcon(reference, largeIcon.reference));

  static final _getLargeIcon = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_Notification__CarExtender_getLargeIcon")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.graphics.Bitmap getLargeIcon()
  jni.JlObject getLargeIcon() => jni.JlObject.fromRef(_getLargeIcon(reference));

  static final _setUnreadConversation = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Notification__CarExtender_setUnreadConversation")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.Notification.CarExtender setUnreadConversation(android.app.Notification.CarExtender.UnreadConversation unreadConversation)
  Notification_CarExtender setUnreadConversation(
          Notification_CarExtender_UnreadConversation unreadConversation) =>
      Notification_CarExtender.fromRef(
          _setUnreadConversation(reference, unreadConversation.reference));

  static final _getUnreadConversation = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_Notification__CarExtender_getUnreadConversation")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.Notification.CarExtender.UnreadConversation getUnreadConversation()
  Notification_CarExtender_UnreadConversation getUnreadConversation() =>
      Notification_CarExtender_UnreadConversation.fromRef(
          _getUnreadConversation(reference));
}

class Notification_CarExtender_UnreadConversation extends jni.JlObject {
  Notification_CarExtender_UnreadConversation.fromRef(ffi.Pointer<ffi.Void> ref)
      : super.fromRef(ref);

  static final _ctor = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Int64)>>(
          "android_app_Notification__CarExtender__UnreadConversation_new")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              int)>();

  /// from: void <init>(java.lang.String[] messages, android.app.RemoteInput remoteInput, android.app.PendingIntent replyPendingIntent, android.app.PendingIntent readPendingIntent, java.lang.String[] participants, long latestTimestamp)
  Notification_CarExtender_UnreadConversation(
      jni.JlObject messages,
      RemoteInput remoteInput,
      PendingIntent replyPendingIntent,
      PendingIntent readPendingIntent,
      jni.JlObject participants,
      int latestTimestamp)
      : super.fromRef(_ctor(
            messages.reference,
            remoteInput.reference,
            replyPendingIntent.reference,
            readPendingIntent.reference,
            participants.reference,
            latestTimestamp));

  static final _getMessages = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_Notification__CarExtender__UnreadConversation_getMessages")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.String[] getMessages()
  jni.JlObject getMessages() => jni.JlObject.fromRef(_getMessages(reference));

  static final _getRemoteInput = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_Notification__CarExtender__UnreadConversation_getRemoteInput")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.RemoteInput getRemoteInput()
  RemoteInput getRemoteInput() =>
      RemoteInput.fromRef(_getRemoteInput(reference));

  static final _getReplyPendingIntent = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_Notification__CarExtender__UnreadConversation_getReplyPendingIntent")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.PendingIntent getReplyPendingIntent()
  PendingIntent getReplyPendingIntent() =>
      PendingIntent.fromRef(_getReplyPendingIntent(reference));

  static final _getReadPendingIntent = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_Notification__CarExtender__UnreadConversation_getReadPendingIntent")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.PendingIntent getReadPendingIntent()
  PendingIntent getReadPendingIntent() =>
      PendingIntent.fromRef(_getReadPendingIntent(reference));

  static final _getParticipants = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_Notification__CarExtender__UnreadConversation_getParticipants")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.String[] getParticipants()
  jni.JlObject getParticipants() =>
      jni.JlObject.fromRef(_getParticipants(reference));

  static final _getParticipant = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_Notification__CarExtender__UnreadConversation_getParticipant")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.String getParticipant()
  jni.JlString getParticipant() =>
      jni.JlString.fromRef(_getParticipant(reference));

  static final _getLatestTimestamp = jlookup<
              ffi.NativeFunction<ffi.Int64 Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_Notification__CarExtender__UnreadConversation_getLatestTimestamp")
      .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public long getLatestTimestamp()
  int getLatestTimestamp() => _getLatestTimestamp(reference);
}

class Notification_CarExtender_Builder extends jni.JlObject {
  Notification_CarExtender_Builder.fromRef(ffi.Pointer<ffi.Void> ref)
      : super.fromRef(ref);

  static final _ctor = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_Notification__CarExtender__Builder_new")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void <init>(java.lang.String name)
  Notification_CarExtender_Builder(jni.JlString name)
      : super.fromRef(_ctor(name.reference));

  static final _addMessage = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Notification__CarExtender__Builder_addMessage")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.Notification.CarExtender.Builder addMessage(java.lang.String message)
  Notification_CarExtender_Builder addMessage(jni.JlString message) =>
      Notification_CarExtender_Builder.fromRef(
          _addMessage(reference, message.reference));

  static final _setReplyAction = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Notification__CarExtender__Builder_setReplyAction")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.Notification.CarExtender.Builder setReplyAction(android.app.PendingIntent pendingIntent, android.app.RemoteInput remoteInput)
  Notification_CarExtender_Builder setReplyAction(
          PendingIntent pendingIntent, RemoteInput remoteInput) =>
      Notification_CarExtender_Builder.fromRef(_setReplyAction(
          reference, pendingIntent.reference, remoteInput.reference));

  static final _setReadPendingIntent = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Notification__CarExtender__Builder_setReadPendingIntent")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.Notification.CarExtender.Builder setReadPendingIntent(android.app.PendingIntent pendingIntent)
  Notification_CarExtender_Builder setReadPendingIntent(
          PendingIntent pendingIntent) =>
      Notification_CarExtender_Builder.fromRef(
          _setReadPendingIntent(reference, pendingIntent.reference));

  static final _setLatestTimestamp = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Int64)>>(
          "android_app_Notification__CarExtender__Builder_setLatestTimestamp")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public android.app.Notification.CarExtender.Builder setLatestTimestamp(long timestamp)
  Notification_CarExtender_Builder setLatestTimestamp(int timestamp) =>
      Notification_CarExtender_Builder.fromRef(
          _setLatestTimestamp(reference, timestamp));

  static final _build = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_Notification__CarExtender__Builder_build")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.Notification.CarExtender.UnreadConversation build()
  Notification_CarExtender_UnreadConversation build() =>
      Notification_CarExtender_UnreadConversation.fromRef(_build(reference));
}

class Notification_Builder extends jni.JlObject {
  Notification_Builder.fromRef(ffi.Pointer<ffi.Void> ref) : super.fromRef(ref);

  static final _ctor = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Notification__Builder_new")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void <init>(android.content.Context context, java.lang.String channelId)
  Notification_Builder(content.Context context, jni.JlString channelId)
      : super.fromRef(_ctor(context.reference, channelId.reference));

  static final _ctor_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_Notification__Builder_new_1")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void <init>(android.content.Context context)
  Notification_Builder.ctor_1(content.Context context)
      : super.fromRef(_ctor_1(context.reference));

  static final _setShortcutId = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Notification__Builder_setShortcutId")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.Notification.Builder setShortcutId(java.lang.String shortcutId)
  Notification_Builder setShortcutId(jni.JlString shortcutId) =>
      Notification_Builder.fromRef(
          _setShortcutId(reference, shortcutId.reference));

  static final _setBadgeIconType = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "android_app_Notification__Builder_setBadgeIconType")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public android.app.Notification.Builder setBadgeIconType(int icon)
  Notification_Builder setBadgeIconType(int icon) =>
      Notification_Builder.fromRef(_setBadgeIconType(reference, icon));

  static final _setGroupAlertBehavior = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "android_app_Notification__Builder_setGroupAlertBehavior")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public android.app.Notification.Builder setGroupAlertBehavior(int groupAlertBehavior)
  Notification_Builder setGroupAlertBehavior(int groupAlertBehavior) =>
      Notification_Builder.fromRef(
          _setGroupAlertBehavior(reference, groupAlertBehavior));

  static final _setChannelId = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Notification__Builder_setChannelId")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.Notification.Builder setChannelId(java.lang.String channelId)
  Notification_Builder setChannelId(jni.JlString channelId) =>
      Notification_Builder.fromRef(
          _setChannelId(reference, channelId.reference));

  static final _setTimeoutAfter = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Int64)>>(
          "android_app_Notification__Builder_setTimeoutAfter")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public android.app.Notification.Builder setTimeoutAfter(long durationMs)
  Notification_Builder setTimeoutAfter(int durationMs) =>
      Notification_Builder.fromRef(_setTimeoutAfter(reference, durationMs));

  static final _setWhen = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                  ffi.Int64)>>("android_app_Notification__Builder_setWhen")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public android.app.Notification.Builder setWhen(long when)
  Notification_Builder setWhen(int when) =>
      Notification_Builder.fromRef(_setWhen(reference, when));

  static final _setShowWhen = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                  ffi.Uint8)>>("android_app_Notification__Builder_setShowWhen")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public android.app.Notification.Builder setShowWhen(boolean show)
  Notification_Builder setShowWhen(bool show_) =>
      Notification_Builder.fromRef(_setShowWhen(reference, show_ ? 1 : 0));

  static final _setUsesChronometer = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Uint8)>>(
          "android_app_Notification__Builder_setUsesChronometer")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public android.app.Notification.Builder setUsesChronometer(boolean b)
  Notification_Builder setUsesChronometer(bool b) =>
      Notification_Builder.fromRef(_setUsesChronometer(reference, b ? 1 : 0));

  static final _setChronometerCountDown = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Uint8)>>(
          "android_app_Notification__Builder_setChronometerCountDown")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public android.app.Notification.Builder setChronometerCountDown(boolean countDown)
  Notification_Builder setChronometerCountDown(bool countDown) =>
      Notification_Builder.fromRef(
          _setChronometerCountDown(reference, countDown ? 1 : 0));

  static final _setSmallIcon = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_app_Notification__Builder_setSmallIcon")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public android.app.Notification.Builder setSmallIcon(int icon)
  Notification_Builder setSmallIcon(int icon) =>
      Notification_Builder.fromRef(_setSmallIcon(reference, icon));

  static final _setSmallIcon_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Int32, ffi.Int32)>>(
          "android_app_Notification__Builder_setSmallIcon_1")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int, int)>();

  /// from: public android.app.Notification.Builder setSmallIcon(int icon, int level)
  Notification_Builder setSmallIcon_1(int icon, int level) =>
      Notification_Builder.fromRef(_setSmallIcon_1(reference, icon, level));

  static final _setSmallIcon_2 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Notification__Builder_setSmallIcon_2")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.Notification.Builder setSmallIcon(android.graphics.drawable.Icon icon)
  Notification_Builder setSmallIcon_2(jni.JlObject icon) =>
      Notification_Builder.fromRef(_setSmallIcon_2(reference, icon.reference));

  static final _setContentTitle = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Notification__Builder_setContentTitle")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.Notification.Builder setContentTitle(java.lang.CharSequence title)
  Notification_Builder setContentTitle(jni.JlObject title) =>
      Notification_Builder.fromRef(
          _setContentTitle(reference, title.reference));

  static final _setContentText = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Notification__Builder_setContentText")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.Notification.Builder setContentText(java.lang.CharSequence text)
  Notification_Builder setContentText(jni.JlObject text) =>
      Notification_Builder.fromRef(_setContentText(reference, text.reference));

  static final _setSubText = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Notification__Builder_setSubText")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.Notification.Builder setSubText(java.lang.CharSequence text)
  Notification_Builder setSubText(jni.JlObject text) =>
      Notification_Builder.fromRef(_setSubText(reference, text.reference));

  static final _setSettingsText = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Notification__Builder_setSettingsText")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.Notification.Builder setSettingsText(java.lang.CharSequence text)
  Notification_Builder setSettingsText(jni.JlObject text) =>
      Notification_Builder.fromRef(_setSettingsText(reference, text.reference));

  static final _setRemoteInputHistory = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Notification__Builder_setRemoteInputHistory")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.Notification.Builder setRemoteInputHistory(java.lang.CharSequence[] text)
  Notification_Builder setRemoteInputHistory(jni.JlObject text) =>
      Notification_Builder.fromRef(
          _setRemoteInputHistory(reference, text.reference));

  static final _setNumber = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_app_Notification__Builder_setNumber")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public android.app.Notification.Builder setNumber(int number)
  Notification_Builder setNumber(int number) =>
      Notification_Builder.fromRef(_setNumber(reference, number));

  static final _setContentInfo = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Notification__Builder_setContentInfo")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.Notification.Builder setContentInfo(java.lang.CharSequence info)
  Notification_Builder setContentInfo(jni.JlObject info) =>
      Notification_Builder.fromRef(_setContentInfo(reference, info.reference));

  static final _setProgress = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Int32,
                  ffi.Int32,
                  ffi.Uint8)>>("android_app_Notification__Builder_setProgress")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, int, int, int)>();

  /// from: public android.app.Notification.Builder setProgress(int max, int progress, boolean indeterminate)
  Notification_Builder setProgress(int max, int progress, bool indeterminate) =>
      Notification_Builder.fromRef(
          _setProgress(reference, max, progress, indeterminate ? 1 : 0));

  static final _setContent = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Notification__Builder_setContent")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.Notification.Builder setContent(android.widget.RemoteViews views)
  Notification_Builder setContent(jni.JlObject views) =>
      Notification_Builder.fromRef(_setContent(reference, views.reference));

  static final _setCustomContentView = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Notification__Builder_setCustomContentView")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.Notification.Builder setCustomContentView(android.widget.RemoteViews contentView)
  Notification_Builder setCustomContentView(jni.JlObject contentView) =>
      Notification_Builder.fromRef(
          _setCustomContentView(reference, contentView.reference));

  static final _setCustomBigContentView = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Notification__Builder_setCustomBigContentView")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.Notification.Builder setCustomBigContentView(android.widget.RemoteViews contentView)
  Notification_Builder setCustomBigContentView(jni.JlObject contentView) =>
      Notification_Builder.fromRef(
          _setCustomBigContentView(reference, contentView.reference));

  static final _setCustomHeadsUpContentView = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Notification__Builder_setCustomHeadsUpContentView")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.Notification.Builder setCustomHeadsUpContentView(android.widget.RemoteViews contentView)
  Notification_Builder setCustomHeadsUpContentView(jni.JlObject contentView) =>
      Notification_Builder.fromRef(
          _setCustomHeadsUpContentView(reference, contentView.reference));

  static final _setContentIntent = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Notification__Builder_setContentIntent")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.Notification.Builder setContentIntent(android.app.PendingIntent intent)
  Notification_Builder setContentIntent(PendingIntent intent) =>
      Notification_Builder.fromRef(
          _setContentIntent(reference, intent.reference));

  static final _setDeleteIntent = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Notification__Builder_setDeleteIntent")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.Notification.Builder setDeleteIntent(android.app.PendingIntent intent)
  Notification_Builder setDeleteIntent(PendingIntent intent) =>
      Notification_Builder.fromRef(
          _setDeleteIntent(reference, intent.reference));

  static final _setFullScreenIntent = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Uint8)>>(
          "android_app_Notification__Builder_setFullScreenIntent")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public android.app.Notification.Builder setFullScreenIntent(android.app.PendingIntent intent, boolean highPriority)
  Notification_Builder setFullScreenIntent(
          PendingIntent intent, bool highPriority) =>
      Notification_Builder.fromRef(_setFullScreenIntent(
          reference, intent.reference, highPriority ? 1 : 0));

  static final _setTicker = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Notification__Builder_setTicker")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.Notification.Builder setTicker(java.lang.CharSequence tickerText)
  Notification_Builder setTicker(jni.JlObject tickerText) =>
      Notification_Builder.fromRef(_setTicker(reference, tickerText.reference));

  static final _setTicker_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Notification__Builder_setTicker_1")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.Notification.Builder setTicker(java.lang.CharSequence tickerText, android.widget.RemoteViews views)
  Notification_Builder setTicker_1(
          jni.JlObject tickerText, jni.JlObject views) =>
      Notification_Builder.fromRef(
          _setTicker_1(reference, tickerText.reference, views.reference));

  static final _setLargeIcon = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Notification__Builder_setLargeIcon")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.Notification.Builder setLargeIcon(android.graphics.Bitmap b)
  Notification_Builder setLargeIcon(jni.JlObject b) =>
      Notification_Builder.fromRef(_setLargeIcon(reference, b.reference));

  static final _setLargeIcon_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Notification__Builder_setLargeIcon_1")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.Notification.Builder setLargeIcon(android.graphics.drawable.Icon icon)
  Notification_Builder setLargeIcon_1(jni.JlObject icon) =>
      Notification_Builder.fromRef(_setLargeIcon_1(reference, icon.reference));

  static final _setSound = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Notification__Builder_setSound")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.Notification.Builder setSound(android.net.Uri sound)
  Notification_Builder setSound(jni.JlObject sound) =>
      Notification_Builder.fromRef(_setSound(reference, sound.reference));

  static final _setSound_1 = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_app_Notification__Builder_setSound_1")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public android.app.Notification.Builder setSound(android.net.Uri sound, int streamType)
  Notification_Builder setSound_1(jni.JlObject sound, int streamType) =>
      Notification_Builder.fromRef(
          _setSound_1(reference, sound.reference, streamType));

  static final _setSound_2 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Notification__Builder_setSound_2")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.Notification.Builder setSound(android.net.Uri sound, android.media.AudioAttributes audioAttributes)
  Notification_Builder setSound_2(
          jni.JlObject sound, jni.JlObject audioAttributes) =>
      Notification_Builder.fromRef(
          _setSound_2(reference, sound.reference, audioAttributes.reference));

  static final _setVibrate = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Notification__Builder_setVibrate")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.Notification.Builder setVibrate(long[] pattern)
  Notification_Builder setVibrate(jni.JlObject pattern) =>
      Notification_Builder.fromRef(_setVibrate(reference, pattern.reference));

  static final _setLights = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Int32,
                  ffi.Int32,
                  ffi.Int32)>>("android_app_Notification__Builder_setLights")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, int, int, int)>();

  /// from: public android.app.Notification.Builder setLights(int argb, int onMs, int offMs)
  Notification_Builder setLights(int argb, int onMs, int offMs) =>
      Notification_Builder.fromRef(_setLights(reference, argb, onMs, offMs));

  static final _setOngoing = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                  ffi.Uint8)>>("android_app_Notification__Builder_setOngoing")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public android.app.Notification.Builder setOngoing(boolean ongoing)
  Notification_Builder setOngoing(bool ongoing) =>
      Notification_Builder.fromRef(_setOngoing(reference, ongoing ? 1 : 0));

  static final _setColorized = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                  ffi.Uint8)>>("android_app_Notification__Builder_setColorized")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public android.app.Notification.Builder setColorized(boolean colorize)
  Notification_Builder setColorized(bool colorize) =>
      Notification_Builder.fromRef(_setColorized(reference, colorize ? 1 : 0));

  static final _setOnlyAlertOnce = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Uint8)>>(
          "android_app_Notification__Builder_setOnlyAlertOnce")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public android.app.Notification.Builder setOnlyAlertOnce(boolean onlyAlertOnce)
  Notification_Builder setOnlyAlertOnce(bool onlyAlertOnce) =>
      Notification_Builder.fromRef(
          _setOnlyAlertOnce(reference, onlyAlertOnce ? 1 : 0));

  static final _setAutoCancel = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Uint8)>>(
          "android_app_Notification__Builder_setAutoCancel")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public android.app.Notification.Builder setAutoCancel(boolean autoCancel)
  Notification_Builder setAutoCancel(bool autoCancel) =>
      Notification_Builder.fromRef(
          _setAutoCancel(reference, autoCancel ? 1 : 0));

  static final _setLocalOnly = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                  ffi.Uint8)>>("android_app_Notification__Builder_setLocalOnly")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public android.app.Notification.Builder setLocalOnly(boolean localOnly)
  Notification_Builder setLocalOnly(bool localOnly) =>
      Notification_Builder.fromRef(_setLocalOnly(reference, localOnly ? 1 : 0));

  static final _setDefaults = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_app_Notification__Builder_setDefaults")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public android.app.Notification.Builder setDefaults(int defaults)
  Notification_Builder setDefaults(int defaults) =>
      Notification_Builder.fromRef(_setDefaults(reference, defaults));

  static final _setPriority = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_app_Notification__Builder_setPriority")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public android.app.Notification.Builder setPriority(int pri)
  Notification_Builder setPriority(int pri) =>
      Notification_Builder.fromRef(_setPriority(reference, pri));

  static final _setCategory = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Notification__Builder_setCategory")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.Notification.Builder setCategory(java.lang.String category)
  Notification_Builder setCategory(jni.JlString category) =>
      Notification_Builder.fromRef(_setCategory(reference, category.reference));

  static final _addPerson = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Notification__Builder_addPerson")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.Notification.Builder addPerson(java.lang.String uri)
  Notification_Builder addPerson(jni.JlString uri) =>
      Notification_Builder.fromRef(_addPerson(reference, uri.reference));

  static final _addPerson_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Notification__Builder_addPerson_1")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.Notification.Builder addPerson(android.app.Person person)
  Notification_Builder addPerson_1(Person person) =>
      Notification_Builder.fromRef(_addPerson_1(reference, person.reference));

  static final _setGroup = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Notification__Builder_setGroup")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.Notification.Builder setGroup(java.lang.String groupKey)
  Notification_Builder setGroup(jni.JlString groupKey) =>
      Notification_Builder.fromRef(_setGroup(reference, groupKey.reference));

  static final _setGroupSummary = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Uint8)>>(
          "android_app_Notification__Builder_setGroupSummary")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public android.app.Notification.Builder setGroupSummary(boolean isGroupSummary)
  Notification_Builder setGroupSummary(bool isGroupSummary) =>
      Notification_Builder.fromRef(
          _setGroupSummary(reference, isGroupSummary ? 1 : 0));

  static final _setSortKey = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Notification__Builder_setSortKey")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.Notification.Builder setSortKey(java.lang.String sortKey)
  Notification_Builder setSortKey(jni.JlString sortKey) =>
      Notification_Builder.fromRef(_setSortKey(reference, sortKey.reference));

  static final _addExtras = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Notification__Builder_addExtras")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.Notification.Builder addExtras(android.os.Bundle extras)
  Notification_Builder addExtras(os.Bundle extras) =>
      Notification_Builder.fromRef(_addExtras(reference, extras.reference));

  static final _setExtras = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Notification__Builder_setExtras")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.Notification.Builder setExtras(android.os.Bundle extras)
  Notification_Builder setExtras(os.Bundle extras) =>
      Notification_Builder.fromRef(_setExtras(reference, extras.reference));

  static final _getExtras = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_Notification__Builder_getExtras")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.os.Bundle getExtras()
  os.Bundle getExtras() => os.Bundle.fromRef(_getExtras(reference));

  static final _addAction = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Int32,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>)>>(
          "android_app_Notification__Builder_addAction")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.Notification.Builder addAction(int icon, java.lang.CharSequence title, android.app.PendingIntent intent)
  Notification_Builder addAction(
          int icon, jni.JlObject title, PendingIntent intent) =>
      Notification_Builder.fromRef(
          _addAction(reference, icon, title.reference, intent.reference));

  static final _addAction_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Notification__Builder_addAction_1")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.Notification.Builder addAction(android.app.Notification.Action action)
  Notification_Builder addAction_1(Notification_Action action) =>
      Notification_Builder.fromRef(_addAction_1(reference, action.reference));

  static final _setActions = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Notification__Builder_setActions")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.Notification.Builder setActions(android.app.Notification.Action[] actions)
  Notification_Builder setActions(jni.JlObject actions) =>
      Notification_Builder.fromRef(_setActions(reference, actions.reference));

  static final _setStyle = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Notification__Builder_setStyle")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.Notification.Builder setStyle(android.app.Notification.Style style)
  Notification_Builder setStyle(Notification_Style style) =>
      Notification_Builder.fromRef(_setStyle(reference, style.reference));

  static final _getStyle = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_Notification__Builder_getStyle")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.Notification.Style getStyle()
  Notification_Style getStyle() =>
      Notification_Style.fromRef(_getStyle(reference));

  static final _setVisibility = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "android_app_Notification__Builder_setVisibility")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public android.app.Notification.Builder setVisibility(int visibility)
  Notification_Builder setVisibility(int visibility) =>
      Notification_Builder.fromRef(_setVisibility(reference, visibility));

  static final _setPublicVersion = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Notification__Builder_setPublicVersion")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.Notification.Builder setPublicVersion(android.app.Notification n)
  Notification_Builder setPublicVersion(Notification n) =>
      Notification_Builder.fromRef(_setPublicVersion(reference, n.reference));

  static final _extend = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Notification__Builder_extend")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.Notification.Builder extend(android.app.Notification.Extender extender)
  Notification_Builder extend(Notification_Extender extender) =>
      Notification_Builder.fromRef(_extend(reference, extender.reference));

  static final _setColor = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_app_Notification__Builder_setColor")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public android.app.Notification.Builder setColor(int argb)
  Notification_Builder setColor(int argb) =>
      Notification_Builder.fromRef(_setColor(reference, argb));

  static final _createContentView = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_Notification__Builder_createContentView")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.widget.RemoteViews createContentView()
  jni.JlObject createContentView() =>
      jni.JlObject.fromRef(_createContentView(reference));

  static final _createBigContentView = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_Notification__Builder_createBigContentView")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.widget.RemoteViews createBigContentView()
  jni.JlObject createBigContentView() =>
      jni.JlObject.fromRef(_createBigContentView(reference));

  static final _createHeadsUpContentView = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_Notification__Builder_createHeadsUpContentView")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.widget.RemoteViews createHeadsUpContentView()
  jni.JlObject createHeadsUpContentView() =>
      jni.JlObject.fromRef(_createHeadsUpContentView(reference));

  static final _recoverBuilder = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Notification__Builder_recoverBuilder")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: static public android.app.Notification.Builder recoverBuilder(android.content.Context context, android.app.Notification n)
  static Notification_Builder recoverBuilder(
          content.Context context, Notification n) =>
      Notification_Builder.fromRef(
          _recoverBuilder(context.reference, n.reference));

  static final _getNotification = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_Notification__Builder_getNotification")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.Notification getNotification()
  Notification getNotification() =>
      Notification.fromRef(_getNotification(reference));

  static final _build = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_Notification__Builder_build")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.Notification build()
  Notification build() => Notification.fromRef(_build(reference));
}

class Notification_BigTextStyle extends Notification_Style {
  Notification_BigTextStyle.fromRef(ffi.Pointer<ffi.Void> ref)
      : super.fromRef(ref);

  static final _ctor =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "android_app_Notification__BigTextStyle_new")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();

  /// from: public void <init>()
  Notification_BigTextStyle() : super.fromRef(_ctor());

  static final _ctor_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_Notification__BigTextStyle_new_1")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void <init>(android.app.Notification.Builder builder)
  Notification_BigTextStyle.ctor_1(Notification_Builder builder)
      : super.fromRef(_ctor_1(builder.reference));

  static final _setBigContentTitle = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Notification__BigTextStyle_setBigContentTitle")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.Notification.BigTextStyle setBigContentTitle(java.lang.CharSequence title)
  Notification_BigTextStyle setBigContentTitle(jni.JlObject title) =>
      Notification_BigTextStyle.fromRef(
          _setBigContentTitle(reference, title.reference));

  static final _setSummaryText = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Notification__BigTextStyle_setSummaryText")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.Notification.BigTextStyle setSummaryText(java.lang.CharSequence cs)
  Notification_BigTextStyle setSummaryText(jni.JlObject cs) =>
      Notification_BigTextStyle.fromRef(
          _setSummaryText(reference, cs.reference));

  static final _bigText = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Notification__BigTextStyle_bigText")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.Notification.BigTextStyle bigText(java.lang.CharSequence cs)
  Notification_BigTextStyle bigText(jni.JlObject cs) =>
      Notification_BigTextStyle.fromRef(_bigText(reference, cs.reference));
}

class Notification_BigPictureStyle extends Notification_Style {
  Notification_BigPictureStyle.fromRef(ffi.Pointer<ffi.Void> ref)
      : super.fromRef(ref);

  static final _ctor =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "android_app_Notification__BigPictureStyle_new")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();

  /// from: public void <init>()
  Notification_BigPictureStyle() : super.fromRef(_ctor());

  static final _ctor_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_Notification__BigPictureStyle_new_1")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void <init>(android.app.Notification.Builder builder)
  Notification_BigPictureStyle.ctor_1(Notification_Builder builder)
      : super.fromRef(_ctor_1(builder.reference));

  static final _setBigContentTitle = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Notification__BigPictureStyle_setBigContentTitle")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.Notification.BigPictureStyle setBigContentTitle(java.lang.CharSequence title)
  Notification_BigPictureStyle setBigContentTitle(jni.JlObject title) =>
      Notification_BigPictureStyle.fromRef(
          _setBigContentTitle(reference, title.reference));

  static final _setSummaryText = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Notification__BigPictureStyle_setSummaryText")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.Notification.BigPictureStyle setSummaryText(java.lang.CharSequence cs)
  Notification_BigPictureStyle setSummaryText(jni.JlObject cs) =>
      Notification_BigPictureStyle.fromRef(
          _setSummaryText(reference, cs.reference));

  static final _bigPicture = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Notification__BigPictureStyle_bigPicture")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.Notification.BigPictureStyle bigPicture(android.graphics.Bitmap b)
  Notification_BigPictureStyle bigPicture(jni.JlObject b) =>
      Notification_BigPictureStyle.fromRef(_bigPicture(reference, b.reference));

  static final _bigLargeIcon = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Notification__BigPictureStyle_bigLargeIcon")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.Notification.BigPictureStyle bigLargeIcon(android.graphics.Bitmap b)
  Notification_BigPictureStyle bigLargeIcon(jni.JlObject b) =>
      Notification_BigPictureStyle.fromRef(
          _bigLargeIcon(reference, b.reference));

  static final _bigLargeIcon_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Notification__BigPictureStyle_bigLargeIcon_1")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.Notification.BigPictureStyle bigLargeIcon(android.graphics.drawable.Icon icon)
  Notification_BigPictureStyle bigLargeIcon_1(jni.JlObject icon) =>
      Notification_BigPictureStyle.fromRef(
          _bigLargeIcon_1(reference, icon.reference));
}

class Notification_Action extends jni.JlObject {
  Notification_Action.fromRef(ffi.Pointer<ffi.Void> ref) : super.fromRef(ref);

  /// from: static public final android.os.Parcelable.Creator<android.app.Notification.Action> CREATOR
  static final _getCREATOR =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "get_android_app_Notification__Action_CREATOR")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();
  static os.Parcelable_Creator get CREATOR =>
      os.Parcelable_Creator.fromRef(_getCREATOR());

  /// from: static public final int SEMANTIC_ACTION_ARCHIVE
  static const SEMANTIC_ACTION_ARCHIVE = 5;

  /// from: static public final int SEMANTIC_ACTION_CALL
  static const SEMANTIC_ACTION_CALL = 10;

  /// from: static public final int SEMANTIC_ACTION_DELETE
  static const SEMANTIC_ACTION_DELETE = 4;

  /// from: static public final int SEMANTIC_ACTION_MARK_AS_READ
  static const SEMANTIC_ACTION_MARK_AS_READ = 2;

  /// from: static public final int SEMANTIC_ACTION_MARK_AS_UNREAD
  static const SEMANTIC_ACTION_MARK_AS_UNREAD = 3;

  /// from: static public final int SEMANTIC_ACTION_MUTE
  static const SEMANTIC_ACTION_MUTE = 6;

  /// from: static public final int SEMANTIC_ACTION_NONE
  static const SEMANTIC_ACTION_NONE = 0;

  /// from: static public final int SEMANTIC_ACTION_REPLY
  static const SEMANTIC_ACTION_REPLY = 1;

  /// from: static public final int SEMANTIC_ACTION_THUMBS_DOWN
  static const SEMANTIC_ACTION_THUMBS_DOWN = 9;

  /// from: static public final int SEMANTIC_ACTION_THUMBS_UP
  static const SEMANTIC_ACTION_THUMBS_UP = 8;

  /// from: static public final int SEMANTIC_ACTION_UNMUTE
  static const SEMANTIC_ACTION_UNMUTE = 7;

  /// from: public android.app.PendingIntent actionIntent
  static final _getactionIntent = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_app_Notification__Action_actionIntent")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>();
  PendingIntent get actionIntent =>
      PendingIntent.fromRef(_getactionIntent(reference));
  static final _setactionIntent = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "set_android_app_Notification__Action_actionIntent")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();
  set actionIntent(PendingIntent value) =>
      _setactionIntent(reference, value.reference);

  /// from: public int icon
  static final _geticon = jlookup<
          ffi.NativeFunction<
              ffi.Int32 Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_app_Notification__Action_icon")
      .asFunction<
          int Function(
    ffi.Pointer<ffi.Void>,
  )>();
  int get icon => _geticon(reference);
  static final _seticon = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("set_android_app_Notification__Action_icon")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();
  set icon(int value) => _seticon(reference, value);

  /// from: public java.lang.CharSequence title
  static final _gettitle = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_app_Notification__Action_title")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>();
  jni.JlObject get title => jni.JlObject.fromRef(_gettitle(reference));
  static final _settitle = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "set_android_app_Notification__Action_title")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();
  set title(jni.JlObject value) => _settitle(reference, value.reference);

  static final _ctor = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Int32,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Notification__Action_new")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              int, ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void <init>(int icon, java.lang.CharSequence title, android.app.PendingIntent intent)
  Notification_Action(int icon, jni.JlObject title, PendingIntent intent)
      : super.fromRef(_ctor(icon, title.reference, intent.reference));

  static final _getIcon = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_Notification__Action_getIcon")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.graphics.drawable.Icon getIcon()
  jni.JlObject getIcon() => jni.JlObject.fromRef(_getIcon(reference));

  static final _getExtras = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_Notification__Action_getExtras")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.os.Bundle getExtras()
  os.Bundle getExtras() => os.Bundle.fromRef(_getExtras(reference));

  static final _getAllowGeneratedReplies =
      jlookup<ffi.NativeFunction<ffi.Uint8 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_Notification__Action_getAllowGeneratedReplies")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public boolean getAllowGeneratedReplies()
  bool getAllowGeneratedReplies() => _getAllowGeneratedReplies(reference) != 0;

  static final _getRemoteInputs = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_Notification__Action_getRemoteInputs")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.RemoteInput[] getRemoteInputs()
  jni.JlObject getRemoteInputs() =>
      jni.JlObject.fromRef(_getRemoteInputs(reference));

  static final _getSemanticAction =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_Notification__Action_getSemanticAction")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int getSemanticAction()
  int getSemanticAction() => _getSemanticAction(reference);

  static final _getDataOnlyRemoteInputs = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_Notification__Action_getDataOnlyRemoteInputs")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.RemoteInput[] getDataOnlyRemoteInputs()
  jni.JlObject getDataOnlyRemoteInputs() =>
      jni.JlObject.fromRef(_getDataOnlyRemoteInputs(reference));

  static final _clone = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_Notification__Action_clone")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.Notification.Action clone()
  Notification_Action clone() => Notification_Action.fromRef(_clone(reference));

  static final _describeContents =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_Notification__Action_describeContents")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int describeContents()
  int describeContents() => _describeContents(reference);

  static final _writeToParcel = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_app_Notification__Action_writeToParcel")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public void writeToParcel(android.os.Parcel out, int flags)
  void writeToParcel(os.Parcel out, int flags) =>
      _writeToParcel(reference, out.reference, flags);
}

class Notification_Action_WearableExtender extends jni.JlObject {
  Notification_Action_WearableExtender.fromRef(ffi.Pointer<ffi.Void> ref)
      : super.fromRef(ref);

  static final _ctor =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "android_app_Notification__Action__WearableExtender_new")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();

  /// from: public void <init>()
  Notification_Action_WearableExtender() : super.fromRef(_ctor());

  static final _ctor_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_Notification__Action__WearableExtender_new_1")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void <init>(android.app.Notification.Action action)
  Notification_Action_WearableExtender.ctor_1(Notification_Action action)
      : super.fromRef(_ctor_1(action.reference));

  static final _extend = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Notification__Action__WearableExtender_extend")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.Notification.Action.Builder extend(android.app.Notification.Action.Builder builder)
  Notification_Action_Builder extend(Notification_Action_Builder builder) =>
      Notification_Action_Builder.fromRef(
          _extend(reference, builder.reference));

  static final _clone = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_Notification__Action__WearableExtender_clone")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.Notification.Action.WearableExtender clone()
  Notification_Action_WearableExtender clone() =>
      Notification_Action_WearableExtender.fromRef(_clone(reference));

  static final _setAvailableOffline = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Uint8)>>(
          "android_app_Notification__Action__WearableExtender_setAvailableOffline")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public android.app.Notification.Action.WearableExtender setAvailableOffline(boolean availableOffline)
  Notification_Action_WearableExtender setAvailableOffline(
          bool availableOffline) =>
      Notification_Action_WearableExtender.fromRef(
          _setAvailableOffline(reference, availableOffline ? 1 : 0));

  static final _isAvailableOffline = jlookup<
              ffi.NativeFunction<ffi.Uint8 Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_Notification__Action__WearableExtender_isAvailableOffline")
      .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public boolean isAvailableOffline()
  bool isAvailableOffline() => _isAvailableOffline(reference) != 0;

  static final _setInProgressLabel = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Notification__Action__WearableExtender_setInProgressLabel")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.Notification.Action.WearableExtender setInProgressLabel(java.lang.CharSequence label)
  Notification_Action_WearableExtender setInProgressLabel(jni.JlObject label) =>
      Notification_Action_WearableExtender.fromRef(
          _setInProgressLabel(reference, label.reference));

  static final _getInProgressLabel = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_Notification__Action__WearableExtender_getInProgressLabel")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.CharSequence getInProgressLabel()
  jni.JlObject getInProgressLabel() =>
      jni.JlObject.fromRef(_getInProgressLabel(reference));

  static final _setConfirmLabel = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Notification__Action__WearableExtender_setConfirmLabel")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.Notification.Action.WearableExtender setConfirmLabel(java.lang.CharSequence label)
  Notification_Action_WearableExtender setConfirmLabel(jni.JlObject label) =>
      Notification_Action_WearableExtender.fromRef(
          _setConfirmLabel(reference, label.reference));

  static final _getConfirmLabel = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_Notification__Action__WearableExtender_getConfirmLabel")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.CharSequence getConfirmLabel()
  jni.JlObject getConfirmLabel() =>
      jni.JlObject.fromRef(_getConfirmLabel(reference));

  static final _setCancelLabel = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Notification__Action__WearableExtender_setCancelLabel")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.Notification.Action.WearableExtender setCancelLabel(java.lang.CharSequence label)
  Notification_Action_WearableExtender setCancelLabel(jni.JlObject label) =>
      Notification_Action_WearableExtender.fromRef(
          _setCancelLabel(reference, label.reference));

  static final _getCancelLabel = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_Notification__Action__WearableExtender_getCancelLabel")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.CharSequence getCancelLabel()
  jni.JlObject getCancelLabel() =>
      jni.JlObject.fromRef(_getCancelLabel(reference));

  static final _setHintLaunchesActivity = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Uint8)>>(
          "android_app_Notification__Action__WearableExtender_setHintLaunchesActivity")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public android.app.Notification.Action.WearableExtender setHintLaunchesActivity(boolean hintLaunchesActivity)
  Notification_Action_WearableExtender setHintLaunchesActivity(
          bool hintLaunchesActivity) =>
      Notification_Action_WearableExtender.fromRef(
          _setHintLaunchesActivity(reference, hintLaunchesActivity ? 1 : 0));

  static final _getHintLaunchesActivity = jlookup<
              ffi.NativeFunction<ffi.Uint8 Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_Notification__Action__WearableExtender_getHintLaunchesActivity")
      .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public boolean getHintLaunchesActivity()
  bool getHintLaunchesActivity() => _getHintLaunchesActivity(reference) != 0;

  static final _setHintDisplayActionInline = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Uint8)>>(
          "android_app_Notification__Action__WearableExtender_setHintDisplayActionInline")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public android.app.Notification.Action.WearableExtender setHintDisplayActionInline(boolean hintDisplayInline)
  Notification_Action_WearableExtender setHintDisplayActionInline(
          bool hintDisplayInline) =>
      Notification_Action_WearableExtender.fromRef(
          _setHintDisplayActionInline(reference, hintDisplayInline ? 1 : 0));

  static final _getHintDisplayActionInline = jlookup<
              ffi.NativeFunction<ffi.Uint8 Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_Notification__Action__WearableExtender_getHintDisplayActionInline")
      .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public boolean getHintDisplayActionInline()
  bool getHintDisplayActionInline() =>
      _getHintDisplayActionInline(reference) != 0;
}

class Notification_Action_Extender extends jni.JlObject {
  Notification_Action_Extender.fromRef(ffi.Pointer<ffi.Void> ref)
      : super.fromRef(ref);

  static final _extend = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Notification__Action__Extender_extend")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public abstract android.app.Notification.Action.Builder extend(android.app.Notification.Action.Builder builder)
  Notification_Action_Builder extend(Notification_Action_Builder builder) =>
      Notification_Action_Builder.fromRef(
          _extend(reference, builder.reference));
}

class Notification_Action_Builder extends jni.JlObject {
  Notification_Action_Builder.fromRef(ffi.Pointer<ffi.Void> ref)
      : super.fromRef(ref);

  static final _ctor = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Int32,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Notification__Action__Builder_new")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              int, ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void <init>(int icon, java.lang.CharSequence title, android.app.PendingIntent intent)
  Notification_Action_Builder(
      int icon, jni.JlObject title, PendingIntent intent)
      : super.fromRef(_ctor(icon, title.reference, intent.reference));

  static final _ctor_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Notification__Action__Builder_new_1")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void <init>(android.graphics.drawable.Icon icon, java.lang.CharSequence title, android.app.PendingIntent intent)
  Notification_Action_Builder.ctor_1(
      jni.JlObject icon, jni.JlObject title, PendingIntent intent)
      : super.fromRef(
            _ctor_1(icon.reference, title.reference, intent.reference));

  static final _ctor_2 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_Notification__Action__Builder_new_2")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void <init>(android.app.Notification.Action action)
  Notification_Action_Builder.ctor_2(Notification_Action action)
      : super.fromRef(_ctor_2(action.reference));

  static final _addExtras = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Notification__Action__Builder_addExtras")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.Notification.Action.Builder addExtras(android.os.Bundle extras)
  Notification_Action_Builder addExtras(os.Bundle extras) =>
      Notification_Action_Builder.fromRef(
          _addExtras(reference, extras.reference));

  static final _getExtras = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_Notification__Action__Builder_getExtras")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.os.Bundle getExtras()
  os.Bundle getExtras() => os.Bundle.fromRef(_getExtras(reference));

  static final _addRemoteInput = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Notification__Action__Builder_addRemoteInput")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.Notification.Action.Builder addRemoteInput(android.app.RemoteInput remoteInput)
  Notification_Action_Builder addRemoteInput(RemoteInput remoteInput) =>
      Notification_Action_Builder.fromRef(
          _addRemoteInput(reference, remoteInput.reference));

  static final _setAllowGeneratedReplies = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Uint8)>>(
          "android_app_Notification__Action__Builder_setAllowGeneratedReplies")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public android.app.Notification.Action.Builder setAllowGeneratedReplies(boolean allowGeneratedReplies)
  Notification_Action_Builder setAllowGeneratedReplies(
          bool allowGeneratedReplies) =>
      Notification_Action_Builder.fromRef(
          _setAllowGeneratedReplies(reference, allowGeneratedReplies ? 1 : 0));

  static final _setSemanticAction = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "android_app_Notification__Action__Builder_setSemanticAction")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public android.app.Notification.Action.Builder setSemanticAction(int semanticAction)
  Notification_Action_Builder setSemanticAction(int semanticAction) =>
      Notification_Action_Builder.fromRef(
          _setSemanticAction(reference, semanticAction));

  static final _extend = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Notification__Action__Builder_extend")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.Notification.Action.Builder extend(android.app.Notification.Action.Extender extender)
  Notification_Action_Builder extend(Notification_Action_Extender extender) =>
      Notification_Action_Builder.fromRef(
          _extend(reference, extender.reference));

  static final _build = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_Notification__Action__Builder_build")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.Notification.Action build()
  Notification_Action build() => Notification_Action.fromRef(_build(reference));
}

class PictureInPictureParams extends jni.JlObject {
  PictureInPictureParams.fromRef(ffi.Pointer<ffi.Void> ref)
      : super.fromRef(ref);

  /// from: static public final android.os.Parcelable.Creator<android.app.PictureInPictureParams> CREATOR
  static final _getCREATOR =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "get_android_app_PictureInPictureParams_CREATOR")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();
  static os.Parcelable_Creator get CREATOR =>
      os.Parcelable_Creator.fromRef(_getCREATOR());

  static final _ctor =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "android_app_PictureInPictureParams_new")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();

  /// from: void <init>()
  PictureInPictureParams() : super.fromRef(_ctor());

  static final _describeContents =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_PictureInPictureParams_describeContents")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int describeContents()
  int describeContents() => _describeContents(reference);

  static final _writeToParcel = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "android_app_PictureInPictureParams_writeToParcel")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public void writeToParcel(android.os.Parcel out, int flags)
  void writeToParcel(os.Parcel out, int flags) =>
      _writeToParcel(reference, out.reference, flags);
}

class PictureInPictureParams_Builder extends jni.JlObject {
  PictureInPictureParams_Builder.fromRef(ffi.Pointer<ffi.Void> ref)
      : super.fromRef(ref);

  static final _ctor =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "android_app_PictureInPictureParams__Builder_new")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();

  /// from: public void <init>()
  PictureInPictureParams_Builder() : super.fromRef(_ctor());

  static final _setAspectRatio = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_PictureInPictureParams__Builder_setAspectRatio")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.PictureInPictureParams.Builder setAspectRatio(android.util.Rational aspectRatio)
  PictureInPictureParams_Builder setAspectRatio(jni.JlObject aspectRatio) =>
      PictureInPictureParams_Builder.fromRef(
          _setAspectRatio(reference, aspectRatio.reference));

  static final _setActions = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_PictureInPictureParams__Builder_setActions")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.PictureInPictureParams.Builder setActions(java.util.List<android.app.RemoteAction> actions)
  PictureInPictureParams_Builder setActions(jni.JlObject actions) =>
      PictureInPictureParams_Builder.fromRef(
          _setActions(reference, actions.reference));

  static final _setSourceRectHint = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_PictureInPictureParams__Builder_setSourceRectHint")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.PictureInPictureParams.Builder setSourceRectHint(android.graphics.Rect launchBounds)
  PictureInPictureParams_Builder setSourceRectHint(jni.JlObject launchBounds) =>
      PictureInPictureParams_Builder.fromRef(
          _setSourceRectHint(reference, launchBounds.reference));

  static final _build = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_PictureInPictureParams__Builder_build")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.PictureInPictureParams build()
  PictureInPictureParams build() =>
      PictureInPictureParams.fromRef(_build(reference));
}

class Fragment extends jni.JlObject {
  Fragment.fromRef(ffi.Pointer<ffi.Void> ref) : super.fromRef(ref);

  static final _ctor =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "android_app_Fragment_new")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();

  /// from: public void <init>()
  Fragment() : super.fromRef(_ctor());

  static final _instantiate = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("android_app_Fragment_instantiate")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: static public android.app.Fragment instantiate(android.content.Context context, java.lang.String fname)
  static Fragment instantiate(content.Context context, jni.JlString fname) =>
      Fragment.fromRef(_instantiate(context.reference, fname.reference));

  static final _instantiate_1 = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("android_app_Fragment_instantiate_1")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: static public android.app.Fragment instantiate(android.content.Context context, java.lang.String fname, android.os.Bundle args)
  static Fragment instantiate_1(
          content.Context context, jni.JlString fname, os.Bundle args) =>
      Fragment.fromRef(
          _instantiate_1(context.reference, fname.reference, args.reference));

  static final _equals_1 = jlookup<
          ffi.NativeFunction<
              ffi.Uint8 Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("android_app_Fragment_equals_1")
      .asFunction<int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public final boolean equals(java.lang.Object o)
  bool equals_1(jni.JlObject o) => _equals_1(reference, o.reference) != 0;

  static final _hashCode_1 =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_Fragment_hashCode_1")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public final int hashCode()
  int hashCode_1() => _hashCode_1(reference);

  static final _toString_1 = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
                  ffi.Pointer<ffi.Void>)>>("android_app_Fragment_toString_1")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.String toString()
  jni.JlString toString_1() => jni.JlString.fromRef(_toString_1(reference));

  static final _getId =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_Fragment_getId")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public final int getId()
  int getId() => _getId(reference);

  static final _getTag = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
                  ffi.Pointer<ffi.Void>)>>("android_app_Fragment_getTag")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public final java.lang.String getTag()
  jni.JlString getTag() => jni.JlString.fromRef(_getTag(reference));

  static final _setArguments = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("android_app_Fragment_setArguments")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void setArguments(android.os.Bundle args)
  void setArguments(os.Bundle args) => _setArguments(reference, args.reference);

  static final _getArguments = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
                  ffi.Pointer<ffi.Void>)>>("android_app_Fragment_getArguments")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public final android.os.Bundle getArguments()
  os.Bundle getArguments() => os.Bundle.fromRef(_getArguments(reference));

  static final _isStateSaved =
      jlookup<ffi.NativeFunction<ffi.Uint8 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_Fragment_isStateSaved")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public final boolean isStateSaved()
  bool isStateSaved() => _isStateSaved(reference) != 0;

  static final _setInitialSavedState = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Fragment_setInitialSavedState")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void setInitialSavedState(android.app.Fragment.SavedState state)
  void setInitialSavedState(Fragment_SavedState state) =>
      _setInitialSavedState(reference, state.reference);

  static final _setTargetFragment = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_app_Fragment_setTargetFragment")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public void setTargetFragment(android.app.Fragment fragment, int requestCode)
  void setTargetFragment(Fragment fragment, int requestCode) =>
      _setTargetFragment(reference, fragment.reference, requestCode);

  static final _getTargetFragment = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_Fragment_getTargetFragment")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public final android.app.Fragment getTargetFragment()
  Fragment getTargetFragment() =>
      Fragment.fromRef(_getTargetFragment(reference));

  static final _getTargetRequestCode =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_Fragment_getTargetRequestCode")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public final int getTargetRequestCode()
  int getTargetRequestCode() => _getTargetRequestCode(reference);

  static final _getContext = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
                  ffi.Pointer<ffi.Void>)>>("android_app_Fragment_getContext")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.content.Context getContext()
  content.Context getContext() =>
      content.Context.fromRef(_getContext(reference));

  static final _getActivity = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
                  ffi.Pointer<ffi.Void>)>>("android_app_Fragment_getActivity")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public final android.app.Activity getActivity()
  Activity getActivity() => Activity.fromRef(_getActivity(reference));

  static final _getHost = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
                  ffi.Pointer<ffi.Void>)>>("android_app_Fragment_getHost")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public final java.lang.Object getHost()
  jni.JlObject getHost() => jni.JlObject.fromRef(_getHost(reference));

  static final _getResources = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
                  ffi.Pointer<ffi.Void>)>>("android_app_Fragment_getResources")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public final android.content.res.Resources getResources()
  res.Resources getResources() =>
      res.Resources.fromRef(_getResources(reference));

  static final _getText = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_app_Fragment_getText")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public final java.lang.CharSequence getText(int resId)
  jni.JlObject getText(int resId) =>
      jni.JlObject.fromRef(_getText(reference, resId));

  static final _getString = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_app_Fragment_getString")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public final java.lang.String getString(int resId)
  jni.JlString getString(int resId) =>
      jni.JlString.fromRef(_getString(reference, resId));

  static final _getString_1 = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, ffi.Int32,
                  ffi.Pointer<ffi.Void>)>>("android_app_Fragment_getString_1")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, int, ffi.Pointer<ffi.Void>)>();

  /// from: public final java.lang.String getString(int resId, java.lang.Object[] formatArgs)
  jni.JlString getString_1(int resId, jni.JlObject formatArgs) =>
      jni.JlString.fromRef(
          _getString_1(reference, resId, formatArgs.reference));

  static final _getFragmentManager = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_Fragment_getFragmentManager")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public final android.app.FragmentManager getFragmentManager()
  FragmentManager getFragmentManager() =>
      FragmentManager.fromRef(_getFragmentManager(reference));

  static final _getChildFragmentManager = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_Fragment_getChildFragmentManager")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public final android.app.FragmentManager getChildFragmentManager()
  FragmentManager getChildFragmentManager() =>
      FragmentManager.fromRef(_getChildFragmentManager(reference));

  static final _getParentFragment = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_Fragment_getParentFragment")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public final android.app.Fragment getParentFragment()
  Fragment getParentFragment() =>
      Fragment.fromRef(_getParentFragment(reference));

  static final _isAdded =
      jlookup<ffi.NativeFunction<ffi.Uint8 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_Fragment_isAdded")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public final boolean isAdded()
  bool isAdded() => _isAdded(reference) != 0;

  static final _isDetached =
      jlookup<ffi.NativeFunction<ffi.Uint8 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_Fragment_isDetached")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public final boolean isDetached()
  bool isDetached() => _isDetached(reference) != 0;

  static final _isRemoving =
      jlookup<ffi.NativeFunction<ffi.Uint8 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_Fragment_isRemoving")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public final boolean isRemoving()
  bool isRemoving() => _isRemoving(reference) != 0;

  static final _isInLayout =
      jlookup<ffi.NativeFunction<ffi.Uint8 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_Fragment_isInLayout")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public final boolean isInLayout()
  bool isInLayout() => _isInLayout(reference) != 0;

  static final _isResumed =
      jlookup<ffi.NativeFunction<ffi.Uint8 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_Fragment_isResumed")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public final boolean isResumed()
  bool isResumed() => _isResumed(reference) != 0;

  static final _isVisible =
      jlookup<ffi.NativeFunction<ffi.Uint8 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_Fragment_isVisible")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public final boolean isVisible()
  bool isVisible() => _isVisible(reference) != 0;

  static final _isHidden =
      jlookup<ffi.NativeFunction<ffi.Uint8 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_Fragment_isHidden")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public final boolean isHidden()
  bool isHidden() => _isHidden(reference) != 0;

  static final _onHiddenChanged = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  ffi.Uint8)>>("android_app_Fragment_onHiddenChanged")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public void onHiddenChanged(boolean hidden)
  void onHiddenChanged(bool hidden) =>
      _onHiddenChanged(reference, hidden ? 1 : 0);

  static final _setRetainInstance = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  ffi.Uint8)>>("android_app_Fragment_setRetainInstance")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public void setRetainInstance(boolean retain)
  void setRetainInstance(bool retain) =>
      _setRetainInstance(reference, retain ? 1 : 0);

  static final _getRetainInstance =
      jlookup<ffi.NativeFunction<ffi.Uint8 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_Fragment_getRetainInstance")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public final boolean getRetainInstance()
  bool getRetainInstance() => _getRetainInstance(reference) != 0;

  static final _setHasOptionsMenu = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  ffi.Uint8)>>("android_app_Fragment_setHasOptionsMenu")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public void setHasOptionsMenu(boolean hasMenu)
  void setHasOptionsMenu(bool hasMenu) =>
      _setHasOptionsMenu(reference, hasMenu ? 1 : 0);

  static final _setMenuVisibility = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  ffi.Uint8)>>("android_app_Fragment_setMenuVisibility")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public void setMenuVisibility(boolean menuVisible)
  void setMenuVisibility(bool menuVisible) =>
      _setMenuVisibility(reference, menuVisible ? 1 : 0);

  static final _setUserVisibleHint = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  ffi.Uint8)>>("android_app_Fragment_setUserVisibleHint")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public void setUserVisibleHint(boolean isVisibleToUser)
  void setUserVisibleHint(bool isVisibleToUser) =>
      _setUserVisibleHint(reference, isVisibleToUser ? 1 : 0);

  static final _getUserVisibleHint =
      jlookup<ffi.NativeFunction<ffi.Uint8 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_Fragment_getUserVisibleHint")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public boolean getUserVisibleHint()
  bool getUserVisibleHint() => _getUserVisibleHint(reference) != 0;

  static final _getLoaderManager = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_Fragment_getLoaderManager")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.LoaderManager getLoaderManager()
  LoaderManager getLoaderManager() =>
      LoaderManager.fromRef(_getLoaderManager(reference));

  static final _startActivity = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("android_app_Fragment_startActivity")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void startActivity(android.content.Intent intent)
  void startActivity(content.Intent intent) =>
      _startActivity(reference, intent.reference);

  static final _startActivity_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Fragment_startActivity_1")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public void startActivity(android.content.Intent intent, android.os.Bundle options)
  void startActivity_1(content.Intent intent, os.Bundle options) =>
      _startActivity_1(reference, intent.reference, options.reference);

  static final _startActivityForResult = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_app_Fragment_startActivityForResult")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public void startActivityForResult(android.content.Intent intent, int requestCode)
  void startActivityForResult(content.Intent intent, int requestCode) =>
      _startActivityForResult(reference, intent.reference, requestCode);

  static final _startActivityForResult_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Int32,
                      ffi.Pointer<ffi.Void>)>>(
          "android_app_Fragment_startActivityForResult_1")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int,
              ffi.Pointer<ffi.Void>)>();

  /// from: public void startActivityForResult(android.content.Intent intent, int requestCode, android.os.Bundle options)
  void startActivityForResult_1(
          content.Intent intent, int requestCode, os.Bundle options) =>
      _startActivityForResult_1(
          reference, intent.reference, requestCode, options.reference);

  static final _startIntentSenderForResult = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Int32,
                      ffi.Pointer<ffi.Void>,
                      ffi.Int32,
                      ffi.Int32,
                      ffi.Int32,
                      ffi.Pointer<ffi.Void>)>>(
          "android_app_Fragment_startIntentSenderForResult")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int,
              ffi.Pointer<ffi.Void>, int, int, int, ffi.Pointer<ffi.Void>)>();

  /// from: public void startIntentSenderForResult(android.content.IntentSender intent, int requestCode, android.content.Intent fillInIntent, int flagsMask, int flagsValues, int extraFlags, android.os.Bundle options)
  void startIntentSenderForResult(
          content.IntentSender intent,
          int requestCode,
          content.Intent fillInIntent,
          int flagsMask,
          int flagsValues,
          int extraFlags,
          os.Bundle options) =>
      _startIntentSenderForResult(
          reference,
          intent.reference,
          requestCode,
          fillInIntent.reference,
          flagsMask,
          flagsValues,
          extraFlags,
          options.reference);

  static final _onActivityResult = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Int32, ffi.Int32,
                      ffi.Pointer<ffi.Void>)>>(
          "android_app_Fragment_onActivityResult")
      .asFunction<
          void Function(
              ffi.Pointer<ffi.Void>, int, int, ffi.Pointer<ffi.Void>)>();

  /// from: public void onActivityResult(int requestCode, int resultCode, android.content.Intent data)
  void onActivityResult(int requestCode, int resultCode, content.Intent data) =>
      _onActivityResult(reference, requestCode, resultCode, data.reference);

  static final _requestPermissions = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_app_Fragment_requestPermissions")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public final void requestPermissions(java.lang.String[] permissions, int requestCode)
  void requestPermissions(jni.JlObject permissions, int requestCode) =>
      _requestPermissions(reference, permissions.reference, requestCode);

  static final _onRequestPermissionsResult = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Int32,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Fragment_onRequestPermissionsResult")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, int, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public void onRequestPermissionsResult(int requestCode, java.lang.String[] permissions, int[] grantResults)
  void onRequestPermissionsResult(int requestCode, jni.JlObject permissions,
          jni.JlObject grantResults) =>
      _onRequestPermissionsResult(reference, requestCode, permissions.reference,
          grantResults.reference);

  static final _shouldShowRequestPermissionRationale = jlookup<
              ffi.NativeFunction<
                  ffi.Uint8 Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Fragment_shouldShowRequestPermissionRationale")
      .asFunction<int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public boolean shouldShowRequestPermissionRationale(java.lang.String permission)
  bool shouldShowRequestPermissionRationale(jni.JlString permission) =>
      _shouldShowRequestPermissionRationale(reference, permission.reference) !=
      0;

  static final _onGetLayoutInflater = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Fragment_onGetLayoutInflater")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.view.LayoutInflater onGetLayoutInflater(android.os.Bundle savedInstanceState)
  jni.JlObject onGetLayoutInflater(os.Bundle savedInstanceState) =>
      jni.JlObject.fromRef(
          _onGetLayoutInflater(reference, savedInstanceState.reference));

  static final _getLayoutInflater = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_Fragment_getLayoutInflater")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public final android.view.LayoutInflater getLayoutInflater()
  jni.JlObject getLayoutInflater() =>
      jni.JlObject.fromRef(_getLayoutInflater(reference));

  static final _onInflate = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("android_app_Fragment_onInflate")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public void onInflate(android.util.AttributeSet attrs, android.os.Bundle savedInstanceState)
  void onInflate(jni.JlObject attrs, os.Bundle savedInstanceState) =>
      _onInflate(reference, attrs.reference, savedInstanceState.reference);

  static final _onInflate_1 = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("android_app_Fragment_onInflate_1")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void onInflate(android.content.Context context, android.util.AttributeSet attrs, android.os.Bundle savedInstanceState)
  void onInflate_1(content.Context context, jni.JlObject attrs,
          os.Bundle savedInstanceState) =>
      _onInflate_1(reference, context.reference, attrs.reference,
          savedInstanceState.reference);

  static final _onInflate_2 = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("android_app_Fragment_onInflate_2")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void onInflate(android.app.Activity activity, android.util.AttributeSet attrs, android.os.Bundle savedInstanceState)
  void onInflate_2(Activity activity, jni.JlObject attrs,
          os.Bundle savedInstanceState) =>
      _onInflate_2(reference, activity.reference, attrs.reference,
          savedInstanceState.reference);

  static final _onAttachFragment = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Fragment_onAttachFragment")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void onAttachFragment(android.app.Fragment childFragment)
  void onAttachFragment(Fragment childFragment) =>
      _onAttachFragment(reference, childFragment.reference);

  static final _onAttach = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("android_app_Fragment_onAttach")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void onAttach(android.content.Context context)
  void onAttach(content.Context context) =>
      _onAttach(reference, context.reference);

  static final _onAttach_1 = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("android_app_Fragment_onAttach_1")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void onAttach(android.app.Activity activity)
  void onAttach_1(Activity activity) =>
      _onAttach_1(reference, activity.reference);

  static final _onCreateAnimator = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Int32,
                  ffi.Uint8,
                  ffi.Int32)>>("android_app_Fragment_onCreateAnimator")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, int, int, int)>();

  /// from: public android.animation.Animator onCreateAnimator(int transit, boolean enter, int nextAnim)
  jni.JlObject onCreateAnimator(int transit, bool enter, int nextAnim) =>
      jni.JlObject.fromRef(
          _onCreateAnimator(reference, transit, enter ? 1 : 0, nextAnim));

  static final _onCreate = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("android_app_Fragment_onCreate")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void onCreate(android.os.Bundle savedInstanceState)
  void onCreate(os.Bundle savedInstanceState) =>
      _onCreate(reference, savedInstanceState.reference);

  static final _onCreateView = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("android_app_Fragment_onCreateView")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public android.view.View onCreateView(android.view.LayoutInflater inflater, android.view.ViewGroup container, android.os.Bundle savedInstanceState)
  jni.JlObject onCreateView(jni.JlObject inflater, jni.JlObject container,
          os.Bundle savedInstanceState) =>
      jni.JlObject.fromRef(_onCreateView(reference, inflater.reference,
          container.reference, savedInstanceState.reference));

  static final _onViewCreated = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("android_app_Fragment_onViewCreated")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public void onViewCreated(android.view.View view, android.os.Bundle savedInstanceState)
  void onViewCreated(jni.JlObject view, os.Bundle savedInstanceState) =>
      _onViewCreated(reference, view.reference, savedInstanceState.reference);

  static final _getView = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
                  ffi.Pointer<ffi.Void>)>>("android_app_Fragment_getView")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.view.View getView()
  jni.JlObject getView() => jni.JlObject.fromRef(_getView(reference));

  static final _onActivityCreated = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Fragment_onActivityCreated")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void onActivityCreated(android.os.Bundle savedInstanceState)
  void onActivityCreated(os.Bundle savedInstanceState) =>
      _onActivityCreated(reference, savedInstanceState.reference);

  static final _onViewStateRestored = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Fragment_onViewStateRestored")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void onViewStateRestored(android.os.Bundle savedInstanceState)
  void onViewStateRestored(os.Bundle savedInstanceState) =>
      _onViewStateRestored(reference, savedInstanceState.reference);

  static final _onStart =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_Fragment_onStart")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void onStart()
  void onStart() => _onStart(reference);

  static final _onResume =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_Fragment_onResume")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void onResume()
  void onResume() => _onResume(reference);

  static final _onSaveInstanceState = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Fragment_onSaveInstanceState")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void onSaveInstanceState(android.os.Bundle outState)
  void onSaveInstanceState(os.Bundle outState) =>
      _onSaveInstanceState(reference, outState.reference);

  static final _onMultiWindowModeChanged = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Uint8,
                      ffi.Pointer<ffi.Void>)>>(
          "android_app_Fragment_onMultiWindowModeChanged")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, int, ffi.Pointer<ffi.Void>)>();

  /// from: public void onMultiWindowModeChanged(boolean isInMultiWindowMode, android.content.res.Configuration newConfig)
  void onMultiWindowModeChanged(
          bool isInMultiWindowMode, res.Configuration newConfig) =>
      _onMultiWindowModeChanged(
          reference, isInMultiWindowMode ? 1 : 0, newConfig.reference);

  static final _onMultiWindowModeChanged_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Uint8)>>(
          "android_app_Fragment_onMultiWindowModeChanged_1")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public void onMultiWindowModeChanged(boolean isInMultiWindowMode)
  void onMultiWindowModeChanged_1(bool isInMultiWindowMode) =>
      _onMultiWindowModeChanged_1(reference, isInMultiWindowMode ? 1 : 0);

  static final _onPictureInPictureModeChanged = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Uint8,
                      ffi.Pointer<ffi.Void>)>>(
          "android_app_Fragment_onPictureInPictureModeChanged")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, int, ffi.Pointer<ffi.Void>)>();

  /// from: public void onPictureInPictureModeChanged(boolean isInPictureInPictureMode, android.content.res.Configuration newConfig)
  void onPictureInPictureModeChanged(
          bool isInPictureInPictureMode, res.Configuration newConfig) =>
      _onPictureInPictureModeChanged(
          reference, isInPictureInPictureMode ? 1 : 0, newConfig.reference);

  static final _onPictureInPictureModeChanged_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Uint8)>>(
          "android_app_Fragment_onPictureInPictureModeChanged_1")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public void onPictureInPictureModeChanged(boolean isInPictureInPictureMode)
  void onPictureInPictureModeChanged_1(bool isInPictureInPictureMode) =>
      _onPictureInPictureModeChanged_1(
          reference, isInPictureInPictureMode ? 1 : 0);

  static final _onConfigurationChanged = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Fragment_onConfigurationChanged")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void onConfigurationChanged(android.content.res.Configuration newConfig)
  void onConfigurationChanged(res.Configuration newConfig) =>
      _onConfigurationChanged(reference, newConfig.reference);

  static final _onPause =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_Fragment_onPause")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void onPause()
  void onPause() => _onPause(reference);

  static final _onStop =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_Fragment_onStop")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void onStop()
  void onStop() => _onStop(reference);

  static final _onLowMemory =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_Fragment_onLowMemory")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void onLowMemory()
  void onLowMemory() => _onLowMemory(reference);

  static final _onTrimMemory = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_app_Fragment_onTrimMemory")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public void onTrimMemory(int level)
  void onTrimMemory(int level) => _onTrimMemory(reference, level);

  static final _onDestroyView =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_Fragment_onDestroyView")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void onDestroyView()
  void onDestroyView() => _onDestroyView(reference);

  static final _onDestroy =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_Fragment_onDestroy")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void onDestroy()
  void onDestroy() => _onDestroy(reference);

  static final _onDetach =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_Fragment_onDetach")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void onDetach()
  void onDetach() => _onDetach(reference);

  static final _onCreateOptionsMenu = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Fragment_onCreateOptionsMenu")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public void onCreateOptionsMenu(android.view.Menu menu, android.view.MenuInflater inflater)
  void onCreateOptionsMenu(jni.JlObject menu, jni.JlObject inflater) =>
      _onCreateOptionsMenu(reference, menu.reference, inflater.reference);

  static final _onPrepareOptionsMenu = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Fragment_onPrepareOptionsMenu")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void onPrepareOptionsMenu(android.view.Menu menu)
  void onPrepareOptionsMenu(jni.JlObject menu) =>
      _onPrepareOptionsMenu(reference, menu.reference);

  static final _onDestroyOptionsMenu =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_Fragment_onDestroyOptionsMenu")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void onDestroyOptionsMenu()
  void onDestroyOptionsMenu() => _onDestroyOptionsMenu(reference);

  static final _onOptionsItemSelected = jlookup<
              ffi.NativeFunction<
                  ffi.Uint8 Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Fragment_onOptionsItemSelected")
      .asFunction<int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public boolean onOptionsItemSelected(android.view.MenuItem item)
  bool onOptionsItemSelected(jni.JlObject item) =>
      _onOptionsItemSelected(reference, item.reference) != 0;

  static final _onOptionsMenuClosed = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Fragment_onOptionsMenuClosed")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void onOptionsMenuClosed(android.view.Menu menu)
  void onOptionsMenuClosed(jni.JlObject menu) =>
      _onOptionsMenuClosed(reference, menu.reference);

  static final _onCreateContextMenu = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>)>>(
          "android_app_Fragment_onCreateContextMenu")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void onCreateContextMenu(android.view.ContextMenu menu, android.view.View v, android.view.ContextMenu.ContextMenuInfo menuInfo)
  void onCreateContextMenu(
          jni.JlObject menu, jni.JlObject v, jni.JlObject menuInfo) =>
      _onCreateContextMenu(
          reference, menu.reference, v.reference, menuInfo.reference);

  static final _registerForContextMenu = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Fragment_registerForContextMenu")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void registerForContextMenu(android.view.View view)
  void registerForContextMenu(jni.JlObject view) =>
      _registerForContextMenu(reference, view.reference);

  static final _unregisterForContextMenu = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Fragment_unregisterForContextMenu")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void unregisterForContextMenu(android.view.View view)
  void unregisterForContextMenu(jni.JlObject view) =>
      _unregisterForContextMenu(reference, view.reference);

  static final _onContextItemSelected = jlookup<
              ffi.NativeFunction<
                  ffi.Uint8 Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Fragment_onContextItemSelected")
      .asFunction<int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public boolean onContextItemSelected(android.view.MenuItem item)
  bool onContextItemSelected(jni.JlObject item) =>
      _onContextItemSelected(reference, item.reference) != 0;

  static final _setEnterSharedElementCallback = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Fragment_setEnterSharedElementCallback")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void setEnterSharedElementCallback(android.app.SharedElementCallback callback)
  void setEnterSharedElementCallback(SharedElementCallback callback) =>
      _setEnterSharedElementCallback(reference, callback.reference);

  static final _setExitSharedElementCallback = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Fragment_setExitSharedElementCallback")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void setExitSharedElementCallback(android.app.SharedElementCallback callback)
  void setExitSharedElementCallback(SharedElementCallback callback) =>
      _setExitSharedElementCallback(reference, callback.reference);

  static final _setEnterTransition = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Fragment_setEnterTransition")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void setEnterTransition(android.transition.Transition transition)
  void setEnterTransition(jni.JlObject transition) =>
      _setEnterTransition(reference, transition.reference);

  static final _getEnterTransition = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_Fragment_getEnterTransition")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.transition.Transition getEnterTransition()
  jni.JlObject getEnterTransition() =>
      jni.JlObject.fromRef(_getEnterTransition(reference));

  static final _setReturnTransition = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Fragment_setReturnTransition")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void setReturnTransition(android.transition.Transition transition)
  void setReturnTransition(jni.JlObject transition) =>
      _setReturnTransition(reference, transition.reference);

  static final _getReturnTransition = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_Fragment_getReturnTransition")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.transition.Transition getReturnTransition()
  jni.JlObject getReturnTransition() =>
      jni.JlObject.fromRef(_getReturnTransition(reference));

  static final _setExitTransition = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Fragment_setExitTransition")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void setExitTransition(android.transition.Transition transition)
  void setExitTransition(jni.JlObject transition) =>
      _setExitTransition(reference, transition.reference);

  static final _getExitTransition = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_Fragment_getExitTransition")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.transition.Transition getExitTransition()
  jni.JlObject getExitTransition() =>
      jni.JlObject.fromRef(_getExitTransition(reference));

  static final _setReenterTransition = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Fragment_setReenterTransition")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void setReenterTransition(android.transition.Transition transition)
  void setReenterTransition(jni.JlObject transition) =>
      _setReenterTransition(reference, transition.reference);

  static final _getReenterTransition = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_Fragment_getReenterTransition")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.transition.Transition getReenterTransition()
  jni.JlObject getReenterTransition() =>
      jni.JlObject.fromRef(_getReenterTransition(reference));

  static final _setSharedElementEnterTransition = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Fragment_setSharedElementEnterTransition")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void setSharedElementEnterTransition(android.transition.Transition transition)
  void setSharedElementEnterTransition(jni.JlObject transition) =>
      _setSharedElementEnterTransition(reference, transition.reference);

  static final _getSharedElementEnterTransition = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_Fragment_getSharedElementEnterTransition")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.transition.Transition getSharedElementEnterTransition()
  jni.JlObject getSharedElementEnterTransition() =>
      jni.JlObject.fromRef(_getSharedElementEnterTransition(reference));

  static final _setSharedElementReturnTransition = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Fragment_setSharedElementReturnTransition")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void setSharedElementReturnTransition(android.transition.Transition transition)
  void setSharedElementReturnTransition(jni.JlObject transition) =>
      _setSharedElementReturnTransition(reference, transition.reference);

  static final _getSharedElementReturnTransition = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_Fragment_getSharedElementReturnTransition")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.transition.Transition getSharedElementReturnTransition()
  jni.JlObject getSharedElementReturnTransition() =>
      jni.JlObject.fromRef(_getSharedElementReturnTransition(reference));

  static final _setAllowEnterTransitionOverlap = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Uint8)>>(
          "android_app_Fragment_setAllowEnterTransitionOverlap")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public void setAllowEnterTransitionOverlap(boolean allow)
  void setAllowEnterTransitionOverlap(bool allow) =>
      _setAllowEnterTransitionOverlap(reference, allow ? 1 : 0);

  static final _getAllowEnterTransitionOverlap =
      jlookup<ffi.NativeFunction<ffi.Uint8 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_Fragment_getAllowEnterTransitionOverlap")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public boolean getAllowEnterTransitionOverlap()
  bool getAllowEnterTransitionOverlap() =>
      _getAllowEnterTransitionOverlap(reference) != 0;

  static final _setAllowReturnTransitionOverlap = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Uint8)>>(
          "android_app_Fragment_setAllowReturnTransitionOverlap")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public void setAllowReturnTransitionOverlap(boolean allow)
  void setAllowReturnTransitionOverlap(bool allow) =>
      _setAllowReturnTransitionOverlap(reference, allow ? 1 : 0);

  static final _getAllowReturnTransitionOverlap =
      jlookup<ffi.NativeFunction<ffi.Uint8 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_Fragment_getAllowReturnTransitionOverlap")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public boolean getAllowReturnTransitionOverlap()
  bool getAllowReturnTransitionOverlap() =>
      _getAllowReturnTransitionOverlap(reference) != 0;

  static final _postponeEnterTransition =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_Fragment_postponeEnterTransition")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void postponeEnterTransition()
  void postponeEnterTransition() => _postponeEnterTransition(reference);

  static final _startPostponedEnterTransition =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_Fragment_startPostponedEnterTransition")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void startPostponedEnterTransition()
  void startPostponedEnterTransition() =>
      _startPostponedEnterTransition(reference);

  static final _dump = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("android_app_Fragment_dump")
      .asFunction<
          void Function(
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public void dump(java.lang.String prefix, java.io.FileDescriptor fd, java.io.PrintWriter writer, java.lang.String[] args)
  void dump(jni.JlString prefix, jni.JlObject fd, jni.JlObject writer,
          jni.JlObject args) =>
      _dump(reference, prefix.reference, fd.reference, writer.reference,
          args.reference);
}

class Fragment_SavedState extends jni.JlObject {
  Fragment_SavedState.fromRef(ffi.Pointer<ffi.Void> ref) : super.fromRef(ref);

  /// from: static public final android.os.Parcelable.ClassLoaderCreator<android.app.Fragment.SavedState> CREATOR
  static final _getCREATOR =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "get_android_app_Fragment__SavedState_CREATOR")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();
  static os.Parcelable_ClassLoaderCreator get CREATOR =>
      os.Parcelable_ClassLoaderCreator.fromRef(_getCREATOR());

  static final _ctor = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_Fragment__SavedState_new")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: void <init>(android.os.Bundle state)
  Fragment_SavedState(os.Bundle state) : super.fromRef(_ctor(state.reference));

  static final _describeContents =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_Fragment__SavedState_describeContents")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int describeContents()
  int describeContents() => _describeContents(reference);

  static final _writeToParcel = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_app_Fragment__SavedState_writeToParcel")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public void writeToParcel(android.os.Parcel dest, int flags)
  void writeToParcel(os.Parcel dest, int flags) =>
      _writeToParcel(reference, dest.reference, flags);
}

class Fragment_InstantiationException extends jni.JlObject {
  Fragment_InstantiationException.fromRef(ffi.Pointer<ffi.Void> ref)
      : super.fromRef(ref);

  static final _ctor = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Fragment__InstantiationException_new")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void <init>(java.lang.String msg, java.lang.Exception cause)
  Fragment_InstantiationException(jni.JlString msg, jni.JlObject cause)
      : super.fromRef(_ctor(msg.reference, cause.reference));
}

class AlertDialog extends Dialog {
  AlertDialog.fromRef(ffi.Pointer<ffi.Void> ref) : super.fromRef(ref);

  /// from: static public final int THEME_DEVICE_DEFAULT_DARK
  static const THEME_DEVICE_DEFAULT_DARK = 4;

  /// from: static public final int THEME_DEVICE_DEFAULT_LIGHT
  static const THEME_DEVICE_DEFAULT_LIGHT = 5;

  /// from: static public final int THEME_HOLO_DARK
  static const THEME_HOLO_DARK = 2;

  /// from: static public final int THEME_HOLO_LIGHT
  static const THEME_HOLO_LIGHT = 3;

  /// from: static public final int THEME_TRADITIONAL
  static const THEME_TRADITIONAL = 1;

  static final _ctor = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
                  ffi.Pointer<ffi.Void>)>>("android_app_AlertDialog_new")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: protected void <init>(android.content.Context context)
  AlertDialog(content.Context context)
      : super.fromRef(_ctor(context.reference));

  static final _ctor_1 = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, ffi.Uint8,
                  ffi.Pointer<ffi.Void>)>>("android_app_AlertDialog_new_1")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, int, ffi.Pointer<ffi.Void>)>();

  /// from: protected void <init>(android.content.Context context, boolean cancelable, android.content.DialogInterface.OnCancelListener cancelListener)
  AlertDialog.ctor_1(content.Context context, bool cancelable,
      content.DialogInterface_OnCancelListener cancelListener)
      : super.fromRef(_ctor_1(
            context.reference, cancelable ? 1 : 0, cancelListener.reference));

  static final _ctor_2 = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_app_AlertDialog_new_2")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: protected void <init>(android.content.Context context, int themeResId)
  AlertDialog.ctor_2(content.Context context, int themeResId)
      : super.fromRef(_ctor_2(context.reference, themeResId));

  static final _getButton = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_app_AlertDialog_getButton")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public android.widget.Button getButton(int whichButton)
  jni.JlObject getButton(int whichButton) =>
      jni.JlObject.fromRef(_getButton(reference, whichButton));

  static final _getListView = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_AlertDialog_getListView")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.widget.ListView getListView()
  jni.JlObject getListView() => jni.JlObject.fromRef(_getListView(reference));

  static final _setTitle = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("android_app_AlertDialog_setTitle")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void setTitle(java.lang.CharSequence title)
  void setTitle(jni.JlObject title) => _setTitle(reference, title.reference);

  static final _setCustomTitle = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_AlertDialog_setCustomTitle")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void setCustomTitle(android.view.View customTitleView)
  void setCustomTitle(jni.JlObject customTitleView) =>
      _setCustomTitle(reference, customTitleView.reference);

  static final _setMessage = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("android_app_AlertDialog_setMessage")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void setMessage(java.lang.CharSequence message)
  void setMessage(jni.JlObject message) =>
      _setMessage(reference, message.reference);

  static final _setView = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("android_app_AlertDialog_setView")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void setView(android.view.View view)
  void setView(jni.JlObject view) => _setView(reference, view.reference);

  static final _setView_1 = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Int32,
                  ffi.Int32,
                  ffi.Int32,
                  ffi.Int32)>>("android_app_AlertDialog_setView_1")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int, int,
              int, int)>();

  /// from: public void setView(android.view.View view, int viewSpacingLeft, int viewSpacingTop, int viewSpacingRight, int viewSpacingBottom)
  void setView_1(jni.JlObject view, int viewSpacingLeft, int viewSpacingTop,
          int viewSpacingRight, int viewSpacingBottom) =>
      _setView_1(reference, view.reference, viewSpacingLeft, viewSpacingTop,
          viewSpacingRight, viewSpacingBottom);

  static final _setButton = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Int32,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("android_app_AlertDialog_setButton")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, int, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public void setButton(int whichButton, java.lang.CharSequence text, android.os.Message msg)
  void setButton(int whichButton, jni.JlObject text, os.Message msg) =>
      _setButton(reference, whichButton, text.reference, msg.reference);

  static final _setButton_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Int32,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_AlertDialog_setButton_1")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, int, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public void setButton(int whichButton, java.lang.CharSequence text, android.content.DialogInterface.OnClickListener listener)
  void setButton_1(int whichButton, jni.JlObject text,
          content.DialogInterface_OnClickListener listener) =>
      _setButton_1(reference, whichButton, text.reference, listener.reference);

  static final _setButton_2 = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_AlertDialog_setButton_2")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public void setButton(java.lang.CharSequence text, android.os.Message msg)
  void setButton_2(jni.JlObject text, os.Message msg) =>
      _setButton_2(reference, text.reference, msg.reference);

  static final _setButton2 = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("android_app_AlertDialog_setButton2")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public void setButton2(java.lang.CharSequence text, android.os.Message msg)
  void setButton2(jni.JlObject text, os.Message msg) =>
      _setButton2(reference, text.reference, msg.reference);

  static final _setButton3 = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("android_app_AlertDialog_setButton3")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public void setButton3(java.lang.CharSequence text, android.os.Message msg)
  void setButton3(jni.JlObject text, os.Message msg) =>
      _setButton3(reference, text.reference, msg.reference);

  static final _setButton_3 = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_AlertDialog_setButton_3")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public void setButton(java.lang.CharSequence text, android.content.DialogInterface.OnClickListener listener)
  void setButton_3(jni.JlObject text,
          content.DialogInterface_OnClickListener listener) =>
      _setButton_3(reference, text.reference, listener.reference);

  static final _setButton2_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_AlertDialog_setButton2_1")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public void setButton2(java.lang.CharSequence text, android.content.DialogInterface.OnClickListener listener)
  void setButton2_1(jni.JlObject text,
          content.DialogInterface_OnClickListener listener) =>
      _setButton2_1(reference, text.reference, listener.reference);

  static final _setButton3_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_AlertDialog_setButton3_1")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public void setButton3(java.lang.CharSequence text, android.content.DialogInterface.OnClickListener listener)
  void setButton3_1(jni.JlObject text,
          content.DialogInterface_OnClickListener listener) =>
      _setButton3_1(reference, text.reference, listener.reference);

  static final _setIcon = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_app_AlertDialog_setIcon")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public void setIcon(int resId)
  void setIcon(int resId) => _setIcon(reference, resId);

  static final _setIcon_1 = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("android_app_AlertDialog_setIcon_1")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void setIcon(android.graphics.drawable.Drawable icon)
  void setIcon_1(jni.JlObject icon) => _setIcon_1(reference, icon.reference);

  static final _setIconAttribute = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_app_AlertDialog_setIconAttribute")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public void setIconAttribute(int attrId)
  void setIconAttribute(int attrId) => _setIconAttribute(reference, attrId);

  static final _setInverseBackgroundForced = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Uint8)>>(
          "android_app_AlertDialog_setInverseBackgroundForced")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public void setInverseBackgroundForced(boolean forceInverseBackground)
  void setInverseBackgroundForced(bool forceInverseBackground) =>
      _setInverseBackgroundForced(reference, forceInverseBackground ? 1 : 0);

  static final _onCreate = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("android_app_AlertDialog_onCreate")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: protected void onCreate(android.os.Bundle savedInstanceState)
  void onCreate(os.Bundle savedInstanceState) =>
      _onCreate(reference, savedInstanceState.reference);

  static final _onKeyDown = jlookup<
          ffi.NativeFunction<
              ffi.Uint8 Function(ffi.Pointer<ffi.Void>, ffi.Int32,
                  ffi.Pointer<ffi.Void>)>>("android_app_AlertDialog_onKeyDown")
      .asFunction<
          int Function(ffi.Pointer<ffi.Void>, int, ffi.Pointer<ffi.Void>)>();

  /// from: public boolean onKeyDown(int keyCode, android.view.KeyEvent event)
  bool onKeyDown(int keyCode, jni.JlObject event) =>
      _onKeyDown(reference, keyCode, event.reference) != 0;

  static final _onKeyUp = jlookup<
          ffi.NativeFunction<
              ffi.Uint8 Function(ffi.Pointer<ffi.Void>, ffi.Int32,
                  ffi.Pointer<ffi.Void>)>>("android_app_AlertDialog_onKeyUp")
      .asFunction<
          int Function(ffi.Pointer<ffi.Void>, int, ffi.Pointer<ffi.Void>)>();

  /// from: public boolean onKeyUp(int keyCode, android.view.KeyEvent event)
  bool onKeyUp(int keyCode, jni.JlObject event) =>
      _onKeyUp(reference, keyCode, event.reference) != 0;
}

class AlertDialog_Builder extends jni.JlObject {
  AlertDialog_Builder.fromRef(ffi.Pointer<ffi.Void> ref) : super.fromRef(ref);

  static final _ctor = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_AlertDialog__Builder_new")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void <init>(android.content.Context context)
  AlertDialog_Builder(content.Context context)
      : super.fromRef(_ctor(context.reference));

  static final _ctor_1 = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_app_AlertDialog__Builder_new_1")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public void <init>(android.content.Context context, int themeResId)
  AlertDialog_Builder.ctor_1(content.Context context, int themeResId)
      : super.fromRef(_ctor_1(context.reference, themeResId));

  static final _getContext = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_AlertDialog__Builder_getContext")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.content.Context getContext()
  content.Context getContext() =>
      content.Context.fromRef(_getContext(reference));

  static final _setTitle = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_app_AlertDialog__Builder_setTitle")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public android.app.AlertDialog.Builder setTitle(int titleId)
  AlertDialog_Builder setTitle(int titleId) =>
      AlertDialog_Builder.fromRef(_setTitle(reference, titleId));

  static final _setTitle_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_AlertDialog__Builder_setTitle_1")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.AlertDialog.Builder setTitle(java.lang.CharSequence title)
  AlertDialog_Builder setTitle_1(jni.JlObject title) =>
      AlertDialog_Builder.fromRef(_setTitle_1(reference, title.reference));

  static final _setCustomTitle = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_AlertDialog__Builder_setCustomTitle")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.AlertDialog.Builder setCustomTitle(android.view.View customTitleView)
  AlertDialog_Builder setCustomTitle(jni.JlObject customTitleView) =>
      AlertDialog_Builder.fromRef(
          _setCustomTitle(reference, customTitleView.reference));

  static final _setMessage = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_app_AlertDialog__Builder_setMessage")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public android.app.AlertDialog.Builder setMessage(int messageId)
  AlertDialog_Builder setMessage(int messageId) =>
      AlertDialog_Builder.fromRef(_setMessage(reference, messageId));

  static final _setMessage_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_AlertDialog__Builder_setMessage_1")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.AlertDialog.Builder setMessage(java.lang.CharSequence message)
  AlertDialog_Builder setMessage_1(jni.JlObject message) =>
      AlertDialog_Builder.fromRef(_setMessage_1(reference, message.reference));

  static final _setIcon = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_app_AlertDialog__Builder_setIcon")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public android.app.AlertDialog.Builder setIcon(int iconId)
  AlertDialog_Builder setIcon(int iconId) =>
      AlertDialog_Builder.fromRef(_setIcon(reference, iconId));

  static final _setIcon_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_AlertDialog__Builder_setIcon_1")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.AlertDialog.Builder setIcon(android.graphics.drawable.Drawable icon)
  AlertDialog_Builder setIcon_1(jni.JlObject icon) =>
      AlertDialog_Builder.fromRef(_setIcon_1(reference, icon.reference));

  static final _setIconAttribute = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "android_app_AlertDialog__Builder_setIconAttribute")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public android.app.AlertDialog.Builder setIconAttribute(int attrId)
  AlertDialog_Builder setIconAttribute(int attrId) =>
      AlertDialog_Builder.fromRef(_setIconAttribute(reference, attrId));

  static final _setPositiveButton = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                      ffi.Int32, ffi.Pointer<ffi.Void>)>>(
          "android_app_AlertDialog__Builder_setPositiveButton")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, int, ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.AlertDialog.Builder setPositiveButton(int textId, android.content.DialogInterface.OnClickListener listener)
  AlertDialog_Builder setPositiveButton(
          int textId, content.DialogInterface_OnClickListener listener) =>
      AlertDialog_Builder.fromRef(
          _setPositiveButton(reference, textId, listener.reference));

  static final _setPositiveButton_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_AlertDialog__Builder_setPositiveButton_1")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.AlertDialog.Builder setPositiveButton(java.lang.CharSequence text, android.content.DialogInterface.OnClickListener listener)
  AlertDialog_Builder setPositiveButton_1(jni.JlObject text,
          content.DialogInterface_OnClickListener listener) =>
      AlertDialog_Builder.fromRef(
          _setPositiveButton_1(reference, text.reference, listener.reference));

  static final _setNegativeButton = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                      ffi.Int32, ffi.Pointer<ffi.Void>)>>(
          "android_app_AlertDialog__Builder_setNegativeButton")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, int, ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.AlertDialog.Builder setNegativeButton(int textId, android.content.DialogInterface.OnClickListener listener)
  AlertDialog_Builder setNegativeButton(
          int textId, content.DialogInterface_OnClickListener listener) =>
      AlertDialog_Builder.fromRef(
          _setNegativeButton(reference, textId, listener.reference));

  static final _setNegativeButton_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_AlertDialog__Builder_setNegativeButton_1")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.AlertDialog.Builder setNegativeButton(java.lang.CharSequence text, android.content.DialogInterface.OnClickListener listener)
  AlertDialog_Builder setNegativeButton_1(jni.JlObject text,
          content.DialogInterface_OnClickListener listener) =>
      AlertDialog_Builder.fromRef(
          _setNegativeButton_1(reference, text.reference, listener.reference));

  static final _setNeutralButton = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                      ffi.Int32, ffi.Pointer<ffi.Void>)>>(
          "android_app_AlertDialog__Builder_setNeutralButton")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, int, ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.AlertDialog.Builder setNeutralButton(int textId, android.content.DialogInterface.OnClickListener listener)
  AlertDialog_Builder setNeutralButton(
          int textId, content.DialogInterface_OnClickListener listener) =>
      AlertDialog_Builder.fromRef(
          _setNeutralButton(reference, textId, listener.reference));

  static final _setNeutralButton_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_AlertDialog__Builder_setNeutralButton_1")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.AlertDialog.Builder setNeutralButton(java.lang.CharSequence text, android.content.DialogInterface.OnClickListener listener)
  AlertDialog_Builder setNeutralButton_1(jni.JlObject text,
          content.DialogInterface_OnClickListener listener) =>
      AlertDialog_Builder.fromRef(
          _setNeutralButton_1(reference, text.reference, listener.reference));

  static final _setCancelable = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                  ffi.Uint8)>>("android_app_AlertDialog__Builder_setCancelable")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public android.app.AlertDialog.Builder setCancelable(boolean cancelable)
  AlertDialog_Builder setCancelable(bool cancelable) =>
      AlertDialog_Builder.fromRef(
          _setCancelable(reference, cancelable ? 1 : 0));

  static final _setOnCancelListener = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_AlertDialog__Builder_setOnCancelListener")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.AlertDialog.Builder setOnCancelListener(android.content.DialogInterface.OnCancelListener onCancelListener)
  AlertDialog_Builder setOnCancelListener(
          content.DialogInterface_OnCancelListener onCancelListener) =>
      AlertDialog_Builder.fromRef(
          _setOnCancelListener(reference, onCancelListener.reference));

  static final _setOnDismissListener = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_AlertDialog__Builder_setOnDismissListener")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.AlertDialog.Builder setOnDismissListener(android.content.DialogInterface.OnDismissListener onDismissListener)
  AlertDialog_Builder setOnDismissListener(
          content.DialogInterface_OnDismissListener onDismissListener) =>
      AlertDialog_Builder.fromRef(
          _setOnDismissListener(reference, onDismissListener.reference));

  static final _setOnKeyListener = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_AlertDialog__Builder_setOnKeyListener")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.AlertDialog.Builder setOnKeyListener(android.content.DialogInterface.OnKeyListener onKeyListener)
  AlertDialog_Builder setOnKeyListener(
          content.DialogInterface_OnKeyListener onKeyListener) =>
      AlertDialog_Builder.fromRef(
          _setOnKeyListener(reference, onKeyListener.reference));

  static final _setItems = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                      ffi.Int32, ffi.Pointer<ffi.Void>)>>(
          "android_app_AlertDialog__Builder_setItems")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, int, ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.AlertDialog.Builder setItems(int itemsId, android.content.DialogInterface.OnClickListener listener)
  AlertDialog_Builder setItems(
          int itemsId, content.DialogInterface_OnClickListener listener) =>
      AlertDialog_Builder.fromRef(
          _setItems(reference, itemsId, listener.reference));

  static final _setItems_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_AlertDialog__Builder_setItems_1")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.AlertDialog.Builder setItems(java.lang.CharSequence[] items, android.content.DialogInterface.OnClickListener listener)
  AlertDialog_Builder setItems_1(jni.JlObject items,
          content.DialogInterface_OnClickListener listener) =>
      AlertDialog_Builder.fromRef(
          _setItems_1(reference, items.reference, listener.reference));

  static final _setAdapter = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_AlertDialog__Builder_setAdapter")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.AlertDialog.Builder setAdapter(android.widget.ListAdapter adapter, android.content.DialogInterface.OnClickListener listener)
  AlertDialog_Builder setAdapter(jni.JlObject adapter,
          content.DialogInterface_OnClickListener listener) =>
      AlertDialog_Builder.fromRef(
          _setAdapter(reference, adapter.reference, listener.reference));

  static final _setCursor = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>)>>(
          "android_app_AlertDialog__Builder_setCursor")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.AlertDialog.Builder setCursor(android.database.Cursor cursor, android.content.DialogInterface.OnClickListener listener, java.lang.String labelColumn)
  AlertDialog_Builder setCursor(
          jni.JlObject cursor,
          content.DialogInterface_OnClickListener listener,
          jni.JlString labelColumn) =>
      AlertDialog_Builder.fromRef(_setCursor(reference, cursor.reference,
          listener.reference, labelColumn.reference));

  static final _setMultiChoiceItems = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Int32,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>)>>(
          "android_app_AlertDialog__Builder_setMultiChoiceItems")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.AlertDialog.Builder setMultiChoiceItems(int itemsId, boolean[] checkedItems, android.content.DialogInterface.OnMultiChoiceClickListener listener)
  AlertDialog_Builder setMultiChoiceItems(
          int itemsId,
          jni.JlObject checkedItems,
          content.DialogInterface_OnMultiChoiceClickListener listener) =>
      AlertDialog_Builder.fromRef(_setMultiChoiceItems(
          reference, itemsId, checkedItems.reference, listener.reference));

  static final _setMultiChoiceItems_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>)>>(
          "android_app_AlertDialog__Builder_setMultiChoiceItems_1")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.AlertDialog.Builder setMultiChoiceItems(java.lang.CharSequence[] items, boolean[] checkedItems, android.content.DialogInterface.OnMultiChoiceClickListener listener)
  AlertDialog_Builder setMultiChoiceItems_1(
          jni.JlObject items,
          jni.JlObject checkedItems,
          content.DialogInterface_OnMultiChoiceClickListener listener) =>
      AlertDialog_Builder.fromRef(_setMultiChoiceItems_1(reference,
          items.reference, checkedItems.reference, listener.reference));

  static final _setMultiChoiceItems_2 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>)>>(
          "android_app_AlertDialog__Builder_setMultiChoiceItems_2")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.AlertDialog.Builder setMultiChoiceItems(android.database.Cursor cursor, java.lang.String isCheckedColumn, java.lang.String labelColumn, android.content.DialogInterface.OnMultiChoiceClickListener listener)
  AlertDialog_Builder setMultiChoiceItems_2(
          jni.JlObject cursor,
          jni.JlString isCheckedColumn,
          jni.JlString labelColumn,
          content.DialogInterface_OnMultiChoiceClickListener listener) =>
      AlertDialog_Builder.fromRef(_setMultiChoiceItems_2(
          reference,
          cursor.reference,
          isCheckedColumn.reference,
          labelColumn.reference,
          listener.reference));

  static final _setSingleChoiceItems = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                      ffi.Int32, ffi.Int32, ffi.Pointer<ffi.Void>)>>(
          "android_app_AlertDialog__Builder_setSingleChoiceItems")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, int, int, ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.AlertDialog.Builder setSingleChoiceItems(int itemsId, int checkedItem, android.content.DialogInterface.OnClickListener listener)
  AlertDialog_Builder setSingleChoiceItems(int itemsId, int checkedItem,
          content.DialogInterface_OnClickListener listener) =>
      AlertDialog_Builder.fromRef(_setSingleChoiceItems(
          reference, itemsId, checkedItem, listener.reference));

  static final _setSingleChoiceItems_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Int32,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>)>>(
          "android_app_AlertDialog__Builder_setSingleChoiceItems_1")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              int,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.AlertDialog.Builder setSingleChoiceItems(android.database.Cursor cursor, int checkedItem, java.lang.String labelColumn, android.content.DialogInterface.OnClickListener listener)
  AlertDialog_Builder setSingleChoiceItems_1(
          jni.JlObject cursor,
          int checkedItem,
          jni.JlString labelColumn,
          content.DialogInterface_OnClickListener listener) =>
      AlertDialog_Builder.fromRef(_setSingleChoiceItems_1(
          reference,
          cursor.reference,
          checkedItem,
          labelColumn.reference,
          listener.reference));

  static final _setSingleChoiceItems_2 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Int32,
                      ffi.Pointer<ffi.Void>)>>(
          "android_app_AlertDialog__Builder_setSingleChoiceItems_2")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, int, ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.AlertDialog.Builder setSingleChoiceItems(java.lang.CharSequence[] items, int checkedItem, android.content.DialogInterface.OnClickListener listener)
  AlertDialog_Builder setSingleChoiceItems_2(jni.JlObject items,
          int checkedItem, content.DialogInterface_OnClickListener listener) =>
      AlertDialog_Builder.fromRef(_setSingleChoiceItems_2(
          reference, items.reference, checkedItem, listener.reference));

  static final _setSingleChoiceItems_3 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Int32,
                      ffi.Pointer<ffi.Void>)>>(
          "android_app_AlertDialog__Builder_setSingleChoiceItems_3")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, int, ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.AlertDialog.Builder setSingleChoiceItems(android.widget.ListAdapter adapter, int checkedItem, android.content.DialogInterface.OnClickListener listener)
  AlertDialog_Builder setSingleChoiceItems_3(jni.JlObject adapter,
          int checkedItem, content.DialogInterface_OnClickListener listener) =>
      AlertDialog_Builder.fromRef(_setSingleChoiceItems_3(
          reference, adapter.reference, checkedItem, listener.reference));

  static final _setOnItemSelectedListener = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_AlertDialog__Builder_setOnItemSelectedListener")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.AlertDialog.Builder setOnItemSelectedListener(android.widget.AdapterView.OnItemSelectedListener listener)
  AlertDialog_Builder setOnItemSelectedListener(jni.JlObject listener) =>
      AlertDialog_Builder.fromRef(
          _setOnItemSelectedListener(reference, listener.reference));

  static final _setView = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_app_AlertDialog__Builder_setView")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public android.app.AlertDialog.Builder setView(int layoutResId)
  AlertDialog_Builder setView(int layoutResId) =>
      AlertDialog_Builder.fromRef(_setView(reference, layoutResId));

  static final _setView_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_AlertDialog__Builder_setView_1")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.AlertDialog.Builder setView(android.view.View view)
  AlertDialog_Builder setView_1(jni.JlObject view) =>
      AlertDialog_Builder.fromRef(_setView_1(reference, view.reference));

  static final _setInverseBackgroundForced = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Uint8)>>(
          "android_app_AlertDialog__Builder_setInverseBackgroundForced")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public android.app.AlertDialog.Builder setInverseBackgroundForced(boolean useInverseBackground)
  AlertDialog_Builder setInverseBackgroundForced(bool useInverseBackground) =>
      AlertDialog_Builder.fromRef(
          _setInverseBackgroundForced(reference, useInverseBackground ? 1 : 0));

  static final _create = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_AlertDialog__Builder_create")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.AlertDialog create()
  AlertDialog create() => AlertDialog.fromRef(_create(reference));

  static final _show_ = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_AlertDialog__Builder_show_")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.AlertDialog show()
  AlertDialog show_() => AlertDialog.fromRef(_show_(reference));
}

class TabActivity extends ActivityGroup {
  TabActivity.fromRef(ffi.Pointer<ffi.Void> ref) : super.fromRef(ref);

  static final _ctor =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "android_app_TabActivity_new")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();

  /// from: public void <init>()
  TabActivity() : super.fromRef(_ctor());

  static final _setDefaultTab = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_TabActivity_setDefaultTab")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void setDefaultTab(java.lang.String tag)
  void setDefaultTab(jni.JlString tag) =>
      _setDefaultTab(reference, tag.reference);

  static final _setDefaultTab_1 = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_app_TabActivity_setDefaultTab_1")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public void setDefaultTab(int index)
  void setDefaultTab_1(int index) => _setDefaultTab_1(reference, index);

  static final _onRestoreInstanceState = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_TabActivity_onRestoreInstanceState")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: protected void onRestoreInstanceState(android.os.Bundle state)
  void onRestoreInstanceState(os.Bundle state) =>
      _onRestoreInstanceState(reference, state.reference);

  static final _onPostCreate = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_TabActivity_onPostCreate")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: protected void onPostCreate(android.os.Bundle icicle)
  void onPostCreate(os.Bundle icicle) =>
      _onPostCreate(reference, icicle.reference);

  static final _onSaveInstanceState = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_TabActivity_onSaveInstanceState")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: protected void onSaveInstanceState(android.os.Bundle outState)
  void onSaveInstanceState(os.Bundle outState) =>
      _onSaveInstanceState(reference, outState.reference);

  static final _onContentChanged =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_TabActivity_onContentChanged")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void onContentChanged()
  void onContentChanged() => _onContentChanged(reference);

  static final _onChildTitleChanged = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_TabActivity_onChildTitleChanged")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: protected void onChildTitleChanged(android.app.Activity childActivity, java.lang.CharSequence title)
  void onChildTitleChanged(Activity childActivity, jni.JlObject title) =>
      _onChildTitleChanged(reference, childActivity.reference, title.reference);

  static final _getTabHost = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
                  ffi.Pointer<ffi.Void>)>>("android_app_TabActivity_getTabHost")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.widget.TabHost getTabHost()
  jni.JlObject getTabHost() => jni.JlObject.fromRef(_getTabHost(reference));

  static final _getTabWidget = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_TabActivity_getTabWidget")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.widget.TabWidget getTabWidget()
  jni.JlObject getTabWidget() => jni.JlObject.fromRef(_getTabWidget(reference));
}

class RemoteInput extends jni.JlObject {
  RemoteInput.fromRef(ffi.Pointer<ffi.Void> ref) : super.fromRef(ref);

  /// from: static public final android.os.Parcelable.Creator<android.app.RemoteInput> CREATOR
  static final _getCREATOR =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "get_android_app_RemoteInput_CREATOR")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();
  static os.Parcelable_Creator get CREATOR =>
      os.Parcelable_Creator.fromRef(_getCREATOR());

  /// from: static public final java.lang.String EXTRA_RESULTS_DATA
  static const EXTRA_RESULTS_DATA = "android.remoteinput.resultsData";

  /// from: static public final java.lang.String RESULTS_CLIP_LABEL
  static const RESULTS_CLIP_LABEL = "android.remoteinput.results";

  /// from: static public final int SOURCE_CHOICE
  static const SOURCE_CHOICE = 1;

  /// from: static public final int SOURCE_FREE_FORM_INPUT
  static const SOURCE_FREE_FORM_INPUT = 0;

  static final _ctor = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
                  ffi.Pointer<ffi.Void>)>>("android_app_RemoteInput_new")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: void <init>(android.os.Parcel in)
  RemoteInput(os.Parcel in_) : super.fromRef(_ctor(in_.reference));

  static final _getResultKey = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_RemoteInput_getResultKey")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.String getResultKey()
  jni.JlString getResultKey() => jni.JlString.fromRef(_getResultKey(reference));

  static final _getLabel = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
                  ffi.Pointer<ffi.Void>)>>("android_app_RemoteInput_getLabel")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.CharSequence getLabel()
  jni.JlObject getLabel() => jni.JlObject.fromRef(_getLabel(reference));

  static final _getChoices = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
                  ffi.Pointer<ffi.Void>)>>("android_app_RemoteInput_getChoices")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.CharSequence[] getChoices()
  jni.JlObject getChoices() => jni.JlObject.fromRef(_getChoices(reference));

  static final _getAllowedDataTypes = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_RemoteInput_getAllowedDataTypes")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.util.Set<java.lang.String> getAllowedDataTypes()
  jni.JlObject getAllowedDataTypes() =>
      jni.JlObject.fromRef(_getAllowedDataTypes(reference));

  static final _isDataOnly =
      jlookup<ffi.NativeFunction<ffi.Uint8 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_RemoteInput_isDataOnly")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public boolean isDataOnly()
  bool isDataOnly() => _isDataOnly(reference) != 0;

  static final _getAllowFreeFormInput =
      jlookup<ffi.NativeFunction<ffi.Uint8 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_RemoteInput_getAllowFreeFormInput")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public boolean getAllowFreeFormInput()
  bool getAllowFreeFormInput() => _getAllowFreeFormInput(reference) != 0;

  static final _getExtras = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
                  ffi.Pointer<ffi.Void>)>>("android_app_RemoteInput_getExtras")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.os.Bundle getExtras()
  os.Bundle getExtras() => os.Bundle.fromRef(_getExtras(reference));

  static final _getDataResultsFromIntent = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_RemoteInput_getDataResultsFromIntent")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: static public java.util.Map<java.lang.String,android.net.Uri> getDataResultsFromIntent(android.content.Intent intent, java.lang.String remoteInputResultKey)
  static jni.JlObject getDataResultsFromIntent(
          content.Intent intent, jni.JlString remoteInputResultKey) =>
      jni.JlObject.fromRef(_getDataResultsFromIntent(
          intent.reference, remoteInputResultKey.reference));

  static final _getResultsFromIntent = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_RemoteInput_getResultsFromIntent")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: static public android.os.Bundle getResultsFromIntent(android.content.Intent intent)
  static os.Bundle getResultsFromIntent(content.Intent intent) =>
      os.Bundle.fromRef(_getResultsFromIntent(intent.reference));

  static final _addResultsToIntent = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_RemoteInput_addResultsToIntent")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: static public void addResultsToIntent(android.app.RemoteInput[] remoteInputs, android.content.Intent intent, android.os.Bundle results)
  static void addResultsToIntent(jni.JlObject remoteInputs,
          content.Intent intent, os.Bundle results) =>
      _addResultsToIntent(
          remoteInputs.reference, intent.reference, results.reference);

  static final _addDataResultToIntent = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_RemoteInput_addDataResultToIntent")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: static public void addDataResultToIntent(android.app.RemoteInput remoteInput, android.content.Intent intent, java.util.Map<java.lang.String,android.net.Uri> results)
  static void addDataResultToIntent(RemoteInput remoteInput,
          content.Intent intent, jni.JlObject results) =>
      _addDataResultToIntent(
          remoteInput.reference, intent.reference, results.reference);

  static final _setResultsSource = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_app_RemoteInput_setResultsSource")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: static public void setResultsSource(android.content.Intent intent, int source)
  static void setResultsSource(content.Intent intent, int source) =>
      _setResultsSource(intent.reference, source);

  static final _getResultsSource =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_RemoteInput_getResultsSource")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: static public int getResultsSource(android.content.Intent intent)
  static int getResultsSource(content.Intent intent) =>
      _getResultsSource(intent.reference);

  static final _describeContents =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_RemoteInput_describeContents")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int describeContents()
  int describeContents() => _describeContents(reference);

  static final _writeToParcel = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_app_RemoteInput_writeToParcel")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public void writeToParcel(android.os.Parcel out, int flags)
  void writeToParcel(os.Parcel out, int flags) =>
      _writeToParcel(reference, out.reference, flags);
}

class RemoteInput_Builder extends jni.JlObject {
  RemoteInput_Builder.fromRef(ffi.Pointer<ffi.Void> ref) : super.fromRef(ref);

  static final _ctor = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_RemoteInput__Builder_new")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void <init>(java.lang.String resultKey)
  RemoteInput_Builder(jni.JlString resultKey)
      : super.fromRef(_ctor(resultKey.reference));

  static final _setLabel = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_RemoteInput__Builder_setLabel")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.RemoteInput.Builder setLabel(java.lang.CharSequence label)
  RemoteInput_Builder setLabel(jni.JlObject label) =>
      RemoteInput_Builder.fromRef(_setLabel(reference, label.reference));

  static final _setChoices = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_RemoteInput__Builder_setChoices")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.RemoteInput.Builder setChoices(java.lang.CharSequence[] choices)
  RemoteInput_Builder setChoices(jni.JlObject choices) =>
      RemoteInput_Builder.fromRef(_setChoices(reference, choices.reference));

  static final _setAllowDataType = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Uint8)>>(
          "android_app_RemoteInput__Builder_setAllowDataType")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public android.app.RemoteInput.Builder setAllowDataType(java.lang.String mimeType, boolean doAllow)
  RemoteInput_Builder setAllowDataType(jni.JlString mimeType, bool doAllow) =>
      RemoteInput_Builder.fromRef(
          _setAllowDataType(reference, mimeType.reference, doAllow ? 1 : 0));

  static final _setAllowFreeFormInput = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Uint8)>>(
          "android_app_RemoteInput__Builder_setAllowFreeFormInput")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public android.app.RemoteInput.Builder setAllowFreeFormInput(boolean allowFreeFormTextInput)
  RemoteInput_Builder setAllowFreeFormInput(bool allowFreeFormTextInput) =>
      RemoteInput_Builder.fromRef(
          _setAllowFreeFormInput(reference, allowFreeFormTextInput ? 1 : 0));

  static final _addExtras = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_RemoteInput__Builder_addExtras")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.RemoteInput.Builder addExtras(android.os.Bundle extras)
  RemoteInput_Builder addExtras(os.Bundle extras) =>
      RemoteInput_Builder.fromRef(_addExtras(reference, extras.reference));

  static final _getExtras = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_RemoteInput__Builder_getExtras")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.os.Bundle getExtras()
  os.Bundle getExtras() => os.Bundle.fromRef(_getExtras(reference));

  static final _build = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_RemoteInput__Builder_build")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.RemoteInput build()
  RemoteInput build() => RemoteInput.fromRef(_build(reference));
}

class ActionBar extends jni.JlObject {
  ActionBar.fromRef(ffi.Pointer<ffi.Void> ref) : super.fromRef(ref);

  /// from: static public final int DISPLAY_HOME_AS_UP
  static const DISPLAY_HOME_AS_UP = 4;

  /// from: static public final int DISPLAY_SHOW_CUSTOM
  static const DISPLAY_SHOW_CUSTOM = 16;

  /// from: static public final int DISPLAY_SHOW_HOME
  static const DISPLAY_SHOW_HOME = 2;

  /// from: static public final int DISPLAY_SHOW_TITLE
  static const DISPLAY_SHOW_TITLE = 8;

  /// from: static public final int DISPLAY_USE_LOGO
  static const DISPLAY_USE_LOGO = 1;

  /// from: static public final int NAVIGATION_MODE_LIST
  static const NAVIGATION_MODE_LIST = 1;

  /// from: static public final int NAVIGATION_MODE_STANDARD
  static const NAVIGATION_MODE_STANDARD = 0;

  /// from: static public final int NAVIGATION_MODE_TABS
  static const NAVIGATION_MODE_TABS = 2;

  static final _ctor =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "android_app_ActionBar_new")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();

  /// from: public void <init>()
  ActionBar() : super.fromRef(_ctor());

  static final _setCustomView = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_ActionBar_setCustomView")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public abstract void setCustomView(android.view.View view)
  void setCustomView(jni.JlObject view) =>
      _setCustomView(reference, view.reference);

  static final _setCustomView_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_ActionBar_setCustomView_1")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public abstract void setCustomView(android.view.View view, android.app.ActionBar.LayoutParams layoutParams)
  void setCustomView_1(
          jni.JlObject view, ActionBar_LayoutParams layoutParams) =>
      _setCustomView_1(reference, view.reference, layoutParams.reference);

  static final _setCustomView_2 = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_app_ActionBar_setCustomView_2")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public abstract void setCustomView(int resId)
  void setCustomView_2(int resId) => _setCustomView_2(reference, resId);

  static final _setIcon = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_app_ActionBar_setIcon")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public abstract void setIcon(int resId)
  void setIcon(int resId) => _setIcon(reference, resId);

  static final _setIcon_1 = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("android_app_ActionBar_setIcon_1")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public abstract void setIcon(android.graphics.drawable.Drawable icon)
  void setIcon_1(jni.JlObject icon) => _setIcon_1(reference, icon.reference);

  static final _setLogo = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_app_ActionBar_setLogo")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public abstract void setLogo(int resId)
  void setLogo(int resId) => _setLogo(reference, resId);

  static final _setLogo_1 = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("android_app_ActionBar_setLogo_1")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public abstract void setLogo(android.graphics.drawable.Drawable logo)
  void setLogo_1(jni.JlObject logo) => _setLogo_1(reference, logo.reference);

  static final _setListNavigationCallbacks = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_ActionBar_setListNavigationCallbacks")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public abstract void setListNavigationCallbacks(android.widget.SpinnerAdapter adapter, android.app.ActionBar.OnNavigationListener callback)
  void setListNavigationCallbacks(
          jni.JlObject adapter, ActionBar_OnNavigationListener callback) =>
      _setListNavigationCallbacks(
          reference, adapter.reference, callback.reference);

  static final _setSelectedNavigationItem = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "android_app_ActionBar_setSelectedNavigationItem")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public abstract void setSelectedNavigationItem(int position)
  void setSelectedNavigationItem(int position) =>
      _setSelectedNavigationItem(reference, position);

  static final _getSelectedNavigationIndex =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_ActionBar_getSelectedNavigationIndex")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public abstract int getSelectedNavigationIndex()
  int getSelectedNavigationIndex() => _getSelectedNavigationIndex(reference);

  static final _getNavigationItemCount =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_ActionBar_getNavigationItemCount")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public abstract int getNavigationItemCount()
  int getNavigationItemCount() => _getNavigationItemCount(reference);

  static final _setTitle = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("android_app_ActionBar_setTitle")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public abstract void setTitle(java.lang.CharSequence title)
  void setTitle(jni.JlObject title) => _setTitle(reference, title.reference);

  static final _setTitle_1 = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_app_ActionBar_setTitle_1")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public abstract void setTitle(int resId)
  void setTitle_1(int resId) => _setTitle_1(reference, resId);

  static final _setSubtitle = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("android_app_ActionBar_setSubtitle")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public abstract void setSubtitle(java.lang.CharSequence subtitle)
  void setSubtitle(jni.JlObject subtitle) =>
      _setSubtitle(reference, subtitle.reference);

  static final _setSubtitle_1 = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_app_ActionBar_setSubtitle_1")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public abstract void setSubtitle(int resId)
  void setSubtitle_1(int resId) => _setSubtitle_1(reference, resId);

  static final _setDisplayOptions = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_app_ActionBar_setDisplayOptions")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public abstract void setDisplayOptions(int options)
  void setDisplayOptions(int options) => _setDisplayOptions(reference, options);

  static final _setDisplayOptions_1 = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Int32,
                  ffi.Int32)>>("android_app_ActionBar_setDisplayOptions_1")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int, int)>();

  /// from: public abstract void setDisplayOptions(int options, int mask)
  void setDisplayOptions_1(int options, int mask) =>
      _setDisplayOptions_1(reference, options, mask);

  static final _setDisplayUseLogoEnabled = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  ffi.Uint8)>>("android_app_ActionBar_setDisplayUseLogoEnabled")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public abstract void setDisplayUseLogoEnabled(boolean useLogo)
  void setDisplayUseLogoEnabled(bool useLogo) =>
      _setDisplayUseLogoEnabled(reference, useLogo ? 1 : 0);

  static final _setDisplayShowHomeEnabled = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Uint8)>>(
          "android_app_ActionBar_setDisplayShowHomeEnabled")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public abstract void setDisplayShowHomeEnabled(boolean showHome)
  void setDisplayShowHomeEnabled(bool showHome) =>
      _setDisplayShowHomeEnabled(reference, showHome ? 1 : 0);

  static final _setDisplayHomeAsUpEnabled = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Uint8)>>(
          "android_app_ActionBar_setDisplayHomeAsUpEnabled")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public abstract void setDisplayHomeAsUpEnabled(boolean showHomeAsUp)
  void setDisplayHomeAsUpEnabled(bool showHomeAsUp) =>
      _setDisplayHomeAsUpEnabled(reference, showHomeAsUp ? 1 : 0);

  static final _setDisplayShowTitleEnabled = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Uint8)>>(
          "android_app_ActionBar_setDisplayShowTitleEnabled")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public abstract void setDisplayShowTitleEnabled(boolean showTitle)
  void setDisplayShowTitleEnabled(bool showTitle) =>
      _setDisplayShowTitleEnabled(reference, showTitle ? 1 : 0);

  static final _setDisplayShowCustomEnabled = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Uint8)>>(
          "android_app_ActionBar_setDisplayShowCustomEnabled")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public abstract void setDisplayShowCustomEnabled(boolean showCustom)
  void setDisplayShowCustomEnabled(bool showCustom) =>
      _setDisplayShowCustomEnabled(reference, showCustom ? 1 : 0);

  static final _setBackgroundDrawable = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_ActionBar_setBackgroundDrawable")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public abstract void setBackgroundDrawable(android.graphics.drawable.Drawable d)
  void setBackgroundDrawable(jni.JlObject d) =>
      _setBackgroundDrawable(reference, d.reference);

  static final _setStackedBackgroundDrawable = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_ActionBar_setStackedBackgroundDrawable")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void setStackedBackgroundDrawable(android.graphics.drawable.Drawable d)
  void setStackedBackgroundDrawable(jni.JlObject d) =>
      _setStackedBackgroundDrawable(reference, d.reference);

  static final _setSplitBackgroundDrawable = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_ActionBar_setSplitBackgroundDrawable")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void setSplitBackgroundDrawable(android.graphics.drawable.Drawable d)
  void setSplitBackgroundDrawable(jni.JlObject d) =>
      _setSplitBackgroundDrawable(reference, d.reference);

  static final _getCustomView = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_ActionBar_getCustomView")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public abstract android.view.View getCustomView()
  jni.JlObject getCustomView() =>
      jni.JlObject.fromRef(_getCustomView(reference));

  static final _getTitle = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
                  ffi.Pointer<ffi.Void>)>>("android_app_ActionBar_getTitle")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public abstract java.lang.CharSequence getTitle()
  jni.JlObject getTitle() => jni.JlObject.fromRef(_getTitle(reference));

  static final _getSubtitle = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
                  ffi.Pointer<ffi.Void>)>>("android_app_ActionBar_getSubtitle")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public abstract java.lang.CharSequence getSubtitle()
  jni.JlObject getSubtitle() => jni.JlObject.fromRef(_getSubtitle(reference));

  static final _getNavigationMode =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_ActionBar_getNavigationMode")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public abstract int getNavigationMode()
  int getNavigationMode() => _getNavigationMode(reference);

  static final _setNavigationMode = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_app_ActionBar_setNavigationMode")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public abstract void setNavigationMode(int mode)
  void setNavigationMode(int mode) => _setNavigationMode(reference, mode);

  static final _getDisplayOptions =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_ActionBar_getDisplayOptions")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public abstract int getDisplayOptions()
  int getDisplayOptions() => _getDisplayOptions(reference);

  static final _newTab = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
                  ffi.Pointer<ffi.Void>)>>("android_app_ActionBar_newTab")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public abstract android.app.ActionBar.Tab newTab()
  ActionBar_Tab newTab() => ActionBar_Tab.fromRef(_newTab(reference));

  static final _addTab = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("android_app_ActionBar_addTab")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public abstract void addTab(android.app.ActionBar.Tab tab)
  void addTab(ActionBar_Tab tab) => _addTab(reference, tab.reference);

  static final _addTab_1 = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
                  ffi.Uint8)>>("android_app_ActionBar_addTab_1")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public abstract void addTab(android.app.ActionBar.Tab tab, boolean setSelected)
  void addTab_1(ActionBar_Tab tab, bool setSelected) =>
      _addTab_1(reference, tab.reference, setSelected ? 1 : 0);

  static final _addTab_2 = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_app_ActionBar_addTab_2")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public abstract void addTab(android.app.ActionBar.Tab tab, int position)
  void addTab_2(ActionBar_Tab tab, int position) =>
      _addTab_2(reference, tab.reference, position);

  static final _addTab_3 = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
                  ffi.Int32, ffi.Uint8)>>("android_app_ActionBar_addTab_3")
      .asFunction<
          void Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int, int)>();

  /// from: public abstract void addTab(android.app.ActionBar.Tab tab, int position, boolean setSelected)
  void addTab_3(ActionBar_Tab tab, int position, bool setSelected) =>
      _addTab_3(reference, tab.reference, position, setSelected ? 1 : 0);

  static final _removeTab = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("android_app_ActionBar_removeTab")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public abstract void removeTab(android.app.ActionBar.Tab tab)
  void removeTab(ActionBar_Tab tab) => _removeTab(reference, tab.reference);

  static final _removeTabAt = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_app_ActionBar_removeTabAt")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public abstract void removeTabAt(int position)
  void removeTabAt(int position) => _removeTabAt(reference, position);

  static final _removeAllTabs =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_ActionBar_removeAllTabs")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: public abstract void removeAllTabs()
  void removeAllTabs() => _removeAllTabs(reference);

  static final _selectTab = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("android_app_ActionBar_selectTab")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public abstract void selectTab(android.app.ActionBar.Tab tab)
  void selectTab(ActionBar_Tab tab) => _selectTab(reference, tab.reference);

  static final _getSelectedTab = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_ActionBar_getSelectedTab")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public abstract android.app.ActionBar.Tab getSelectedTab()
  ActionBar_Tab getSelectedTab() =>
      ActionBar_Tab.fromRef(_getSelectedTab(reference));

  static final _getTabAt = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_app_ActionBar_getTabAt")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public abstract android.app.ActionBar.Tab getTabAt(int index)
  ActionBar_Tab getTabAt(int index) =>
      ActionBar_Tab.fromRef(_getTabAt(reference, index));

  static final _getTabCount =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_ActionBar_getTabCount")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public abstract int getTabCount()
  int getTabCount() => _getTabCount(reference);

  static final _getHeight =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_ActionBar_getHeight")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public abstract int getHeight()
  int getHeight() => _getHeight(reference);

  static final _show_ =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_ActionBar_show_")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: public abstract void show()
  void show_() => _show_(reference);

  static final _hide_ =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_ActionBar_hide_")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: public abstract void hide()
  void hide_() => _hide_(reference);

  static final _isShowing =
      jlookup<ffi.NativeFunction<ffi.Uint8 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_ActionBar_isShowing")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public abstract boolean isShowing()
  bool isShowing() => _isShowing(reference) != 0;

  static final _addOnMenuVisibilityListener = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_ActionBar_addOnMenuVisibilityListener")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public abstract void addOnMenuVisibilityListener(android.app.ActionBar.OnMenuVisibilityListener listener)
  void addOnMenuVisibilityListener(
          ActionBar_OnMenuVisibilityListener listener) =>
      _addOnMenuVisibilityListener(reference, listener.reference);

  static final _removeOnMenuVisibilityListener = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_ActionBar_removeOnMenuVisibilityListener")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public abstract void removeOnMenuVisibilityListener(android.app.ActionBar.OnMenuVisibilityListener listener)
  void removeOnMenuVisibilityListener(
          ActionBar_OnMenuVisibilityListener listener) =>
      _removeOnMenuVisibilityListener(reference, listener.reference);

  static final _setHomeButtonEnabled = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  ffi.Uint8)>>("android_app_ActionBar_setHomeButtonEnabled")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public void setHomeButtonEnabled(boolean enabled)
  void setHomeButtonEnabled(bool enabled) =>
      _setHomeButtonEnabled(reference, enabled ? 1 : 0);

  static final _getThemedContext = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_ActionBar_getThemedContext")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.content.Context getThemedContext()
  content.Context getThemedContext() =>
      content.Context.fromRef(_getThemedContext(reference));

  static final _setHomeAsUpIndicator = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_ActionBar_setHomeAsUpIndicator")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void setHomeAsUpIndicator(android.graphics.drawable.Drawable indicator)
  void setHomeAsUpIndicator(jni.JlObject indicator) =>
      _setHomeAsUpIndicator(reference, indicator.reference);

  static final _setHomeAsUpIndicator_1 = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_app_ActionBar_setHomeAsUpIndicator_1")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public void setHomeAsUpIndicator(int resId)
  void setHomeAsUpIndicator_1(int resId) =>
      _setHomeAsUpIndicator_1(reference, resId);

  static final _setHomeActionContentDescription = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_ActionBar_setHomeActionContentDescription")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void setHomeActionContentDescription(java.lang.CharSequence description)
  void setHomeActionContentDescription(jni.JlObject description) =>
      _setHomeActionContentDescription(reference, description.reference);

  static final _setHomeActionContentDescription_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "android_app_ActionBar_setHomeActionContentDescription_1")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public void setHomeActionContentDescription(int resId)
  void setHomeActionContentDescription_1(int resId) =>
      _setHomeActionContentDescription_1(reference, resId);

  static final _setHideOnContentScrollEnabled = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Uint8)>>(
          "android_app_ActionBar_setHideOnContentScrollEnabled")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public void setHideOnContentScrollEnabled(boolean hideOnContentScroll)
  void setHideOnContentScrollEnabled(bool hideOnContentScroll) =>
      _setHideOnContentScrollEnabled(reference, hideOnContentScroll ? 1 : 0);

  static final _isHideOnContentScrollEnabled =
      jlookup<ffi.NativeFunction<ffi.Uint8 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_ActionBar_isHideOnContentScrollEnabled")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public boolean isHideOnContentScrollEnabled()
  bool isHideOnContentScrollEnabled() =>
      _isHideOnContentScrollEnabled(reference) != 0;

  static final _getHideOffset =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_ActionBar_getHideOffset")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int getHideOffset()
  int getHideOffset() => _getHideOffset(reference);

  static final _setHideOffset = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_app_ActionBar_setHideOffset")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public void setHideOffset(int offset)
  void setHideOffset(int offset) => _setHideOffset(reference, offset);

  static final _setElevation = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  ffi.Float)>>("android_app_ActionBar_setElevation")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, double)>();

  /// from: public void setElevation(float elevation)
  void setElevation(double elevation) => _setElevation(reference, elevation);

  static final _getElevation =
      jlookup<ffi.NativeFunction<ffi.Float Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_ActionBar_getElevation")
          .asFunction<double Function(ffi.Pointer<ffi.Void>)>();

  /// from: public float getElevation()
  double getElevation() => _getElevation(reference);
}

class ActionBar_TabListener extends jni.JlObject {
  ActionBar_TabListener.fromRef(ffi.Pointer<ffi.Void> ref) : super.fromRef(ref);

  static final _onTabSelected = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_ActionBar__TabListener_onTabSelected")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public abstract void onTabSelected(android.app.ActionBar.Tab tab, android.app.FragmentTransaction ft)
  void onTabSelected(ActionBar_Tab tab, FragmentTransaction ft) =>
      _onTabSelected(reference, tab.reference, ft.reference);

  static final _onTabUnselected = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_ActionBar__TabListener_onTabUnselected")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public abstract void onTabUnselected(android.app.ActionBar.Tab tab, android.app.FragmentTransaction ft)
  void onTabUnselected(ActionBar_Tab tab, FragmentTransaction ft) =>
      _onTabUnselected(reference, tab.reference, ft.reference);

  static final _onTabReselected = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_ActionBar__TabListener_onTabReselected")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public abstract void onTabReselected(android.app.ActionBar.Tab tab, android.app.FragmentTransaction ft)
  void onTabReselected(ActionBar_Tab tab, FragmentTransaction ft) =>
      _onTabReselected(reference, tab.reference, ft.reference);
}

class ActionBar_Tab extends jni.JlObject {
  ActionBar_Tab.fromRef(ffi.Pointer<ffi.Void> ref) : super.fromRef(ref);

  /// from: static public final int INVALID_POSITION
  static const INVALID_POSITION = -1;

  static final _ctor =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "android_app_ActionBar__Tab_new")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();

  /// from: public void <init>()
  ActionBar_Tab() : super.fromRef(_ctor());

  static final _getPosition =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_ActionBar__Tab_getPosition")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public abstract int getPosition()
  int getPosition() => _getPosition(reference);

  static final _getIcon = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
                  ffi.Pointer<ffi.Void>)>>("android_app_ActionBar__Tab_getIcon")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public abstract android.graphics.drawable.Drawable getIcon()
  jni.JlObject getIcon() => jni.JlObject.fromRef(_getIcon(reference));

  static final _getText = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
                  ffi.Pointer<ffi.Void>)>>("android_app_ActionBar__Tab_getText")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public abstract java.lang.CharSequence getText()
  jni.JlObject getText() => jni.JlObject.fromRef(_getText(reference));

  static final _setIcon = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("android_app_ActionBar__Tab_setIcon")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public abstract android.app.ActionBar.Tab setIcon(android.graphics.drawable.Drawable icon)
  ActionBar_Tab setIcon(jni.JlObject icon) =>
      ActionBar_Tab.fromRef(_setIcon(reference, icon.reference));

  static final _setIcon_1 = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_app_ActionBar__Tab_setIcon_1")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public abstract android.app.ActionBar.Tab setIcon(int resId)
  ActionBar_Tab setIcon_1(int resId) =>
      ActionBar_Tab.fromRef(_setIcon_1(reference, resId));

  static final _setText = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("android_app_ActionBar__Tab_setText")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public abstract android.app.ActionBar.Tab setText(java.lang.CharSequence text)
  ActionBar_Tab setText(jni.JlObject text) =>
      ActionBar_Tab.fromRef(_setText(reference, text.reference));

  static final _setText_1 = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_app_ActionBar__Tab_setText_1")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public abstract android.app.ActionBar.Tab setText(int resId)
  ActionBar_Tab setText_1(int resId) =>
      ActionBar_Tab.fromRef(_setText_1(reference, resId));

  static final _setCustomView = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_ActionBar__Tab_setCustomView")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public abstract android.app.ActionBar.Tab setCustomView(android.view.View view)
  ActionBar_Tab setCustomView(jni.JlObject view) =>
      ActionBar_Tab.fromRef(_setCustomView(reference, view.reference));

  static final _setCustomView_1 = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_app_ActionBar__Tab_setCustomView_1")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public abstract android.app.ActionBar.Tab setCustomView(int layoutResId)
  ActionBar_Tab setCustomView_1(int layoutResId) =>
      ActionBar_Tab.fromRef(_setCustomView_1(reference, layoutResId));

  static final _getCustomView = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_ActionBar__Tab_getCustomView")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public abstract android.view.View getCustomView()
  jni.JlObject getCustomView() =>
      jni.JlObject.fromRef(_getCustomView(reference));

  static final _setTag = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("android_app_ActionBar__Tab_setTag")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public abstract android.app.ActionBar.Tab setTag(java.lang.Object obj)
  ActionBar_Tab setTag(jni.JlObject obj) =>
      ActionBar_Tab.fromRef(_setTag(reference, obj.reference));

  static final _getTag = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
                  ffi.Pointer<ffi.Void>)>>("android_app_ActionBar__Tab_getTag")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public abstract java.lang.Object getTag()
  jni.JlObject getTag() => jni.JlObject.fromRef(_getTag(reference));

  static final _setTabListener = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_ActionBar__Tab_setTabListener")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public abstract android.app.ActionBar.Tab setTabListener(android.app.ActionBar.TabListener listener)
  ActionBar_Tab setTabListener(ActionBar_TabListener listener) =>
      ActionBar_Tab.fromRef(_setTabListener(reference, listener.reference));

  static final _select =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_ActionBar__Tab_select")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: public abstract void select()
  void select() => _select(reference);

  static final _setContentDescription = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "android_app_ActionBar__Tab_setContentDescription")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public abstract android.app.ActionBar.Tab setContentDescription(int resId)
  ActionBar_Tab setContentDescription(int resId) =>
      ActionBar_Tab.fromRef(_setContentDescription(reference, resId));

  static final _setContentDescription_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_ActionBar__Tab_setContentDescription_1")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public abstract android.app.ActionBar.Tab setContentDescription(java.lang.CharSequence contentDesc)
  ActionBar_Tab setContentDescription_1(jni.JlObject contentDesc) =>
      ActionBar_Tab.fromRef(
          _setContentDescription_1(reference, contentDesc.reference));

  static final _getContentDescription = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_ActionBar__Tab_getContentDescription")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public abstract java.lang.CharSequence getContentDescription()
  jni.JlObject getContentDescription() =>
      jni.JlObject.fromRef(_getContentDescription(reference));
}

class ActionBar_OnNavigationListener extends jni.JlObject {
  ActionBar_OnNavigationListener.fromRef(ffi.Pointer<ffi.Void> ref)
      : super.fromRef(ref);

  static final _onNavigationItemSelected = jlookup<
              ffi.NativeFunction<
                  ffi.Uint8 Function(
                      ffi.Pointer<ffi.Void>, ffi.Int32, ffi.Int64)>>(
          "android_app_ActionBar__OnNavigationListener_onNavigationItemSelected")
      .asFunction<int Function(ffi.Pointer<ffi.Void>, int, int)>();

  /// from: public abstract boolean onNavigationItemSelected(int itemPosition, long itemId)
  bool onNavigationItemSelected(int itemPosition, int itemId) =>
      _onNavigationItemSelected(reference, itemPosition, itemId) != 0;
}

class ActionBar_OnMenuVisibilityListener extends jni.JlObject {
  ActionBar_OnMenuVisibilityListener.fromRef(ffi.Pointer<ffi.Void> ref)
      : super.fromRef(ref);

  static final _onMenuVisibilityChanged = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Uint8)>>(
          "android_app_ActionBar__OnMenuVisibilityListener_onMenuVisibilityChanged")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public abstract void onMenuVisibilityChanged(boolean isVisible)
  void onMenuVisibilityChanged(bool isVisible) =>
      _onMenuVisibilityChanged(reference, isVisible ? 1 : 0);
}

class ActionBar_LayoutParams extends jni.JlObject {
  ActionBar_LayoutParams.fromRef(ffi.Pointer<ffi.Void> ref)
      : super.fromRef(ref);

  /// from: public int gravity
  static final _getgravity = jlookup<
          ffi.NativeFunction<
              ffi.Int32 Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_app_ActionBar__LayoutParams_gravity")
      .asFunction<
          int Function(
    ffi.Pointer<ffi.Void>,
  )>();
  int get gravity => _getgravity(reference);
  static final _setgravity = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "set_android_app_ActionBar__LayoutParams_gravity")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();
  set gravity(int value) => _setgravity(reference, value);

  static final _ctor = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_ActionBar__LayoutParams_new")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void <init>(android.content.Context c, android.util.AttributeSet attrs)
  ActionBar_LayoutParams(content.Context c, jni.JlObject attrs)
      : super.fromRef(_ctor(c.reference, attrs.reference));

  static final _ctor_1 = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(ffi.Int32,
                  ffi.Int32)>>("android_app_ActionBar__LayoutParams_new_1")
      .asFunction<ffi.Pointer<ffi.Void> Function(int, int)>();

  /// from: public void <init>(int width, int height)
  ActionBar_LayoutParams.ctor_1(int width, int height)
      : super.fromRef(_ctor_1(width, height));

  static final _ctor_2 = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(ffi.Int32, ffi.Int32,
                  ffi.Int32)>>("android_app_ActionBar__LayoutParams_new_2")
      .asFunction<ffi.Pointer<ffi.Void> Function(int, int, int)>();

  /// from: public void <init>(int width, int height, int gravity)
  ActionBar_LayoutParams.ctor_2(int width, int height, int gravity)
      : super.fromRef(_ctor_2(width, height, gravity));

  static final _ctor_3 =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function(ffi.Int32)>>(
              "android_app_ActionBar__LayoutParams_new_3")
          .asFunction<ffi.Pointer<ffi.Void> Function(int)>();

  /// from: public void <init>(int gravity)
  ActionBar_LayoutParams.ctor_3(int gravity) : super.fromRef(_ctor_3(gravity));

  static final _ctor_4 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_ActionBar__LayoutParams_new_4")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void <init>(android.app.ActionBar.LayoutParams source)
  ActionBar_LayoutParams.ctor_4(ActionBar_LayoutParams source)
      : super.fromRef(_ctor_4(source.reference));

  static final _ctor_5 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_ActionBar__LayoutParams_new_5")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void <init>(android.view.ViewGroup.LayoutParams source)
  ActionBar_LayoutParams.ctor_5(jni.JlObject source)
      : super.fromRef(_ctor_5(source.reference));
}

class ProgressDialog extends AlertDialog {
  ProgressDialog.fromRef(ffi.Pointer<ffi.Void> ref) : super.fromRef(ref);

  /// from: static public final int STYLE_HORIZONTAL
  static const STYLE_HORIZONTAL = 1;

  /// from: static public final int STYLE_SPINNER
  static const STYLE_SPINNER = 0;

  static final _ctor = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
                  ffi.Pointer<ffi.Void>)>>("android_app_ProgressDialog_new")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void <init>(android.content.Context context)
  ProgressDialog(content.Context context)
      : super.fromRef(_ctor(context.reference));

  static final _ctor_1 = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_app_ProgressDialog_new_1")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public void <init>(android.content.Context context, int theme)
  ProgressDialog.ctor_1(content.Context context, int theme)
      : super.fromRef(_ctor_1(context.reference, theme));

  static final _onCreate = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_ProgressDialog_onCreate")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: protected void onCreate(android.os.Bundle savedInstanceState)
  void onCreate(os.Bundle savedInstanceState) =>
      _onCreate(reference, savedInstanceState.reference);

  static final _onStart =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_ProgressDialog_onStart")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void onStart()
  void onStart() => _onStart(reference);

  static final _onStop =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_ProgressDialog_onStop")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: protected void onStop()
  void onStop() => _onStop(reference);

  static final _setProgress = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_app_ProgressDialog_setProgress")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public void setProgress(int value)
  void setProgress(int value) => _setProgress(reference, value);

  static final _setSecondaryProgress = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "android_app_ProgressDialog_setSecondaryProgress")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public void setSecondaryProgress(int secondaryProgress)
  void setSecondaryProgress(int secondaryProgress) =>
      _setSecondaryProgress(reference, secondaryProgress);

  static final _getProgress =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_ProgressDialog_getProgress")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int getProgress()
  int getProgress() => _getProgress(reference);

  static final _getSecondaryProgress =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_ProgressDialog_getSecondaryProgress")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int getSecondaryProgress()
  int getSecondaryProgress() => _getSecondaryProgress(reference);

  static final _getMax =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_ProgressDialog_getMax")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int getMax()
  int getMax() => _getMax(reference);

  static final _setMax = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_app_ProgressDialog_setMax")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public void setMax(int max)
  void setMax(int max) => _setMax(reference, max);

  static final _incrementProgressBy = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_app_ProgressDialog_incrementProgressBy")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public void incrementProgressBy(int diff)
  void incrementProgressBy(int diff) => _incrementProgressBy(reference, diff);

  static final _incrementSecondaryProgressBy = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "android_app_ProgressDialog_incrementSecondaryProgressBy")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public void incrementSecondaryProgressBy(int diff)
  void incrementSecondaryProgressBy(int diff) =>
      _incrementSecondaryProgressBy(reference, diff);

  static final _setProgressDrawable = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_ProgressDialog_setProgressDrawable")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void setProgressDrawable(android.graphics.drawable.Drawable d)
  void setProgressDrawable(jni.JlObject d) =>
      _setProgressDrawable(reference, d.reference);

  static final _setIndeterminateDrawable = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_ProgressDialog_setIndeterminateDrawable")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void setIndeterminateDrawable(android.graphics.drawable.Drawable d)
  void setIndeterminateDrawable(jni.JlObject d) =>
      _setIndeterminateDrawable(reference, d.reference);

  static final _setIndeterminate = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  ffi.Uint8)>>("android_app_ProgressDialog_setIndeterminate")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public void setIndeterminate(boolean indeterminate)
  void setIndeterminate(bool indeterminate) =>
      _setIndeterminate(reference, indeterminate ? 1 : 0);

  static final _isIndeterminate =
      jlookup<ffi.NativeFunction<ffi.Uint8 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_ProgressDialog_isIndeterminate")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public boolean isIndeterminate()
  bool isIndeterminate() => _isIndeterminate(reference) != 0;

  static final _setMessage = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_ProgressDialog_setMessage")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void setMessage(java.lang.CharSequence message)
  void setMessage(jni.JlObject message) =>
      _setMessage(reference, message.reference);

  static final _setProgressStyle = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_app_ProgressDialog_setProgressStyle")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public void setProgressStyle(int style)
  void setProgressStyle(int style) => _setProgressStyle(reference, style);

  static final _setProgressNumberFormat = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_ProgressDialog_setProgressNumberFormat")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void setProgressNumberFormat(java.lang.String format)
  void setProgressNumberFormat(jni.JlString format) =>
      _setProgressNumberFormat(reference, format.reference);

  static final _setProgressPercentFormat = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_ProgressDialog_setProgressPercentFormat")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void setProgressPercentFormat(java.text.NumberFormat format)
  void setProgressPercentFormat(jni.JlObject format) =>
      _setProgressPercentFormat(reference, format.reference);
}

class ActivityGroup extends Activity {
  ActivityGroup.fromRef(ffi.Pointer<ffi.Void> ref) : super.fromRef(ref);

  static final _ctor =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "android_app_ActivityGroup_new")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();

  /// from: public void <init>()
  ActivityGroup() : super.fromRef(_ctor());

  static final _ctor_1 =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function(ffi.Uint8)>>(
              "android_app_ActivityGroup_new_1")
          .asFunction<ffi.Pointer<ffi.Void> Function(int)>();

  /// from: public void <init>(boolean singleActivityMode)
  ActivityGroup.ctor_1(bool singleActivityMode)
      : super.fromRef(_ctor_1(singleActivityMode ? 1 : 0));

  static final _onCreate = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("android_app_ActivityGroup_onCreate")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: protected void onCreate(android.os.Bundle savedInstanceState)
  void onCreate(os.Bundle savedInstanceState) =>
      _onCreate(reference, savedInstanceState.reference);

  static final _onResume =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_ActivityGroup_onResume")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: protected void onResume()
  void onResume() => _onResume(reference);

  static final _onSaveInstanceState = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_ActivityGroup_onSaveInstanceState")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: protected void onSaveInstanceState(android.os.Bundle outState)
  void onSaveInstanceState(os.Bundle outState) =>
      _onSaveInstanceState(reference, outState.reference);

  static final _onPause =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_ActivityGroup_onPause")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: protected void onPause()
  void onPause() => _onPause(reference);

  static final _onStop =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_ActivityGroup_onStop")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: protected void onStop()
  void onStop() => _onStop(reference);

  static final _onDestroy =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_ActivityGroup_onDestroy")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: protected void onDestroy()
  void onDestroy() => _onDestroy(reference);

  static final _getCurrentActivity = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_ActivityGroup_getCurrentActivity")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.Activity getCurrentActivity()
  Activity getCurrentActivity() =>
      Activity.fromRef(_getCurrentActivity(reference));

  static final _getLocalActivityManager = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_ActivityGroup_getLocalActivityManager")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public final android.app.LocalActivityManager getLocalActivityManager()
  LocalActivityManager getLocalActivityManager() =>
      LocalActivityManager.fromRef(_getLocalActivityManager(reference));
}

class SharedElementCallback extends jni.JlObject {
  SharedElementCallback.fromRef(ffi.Pointer<ffi.Void> ref) : super.fromRef(ref);

  static final _ctor =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "android_app_SharedElementCallback_new")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();

  /// from: public void <init>()
  SharedElementCallback() : super.fromRef(_ctor());

  static final _onSharedElementStart = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>)>>(
          "android_app_SharedElementCallback_onSharedElementStart")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void onSharedElementStart(java.util.List<java.lang.String> sharedElementNames, java.util.List<android.view.View> sharedElements, java.util.List<android.view.View> sharedElementSnapshots)
  void onSharedElementStart(jni.JlObject sharedElementNames,
          jni.JlObject sharedElements, jni.JlObject sharedElementSnapshots) =>
      _onSharedElementStart(reference, sharedElementNames.reference,
          sharedElements.reference, sharedElementSnapshots.reference);

  static final _onSharedElementEnd = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>)>>(
          "android_app_SharedElementCallback_onSharedElementEnd")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void onSharedElementEnd(java.util.List<java.lang.String> sharedElementNames, java.util.List<android.view.View> sharedElements, java.util.List<android.view.View> sharedElementSnapshots)
  void onSharedElementEnd(jni.JlObject sharedElementNames,
          jni.JlObject sharedElements, jni.JlObject sharedElementSnapshots) =>
      _onSharedElementEnd(reference, sharedElementNames.reference,
          sharedElements.reference, sharedElementSnapshots.reference);

  static final _onRejectSharedElements = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_SharedElementCallback_onRejectSharedElements")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void onRejectSharedElements(java.util.List<android.view.View> rejectedSharedElements)
  void onRejectSharedElements(jni.JlObject rejectedSharedElements) =>
      _onRejectSharedElements(reference, rejectedSharedElements.reference);

  static final _onMapSharedElements = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_SharedElementCallback_onMapSharedElements")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public void onMapSharedElements(java.util.List<java.lang.String> names, java.util.Map<java.lang.String,android.view.View> sharedElements)
  void onMapSharedElements(jni.JlObject names, jni.JlObject sharedElements) =>
      _onMapSharedElements(
          reference, names.reference, sharedElements.reference);

  static final _onCaptureSharedElementSnapshot = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>)>>(
          "android_app_SharedElementCallback_onCaptureSharedElementSnapshot")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public android.os.Parcelable onCaptureSharedElementSnapshot(android.view.View sharedElement, android.graphics.Matrix viewToGlobalMatrix, android.graphics.RectF screenBounds)
  os.Parcelable onCaptureSharedElementSnapshot(jni.JlObject sharedElement,
          jni.JlObject viewToGlobalMatrix, jni.JlObject screenBounds) =>
      os.Parcelable.fromRef(_onCaptureSharedElementSnapshot(
          reference,
          sharedElement.reference,
          viewToGlobalMatrix.reference,
          screenBounds.reference));

  static final _onCreateSnapshotView = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_SharedElementCallback_onCreateSnapshotView")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.view.View onCreateSnapshotView(android.content.Context context, android.os.Parcelable snapshot)
  jni.JlObject onCreateSnapshotView(
          content.Context context, os.Parcelable snapshot) =>
      jni.JlObject.fromRef(_onCreateSnapshotView(
          reference, context.reference, snapshot.reference));

  static final _onSharedElementsArrived = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>)>>(
          "android_app_SharedElementCallback_onSharedElementsArrived")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void onSharedElementsArrived(java.util.List<java.lang.String> sharedElementNames, java.util.List<android.view.View> sharedElements, android.app.SharedElementCallback.OnSharedElementsReadyListener listener)
  void onSharedElementsArrived(
          jni.JlObject sharedElementNames,
          jni.JlObject sharedElements,
          SharedElementCallback_OnSharedElementsReadyListener listener) =>
      _onSharedElementsArrived(reference, sharedElementNames.reference,
          sharedElements.reference, listener.reference);
}

class SharedElementCallback_OnSharedElementsReadyListener extends jni.JlObject {
  SharedElementCallback_OnSharedElementsReadyListener.fromRef(
      ffi.Pointer<ffi.Void> ref)
      : super.fromRef(ref);

  static final _onSharedElementsReady = jlookup<
              ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_SharedElementCallback__OnSharedElementsReadyListener_onSharedElementsReady")
      .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: public abstract void onSharedElementsReady()
  void onSharedElementsReady() => _onSharedElementsReady(reference);
}

class WallpaperManager extends jni.JlObject {
  WallpaperManager.fromRef(ffi.Pointer<ffi.Void> ref) : super.fromRef(ref);

  /// from: static public final java.lang.String ACTION_CHANGE_LIVE_WALLPAPER
  static const ACTION_CHANGE_LIVE_WALLPAPER =
      "android.service.wallpaper.CHANGE_LIVE_WALLPAPER";

  /// from: static public final java.lang.String ACTION_CROP_AND_SET_WALLPAPER
  static const ACTION_CROP_AND_SET_WALLPAPER =
      "android.service.wallpaper.CROP_AND_SET_WALLPAPER";

  /// from: static public final java.lang.String ACTION_LIVE_WALLPAPER_CHOOSER
  static const ACTION_LIVE_WALLPAPER_CHOOSER =
      "android.service.wallpaper.LIVE_WALLPAPER_CHOOSER";

  /// from: static public final java.lang.String COMMAND_DROP
  static const COMMAND_DROP = "android.home.drop";

  /// from: static public final java.lang.String COMMAND_SECONDARY_TAP
  static const COMMAND_SECONDARY_TAP = "android.wallpaper.secondaryTap";

  /// from: static public final java.lang.String COMMAND_TAP
  static const COMMAND_TAP = "android.wallpaper.tap";

  /// from: static public final java.lang.String EXTRA_LIVE_WALLPAPER_COMPONENT
  static const EXTRA_LIVE_WALLPAPER_COMPONENT =
      "android.service.wallpaper.extra.LIVE_WALLPAPER_COMPONENT";

  /// from: static public final int FLAG_LOCK
  static const FLAG_LOCK = 2;

  /// from: static public final int FLAG_SYSTEM
  static const FLAG_SYSTEM = 1;

  /// from: static public final java.lang.String WALLPAPER_PREVIEW_META_DATA
  static const WALLPAPER_PREVIEW_META_DATA = "android.wallpaper.preview";

  static final _ctor =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "android_app_WallpaperManager_new")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();

  /// from: void <init>()
  WallpaperManager() : super.fromRef(_ctor());

  static final _getInstance = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_WallpaperManager_getInstance")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: static public android.app.WallpaperManager getInstance(android.content.Context context)
  static WallpaperManager getInstance(content.Context context) =>
      WallpaperManager.fromRef(_getInstance(context.reference));

  static final _getDrawable = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_WallpaperManager_getDrawable")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.graphics.drawable.Drawable getDrawable()
  jni.JlObject getDrawable() => jni.JlObject.fromRef(_getDrawable(reference));

  static final _getBuiltInDrawable = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_WallpaperManager_getBuiltInDrawable")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.graphics.drawable.Drawable getBuiltInDrawable()
  jni.JlObject getBuiltInDrawable() =>
      jni.JlObject.fromRef(_getBuiltInDrawable(reference));

  static final _getBuiltInDrawable_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "android_app_WallpaperManager_getBuiltInDrawable_1")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public android.graphics.drawable.Drawable getBuiltInDrawable(int which)
  jni.JlObject getBuiltInDrawable_1(int which) =>
      jni.JlObject.fromRef(_getBuiltInDrawable_1(reference, which));

  static final _getBuiltInDrawable_2 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                      ffi.Int32, ffi.Int32, ffi.Uint8, ffi.Float, ffi.Float)>>(
          "android_app_WallpaperManager_getBuiltInDrawable_2")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, int, int, int, double, double)>();

  /// from: public android.graphics.drawable.Drawable getBuiltInDrawable(int outWidth, int outHeight, boolean scaleToFit, float horizontalAlignment, float verticalAlignment)
  jni.JlObject getBuiltInDrawable_2(
          int outWidth,
          int outHeight,
          bool scaleToFit,
          double horizontalAlignment,
          double verticalAlignment) =>
      jni.JlObject.fromRef(_getBuiltInDrawable_2(reference, outWidth, outHeight,
          scaleToFit ? 1 : 0, horizontalAlignment, verticalAlignment));

  static final _getBuiltInDrawable_3 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Int32,
                      ffi.Int32,
                      ffi.Uint8,
                      ffi.Float,
                      ffi.Float,
                      ffi.Int32)>>(
          "android_app_WallpaperManager_getBuiltInDrawable_3")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, int, int, int, double, double, int)>();

  /// from: public android.graphics.drawable.Drawable getBuiltInDrawable(int outWidth, int outHeight, boolean scaleToFit, float horizontalAlignment, float verticalAlignment, int which)
  jni.JlObject getBuiltInDrawable_3(
          int outWidth,
          int outHeight,
          bool scaleToFit,
          double horizontalAlignment,
          double verticalAlignment,
          int which) =>
      jni.JlObject.fromRef(_getBuiltInDrawable_3(reference, outWidth, outHeight,
          scaleToFit ? 1 : 0, horizontalAlignment, verticalAlignment, which));

  static final _peekDrawable = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_WallpaperManager_peekDrawable")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.graphics.drawable.Drawable peekDrawable()
  jni.JlObject peekDrawable() => jni.JlObject.fromRef(_peekDrawable(reference));

  static final _getFastDrawable = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_WallpaperManager_getFastDrawable")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.graphics.drawable.Drawable getFastDrawable()
  jni.JlObject getFastDrawable() =>
      jni.JlObject.fromRef(_getFastDrawable(reference));

  static final _peekFastDrawable = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_WallpaperManager_peekFastDrawable")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.graphics.drawable.Drawable peekFastDrawable()
  jni.JlObject peekFastDrawable() =>
      jni.JlObject.fromRef(_peekFastDrawable(reference));

  static final _getWallpaperFile = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_app_WallpaperManager_getWallpaperFile")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public android.os.ParcelFileDescriptor getWallpaperFile(int which)
  os.ParcelFileDescriptor getWallpaperFile(int which) =>
      os.ParcelFileDescriptor.fromRef(_getWallpaperFile(reference, which));

  static final _addOnColorsChangedListener = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_WallpaperManager_addOnColorsChangedListener")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public void addOnColorsChangedListener(android.app.WallpaperManager.OnColorsChangedListener listener, android.os.Handler handler)
  void addOnColorsChangedListener(
          WallpaperManager_OnColorsChangedListener listener,
          os.Handler handler) =>
      _addOnColorsChangedListener(
          reference, listener.reference, handler.reference);

  static final _removeOnColorsChangedListener = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_WallpaperManager_removeOnColorsChangedListener")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void removeOnColorsChangedListener(android.app.WallpaperManager.OnColorsChangedListener callback)
  void removeOnColorsChangedListener(
          WallpaperManager_OnColorsChangedListener callback) =>
      _removeOnColorsChangedListener(reference, callback.reference);

  static final _getWallpaperColors = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "android_app_WallpaperManager_getWallpaperColors")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public android.app.WallpaperColors getWallpaperColors(int which)
  WallpaperColors getWallpaperColors(int which) =>
      WallpaperColors.fromRef(_getWallpaperColors(reference, which));

  static final _forgetLoadedWallpaper =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_WallpaperManager_forgetLoadedWallpaper")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void forgetLoadedWallpaper()
  void forgetLoadedWallpaper() => _forgetLoadedWallpaper(reference);

  static final _getWallpaperInfo = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_WallpaperManager_getWallpaperInfo")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.WallpaperInfo getWallpaperInfo()
  WallpaperInfo getWallpaperInfo() =>
      WallpaperInfo.fromRef(_getWallpaperInfo(reference));

  static final _getWallpaperId = jlookup<
          ffi.NativeFunction<
              ffi.Int32 Function(ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_app_WallpaperManager_getWallpaperId")
      .asFunction<int Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public int getWallpaperId(int which)
  int getWallpaperId(int which) => _getWallpaperId(reference, which);

  static final _getCropAndSetWallpaperIntent = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_WallpaperManager_getCropAndSetWallpaperIntent")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.content.Intent getCropAndSetWallpaperIntent(android.net.Uri imageUri)
  content.Intent getCropAndSetWallpaperIntent(jni.JlObject imageUri) =>
      content.Intent.fromRef(
          _getCropAndSetWallpaperIntent(reference, imageUri.reference));

  static final _setResource = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_app_WallpaperManager_setResource")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public void setResource(int resid)
  void setResource(int resid) => _setResource(reference, resid);

  static final _setResource_1 = jlookup<
          ffi.NativeFunction<
              ffi.Int32 Function(ffi.Pointer<ffi.Void>, ffi.Int32,
                  ffi.Int32)>>("android_app_WallpaperManager_setResource_1")
      .asFunction<int Function(ffi.Pointer<ffi.Void>, int, int)>();

  /// from: public int setResource(int resid, int which)
  int setResource_1(int resid, int which) =>
      _setResource_1(reference, resid, which);

  static final _setBitmap = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_WallpaperManager_setBitmap")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void setBitmap(android.graphics.Bitmap bitmap)
  void setBitmap(jni.JlObject bitmap) =>
      _setBitmap(reference, bitmap.reference);

  static final _setBitmap_1 = jlookup<
          ffi.NativeFunction<
              ffi.Int32 Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Uint8)>>("android_app_WallpaperManager_setBitmap_1")
      .asFunction<
          int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, int)>();

  /// from: public int setBitmap(android.graphics.Bitmap fullImage, android.graphics.Rect visibleCropHint, boolean allowBackup)
  int setBitmap_1(jni.JlObject fullImage, jni.JlObject visibleCropHint,
          bool allowBackup) =>
      _setBitmap_1(reference, fullImage.reference, visibleCropHint.reference,
          allowBackup ? 1 : 0);

  static final _setBitmap_2 = jlookup<
          ffi.NativeFunction<
              ffi.Int32 Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Uint8,
                  ffi.Int32)>>("android_app_WallpaperManager_setBitmap_2")
      .asFunction<
          int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, int, int)>();

  /// from: public int setBitmap(android.graphics.Bitmap fullImage, android.graphics.Rect visibleCropHint, boolean allowBackup, int which)
  int setBitmap_2(jni.JlObject fullImage, jni.JlObject visibleCropHint,
          bool allowBackup, int which) =>
      _setBitmap_2(reference, fullImage.reference, visibleCropHint.reference,
          allowBackup ? 1 : 0, which);

  static final _setStream = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_WallpaperManager_setStream")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void setStream(java.io.InputStream bitmapData)
  void setStream(jni.JlObject bitmapData) =>
      _setStream(reference, bitmapData.reference);

  static final _setStream_1 = jlookup<
          ffi.NativeFunction<
              ffi.Int32 Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Uint8)>>("android_app_WallpaperManager_setStream_1")
      .asFunction<
          int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, int)>();

  /// from: public int setStream(java.io.InputStream bitmapData, android.graphics.Rect visibleCropHint, boolean allowBackup)
  int setStream_1(jni.JlObject bitmapData, jni.JlObject visibleCropHint,
          bool allowBackup) =>
      _setStream_1(reference, bitmapData.reference, visibleCropHint.reference,
          allowBackup ? 1 : 0);

  static final _setStream_2 = jlookup<
          ffi.NativeFunction<
              ffi.Int32 Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Uint8,
                  ffi.Int32)>>("android_app_WallpaperManager_setStream_2")
      .asFunction<
          int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, int, int)>();

  /// from: public int setStream(java.io.InputStream bitmapData, android.graphics.Rect visibleCropHint, boolean allowBackup, int which)
  int setStream_2(jni.JlObject bitmapData, jni.JlObject visibleCropHint,
          bool allowBackup, int which) =>
      _setStream_2(reference, bitmapData.reference, visibleCropHint.reference,
          allowBackup ? 1 : 0, which);

  static final _hasResourceWallpaper = jlookup<
              ffi.NativeFunction<
                  ffi.Uint8 Function(ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "android_app_WallpaperManager_hasResourceWallpaper")
      .asFunction<int Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public boolean hasResourceWallpaper(int resid)
  bool hasResourceWallpaper(int resid) =>
      _hasResourceWallpaper(reference, resid) != 0;

  static final _getDesiredMinimumWidth =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_WallpaperManager_getDesiredMinimumWidth")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int getDesiredMinimumWidth()
  int getDesiredMinimumWidth() => _getDesiredMinimumWidth(reference);

  static final _getDesiredMinimumHeight =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_WallpaperManager_getDesiredMinimumHeight")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int getDesiredMinimumHeight()
  int getDesiredMinimumHeight() => _getDesiredMinimumHeight(reference);

  static final _suggestDesiredDimensions = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Int32, ffi.Int32)>>(
          "android_app_WallpaperManager_suggestDesiredDimensions")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int, int)>();

  /// from: public void suggestDesiredDimensions(int minimumWidth, int minimumHeight)
  void suggestDesiredDimensions(int minimumWidth, int minimumHeight) =>
      _suggestDesiredDimensions(reference, minimumWidth, minimumHeight);

  static final _setDisplayPadding = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_WallpaperManager_setDisplayPadding")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void setDisplayPadding(android.graphics.Rect padding)
  void setDisplayPadding(jni.JlObject padding) =>
      _setDisplayPadding(reference, padding.reference);

  static final _clearWallpaper =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_WallpaperManager_clearWallpaper")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void clearWallpaper()
  void clearWallpaper() => _clearWallpaper(reference);

  static final _setWallpaperOffsets = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Float, ffi.Float)>>(
          "android_app_WallpaperManager_setWallpaperOffsets")
      .asFunction<
          void Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, double, double)>();

  /// from: public void setWallpaperOffsets(android.os.IBinder windowToken, float xOffset, float yOffset)
  void setWallpaperOffsets(
          os.IBinder windowToken, double xOffset, double yOffset) =>
      _setWallpaperOffsets(reference, windowToken.reference, xOffset, yOffset);

  static final _setWallpaperOffsetSteps = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Float, ffi.Float)>>(
          "android_app_WallpaperManager_setWallpaperOffsetSteps")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, double, double)>();

  /// from: public void setWallpaperOffsetSteps(float xStep, float yStep)
  void setWallpaperOffsetSteps(double xStep, double yStep) =>
      _setWallpaperOffsetSteps(reference, xStep, yStep);

  static final _sendWallpaperCommand = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Int32,
                      ffi.Int32,
                      ffi.Int32,
                      ffi.Pointer<ffi.Void>)>>(
          "android_app_WallpaperManager_sendWallpaperCommand")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, int, int, int, ffi.Pointer<ffi.Void>)>();

  /// from: public void sendWallpaperCommand(android.os.IBinder windowToken, java.lang.String action, int x, int y, int z, android.os.Bundle extras)
  void sendWallpaperCommand(os.IBinder windowToken, jni.JlString action, int x,
          int y, int z, os.Bundle extras) =>
      _sendWallpaperCommand(reference, windowToken.reference, action.reference,
          x, y, z, extras.reference);

  static final _isWallpaperSupported =
      jlookup<ffi.NativeFunction<ffi.Uint8 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_WallpaperManager_isWallpaperSupported")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public boolean isWallpaperSupported()
  bool isWallpaperSupported() => _isWallpaperSupported(reference) != 0;

  static final _isSetWallpaperAllowed =
      jlookup<ffi.NativeFunction<ffi.Uint8 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_WallpaperManager_isSetWallpaperAllowed")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public boolean isSetWallpaperAllowed()
  bool isSetWallpaperAllowed() => _isSetWallpaperAllowed(reference) != 0;

  static final _clearWallpaperOffsets = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_WallpaperManager_clearWallpaperOffsets")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void clearWallpaperOffsets(android.os.IBinder windowToken)
  void clearWallpaperOffsets(os.IBinder windowToken) =>
      _clearWallpaperOffsets(reference, windowToken.reference);

  static final _clear =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_WallpaperManager_clear")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void clear()
  void clear() => _clear(reference);

  static final _clear_1 = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_app_WallpaperManager_clear_1")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public void clear(int which)
  void clear_1(int which) => _clear_1(reference, which);
}

class WallpaperManager_OnColorsChangedListener extends jni.JlObject {
  WallpaperManager_OnColorsChangedListener.fromRef(ffi.Pointer<ffi.Void> ref)
      : super.fromRef(ref);

  static final _onColorsChanged = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "android_app_WallpaperManager__OnColorsChangedListener_onColorsChanged")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public abstract void onColorsChanged(android.app.WallpaperColors colors, int which)
  void onColorsChanged(WallpaperColors colors, int which) =>
      _onColorsChanged(reference, colors.reference, which);
}

class Dialog extends jni.JlObject {
  Dialog.fromRef(ffi.Pointer<ffi.Void> ref) : super.fromRef(ref);

  static final _ctor = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
                  ffi.Pointer<ffi.Void>)>>("android_app_Dialog_new")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void <init>(android.content.Context context)
  Dialog(content.Context context) : super.fromRef(_ctor(context.reference));

  static final _ctor_1 = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_app_Dialog_new_1")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public void <init>(android.content.Context context, int themeResId)
  Dialog.ctor_1(content.Context context, int themeResId)
      : super.fromRef(_ctor_1(context.reference, themeResId));

  static final _ctor_2 = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, ffi.Uint8,
                  ffi.Pointer<ffi.Void>)>>("android_app_Dialog_new_2")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, int, ffi.Pointer<ffi.Void>)>();

  /// from: protected void <init>(android.content.Context context, boolean cancelable, android.content.DialogInterface.OnCancelListener cancelListener)
  Dialog.ctor_2(content.Context context, bool cancelable,
      content.DialogInterface_OnCancelListener cancelListener)
      : super.fromRef(_ctor_2(
            context.reference, cancelable ? 1 : 0, cancelListener.reference));

  static final _getContext = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
                  ffi.Pointer<ffi.Void>)>>("android_app_Dialog_getContext")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public final android.content.Context getContext()
  content.Context getContext() =>
      content.Context.fromRef(_getContext(reference));

  static final _getActionBar = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
                  ffi.Pointer<ffi.Void>)>>("android_app_Dialog_getActionBar")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.ActionBar getActionBar()
  ActionBar getActionBar() => ActionBar.fromRef(_getActionBar(reference));

  static final _setOwnerActivity = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Dialog_setOwnerActivity")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public final void setOwnerActivity(android.app.Activity activity)
  void setOwnerActivity(Activity activity) =>
      _setOwnerActivity(reference, activity.reference);

  static final _getOwnerActivity = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_Dialog_getOwnerActivity")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public final android.app.Activity getOwnerActivity()
  Activity getOwnerActivity() => Activity.fromRef(_getOwnerActivity(reference));

  static final _isShowing =
      jlookup<ffi.NativeFunction<ffi.Uint8 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_Dialog_isShowing")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public boolean isShowing()
  bool isShowing() => _isShowing(reference) != 0;

  static final _create =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_Dialog_create")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void create()
  void create() => _create(reference);

  static final _show_ =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_Dialog_show_")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void show()
  void show_() => _show_(reference);

  static final _hide_ =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_Dialog_hide_")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void hide()
  void hide_() => _hide_(reference);

  static final _dismiss =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_Dialog_dismiss")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void dismiss()
  void dismiss() => _dismiss(reference);

  static final _onCreate = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("android_app_Dialog_onCreate")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: protected void onCreate(android.os.Bundle savedInstanceState)
  void onCreate(os.Bundle savedInstanceState) =>
      _onCreate(reference, savedInstanceState.reference);

  static final _onStart =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_Dialog_onStart")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: protected void onStart()
  void onStart() => _onStart(reference);

  static final _onStop =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_Dialog_onStop")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: protected void onStop()
  void onStop() => _onStop(reference);

  static final _onSaveInstanceState = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_Dialog_onSaveInstanceState")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.os.Bundle onSaveInstanceState()
  os.Bundle onSaveInstanceState() =>
      os.Bundle.fromRef(_onSaveInstanceState(reference));

  static final _onRestoreInstanceState = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Dialog_onRestoreInstanceState")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void onRestoreInstanceState(android.os.Bundle savedInstanceState)
  void onRestoreInstanceState(os.Bundle savedInstanceState) =>
      _onRestoreInstanceState(reference, savedInstanceState.reference);

  static final _getWindow = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
                  ffi.Pointer<ffi.Void>)>>("android_app_Dialog_getWindow")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.view.Window getWindow()
  jni.JlObject getWindow() => jni.JlObject.fromRef(_getWindow(reference));

  static final _getCurrentFocus = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
                  ffi.Pointer<ffi.Void>)>>("android_app_Dialog_getCurrentFocus")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.view.View getCurrentFocus()
  jni.JlObject getCurrentFocus() =>
      jni.JlObject.fromRef(_getCurrentFocus(reference));

  static final _setContentView = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_app_Dialog_setContentView")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public void setContentView(int layoutResID)
  void setContentView(int layoutResID) =>
      _setContentView(reference, layoutResID);

  static final _setContentView_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Dialog_setContentView_1")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void setContentView(android.view.View view)
  void setContentView_1(jni.JlObject view) =>
      _setContentView_1(reference, view.reference);

  static final _setContentView_2 = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Dialog_setContentView_2")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public void setContentView(android.view.View view, android.view.ViewGroup.LayoutParams params)
  void setContentView_2(jni.JlObject view, jni.JlObject params) =>
      _setContentView_2(reference, view.reference, params.reference);

  static final _addContentView = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("android_app_Dialog_addContentView")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public void addContentView(android.view.View view, android.view.ViewGroup.LayoutParams params)
  void addContentView(jni.JlObject view, jni.JlObject params) =>
      _addContentView(reference, view.reference, params.reference);

  static final _setTitle = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("android_app_Dialog_setTitle")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void setTitle(java.lang.CharSequence title)
  void setTitle(jni.JlObject title) => _setTitle(reference, title.reference);

  static final _setTitle_1 = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_app_Dialog_setTitle_1")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public void setTitle(int titleId)
  void setTitle_1(int titleId) => _setTitle_1(reference, titleId);

  static final _onKeyDown = jlookup<
          ffi.NativeFunction<
              ffi.Uint8 Function(ffi.Pointer<ffi.Void>, ffi.Int32,
                  ffi.Pointer<ffi.Void>)>>("android_app_Dialog_onKeyDown")
      .asFunction<
          int Function(ffi.Pointer<ffi.Void>, int, ffi.Pointer<ffi.Void>)>();

  /// from: public boolean onKeyDown(int keyCode, android.view.KeyEvent event)
  bool onKeyDown(int keyCode, jni.JlObject event) =>
      _onKeyDown(reference, keyCode, event.reference) != 0;

  static final _onKeyLongPress = jlookup<
          ffi.NativeFunction<
              ffi.Uint8 Function(ffi.Pointer<ffi.Void>, ffi.Int32,
                  ffi.Pointer<ffi.Void>)>>("android_app_Dialog_onKeyLongPress")
      .asFunction<
          int Function(ffi.Pointer<ffi.Void>, int, ffi.Pointer<ffi.Void>)>();

  /// from: public boolean onKeyLongPress(int keyCode, android.view.KeyEvent event)
  bool onKeyLongPress(int keyCode, jni.JlObject event) =>
      _onKeyLongPress(reference, keyCode, event.reference) != 0;

  static final _onKeyUp = jlookup<
          ffi.NativeFunction<
              ffi.Uint8 Function(ffi.Pointer<ffi.Void>, ffi.Int32,
                  ffi.Pointer<ffi.Void>)>>("android_app_Dialog_onKeyUp")
      .asFunction<
          int Function(ffi.Pointer<ffi.Void>, int, ffi.Pointer<ffi.Void>)>();

  /// from: public boolean onKeyUp(int keyCode, android.view.KeyEvent event)
  bool onKeyUp(int keyCode, jni.JlObject event) =>
      _onKeyUp(reference, keyCode, event.reference) != 0;

  static final _onKeyMultiple = jlookup<
          ffi.NativeFunction<
              ffi.Uint8 Function(ffi.Pointer<ffi.Void>, ffi.Int32, ffi.Int32,
                  ffi.Pointer<ffi.Void>)>>("android_app_Dialog_onKeyMultiple")
      .asFunction<
          int Function(
              ffi.Pointer<ffi.Void>, int, int, ffi.Pointer<ffi.Void>)>();

  /// from: public boolean onKeyMultiple(int keyCode, int repeatCount, android.view.KeyEvent event)
  bool onKeyMultiple(int keyCode, int repeatCount, jni.JlObject event) =>
      _onKeyMultiple(reference, keyCode, repeatCount, event.reference) != 0;

  static final _onBackPressed =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_Dialog_onBackPressed")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void onBackPressed()
  void onBackPressed() => _onBackPressed(reference);

  static final _onKeyShortcut = jlookup<
          ffi.NativeFunction<
              ffi.Uint8 Function(ffi.Pointer<ffi.Void>, ffi.Int32,
                  ffi.Pointer<ffi.Void>)>>("android_app_Dialog_onKeyShortcut")
      .asFunction<
          int Function(ffi.Pointer<ffi.Void>, int, ffi.Pointer<ffi.Void>)>();

  /// from: public boolean onKeyShortcut(int keyCode, android.view.KeyEvent event)
  bool onKeyShortcut(int keyCode, jni.JlObject event) =>
      _onKeyShortcut(reference, keyCode, event.reference) != 0;

  static final _onTouchEvent = jlookup<
          ffi.NativeFunction<
              ffi.Uint8 Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("android_app_Dialog_onTouchEvent")
      .asFunction<int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public boolean onTouchEvent(android.view.MotionEvent event)
  bool onTouchEvent(jni.JlObject event) =>
      _onTouchEvent(reference, event.reference) != 0;

  static final _onTrackballEvent = jlookup<
              ffi.NativeFunction<
                  ffi.Uint8 Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Dialog_onTrackballEvent")
      .asFunction<int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public boolean onTrackballEvent(android.view.MotionEvent event)
  bool onTrackballEvent(jni.JlObject event) =>
      _onTrackballEvent(reference, event.reference) != 0;

  static final _onGenericMotionEvent = jlookup<
              ffi.NativeFunction<
                  ffi.Uint8 Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Dialog_onGenericMotionEvent")
      .asFunction<int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public boolean onGenericMotionEvent(android.view.MotionEvent event)
  bool onGenericMotionEvent(jni.JlObject event) =>
      _onGenericMotionEvent(reference, event.reference) != 0;

  static final _onWindowAttributesChanged = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Dialog_onWindowAttributesChanged")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void onWindowAttributesChanged(android.view.WindowManager.LayoutParams params)
  void onWindowAttributesChanged(jni.JlObject params) =>
      _onWindowAttributesChanged(reference, params.reference);

  static final _onContentChanged =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_Dialog_onContentChanged")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void onContentChanged()
  void onContentChanged() => _onContentChanged(reference);

  static final _onWindowFocusChanged = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  ffi.Uint8)>>("android_app_Dialog_onWindowFocusChanged")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public void onWindowFocusChanged(boolean hasFocus)
  void onWindowFocusChanged(bool hasFocus) =>
      _onWindowFocusChanged(reference, hasFocus ? 1 : 0);

  static final _onAttachedToWindow =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_Dialog_onAttachedToWindow")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void onAttachedToWindow()
  void onAttachedToWindow() => _onAttachedToWindow(reference);

  static final _onDetachedFromWindow =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_Dialog_onDetachedFromWindow")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void onDetachedFromWindow()
  void onDetachedFromWindow() => _onDetachedFromWindow(reference);

  static final _dispatchKeyEvent = jlookup<
              ffi.NativeFunction<
                  ffi.Uint8 Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Dialog_dispatchKeyEvent")
      .asFunction<int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public boolean dispatchKeyEvent(android.view.KeyEvent event)
  bool dispatchKeyEvent(jni.JlObject event) =>
      _dispatchKeyEvent(reference, event.reference) != 0;

  static final _dispatchKeyShortcutEvent = jlookup<
              ffi.NativeFunction<
                  ffi.Uint8 Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Dialog_dispatchKeyShortcutEvent")
      .asFunction<int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public boolean dispatchKeyShortcutEvent(android.view.KeyEvent event)
  bool dispatchKeyShortcutEvent(jni.JlObject event) =>
      _dispatchKeyShortcutEvent(reference, event.reference) != 0;

  static final _dispatchTouchEvent = jlookup<
              ffi.NativeFunction<
                  ffi.Uint8 Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Dialog_dispatchTouchEvent")
      .asFunction<int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public boolean dispatchTouchEvent(android.view.MotionEvent ev)
  bool dispatchTouchEvent(jni.JlObject ev) =>
      _dispatchTouchEvent(reference, ev.reference) != 0;

  static final _dispatchTrackballEvent = jlookup<
              ffi.NativeFunction<
                  ffi.Uint8 Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Dialog_dispatchTrackballEvent")
      .asFunction<int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public boolean dispatchTrackballEvent(android.view.MotionEvent ev)
  bool dispatchTrackballEvent(jni.JlObject ev) =>
      _dispatchTrackballEvent(reference, ev.reference) != 0;

  static final _dispatchGenericMotionEvent = jlookup<
              ffi.NativeFunction<
                  ffi.Uint8 Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Dialog_dispatchGenericMotionEvent")
      .asFunction<int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public boolean dispatchGenericMotionEvent(android.view.MotionEvent ev)
  bool dispatchGenericMotionEvent(jni.JlObject ev) =>
      _dispatchGenericMotionEvent(reference, ev.reference) != 0;

  static final _dispatchPopulateAccessibilityEvent = jlookup<
              ffi.NativeFunction<
                  ffi.Uint8 Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Dialog_dispatchPopulateAccessibilityEvent")
      .asFunction<int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent event)
  bool dispatchPopulateAccessibilityEvent(jni.JlObject event) =>
      _dispatchPopulateAccessibilityEvent(reference, event.reference) != 0;

  static final _onCreatePanelView = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_app_Dialog_onCreatePanelView")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public android.view.View onCreatePanelView(int featureId)
  jni.JlObject onCreatePanelView(int featureId) =>
      jni.JlObject.fromRef(_onCreatePanelView(reference, featureId));

  static final _onCreatePanelMenu = jlookup<
              ffi.NativeFunction<
                  ffi.Uint8 Function(ffi.Pointer<ffi.Void>, ffi.Int32,
                      ffi.Pointer<ffi.Void>)>>(
          "android_app_Dialog_onCreatePanelMenu")
      .asFunction<
          int Function(ffi.Pointer<ffi.Void>, int, ffi.Pointer<ffi.Void>)>();

  /// from: public boolean onCreatePanelMenu(int featureId, android.view.Menu menu)
  bool onCreatePanelMenu(int featureId, jni.JlObject menu) =>
      _onCreatePanelMenu(reference, featureId, menu.reference) != 0;

  static final _onPreparePanel = jlookup<
          ffi.NativeFunction<
              ffi.Uint8 Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Int32,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("android_app_Dialog_onPreparePanel")
      .asFunction<
          int Function(ffi.Pointer<ffi.Void>, int, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public boolean onPreparePanel(int featureId, android.view.View view, android.view.Menu menu)
  bool onPreparePanel(int featureId, jni.JlObject view, jni.JlObject menu) =>
      _onPreparePanel(reference, featureId, view.reference, menu.reference) !=
      0;

  static final _onMenuOpened = jlookup<
          ffi.NativeFunction<
              ffi.Uint8 Function(ffi.Pointer<ffi.Void>, ffi.Int32,
                  ffi.Pointer<ffi.Void>)>>("android_app_Dialog_onMenuOpened")
      .asFunction<
          int Function(ffi.Pointer<ffi.Void>, int, ffi.Pointer<ffi.Void>)>();

  /// from: public boolean onMenuOpened(int featureId, android.view.Menu menu)
  bool onMenuOpened(int featureId, jni.JlObject menu) =>
      _onMenuOpened(reference, featureId, menu.reference) != 0;

  static final _onMenuItemSelected = jlookup<
              ffi.NativeFunction<
                  ffi.Uint8 Function(ffi.Pointer<ffi.Void>, ffi.Int32,
                      ffi.Pointer<ffi.Void>)>>(
          "android_app_Dialog_onMenuItemSelected")
      .asFunction<
          int Function(ffi.Pointer<ffi.Void>, int, ffi.Pointer<ffi.Void>)>();

  /// from: public boolean onMenuItemSelected(int featureId, android.view.MenuItem item)
  bool onMenuItemSelected(int featureId, jni.JlObject item) =>
      _onMenuItemSelected(reference, featureId, item.reference) != 0;

  static final _onPanelClosed = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Int32,
                  ffi.Pointer<ffi.Void>)>>("android_app_Dialog_onPanelClosed")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, int, ffi.Pointer<ffi.Void>)>();

  /// from: public void onPanelClosed(int featureId, android.view.Menu menu)
  void onPanelClosed(int featureId, jni.JlObject menu) =>
      _onPanelClosed(reference, featureId, menu.reference);

  static final _onCreateOptionsMenu = jlookup<
              ffi.NativeFunction<
                  ffi.Uint8 Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Dialog_onCreateOptionsMenu")
      .asFunction<int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public boolean onCreateOptionsMenu(android.view.Menu menu)
  bool onCreateOptionsMenu(jni.JlObject menu) =>
      _onCreateOptionsMenu(reference, menu.reference) != 0;

  static final _onPrepareOptionsMenu = jlookup<
              ffi.NativeFunction<
                  ffi.Uint8 Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Dialog_onPrepareOptionsMenu")
      .asFunction<int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public boolean onPrepareOptionsMenu(android.view.Menu menu)
  bool onPrepareOptionsMenu(jni.JlObject menu) =>
      _onPrepareOptionsMenu(reference, menu.reference) != 0;

  static final _onOptionsItemSelected = jlookup<
              ffi.NativeFunction<
                  ffi.Uint8 Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Dialog_onOptionsItemSelected")
      .asFunction<int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public boolean onOptionsItemSelected(android.view.MenuItem item)
  bool onOptionsItemSelected(jni.JlObject item) =>
      _onOptionsItemSelected(reference, item.reference) != 0;

  static final _onOptionsMenuClosed = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Dialog_onOptionsMenuClosed")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void onOptionsMenuClosed(android.view.Menu menu)
  void onOptionsMenuClosed(jni.JlObject menu) =>
      _onOptionsMenuClosed(reference, menu.reference);

  static final _openOptionsMenu =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_Dialog_openOptionsMenu")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void openOptionsMenu()
  void openOptionsMenu() => _openOptionsMenu(reference);

  static final _closeOptionsMenu =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_Dialog_closeOptionsMenu")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void closeOptionsMenu()
  void closeOptionsMenu() => _closeOptionsMenu(reference);

  static final _invalidateOptionsMenu =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_Dialog_invalidateOptionsMenu")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void invalidateOptionsMenu()
  void invalidateOptionsMenu() => _invalidateOptionsMenu(reference);

  static final _onCreateContextMenu = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>)>>(
          "android_app_Dialog_onCreateContextMenu")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void onCreateContextMenu(android.view.ContextMenu menu, android.view.View v, android.view.ContextMenu.ContextMenuInfo menuInfo)
  void onCreateContextMenu(
          jni.JlObject menu, jni.JlObject v, jni.JlObject menuInfo) =>
      _onCreateContextMenu(
          reference, menu.reference, v.reference, menuInfo.reference);

  static final _registerForContextMenu = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Dialog_registerForContextMenu")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void registerForContextMenu(android.view.View view)
  void registerForContextMenu(jni.JlObject view) =>
      _registerForContextMenu(reference, view.reference);

  static final _unregisterForContextMenu = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Dialog_unregisterForContextMenu")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void unregisterForContextMenu(android.view.View view)
  void unregisterForContextMenu(jni.JlObject view) =>
      _unregisterForContextMenu(reference, view.reference);

  static final _openContextMenu = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("android_app_Dialog_openContextMenu")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void openContextMenu(android.view.View view)
  void openContextMenu(jni.JlObject view) =>
      _openContextMenu(reference, view.reference);

  static final _onContextItemSelected = jlookup<
              ffi.NativeFunction<
                  ffi.Uint8 Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Dialog_onContextItemSelected")
      .asFunction<int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public boolean onContextItemSelected(android.view.MenuItem item)
  bool onContextItemSelected(jni.JlObject item) =>
      _onContextItemSelected(reference, item.reference) != 0;

  static final _onContextMenuClosed = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Dialog_onContextMenuClosed")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void onContextMenuClosed(android.view.Menu menu)
  void onContextMenuClosed(jni.JlObject menu) =>
      _onContextMenuClosed(reference, menu.reference);

  static final _onSearchRequested = jlookup<
              ffi.NativeFunction<
                  ffi.Uint8 Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Dialog_onSearchRequested")
      .asFunction<int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public boolean onSearchRequested(android.view.SearchEvent searchEvent)
  bool onSearchRequested(jni.JlObject searchEvent) =>
      _onSearchRequested(reference, searchEvent.reference) != 0;

  static final _onSearchRequested_1 =
      jlookup<ffi.NativeFunction<ffi.Uint8 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_Dialog_onSearchRequested_1")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public boolean onSearchRequested()
  bool onSearchRequested_1() => _onSearchRequested_1(reference) != 0;

  static final _getSearchEvent = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
                  ffi.Pointer<ffi.Void>)>>("android_app_Dialog_getSearchEvent")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public final android.view.SearchEvent getSearchEvent()
  jni.JlObject getSearchEvent() =>
      jni.JlObject.fromRef(_getSearchEvent(reference));

  static final _onWindowStartingActionMode = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Dialog_onWindowStartingActionMode")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode.Callback callback)
  jni.JlObject onWindowStartingActionMode(jni.JlObject callback) =>
      jni.JlObject.fromRef(
          _onWindowStartingActionMode(reference, callback.reference));

  static final _onWindowStartingActionMode_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "android_app_Dialog_onWindowStartingActionMode_1")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode.Callback callback, int type)
  jni.JlObject onWindowStartingActionMode_1(jni.JlObject callback, int type) =>
      jni.JlObject.fromRef(
          _onWindowStartingActionMode_1(reference, callback.reference, type));

  static final _onActionModeStarted = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Dialog_onActionModeStarted")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void onActionModeStarted(android.view.ActionMode mode)
  void onActionModeStarted(jni.JlObject mode) =>
      _onActionModeStarted(reference, mode.reference);

  static final _onActionModeFinished = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Dialog_onActionModeFinished")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void onActionModeFinished(android.view.ActionMode mode)
  void onActionModeFinished(jni.JlObject mode) =>
      _onActionModeFinished(reference, mode.reference);

  static final _takeKeyEvents = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  ffi.Uint8)>>("android_app_Dialog_takeKeyEvents")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public void takeKeyEvents(boolean get)
  void takeKeyEvents(bool get_) => _takeKeyEvents(reference, get_ ? 1 : 0);

  static final _requestWindowFeature = jlookup<
          ffi.NativeFunction<
              ffi.Uint8 Function(ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_app_Dialog_requestWindowFeature")
      .asFunction<int Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public final boolean requestWindowFeature(int featureId)
  bool requestWindowFeature(int featureId) =>
      _requestWindowFeature(reference, featureId) != 0;

  static final _setFeatureDrawableResource = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Int32,
                  ffi.Int32)>>("android_app_Dialog_setFeatureDrawableResource")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int, int)>();

  /// from: public final void setFeatureDrawableResource(int featureId, int resId)
  void setFeatureDrawableResource(int featureId, int resId) =>
      _setFeatureDrawableResource(reference, featureId, resId);

  static final _setFeatureDrawableUri = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Int32,
                      ffi.Pointer<ffi.Void>)>>(
          "android_app_Dialog_setFeatureDrawableUri")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, int, ffi.Pointer<ffi.Void>)>();

  /// from: public final void setFeatureDrawableUri(int featureId, android.net.Uri uri)
  void setFeatureDrawableUri(int featureId, jni.JlObject uri) =>
      _setFeatureDrawableUri(reference, featureId, uri.reference);

  static final _setFeatureDrawable = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Int32,
                      ffi.Pointer<ffi.Void>)>>(
          "android_app_Dialog_setFeatureDrawable")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, int, ffi.Pointer<ffi.Void>)>();

  /// from: public final void setFeatureDrawable(int featureId, android.graphics.drawable.Drawable drawable)
  void setFeatureDrawable(int featureId, jni.JlObject drawable) =>
      _setFeatureDrawable(reference, featureId, drawable.reference);

  static final _setFeatureDrawableAlpha = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Int32,
                  ffi.Int32)>>("android_app_Dialog_setFeatureDrawableAlpha")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int, int)>();

  /// from: public final void setFeatureDrawableAlpha(int featureId, int alpha)
  void setFeatureDrawableAlpha(int featureId, int alpha) =>
      _setFeatureDrawableAlpha(reference, featureId, alpha);

  static final _getLayoutInflater = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_Dialog_getLayoutInflater")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.view.LayoutInflater getLayoutInflater()
  jni.JlObject getLayoutInflater() =>
      jni.JlObject.fromRef(_getLayoutInflater(reference));

  static final _setCancelable = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  ffi.Uint8)>>("android_app_Dialog_setCancelable")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public void setCancelable(boolean flag)
  void setCancelable(bool flag) => _setCancelable(reference, flag ? 1 : 0);

  static final _setCanceledOnTouchOutside = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  ffi.Uint8)>>("android_app_Dialog_setCanceledOnTouchOutside")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public void setCanceledOnTouchOutside(boolean cancel)
  void setCanceledOnTouchOutside(bool cancel) =>
      _setCanceledOnTouchOutside(reference, cancel ? 1 : 0);

  static final _cancel =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_Dialog_cancel")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void cancel()
  void cancel() => _cancel(reference);

  static final _setOnCancelListener = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Dialog_setOnCancelListener")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void setOnCancelListener(android.content.DialogInterface.OnCancelListener listener)
  void setOnCancelListener(content.DialogInterface_OnCancelListener listener) =>
      _setOnCancelListener(reference, listener.reference);

  static final _setCancelMessage = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Dialog_setCancelMessage")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void setCancelMessage(android.os.Message msg)
  void setCancelMessage(os.Message msg) =>
      _setCancelMessage(reference, msg.reference);

  static final _setOnDismissListener = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Dialog_setOnDismissListener")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void setOnDismissListener(android.content.DialogInterface.OnDismissListener listener)
  void setOnDismissListener(
          content.DialogInterface_OnDismissListener listener) =>
      _setOnDismissListener(reference, listener.reference);

  static final _setOnShowListener = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Dialog_setOnShowListener")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void setOnShowListener(android.content.DialogInterface.OnShowListener listener)
  void setOnShowListener(content.DialogInterface_OnShowListener listener) =>
      _setOnShowListener(reference, listener.reference);

  static final _setDismissMessage = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Dialog_setDismissMessage")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void setDismissMessage(android.os.Message msg)
  void setDismissMessage(os.Message msg) =>
      _setDismissMessage(reference, msg.reference);

  static final _setVolumeControlStream = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_app_Dialog_setVolumeControlStream")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public final void setVolumeControlStream(int streamType)
  void setVolumeControlStream(int streamType) =>
      _setVolumeControlStream(reference, streamType);

  static final _getVolumeControlStream =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_Dialog_getVolumeControlStream")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public final int getVolumeControlStream()
  int getVolumeControlStream() => _getVolumeControlStream(reference);

  static final _setOnKeyListener = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Dialog_setOnKeyListener")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void setOnKeyListener(android.content.DialogInterface.OnKeyListener onKeyListener)
  void setOnKeyListener(content.DialogInterface_OnKeyListener onKeyListener) =>
      _setOnKeyListener(reference, onKeyListener.reference);
}

class KeyguardManager extends jni.JlObject {
  KeyguardManager.fromRef(ffi.Pointer<ffi.Void> ref) : super.fromRef(ref);

  static final _ctor =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "android_app_KeyguardManager_new")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();

  /// from: void <init>()
  KeyguardManager() : super.fromRef(_ctor());

  static final _createConfirmDeviceCredentialIntent = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_KeyguardManager_createConfirmDeviceCredentialIntent")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.content.Intent createConfirmDeviceCredentialIntent(java.lang.CharSequence title, java.lang.CharSequence description)
  content.Intent createConfirmDeviceCredentialIntent(
          jni.JlObject title, jni.JlObject description) =>
      content.Intent.fromRef(_createConfirmDeviceCredentialIntent(
          reference, title.reference, description.reference));

  static final _newKeyguardLock = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_KeyguardManager_newKeyguardLock")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.KeyguardManager.KeyguardLock newKeyguardLock(java.lang.String tag)
  KeyguardManager_KeyguardLock newKeyguardLock(jni.JlString tag) =>
      KeyguardManager_KeyguardLock.fromRef(
          _newKeyguardLock(reference, tag.reference));

  static final _isKeyguardLocked =
      jlookup<ffi.NativeFunction<ffi.Uint8 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_KeyguardManager_isKeyguardLocked")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public boolean isKeyguardLocked()
  bool isKeyguardLocked() => _isKeyguardLocked(reference) != 0;

  static final _isKeyguardSecure =
      jlookup<ffi.NativeFunction<ffi.Uint8 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_KeyguardManager_isKeyguardSecure")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public boolean isKeyguardSecure()
  bool isKeyguardSecure() => _isKeyguardSecure(reference) != 0;

  static final _inKeyguardRestrictedInputMode =
      jlookup<ffi.NativeFunction<ffi.Uint8 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_KeyguardManager_inKeyguardRestrictedInputMode")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public boolean inKeyguardRestrictedInputMode()
  bool inKeyguardRestrictedInputMode() =>
      _inKeyguardRestrictedInputMode(reference) != 0;

  static final _isDeviceLocked =
      jlookup<ffi.NativeFunction<ffi.Uint8 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_KeyguardManager_isDeviceLocked")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public boolean isDeviceLocked()
  bool isDeviceLocked() => _isDeviceLocked(reference) != 0;

  static final _isDeviceSecure =
      jlookup<ffi.NativeFunction<ffi.Uint8 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_KeyguardManager_isDeviceSecure")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public boolean isDeviceSecure()
  bool isDeviceSecure() => _isDeviceSecure(reference) != 0;

  static final _requestDismissKeyguard = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_KeyguardManager_requestDismissKeyguard")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public void requestDismissKeyguard(android.app.Activity activity, android.app.KeyguardManager.KeyguardDismissCallback callback)
  void requestDismissKeyguard(Activity activity,
          KeyguardManager_KeyguardDismissCallback callback) =>
      _requestDismissKeyguard(
          reference, activity.reference, callback.reference);

  static final _exitKeyguardSecurely = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_KeyguardManager_exitKeyguardSecurely")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void exitKeyguardSecurely(android.app.KeyguardManager.OnKeyguardExitResult callback)
  void exitKeyguardSecurely(KeyguardManager_OnKeyguardExitResult callback) =>
      _exitKeyguardSecurely(reference, callback.reference);
}

class KeyguardManager_OnKeyguardExitResult extends jni.JlObject {
  KeyguardManager_OnKeyguardExitResult.fromRef(ffi.Pointer<ffi.Void> ref)
      : super.fromRef(ref);

  static final _onKeyguardExitResult = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Uint8)>>(
          "android_app_KeyguardManager__OnKeyguardExitResult_onKeyguardExitResult")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public abstract void onKeyguardExitResult(boolean success)
  void onKeyguardExitResult(bool success) =>
      _onKeyguardExitResult(reference, success ? 1 : 0);
}

class KeyguardManager_KeyguardLock extends jni.JlObject {
  KeyguardManager_KeyguardLock.fromRef(ffi.Pointer<ffi.Void> ref)
      : super.fromRef(ref);

  static final _ctor = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_KeyguardManager__KeyguardLock_new")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: void <init>(java.lang.String tag)
  KeyguardManager_KeyguardLock(jni.JlString tag)
      : super.fromRef(_ctor(tag.reference));

  static final _disableKeyguard =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_KeyguardManager__KeyguardLock_disableKeyguard")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void disableKeyguard()
  void disableKeyguard() => _disableKeyguard(reference);

  static final _reenableKeyguard =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_KeyguardManager__KeyguardLock_reenableKeyguard")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void reenableKeyguard()
  void reenableKeyguard() => _reenableKeyguard(reference);
}

class KeyguardManager_KeyguardDismissCallback extends jni.JlObject {
  KeyguardManager_KeyguardDismissCallback.fromRef(ffi.Pointer<ffi.Void> ref)
      : super.fromRef(ref);

  static final _ctor =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "android_app_KeyguardManager__KeyguardDismissCallback_new")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();

  /// from: public void <init>()
  KeyguardManager_KeyguardDismissCallback() : super.fromRef(_ctor());

  static final _onDismissError = jlookup<
              ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_KeyguardManager__KeyguardDismissCallback_onDismissError")
      .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void onDismissError()
  void onDismissError() => _onDismissError(reference);

  static final _onDismissSucceeded = jlookup<
              ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_KeyguardManager__KeyguardDismissCallback_onDismissSucceeded")
      .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void onDismissSucceeded()
  void onDismissSucceeded() => _onDismissSucceeded(reference);

  static final _onDismissCancelled = jlookup<
              ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_KeyguardManager__KeyguardDismissCallback_onDismissCancelled")
      .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void onDismissCancelled()
  void onDismissCancelled() => _onDismissCancelled(reference);
}

class WallpaperColors extends jni.JlObject {
  WallpaperColors.fromRef(ffi.Pointer<ffi.Void> ref) : super.fromRef(ref);

  /// from: static public final android.os.Parcelable.Creator<android.app.WallpaperColors> CREATOR
  static final _getCREATOR =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "get_android_app_WallpaperColors_CREATOR")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();
  static os.Parcelable_Creator get CREATOR =>
      os.Parcelable_Creator.fromRef(_getCREATOR());

  static final _ctor = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
                  ffi.Pointer<ffi.Void>)>>("android_app_WallpaperColors_new")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void <init>(android.os.Parcel parcel)
  WallpaperColors(os.Parcel parcel) : super.fromRef(_ctor(parcel.reference));

  static final _ctor_1 = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("android_app_WallpaperColors_new_1")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void <init>(android.graphics.Color primaryColor, android.graphics.Color secondaryColor, android.graphics.Color tertiaryColor)
  WallpaperColors.ctor_1(jni.JlObject primaryColor, jni.JlObject secondaryColor,
      jni.JlObject tertiaryColor)
      : super.fromRef(_ctor_1(primaryColor.reference, secondaryColor.reference,
            tertiaryColor.reference));

  static final _fromDrawable = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_WallpaperColors_fromDrawable")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: static public android.app.WallpaperColors fromDrawable(android.graphics.drawable.Drawable drawable)
  static WallpaperColors fromDrawable(jni.JlObject drawable) =>
      WallpaperColors.fromRef(_fromDrawable(drawable.reference));

  static final _fromBitmap = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_WallpaperColors_fromBitmap")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: static public android.app.WallpaperColors fromBitmap(android.graphics.Bitmap bitmap)
  static WallpaperColors fromBitmap(jni.JlObject bitmap) =>
      WallpaperColors.fromRef(_fromBitmap(bitmap.reference));

  static final _describeContents =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_WallpaperColors_describeContents")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int describeContents()
  int describeContents() => _describeContents(reference);

  static final _writeToParcel = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_app_WallpaperColors_writeToParcel")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public void writeToParcel(android.os.Parcel dest, int flags)
  void writeToParcel(os.Parcel dest, int flags) =>
      _writeToParcel(reference, dest.reference, flags);

  static final _getPrimaryColor = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_WallpaperColors_getPrimaryColor")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.graphics.Color getPrimaryColor()
  jni.JlObject getPrimaryColor() =>
      jni.JlObject.fromRef(_getPrimaryColor(reference));

  static final _getSecondaryColor = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_WallpaperColors_getSecondaryColor")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.graphics.Color getSecondaryColor()
  jni.JlObject getSecondaryColor() =>
      jni.JlObject.fromRef(_getSecondaryColor(reference));

  static final _getTertiaryColor = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_WallpaperColors_getTertiaryColor")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.graphics.Color getTertiaryColor()
  jni.JlObject getTertiaryColor() =>
      jni.JlObject.fromRef(_getTertiaryColor(reference));

  static final _equals_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Uint8 Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_WallpaperColors_equals_1")
      .asFunction<int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public boolean equals(java.lang.Object o)
  bool equals_1(jni.JlObject o) => _equals_1(reference, o.reference) != 0;

  static final _hashCode_1 =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_WallpaperColors_hashCode_1")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int hashCode()
  int hashCode_1() => _hashCode_1(reference);

  static final _toString_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_WallpaperColors_toString_1")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.String toString()
  jni.JlString toString_1() => jni.JlString.fromRef(_toString_1(reference));
}

class TaskStackBuilder extends jni.JlObject {
  TaskStackBuilder.fromRef(ffi.Pointer<ffi.Void> ref) : super.fromRef(ref);

  static final _ctor = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
                  ffi.Pointer<ffi.Void>)>>("android_app_TaskStackBuilder_new")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: void <init>(android.content.Context a)
  TaskStackBuilder(content.Context a) : super.fromRef(_ctor(a.reference));

  static final _create = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_TaskStackBuilder_create")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: static public android.app.TaskStackBuilder create(android.content.Context context)
  static TaskStackBuilder create(content.Context context) =>
      TaskStackBuilder.fromRef(_create(context.reference));

  static final _addNextIntent = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_TaskStackBuilder_addNextIntent")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.TaskStackBuilder addNextIntent(android.content.Intent nextIntent)
  TaskStackBuilder addNextIntent(content.Intent nextIntent) =>
      TaskStackBuilder.fromRef(_addNextIntent(reference, nextIntent.reference));

  static final _addNextIntentWithParentStack = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_TaskStackBuilder_addNextIntentWithParentStack")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.TaskStackBuilder addNextIntentWithParentStack(android.content.Intent nextIntent)
  TaskStackBuilder addNextIntentWithParentStack(content.Intent nextIntent) =>
      TaskStackBuilder.fromRef(
          _addNextIntentWithParentStack(reference, nextIntent.reference));

  static final _addParentStack = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_TaskStackBuilder_addParentStack")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.TaskStackBuilder addParentStack(android.app.Activity sourceActivity)
  TaskStackBuilder addParentStack(Activity sourceActivity) =>
      TaskStackBuilder.fromRef(
          _addParentStack(reference, sourceActivity.reference));

  static final _addParentStack_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_TaskStackBuilder_addParentStack_1")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.TaskStackBuilder addParentStack(java.lang.Class<?> sourceActivityClass)
  TaskStackBuilder addParentStack_1(jni.JlObject sourceActivityClass) =>
      TaskStackBuilder.fromRef(
          _addParentStack_1(reference, sourceActivityClass.reference));

  static final _addParentStack_2 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_TaskStackBuilder_addParentStack_2")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.TaskStackBuilder addParentStack(android.content.ComponentName sourceActivityName)
  TaskStackBuilder addParentStack_2(content.ComponentName sourceActivityName) =>
      TaskStackBuilder.fromRef(
          _addParentStack_2(reference, sourceActivityName.reference));

  static final _getIntentCount =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_TaskStackBuilder_getIntentCount")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int getIntentCount()
  int getIntentCount() => _getIntentCount(reference);

  static final _editIntentAt = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_app_TaskStackBuilder_editIntentAt")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public android.content.Intent editIntentAt(int index)
  content.Intent editIntentAt(int index) =>
      content.Intent.fromRef(_editIntentAt(reference, index));

  static final _startActivities =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_TaskStackBuilder_startActivities")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void startActivities()
  void startActivities() => _startActivities(reference);

  static final _startActivities_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_TaskStackBuilder_startActivities_1")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void startActivities(android.os.Bundle options)
  void startActivities_1(os.Bundle options) =>
      _startActivities_1(reference, options.reference);

  static final _getPendingIntent = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, ffi.Int32,
                  ffi.Int32)>>("android_app_TaskStackBuilder_getPendingIntent")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int, int)>();

  /// from: public android.app.PendingIntent getPendingIntent(int requestCode, int flags)
  PendingIntent getPendingIntent(int requestCode, int flags) =>
      PendingIntent.fromRef(_getPendingIntent(reference, requestCode, flags));

  static final _getPendingIntent_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                      ffi.Int32, ffi.Int32, ffi.Pointer<ffi.Void>)>>(
          "android_app_TaskStackBuilder_getPendingIntent_1")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, int, int, ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.PendingIntent getPendingIntent(int requestCode, int flags, android.os.Bundle options)
  PendingIntent getPendingIntent_1(
          int requestCode, int flags, os.Bundle options) =>
      PendingIntent.fromRef(_getPendingIntent_1(
          reference, requestCode, flags, options.reference));

  static final _getIntents = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_TaskStackBuilder_getIntents")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.content.Intent[] getIntents()
  jni.JlObject getIntents() => jni.JlObject.fromRef(_getIntents(reference));
}

class UiAutomation extends jni.JlObject {
  UiAutomation.fromRef(ffi.Pointer<ffi.Void> ref) : super.fromRef(ref);

  /// from: static public final int FLAG_DONT_SUPPRESS_ACCESSIBILITY_SERVICES
  static const FLAG_DONT_SUPPRESS_ACCESSIBILITY_SERVICES = 1;

  /// from: static public final int ROTATION_FREEZE_0
  static const ROTATION_FREEZE_0 = 0;

  /// from: static public final int ROTATION_FREEZE_180
  static const ROTATION_FREEZE_180 = 2;

  /// from: static public final int ROTATION_FREEZE_270
  static const ROTATION_FREEZE_270 = 3;

  /// from: static public final int ROTATION_FREEZE_90
  static const ROTATION_FREEZE_90 = 1;

  /// from: static public final int ROTATION_FREEZE_CURRENT
  static const ROTATION_FREEZE_CURRENT = -1;

  /// from: static public final int ROTATION_UNFREEZE
  static const ROTATION_UNFREEZE = -2;

  static final _ctor =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "android_app_UiAutomation_new")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();

  /// from: void <init>()
  UiAutomation() : super.fromRef(_ctor());

  static final _setOnAccessibilityEventListener = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_UiAutomation_setOnAccessibilityEventListener")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void setOnAccessibilityEventListener(android.app.UiAutomation.OnAccessibilityEventListener listener)
  void setOnAccessibilityEventListener(
          UiAutomation_OnAccessibilityEventListener listener) =>
      _setOnAccessibilityEventListener(reference, listener.reference);

  static final _performGlobalAction = jlookup<
          ffi.NativeFunction<
              ffi.Uint8 Function(ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_app_UiAutomation_performGlobalAction")
      .asFunction<int Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public boolean performGlobalAction(int action)
  bool performGlobalAction(int action) =>
      _performGlobalAction(reference, action) != 0;

  static final _findFocus = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_app_UiAutomation_findFocus")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public android.view.accessibility.AccessibilityNodeInfo findFocus(int focus)
  jni.JlObject findFocus(int focus) =>
      jni.JlObject.fromRef(_findFocus(reference, focus));

  static final _getServiceInfo = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_UiAutomation_getServiceInfo")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.accessibilityservice.AccessibilityServiceInfo getServiceInfo()
  jni.JlObject getServiceInfo() =>
      jni.JlObject.fromRef(_getServiceInfo(reference));

  static final _setServiceInfo = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_UiAutomation_setServiceInfo")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void setServiceInfo(android.accessibilityservice.AccessibilityServiceInfo info)
  void setServiceInfo(jni.JlObject info) =>
      _setServiceInfo(reference, info.reference);

  static final _getWindows = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_UiAutomation_getWindows")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.util.List<android.view.accessibility.AccessibilityWindowInfo> getWindows()
  jni.JlObject getWindows() => jni.JlObject.fromRef(_getWindows(reference));

  static final _getRootInActiveWindow = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_UiAutomation_getRootInActiveWindow")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.view.accessibility.AccessibilityNodeInfo getRootInActiveWindow()
  jni.JlObject getRootInActiveWindow() =>
      jni.JlObject.fromRef(_getRootInActiveWindow(reference));

  static final _injectInputEvent = jlookup<
          ffi.NativeFunction<
              ffi.Uint8 Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
                  ffi.Uint8)>>("android_app_UiAutomation_injectInputEvent")
      .asFunction<
          int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public boolean injectInputEvent(android.view.InputEvent event, boolean sync)
  bool injectInputEvent(jni.JlObject event, bool sync_) =>
      _injectInputEvent(reference, event.reference, sync_ ? 1 : 0) != 0;

  static final _setRotation = jlookup<
          ffi.NativeFunction<
              ffi.Uint8 Function(ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_app_UiAutomation_setRotation")
      .asFunction<int Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public boolean setRotation(int rotation)
  bool setRotation(int rotation) => _setRotation(reference, rotation) != 0;

  static final _executeAndWaitForEvent = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Int64)>>(
          "android_app_UiAutomation_executeAndWaitForEvent")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public android.view.accessibility.AccessibilityEvent executeAndWaitForEvent(java.lang.Runnable command, android.app.UiAutomation.AccessibilityEventFilter filter, long timeoutMillis)
  jni.JlObject executeAndWaitForEvent(jni.JlObject command,
          UiAutomation_AccessibilityEventFilter filter, int timeoutMillis) =>
      jni.JlObject.fromRef(_executeAndWaitForEvent(
          reference, command.reference, filter.reference, timeoutMillis));

  static final _waitForIdle = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Int64,
                  ffi.Int64)>>("android_app_UiAutomation_waitForIdle")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int, int)>();

  /// from: public void waitForIdle(long idleTimeoutMillis, long globalTimeoutMillis)
  void waitForIdle(int idleTimeoutMillis, int globalTimeoutMillis) =>
      _waitForIdle(reference, idleTimeoutMillis, globalTimeoutMillis);

  static final _takeScreenshot = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_UiAutomation_takeScreenshot")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.graphics.Bitmap takeScreenshot()
  jni.JlObject takeScreenshot() =>
      jni.JlObject.fromRef(_takeScreenshot(reference));

  static final _setRunAsMonkey = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  ffi.Uint8)>>("android_app_UiAutomation_setRunAsMonkey")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public void setRunAsMonkey(boolean enable)
  void setRunAsMonkey(bool enable) =>
      _setRunAsMonkey(reference, enable ? 1 : 0);

  static final _clearWindowContentFrameStats = jlookup<
              ffi.NativeFunction<
                  ffi.Uint8 Function(ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "android_app_UiAutomation_clearWindowContentFrameStats")
      .asFunction<int Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public boolean clearWindowContentFrameStats(int windowId)
  bool clearWindowContentFrameStats(int windowId) =>
      _clearWindowContentFrameStats(reference, windowId) != 0;

  static final _getWindowContentFrameStats = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "android_app_UiAutomation_getWindowContentFrameStats")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public android.view.WindowContentFrameStats getWindowContentFrameStats(int windowId)
  jni.JlObject getWindowContentFrameStats(int windowId) =>
      jni.JlObject.fromRef(_getWindowContentFrameStats(reference, windowId));

  static final _clearWindowAnimationFrameStats =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_UiAutomation_clearWindowAnimationFrameStats")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void clearWindowAnimationFrameStats()
  void clearWindowAnimationFrameStats() =>
      _clearWindowAnimationFrameStats(reference);

  static final _getWindowAnimationFrameStats = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_UiAutomation_getWindowAnimationFrameStats")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.view.WindowAnimationFrameStats getWindowAnimationFrameStats()
  jni.JlObject getWindowAnimationFrameStats() =>
      jni.JlObject.fromRef(_getWindowAnimationFrameStats(reference));

  static final _grantRuntimePermission = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_UiAutomation_grantRuntimePermission")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public void grantRuntimePermission(java.lang.String packageName, java.lang.String permission)
  void grantRuntimePermission(
          jni.JlString packageName, jni.JlString permission) =>
      _grantRuntimePermission(
          reference, packageName.reference, permission.reference);

  static final _grantRuntimePermissionAsUser = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>)>>(
          "android_app_UiAutomation_grantRuntimePermissionAsUser")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void grantRuntimePermissionAsUser(java.lang.String packageName, java.lang.String permission, android.os.UserHandle userHandle)
  void grantRuntimePermissionAsUser(jni.JlString packageName,
          jni.JlString permission, os.UserHandle userHandle) =>
      _grantRuntimePermissionAsUser(reference, packageName.reference,
          permission.reference, userHandle.reference);

  static final _revokeRuntimePermission = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_UiAutomation_revokeRuntimePermission")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public void revokeRuntimePermission(java.lang.String packageName, java.lang.String permission)
  void revokeRuntimePermission(
          jni.JlString packageName, jni.JlString permission) =>
      _revokeRuntimePermission(
          reference, packageName.reference, permission.reference);

  static final _revokeRuntimePermissionAsUser = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>)>>(
          "android_app_UiAutomation_revokeRuntimePermissionAsUser")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void revokeRuntimePermissionAsUser(java.lang.String packageName, java.lang.String permission, android.os.UserHandle userHandle)
  void revokeRuntimePermissionAsUser(jni.JlString packageName,
          jni.JlString permission, os.UserHandle userHandle) =>
      _revokeRuntimePermissionAsUser(reference, packageName.reference,
          permission.reference, userHandle.reference);

  static final _executeShellCommand = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_UiAutomation_executeShellCommand")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.os.ParcelFileDescriptor executeShellCommand(java.lang.String command)
  os.ParcelFileDescriptor executeShellCommand(jni.JlString command) =>
      os.ParcelFileDescriptor.fromRef(
          _executeShellCommand(reference, command.reference));
}

class UiAutomation_OnAccessibilityEventListener extends jni.JlObject {
  UiAutomation_OnAccessibilityEventListener.fromRef(ffi.Pointer<ffi.Void> ref)
      : super.fromRef(ref);

  static final _onAccessibilityEvent = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_UiAutomation__OnAccessibilityEventListener_onAccessibilityEvent")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public abstract void onAccessibilityEvent(android.view.accessibility.AccessibilityEvent event)
  void onAccessibilityEvent(jni.JlObject event) =>
      _onAccessibilityEvent(reference, event.reference);
}

class UiAutomation_AccessibilityEventFilter extends jni.JlObject {
  UiAutomation_AccessibilityEventFilter.fromRef(ffi.Pointer<ffi.Void> ref)
      : super.fromRef(ref);

  static final _accept = jlookup<
              ffi.NativeFunction<
                  ffi.Uint8 Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_UiAutomation__AccessibilityEventFilter_accept")
      .asFunction<int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public abstract boolean accept(android.view.accessibility.AccessibilityEvent event)
  bool accept(jni.JlObject event) => _accept(reference, event.reference) != 0;
}

class FragmentBreadCrumbs extends jni.JlObject {
  FragmentBreadCrumbs.fromRef(ffi.Pointer<ffi.Void> ref) : super.fromRef(ref);

  static final _ctor = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_FragmentBreadCrumbs_new")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void <init>(android.content.Context context)
  FragmentBreadCrumbs(content.Context context)
      : super.fromRef(_ctor(context.reference));

  static final _ctor_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_FragmentBreadCrumbs_new_1")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void <init>(android.content.Context context, android.util.AttributeSet attrs)
  FragmentBreadCrumbs.ctor_1(content.Context context, jni.JlObject attrs)
      : super.fromRef(_ctor_1(context.reference, attrs.reference));

  static final _ctor_2 = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_app_FragmentBreadCrumbs_new_2")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public void <init>(android.content.Context context, android.util.AttributeSet attrs, int defStyleAttr)
  FragmentBreadCrumbs.ctor_2(
      content.Context context, jni.JlObject attrs, int defStyleAttr)
      : super.fromRef(
            _ctor_2(context.reference, attrs.reference, defStyleAttr));

  static final _setActivity = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_FragmentBreadCrumbs_setActivity")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void setActivity(android.app.Activity a)
  void setActivity(Activity a) => _setActivity(reference, a.reference);

  static final _setMaxVisible = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_app_FragmentBreadCrumbs_setMaxVisible")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public void setMaxVisible(int visibleCrumbs)
  void setMaxVisible(int visibleCrumbs) =>
      _setMaxVisible(reference, visibleCrumbs);

  static final _setParentTitle = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>)>>(
          "android_app_FragmentBreadCrumbs_setParentTitle")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void setParentTitle(java.lang.CharSequence title, java.lang.CharSequence shortTitle, android.view.View.OnClickListener listener)
  void setParentTitle(
          jni.JlObject title, jni.JlObject shortTitle, jni.JlObject listener) =>
      _setParentTitle(
          reference, title.reference, shortTitle.reference, listener.reference);

  static final _setOnBreadCrumbClickListener = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_FragmentBreadCrumbs_setOnBreadCrumbClickListener")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void setOnBreadCrumbClickListener(android.app.FragmentBreadCrumbs.OnBreadCrumbClickListener listener)
  void setOnBreadCrumbClickListener(
          FragmentBreadCrumbs_OnBreadCrumbClickListener listener) =>
      _setOnBreadCrumbClickListener(reference, listener.reference);

  static final _setTitle = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_FragmentBreadCrumbs_setTitle")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public void setTitle(java.lang.CharSequence title, java.lang.CharSequence shortTitle)
  void setTitle(jni.JlObject title, jni.JlObject shortTitle) =>
      _setTitle(reference, title.reference, shortTitle.reference);

  static final _onLayout = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Uint8,
                  ffi.Int32,
                  ffi.Int32,
                  ffi.Int32,
                  ffi.Int32)>>("android_app_FragmentBreadCrumbs_onLayout")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, int, int, int, int, int)>();

  /// from: protected void onLayout(boolean changed, int l, int t, int r, int b)
  void onLayout(bool changed, int l, int t, int r, int b) =>
      _onLayout(reference, changed ? 1 : 0, l, t, r, b);

  static final _onMeasure = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Int32,
                  ffi.Int32)>>("android_app_FragmentBreadCrumbs_onMeasure")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int, int)>();

  /// from: protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec)
  void onMeasure(int widthMeasureSpec, int heightMeasureSpec) =>
      _onMeasure(reference, widthMeasureSpec, heightMeasureSpec);

  static final _onBackStackChanged =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_FragmentBreadCrumbs_onBackStackChanged")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void onBackStackChanged()
  void onBackStackChanged() => _onBackStackChanged(reference);
}

class FragmentBreadCrumbs_OnBreadCrumbClickListener extends jni.JlObject {
  FragmentBreadCrumbs_OnBreadCrumbClickListener.fromRef(
      ffi.Pointer<ffi.Void> ref)
      : super.fromRef(ref);

  static final _onBreadCrumbClick = jlookup<
              ffi.NativeFunction<
                  ffi.Uint8 Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "android_app_FragmentBreadCrumbs__OnBreadCrumbClickListener_onBreadCrumbClick")
      .asFunction<
          int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public abstract boolean onBreadCrumbClick(android.app.FragmentManager.BackStackEntry backStack, int flags)
  bool onBreadCrumbClick(FragmentManager_BackStackEntry backStack, int flags) =>
      _onBreadCrumbClick(reference, backStack.reference, flags) != 0;
}

class LocalActivityManager extends jni.JlObject {
  LocalActivityManager.fromRef(ffi.Pointer<ffi.Void> ref) : super.fromRef(ref);

  static final _ctor = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                  ffi.Uint8)>>("android_app_LocalActivityManager_new")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public void <init>(android.app.Activity parent, boolean singleMode)
  LocalActivityManager(Activity parent, bool singleMode)
      : super.fromRef(_ctor(parent.reference, singleMode ? 1 : 0));

  static final _startActivity = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_LocalActivityManager_startActivity")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.view.Window startActivity(java.lang.String id, android.content.Intent intent)
  jni.JlObject startActivity(jni.JlString id, content.Intent intent) =>
      jni.JlObject.fromRef(
          _startActivity(reference, id.reference, intent.reference));

  static final _destroyActivity = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Uint8)>>(
          "android_app_LocalActivityManager_destroyActivity")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public android.view.Window destroyActivity(java.lang.String id, boolean finish)
  jni.JlObject destroyActivity(jni.JlString id, bool finish) =>
      jni.JlObject.fromRef(
          _destroyActivity(reference, id.reference, finish ? 1 : 0));

  static final _getCurrentActivity = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_LocalActivityManager_getCurrentActivity")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.Activity getCurrentActivity()
  Activity getCurrentActivity() =>
      Activity.fromRef(_getCurrentActivity(reference));

  static final _getCurrentId = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_LocalActivityManager_getCurrentId")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.String getCurrentId()
  jni.JlString getCurrentId() => jni.JlString.fromRef(_getCurrentId(reference));

  static final _getActivity = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_LocalActivityManager_getActivity")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.Activity getActivity(java.lang.String id)
  Activity getActivity(jni.JlString id) =>
      Activity.fromRef(_getActivity(reference, id.reference));

  static final _dispatchCreate = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_LocalActivityManager_dispatchCreate")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void dispatchCreate(android.os.Bundle state)
  void dispatchCreate(os.Bundle state) =>
      _dispatchCreate(reference, state.reference);

  static final _saveInstanceState = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_LocalActivityManager_saveInstanceState")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.os.Bundle saveInstanceState()
  os.Bundle saveInstanceState() =>
      os.Bundle.fromRef(_saveInstanceState(reference));

  static final _dispatchResume =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_LocalActivityManager_dispatchResume")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void dispatchResume()
  void dispatchResume() => _dispatchResume(reference);

  static final _dispatchPause = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  ffi.Uint8)>>("android_app_LocalActivityManager_dispatchPause")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public void dispatchPause(boolean finishing)
  void dispatchPause(bool finishing) =>
      _dispatchPause(reference, finishing ? 1 : 0);

  static final _dispatchStop =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_LocalActivityManager_dispatchStop")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void dispatchStop()
  void dispatchStop() => _dispatchStop(reference);

  static final _removeAllActivities =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_LocalActivityManager_removeAllActivities")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void removeAllActivities()
  void removeAllActivities() => _removeAllActivities(reference);

  static final _dispatchDestroy = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Uint8)>>(
          "android_app_LocalActivityManager_dispatchDestroy")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public void dispatchDestroy(boolean finishing)
  void dispatchDestroy(bool finishing) =>
      _dispatchDestroy(reference, finishing ? 1 : 0);
}

class NativeActivity extends Activity {
  NativeActivity.fromRef(ffi.Pointer<ffi.Void> ref) : super.fromRef(ref);

  /// from: static public final java.lang.String META_DATA_FUNC_NAME
  static const META_DATA_FUNC_NAME = "android.app.func_name";

  /// from: static public final java.lang.String META_DATA_LIB_NAME
  static const META_DATA_LIB_NAME = "android.app.lib_name";

  static final _ctor =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "android_app_NativeActivity_new")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();

  /// from: public void <init>()
  NativeActivity() : super.fromRef(_ctor());

  static final _onCreate = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_NativeActivity_onCreate")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: protected void onCreate(android.os.Bundle savedInstanceState)
  void onCreate(os.Bundle savedInstanceState) =>
      _onCreate(reference, savedInstanceState.reference);

  static final _onDestroy =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_NativeActivity_onDestroy")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: protected void onDestroy()
  void onDestroy() => _onDestroy(reference);

  static final _onPause =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_NativeActivity_onPause")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: protected void onPause()
  void onPause() => _onPause(reference);

  static final _onResume =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_NativeActivity_onResume")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: protected void onResume()
  void onResume() => _onResume(reference);

  static final _onSaveInstanceState = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_NativeActivity_onSaveInstanceState")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: protected void onSaveInstanceState(android.os.Bundle outState)
  void onSaveInstanceState(os.Bundle outState) =>
      _onSaveInstanceState(reference, outState.reference);

  static final _onStart =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_NativeActivity_onStart")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: protected void onStart()
  void onStart() => _onStart(reference);

  static final _onStop =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_NativeActivity_onStop")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: protected void onStop()
  void onStop() => _onStop(reference);

  static final _onConfigurationChanged = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_NativeActivity_onConfigurationChanged")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void onConfigurationChanged(android.content.res.Configuration newConfig)
  void onConfigurationChanged(res.Configuration newConfig) =>
      _onConfigurationChanged(reference, newConfig.reference);

  static final _onLowMemory =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_NativeActivity_onLowMemory")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void onLowMemory()
  void onLowMemory() => _onLowMemory(reference);

  static final _onWindowFocusChanged = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Uint8)>>(
          "android_app_NativeActivity_onWindowFocusChanged")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public void onWindowFocusChanged(boolean hasFocus)
  void onWindowFocusChanged(bool hasFocus) =>
      _onWindowFocusChanged(reference, hasFocus ? 1 : 0);

  static final _surfaceCreated = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_NativeActivity_surfaceCreated")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void surfaceCreated(android.view.SurfaceHolder holder)
  void surfaceCreated(jni.JlObject holder) =>
      _surfaceCreated(reference, holder.reference);

  static final _surfaceChanged = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Int32,
                  ffi.Int32,
                  ffi.Int32)>>("android_app_NativeActivity_surfaceChanged")
      .asFunction<
          void Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int, int, int)>();

  /// from: public void surfaceChanged(android.view.SurfaceHolder holder, int format, int width, int height)
  void surfaceChanged(jni.JlObject holder, int format, int width, int height) =>
      _surfaceChanged(reference, holder.reference, format, width, height);

  static final _surfaceRedrawNeeded = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_NativeActivity_surfaceRedrawNeeded")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void surfaceRedrawNeeded(android.view.SurfaceHolder holder)
  void surfaceRedrawNeeded(jni.JlObject holder) =>
      _surfaceRedrawNeeded(reference, holder.reference);

  static final _surfaceDestroyed = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_NativeActivity_surfaceDestroyed")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void surfaceDestroyed(android.view.SurfaceHolder holder)
  void surfaceDestroyed(jni.JlObject holder) =>
      _surfaceDestroyed(reference, holder.reference);

  static final _onInputQueueCreated = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_NativeActivity_onInputQueueCreated")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void onInputQueueCreated(android.view.InputQueue queue)
  void onInputQueueCreated(jni.JlObject queue) =>
      _onInputQueueCreated(reference, queue.reference);

  static final _onInputQueueDestroyed = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_NativeActivity_onInputQueueDestroyed")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void onInputQueueDestroyed(android.view.InputQueue queue)
  void onInputQueueDestroyed(jni.JlObject queue) =>
      _onInputQueueDestroyed(reference, queue.reference);

  static final _onGlobalLayout =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_NativeActivity_onGlobalLayout")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void onGlobalLayout()
  void onGlobalLayout() => _onGlobalLayout(reference);
}

class AppComponentFactory extends jni.JlObject {
  AppComponentFactory.fromRef(ffi.Pointer<ffi.Void> ref) : super.fromRef(ref);

  static final _ctor =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "android_app_AppComponentFactory_new")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();

  /// from: public void <init>()
  AppComponentFactory() : super.fromRef(_ctor());

  static final _instantiateApplication = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_AppComponentFactory_instantiateApplication")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.Application instantiateApplication(java.lang.ClassLoader cl, java.lang.String className)
  Application instantiateApplication(jni.JlObject cl, jni.JlString className) =>
      Application.fromRef(_instantiateApplication(
          reference, cl.reference, className.reference));

  static final _instantiateActivity = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>)>>(
          "android_app_AppComponentFactory_instantiateActivity")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.Activity instantiateActivity(java.lang.ClassLoader cl, java.lang.String className, android.content.Intent intent)
  Activity instantiateActivity(
          jni.JlObject cl, jni.JlString className, content.Intent intent) =>
      Activity.fromRef(_instantiateActivity(
          reference, cl.reference, className.reference, intent.reference));

  static final _instantiateReceiver = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>)>>(
          "android_app_AppComponentFactory_instantiateReceiver")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public android.content.BroadcastReceiver instantiateReceiver(java.lang.ClassLoader cl, java.lang.String className, android.content.Intent intent)
  content.BroadcastReceiver instantiateReceiver(
          jni.JlObject cl, jni.JlString className, content.Intent intent) =>
      content.BroadcastReceiver.fromRef(_instantiateReceiver(
          reference, cl.reference, className.reference, intent.reference));

  static final _instantiateService = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>)>>(
          "android_app_AppComponentFactory_instantiateService")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.Service instantiateService(java.lang.ClassLoader cl, java.lang.String className, android.content.Intent intent)
  Service instantiateService(
          jni.JlObject cl, jni.JlString className, content.Intent intent) =>
      Service.fromRef(_instantiateService(
          reference, cl.reference, className.reference, intent.reference));

  static final _instantiateProvider = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_AppComponentFactory_instantiateProvider")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.content.ContentProvider instantiateProvider(java.lang.ClassLoader cl, java.lang.String className)
  content.ContentProvider instantiateProvider(
          jni.JlObject cl, jni.JlString className) =>
      content.ContentProvider.fromRef(
          _instantiateProvider(reference, cl.reference, className.reference));
}

class FragmentManagerNonConfig extends jni.JlObject {
  FragmentManagerNonConfig.fromRef(ffi.Pointer<ffi.Void> ref)
      : super.fromRef(ref);

  static final _ctor = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_FragmentManagerNonConfig_new")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: void <init>(java.util.List<android.app.Fragment> fragments, java.util.List<android.app.FragmentManagerNonConfig> childNonConfigs)
  FragmentManagerNonConfig(jni.JlObject fragments, jni.JlObject childNonConfigs)
      : super.fromRef(_ctor(fragments.reference, childNonConfigs.reference));
}

class ApplicationErrorReport extends jni.JlObject {
  ApplicationErrorReport.fromRef(ffi.Pointer<ffi.Void> ref)
      : super.fromRef(ref);

  /// from: static public final android.os.Parcelable.Creator<android.app.ApplicationErrorReport> CREATOR
  static final _getCREATOR =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "get_android_app_ApplicationErrorReport_CREATOR")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();
  static os.Parcelable_Creator get CREATOR =>
      os.Parcelable_Creator.fromRef(_getCREATOR());

  /// from: static public final int TYPE_ANR
  static const TYPE_ANR = 2;

  /// from: static public final int TYPE_BATTERY
  static const TYPE_BATTERY = 3;

  /// from: static public final int TYPE_CRASH
  static const TYPE_CRASH = 1;

  /// from: static public final int TYPE_NONE
  static const TYPE_NONE = 0;

  /// from: static public final int TYPE_RUNNING_SERVICE
  static const TYPE_RUNNING_SERVICE = 5;

  /// from: public android.app.ApplicationErrorReport.AnrInfo anrInfo
  static final _getanrInfo = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_app_ApplicationErrorReport_anrInfo")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>();
  ApplicationErrorReport_AnrInfo get anrInfo =>
      ApplicationErrorReport_AnrInfo.fromRef(_getanrInfo(reference));
  static final _setanrInfo = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "set_android_app_ApplicationErrorReport_anrInfo")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();
  set anrInfo(ApplicationErrorReport_AnrInfo value) =>
      _setanrInfo(reference, value.reference);

  /// from: public android.app.ApplicationErrorReport.BatteryInfo batteryInfo
  static final _getbatteryInfo = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_app_ApplicationErrorReport_batteryInfo")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>();
  ApplicationErrorReport_BatteryInfo get batteryInfo =>
      ApplicationErrorReport_BatteryInfo.fromRef(_getbatteryInfo(reference));
  static final _setbatteryInfo = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "set_android_app_ApplicationErrorReport_batteryInfo")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();
  set batteryInfo(ApplicationErrorReport_BatteryInfo value) =>
      _setbatteryInfo(reference, value.reference);

  /// from: public android.app.ApplicationErrorReport.CrashInfo crashInfo
  static final _getcrashInfo = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_app_ApplicationErrorReport_crashInfo")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>();
  ApplicationErrorReport_CrashInfo get crashInfo =>
      ApplicationErrorReport_CrashInfo.fromRef(_getcrashInfo(reference));
  static final _setcrashInfo = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "set_android_app_ApplicationErrorReport_crashInfo")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();
  set crashInfo(ApplicationErrorReport_CrashInfo value) =>
      _setcrashInfo(reference, value.reference);

  /// from: public java.lang.String installerPackageName
  static final _getinstallerPackageName = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_app_ApplicationErrorReport_installerPackageName")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>();
  jni.JlString get installerPackageName =>
      jni.JlString.fromRef(_getinstallerPackageName(reference));
  static final _setinstallerPackageName = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "set_android_app_ApplicationErrorReport_installerPackageName")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();
  set installerPackageName(jni.JlString value) =>
      _setinstallerPackageName(reference, value.reference);

  /// from: public java.lang.String packageName
  static final _getpackageName = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_app_ApplicationErrorReport_packageName")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>();
  jni.JlString get packageName =>
      jni.JlString.fromRef(_getpackageName(reference));
  static final _setpackageName = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "set_android_app_ApplicationErrorReport_packageName")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();
  set packageName(jni.JlString value) =>
      _setpackageName(reference, value.reference);

  /// from: public java.lang.String processName
  static final _getprocessName = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_app_ApplicationErrorReport_processName")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>();
  jni.JlString get processName =>
      jni.JlString.fromRef(_getprocessName(reference));
  static final _setprocessName = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "set_android_app_ApplicationErrorReport_processName")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();
  set processName(jni.JlString value) =>
      _setprocessName(reference, value.reference);

  /// from: public android.app.ApplicationErrorReport.RunningServiceInfo runningServiceInfo
  static final _getrunningServiceInfo = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_app_ApplicationErrorReport_runningServiceInfo")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>();
  ApplicationErrorReport_RunningServiceInfo get runningServiceInfo =>
      ApplicationErrorReport_RunningServiceInfo.fromRef(
          _getrunningServiceInfo(reference));
  static final _setrunningServiceInfo = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "set_android_app_ApplicationErrorReport_runningServiceInfo")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();
  set runningServiceInfo(ApplicationErrorReport_RunningServiceInfo value) =>
      _setrunningServiceInfo(reference, value.reference);

  /// from: public boolean systemApp
  static final _getsystemApp = jlookup<
          ffi.NativeFunction<
              ffi.Uint8 Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_app_ApplicationErrorReport_systemApp")
      .asFunction<
          int Function(
    ffi.Pointer<ffi.Void>,
  )>();
  bool get systemApp => _getsystemApp(reference) != 0;
  static final _setsystemApp = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Uint8)>>(
          "set_android_app_ApplicationErrorReport_systemApp")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();
  set systemApp(bool value) => _setsystemApp(reference, value ? 1 : 0);

  /// from: public long time
  static final _gettime = jlookup<
          ffi.NativeFunction<
              ffi.Int64 Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_app_ApplicationErrorReport_time")
      .asFunction<
          int Function(
    ffi.Pointer<ffi.Void>,
  )>();
  int get time => _gettime(reference);
  static final _settime = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  ffi.Int64)>>("set_android_app_ApplicationErrorReport_time")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();
  set time(int value) => _settime(reference, value);

  /// from: public int type
  static final _gettype = jlookup<
          ffi.NativeFunction<
              ffi.Int32 Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_app_ApplicationErrorReport_type")
      .asFunction<
          int Function(
    ffi.Pointer<ffi.Void>,
  )>();
  int get type => _gettype(reference);
  static final _settype = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("set_android_app_ApplicationErrorReport_type")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();
  set type(int value) => _settype(reference, value);

  static final _ctor =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "android_app_ApplicationErrorReport_new")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();

  /// from: public void <init>()
  ApplicationErrorReport() : super.fromRef(_ctor());

  static final _getErrorReportReceiver = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "android_app_ApplicationErrorReport_getErrorReportReceiver")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: static public android.content.ComponentName getErrorReportReceiver(android.content.Context context, java.lang.String packageName, int appFlags)
  static content.ComponentName getErrorReportReceiver(
          content.Context context, jni.JlString packageName, int appFlags) =>
      content.ComponentName.fromRef(_getErrorReportReceiver(
          context.reference, packageName.reference, appFlags));

  static final _writeToParcel = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "android_app_ApplicationErrorReport_writeToParcel")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public void writeToParcel(android.os.Parcel dest, int flags)
  void writeToParcel(os.Parcel dest, int flags) =>
      _writeToParcel(reference, dest.reference, flags);

  static final _readFromParcel = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_ApplicationErrorReport_readFromParcel")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void readFromParcel(android.os.Parcel in)
  void readFromParcel(os.Parcel in_) =>
      _readFromParcel(reference, in_.reference);

  static final _describeContents =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_ApplicationErrorReport_describeContents")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int describeContents()
  int describeContents() => _describeContents(reference);

  static final _dump = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_ApplicationErrorReport_dump")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public void dump(android.util.Printer pw, java.lang.String prefix)
  void dump(jni.JlObject pw, jni.JlString prefix) =>
      _dump(reference, pw.reference, prefix.reference);
}

class ApplicationErrorReport_RunningServiceInfo extends jni.JlObject {
  ApplicationErrorReport_RunningServiceInfo.fromRef(ffi.Pointer<ffi.Void> ref)
      : super.fromRef(ref);

  /// from: public long durationMillis
  static final _getdurationMillis = jlookup<
          ffi.NativeFunction<
              ffi.Int64 Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_app_ApplicationErrorReport__RunningServiceInfo_durationMillis")
      .asFunction<
          int Function(
    ffi.Pointer<ffi.Void>,
  )>();
  int get durationMillis => _getdurationMillis(reference);
  static final _setdurationMillis = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Int64)>>(
          "set_android_app_ApplicationErrorReport__RunningServiceInfo_durationMillis")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();
  set durationMillis(int value) => _setdurationMillis(reference, value);

  /// from: public java.lang.String serviceDetails
  static final _getserviceDetails = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_app_ApplicationErrorReport__RunningServiceInfo_serviceDetails")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>();
  jni.JlString get serviceDetails =>
      jni.JlString.fromRef(_getserviceDetails(reference));
  static final _setserviceDetails = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "set_android_app_ApplicationErrorReport__RunningServiceInfo_serviceDetails")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();
  set serviceDetails(jni.JlString value) =>
      _setserviceDetails(reference, value.reference);

  static final _ctor =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "android_app_ApplicationErrorReport__RunningServiceInfo_new")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();

  /// from: public void <init>()
  ApplicationErrorReport_RunningServiceInfo() : super.fromRef(_ctor());

  static final _ctor_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_ApplicationErrorReport__RunningServiceInfo_new_1")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void <init>(android.os.Parcel in)
  ApplicationErrorReport_RunningServiceInfo.ctor_1(os.Parcel in_)
      : super.fromRef(_ctor_1(in_.reference));

  static final _writeToParcel = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "android_app_ApplicationErrorReport__RunningServiceInfo_writeToParcel")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public void writeToParcel(android.os.Parcel dest, int flags)
  void writeToParcel(os.Parcel dest, int flags) =>
      _writeToParcel(reference, dest.reference, flags);

  static final _dump = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_ApplicationErrorReport__RunningServiceInfo_dump")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public void dump(android.util.Printer pw, java.lang.String prefix)
  void dump(jni.JlObject pw, jni.JlString prefix) =>
      _dump(reference, pw.reference, prefix.reference);
}

class ApplicationErrorReport_CrashInfo extends jni.JlObject {
  ApplicationErrorReport_CrashInfo.fromRef(ffi.Pointer<ffi.Void> ref)
      : super.fromRef(ref);

  /// from: public java.lang.String exceptionClassName
  static final _getexceptionClassName = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_app_ApplicationErrorReport__CrashInfo_exceptionClassName")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>();
  jni.JlString get exceptionClassName =>
      jni.JlString.fromRef(_getexceptionClassName(reference));
  static final _setexceptionClassName = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "set_android_app_ApplicationErrorReport__CrashInfo_exceptionClassName")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();
  set exceptionClassName(jni.JlString value) =>
      _setexceptionClassName(reference, value.reference);

  /// from: public java.lang.String exceptionMessage
  static final _getexceptionMessage = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_app_ApplicationErrorReport__CrashInfo_exceptionMessage")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>();
  jni.JlString get exceptionMessage =>
      jni.JlString.fromRef(_getexceptionMessage(reference));
  static final _setexceptionMessage = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "set_android_app_ApplicationErrorReport__CrashInfo_exceptionMessage")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();
  set exceptionMessage(jni.JlString value) =>
      _setexceptionMessage(reference, value.reference);

  /// from: public java.lang.String stackTrace
  static final _getstackTrace = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_app_ApplicationErrorReport__CrashInfo_stackTrace")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>();
  jni.JlString get stackTrace =>
      jni.JlString.fromRef(_getstackTrace(reference));
  static final _setstackTrace = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "set_android_app_ApplicationErrorReport__CrashInfo_stackTrace")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();
  set stackTrace(jni.JlString value) =>
      _setstackTrace(reference, value.reference);

  /// from: public java.lang.String throwClassName
  static final _getthrowClassName = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_app_ApplicationErrorReport__CrashInfo_throwClassName")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>();
  jni.JlString get throwClassName =>
      jni.JlString.fromRef(_getthrowClassName(reference));
  static final _setthrowClassName = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "set_android_app_ApplicationErrorReport__CrashInfo_throwClassName")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();
  set throwClassName(jni.JlString value) =>
      _setthrowClassName(reference, value.reference);

  /// from: public java.lang.String throwFileName
  static final _getthrowFileName = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_app_ApplicationErrorReport__CrashInfo_throwFileName")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>();
  jni.JlString get throwFileName =>
      jni.JlString.fromRef(_getthrowFileName(reference));
  static final _setthrowFileName = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "set_android_app_ApplicationErrorReport__CrashInfo_throwFileName")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();
  set throwFileName(jni.JlString value) =>
      _setthrowFileName(reference, value.reference);

  /// from: public int throwLineNumber
  static final _getthrowLineNumber = jlookup<
          ffi.NativeFunction<
              ffi.Int32 Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_app_ApplicationErrorReport__CrashInfo_throwLineNumber")
      .asFunction<
          int Function(
    ffi.Pointer<ffi.Void>,
  )>();
  int get throwLineNumber => _getthrowLineNumber(reference);
  static final _setthrowLineNumber = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "set_android_app_ApplicationErrorReport__CrashInfo_throwLineNumber")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();
  set throwLineNumber(int value) => _setthrowLineNumber(reference, value);

  /// from: public java.lang.String throwMethodName
  static final _getthrowMethodName = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_app_ApplicationErrorReport__CrashInfo_throwMethodName")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>();
  jni.JlString get throwMethodName =>
      jni.JlString.fromRef(_getthrowMethodName(reference));
  static final _setthrowMethodName = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "set_android_app_ApplicationErrorReport__CrashInfo_throwMethodName")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();
  set throwMethodName(jni.JlString value) =>
      _setthrowMethodName(reference, value.reference);

  static final _ctor =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "android_app_ApplicationErrorReport__CrashInfo_new")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();

  /// from: public void <init>()
  ApplicationErrorReport_CrashInfo() : super.fromRef(_ctor());

  static final _ctor_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_ApplicationErrorReport__CrashInfo_new_1")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void <init>(java.lang.Throwable tr)
  ApplicationErrorReport_CrashInfo.ctor_1(jni.JlObject tr)
      : super.fromRef(_ctor_1(tr.reference));

  static final _ctor_2 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_ApplicationErrorReport__CrashInfo_new_2")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void <init>(android.os.Parcel in)
  ApplicationErrorReport_CrashInfo.ctor_2(os.Parcel in_)
      : super.fromRef(_ctor_2(in_.reference));

  static final _writeToParcel = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "android_app_ApplicationErrorReport__CrashInfo_writeToParcel")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public void writeToParcel(android.os.Parcel dest, int flags)
  void writeToParcel(os.Parcel dest, int flags) =>
      _writeToParcel(reference, dest.reference, flags);

  static final _dump = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_ApplicationErrorReport__CrashInfo_dump")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public void dump(android.util.Printer pw, java.lang.String prefix)
  void dump(jni.JlObject pw, jni.JlString prefix) =>
      _dump(reference, pw.reference, prefix.reference);
}

class ApplicationErrorReport_BatteryInfo extends jni.JlObject {
  ApplicationErrorReport_BatteryInfo.fromRef(ffi.Pointer<ffi.Void> ref)
      : super.fromRef(ref);

  /// from: public java.lang.String checkinDetails
  static final _getcheckinDetails = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_app_ApplicationErrorReport__BatteryInfo_checkinDetails")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>();
  jni.JlString get checkinDetails =>
      jni.JlString.fromRef(_getcheckinDetails(reference));
  static final _setcheckinDetails = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "set_android_app_ApplicationErrorReport__BatteryInfo_checkinDetails")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();
  set checkinDetails(jni.JlString value) =>
      _setcheckinDetails(reference, value.reference);

  /// from: public long durationMicros
  static final _getdurationMicros = jlookup<
          ffi.NativeFunction<
              ffi.Int64 Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_app_ApplicationErrorReport__BatteryInfo_durationMicros")
      .asFunction<
          int Function(
    ffi.Pointer<ffi.Void>,
  )>();
  int get durationMicros => _getdurationMicros(reference);
  static final _setdurationMicros = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Int64)>>(
          "set_android_app_ApplicationErrorReport__BatteryInfo_durationMicros")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();
  set durationMicros(int value) => _setdurationMicros(reference, value);

  /// from: public java.lang.String usageDetails
  static final _getusageDetails = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_app_ApplicationErrorReport__BatteryInfo_usageDetails")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>();
  jni.JlString get usageDetails =>
      jni.JlString.fromRef(_getusageDetails(reference));
  static final _setusageDetails = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "set_android_app_ApplicationErrorReport__BatteryInfo_usageDetails")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();
  set usageDetails(jni.JlString value) =>
      _setusageDetails(reference, value.reference);

  /// from: public int usagePercent
  static final _getusagePercent = jlookup<
          ffi.NativeFunction<
              ffi.Int32 Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_app_ApplicationErrorReport__BatteryInfo_usagePercent")
      .asFunction<
          int Function(
    ffi.Pointer<ffi.Void>,
  )>();
  int get usagePercent => _getusagePercent(reference);
  static final _setusagePercent = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "set_android_app_ApplicationErrorReport__BatteryInfo_usagePercent")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();
  set usagePercent(int value) => _setusagePercent(reference, value);

  static final _ctor =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "android_app_ApplicationErrorReport__BatteryInfo_new")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();

  /// from: public void <init>()
  ApplicationErrorReport_BatteryInfo() : super.fromRef(_ctor());

  static final _ctor_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_ApplicationErrorReport__BatteryInfo_new_1")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void <init>(android.os.Parcel in)
  ApplicationErrorReport_BatteryInfo.ctor_1(os.Parcel in_)
      : super.fromRef(_ctor_1(in_.reference));

  static final _writeToParcel = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "android_app_ApplicationErrorReport__BatteryInfo_writeToParcel")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public void writeToParcel(android.os.Parcel dest, int flags)
  void writeToParcel(os.Parcel dest, int flags) =>
      _writeToParcel(reference, dest.reference, flags);

  static final _dump = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_ApplicationErrorReport__BatteryInfo_dump")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public void dump(android.util.Printer pw, java.lang.String prefix)
  void dump(jni.JlObject pw, jni.JlString prefix) =>
      _dump(reference, pw.reference, prefix.reference);
}

class ApplicationErrorReport_AnrInfo extends jni.JlObject {
  ApplicationErrorReport_AnrInfo.fromRef(ffi.Pointer<ffi.Void> ref)
      : super.fromRef(ref);

  /// from: public java.lang.String activity
  static final _getactivity = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_app_ApplicationErrorReport__AnrInfo_activity")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>();
  jni.JlString get activity => jni.JlString.fromRef(_getactivity(reference));
  static final _setactivity = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "set_android_app_ApplicationErrorReport__AnrInfo_activity")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();
  set activity(jni.JlString value) => _setactivity(reference, value.reference);

  /// from: public java.lang.String cause
  static final _getcause = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_app_ApplicationErrorReport__AnrInfo_cause")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>();
  jni.JlString get cause => jni.JlString.fromRef(_getcause(reference));
  static final _setcause = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "set_android_app_ApplicationErrorReport__AnrInfo_cause")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();
  set cause(jni.JlString value) => _setcause(reference, value.reference);

  /// from: public java.lang.String info
  static final _getinfo = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_app_ApplicationErrorReport__AnrInfo_info")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>();
  jni.JlString get info => jni.JlString.fromRef(_getinfo(reference));
  static final _setinfo = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "set_android_app_ApplicationErrorReport__AnrInfo_info")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();
  set info(jni.JlString value) => _setinfo(reference, value.reference);

  static final _ctor =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "android_app_ApplicationErrorReport__AnrInfo_new")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();

  /// from: public void <init>()
  ApplicationErrorReport_AnrInfo() : super.fromRef(_ctor());

  static final _ctor_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_ApplicationErrorReport__AnrInfo_new_1")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void <init>(android.os.Parcel in)
  ApplicationErrorReport_AnrInfo.ctor_1(os.Parcel in_)
      : super.fromRef(_ctor_1(in_.reference));

  static final _writeToParcel = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "android_app_ApplicationErrorReport__AnrInfo_writeToParcel")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public void writeToParcel(android.os.Parcel dest, int flags)
  void writeToParcel(os.Parcel dest, int flags) =>
      _writeToParcel(reference, dest.reference, flags);

  static final _dump = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_ApplicationErrorReport__AnrInfo_dump")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public void dump(android.util.Printer pw, java.lang.String prefix)
  void dump(jni.JlObject pw, jni.JlString prefix) =>
      _dump(reference, pw.reference, prefix.reference);
}

class MediaRouteButton extends jni.JlObject {
  MediaRouteButton.fromRef(ffi.Pointer<ffi.Void> ref) : super.fromRef(ref);

  static final _ctor = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
                  ffi.Pointer<ffi.Void>)>>("android_app_MediaRouteButton_new")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void <init>(android.content.Context context)
  MediaRouteButton(content.Context context)
      : super.fromRef(_ctor(context.reference));

  static final _ctor_1 = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("android_app_MediaRouteButton_new_1")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void <init>(android.content.Context context, android.util.AttributeSet attrs)
  MediaRouteButton.ctor_1(content.Context context, jni.JlObject attrs)
      : super.fromRef(_ctor_1(context.reference, attrs.reference));

  static final _ctor_2 = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_app_MediaRouteButton_new_2")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public void <init>(android.content.Context context, android.util.AttributeSet attrs, int defStyleAttr)
  MediaRouteButton.ctor_2(
      content.Context context, jni.JlObject attrs, int defStyleAttr)
      : super.fromRef(
            _ctor_2(context.reference, attrs.reference, defStyleAttr));

  static final _ctor_3 = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Int32,
                  ffi.Int32)>>("android_app_MediaRouteButton_new_3")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int, int)>();

  /// from: public void <init>(android.content.Context context, android.util.AttributeSet attrs, int defStyleAttr, int defStyleRes)
  MediaRouteButton.ctor_3(content.Context context, jni.JlObject attrs,
      int defStyleAttr, int defStyleRes)
      : super.fromRef(_ctor_3(
            context.reference, attrs.reference, defStyleAttr, defStyleRes));

  static final _getRouteTypes =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_MediaRouteButton_getRouteTypes")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int getRouteTypes()
  int getRouteTypes() => _getRouteTypes(reference);

  static final _setRouteTypes = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_app_MediaRouteButton_setRouteTypes")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public void setRouteTypes(int types)
  void setRouteTypes(int types) => _setRouteTypes(reference, types);

  static final _setExtendedSettingsClickListener = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_MediaRouteButton_setExtendedSettingsClickListener")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void setExtendedSettingsClickListener(android.view.View.OnClickListener listener)
  void setExtendedSettingsClickListener(jni.JlObject listener) =>
      _setExtendedSettingsClickListener(reference, listener.reference);

  static final _showDialog =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_MediaRouteButton_showDialog")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void showDialog()
  void showDialog() => _showDialog(reference);

  static final _setContentDescription = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_MediaRouteButton_setContentDescription")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void setContentDescription(java.lang.CharSequence contentDescription)
  void setContentDescription(jni.JlObject contentDescription) =>
      _setContentDescription(reference, contentDescription.reference);

  static final _performClick =
      jlookup<ffi.NativeFunction<ffi.Uint8 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_MediaRouteButton_performClick")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public boolean performClick()
  bool performClick() => _performClick(reference) != 0;

  static final _onCreateDrawableState = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "android_app_MediaRouteButton_onCreateDrawableState")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: protected int[] onCreateDrawableState(int extraSpace)
  jni.JlObject onCreateDrawableState(int extraSpace) =>
      jni.JlObject.fromRef(_onCreateDrawableState(reference, extraSpace));

  static final _drawableStateChanged =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_MediaRouteButton_drawableStateChanged")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: protected void drawableStateChanged()
  void drawableStateChanged() => _drawableStateChanged(reference);

  static final _verifyDrawable = jlookup<
              ffi.NativeFunction<
                  ffi.Uint8 Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_MediaRouteButton_verifyDrawable")
      .asFunction<int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: protected boolean verifyDrawable(android.graphics.drawable.Drawable who)
  bool verifyDrawable(jni.JlObject who) =>
      _verifyDrawable(reference, who.reference) != 0;

  static final _jumpDrawablesToCurrentState =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_MediaRouteButton_jumpDrawablesToCurrentState")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void jumpDrawablesToCurrentState()
  void jumpDrawablesToCurrentState() => _jumpDrawablesToCurrentState(reference);

  static final _setVisibility = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_app_MediaRouteButton_setVisibility")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public void setVisibility(int visibility)
  void setVisibility(int visibility) => _setVisibility(reference, visibility);

  static final _onAttachedToWindow =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_MediaRouteButton_onAttachedToWindow")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void onAttachedToWindow()
  void onAttachedToWindow() => _onAttachedToWindow(reference);

  static final _onDetachedFromWindow =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_MediaRouteButton_onDetachedFromWindow")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void onDetachedFromWindow()
  void onDetachedFromWindow() => _onDetachedFromWindow(reference);

  static final _onMeasure = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Int32,
                  ffi.Int32)>>("android_app_MediaRouteButton_onMeasure")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int, int)>();

  /// from: protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec)
  void onMeasure(int widthMeasureSpec, int heightMeasureSpec) =>
      _onMeasure(reference, widthMeasureSpec, heightMeasureSpec);

  static final _onDraw = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_MediaRouteButton_onDraw")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: protected void onDraw(android.graphics.Canvas canvas)
  void onDraw(jni.JlObject canvas) => _onDraw(reference, canvas.reference);
}

class MediaRouteActionProvider extends jni.JlObject {
  MediaRouteActionProvider.fromRef(ffi.Pointer<ffi.Void> ref)
      : super.fromRef(ref);

  static final _ctor = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_MediaRouteActionProvider_new")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void <init>(android.content.Context context)
  MediaRouteActionProvider(content.Context context)
      : super.fromRef(_ctor(context.reference));

  static final _setRouteTypes = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "android_app_MediaRouteActionProvider_setRouteTypes")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public void setRouteTypes(int types)
  void setRouteTypes(int types) => _setRouteTypes(reference, types);

  static final _setExtendedSettingsClickListener = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_MediaRouteActionProvider_setExtendedSettingsClickListener")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void setExtendedSettingsClickListener(android.view.View.OnClickListener listener)
  void setExtendedSettingsClickListener(jni.JlObject listener) =>
      _setExtendedSettingsClickListener(reference, listener.reference);

  static final _onCreateActionView = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_MediaRouteActionProvider_onCreateActionView")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.view.View onCreateActionView()
  jni.JlObject onCreateActionView() =>
      jni.JlObject.fromRef(_onCreateActionView(reference));

  static final _onCreateActionView_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_MediaRouteActionProvider_onCreateActionView_1")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.view.View onCreateActionView(android.view.MenuItem item)
  jni.JlObject onCreateActionView_1(jni.JlObject item) =>
      jni.JlObject.fromRef(_onCreateActionView_1(reference, item.reference));

  static final _onPerformDefaultAction =
      jlookup<ffi.NativeFunction<ffi.Uint8 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_MediaRouteActionProvider_onPerformDefaultAction")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public boolean onPerformDefaultAction()
  bool onPerformDefaultAction() => _onPerformDefaultAction(reference) != 0;

  static final _overridesItemVisibility =
      jlookup<ffi.NativeFunction<ffi.Uint8 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_MediaRouteActionProvider_overridesItemVisibility")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public boolean overridesItemVisibility()
  bool overridesItemVisibility() => _overridesItemVisibility(reference) != 0;

  static final _isVisible =
      jlookup<ffi.NativeFunction<ffi.Uint8 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_MediaRouteActionProvider_isVisible")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public boolean isVisible()
  bool isVisible() => _isVisible(reference) != 0;
}

class SearchManager extends jni.JlObject {
  SearchManager.fromRef(ffi.Pointer<ffi.Void> ref) : super.fromRef(ref);

  /// from: static public final java.lang.String ACTION_KEY
  static const ACTION_KEY = "action_key";

  /// from: static public final java.lang.String ACTION_MSG
  static const ACTION_MSG = "action_msg";

  /// from: static public final java.lang.String APP_DATA
  static const APP_DATA = "app_data";

  /// from: static public final java.lang.String CURSOR_EXTRA_KEY_IN_PROGRESS
  static const CURSOR_EXTRA_KEY_IN_PROGRESS = "in_progress";

  /// from: static public final java.lang.String EXTRA_DATA_KEY
  static const EXTRA_DATA_KEY = "intent_extra_data_key";

  /// from: static public final java.lang.String EXTRA_NEW_SEARCH
  static const EXTRA_NEW_SEARCH = "new_search";

  /// from: static public final java.lang.String EXTRA_SELECT_QUERY
  static const EXTRA_SELECT_QUERY = "select_query";

  /// from: static public final java.lang.String EXTRA_WEB_SEARCH_PENDINGINTENT
  static const EXTRA_WEB_SEARCH_PENDINGINTENT = "web_search_pendingintent";

  /// from: static public final int FLAG_QUERY_REFINEMENT
  static const FLAG_QUERY_REFINEMENT = 1;

  /// from: static public final java.lang.String INTENT_ACTION_GLOBAL_SEARCH
  static const INTENT_ACTION_GLOBAL_SEARCH =
      "android.search.action.GLOBAL_SEARCH";

  /// from: static public final java.lang.String INTENT_ACTION_SEARCHABLES_CHANGED
  static const INTENT_ACTION_SEARCHABLES_CHANGED =
      "android.search.action.SEARCHABLES_CHANGED";

  /// from: static public final java.lang.String INTENT_ACTION_SEARCH_SETTINGS
  static const INTENT_ACTION_SEARCH_SETTINGS =
      "android.search.action.SEARCH_SETTINGS";

  /// from: static public final java.lang.String INTENT_ACTION_SEARCH_SETTINGS_CHANGED
  static const INTENT_ACTION_SEARCH_SETTINGS_CHANGED =
      "android.search.action.SETTINGS_CHANGED";

  /// from: static public final java.lang.String INTENT_ACTION_WEB_SEARCH_SETTINGS
  static const INTENT_ACTION_WEB_SEARCH_SETTINGS =
      "android.search.action.WEB_SEARCH_SETTINGS";

  /// from: static public final java.lang.String INTENT_GLOBAL_SEARCH_ACTIVITY_CHANGED
  static const INTENT_GLOBAL_SEARCH_ACTIVITY_CHANGED =
      "android.search.action.GLOBAL_SEARCH_ACTIVITY_CHANGED";

  /// from: static public final char MENU_KEY
  static const MENU_KEY = "s";

  /// from: static public final int MENU_KEYCODE
  static const MENU_KEYCODE = 47;

  /// from: static public final java.lang.String QUERY
  static const QUERY = "query";

  /// from: static public final java.lang.String SHORTCUT_MIME_TYPE
  static const SHORTCUT_MIME_TYPE =
      "vnd.android.cursor.item/vnd.android.search.suggest";

  /// from: static public final java.lang.String SUGGEST_COLUMN_AUDIO_CHANNEL_CONFIG
  static const SUGGEST_COLUMN_AUDIO_CHANNEL_CONFIG =
      "suggest_audio_channel_config";

  /// from: static public final java.lang.String SUGGEST_COLUMN_CONTENT_TYPE
  static const SUGGEST_COLUMN_CONTENT_TYPE = "suggest_content_type";

  /// from: static public final java.lang.String SUGGEST_COLUMN_DURATION
  static const SUGGEST_COLUMN_DURATION = "suggest_duration";

  /// from: static public final java.lang.String SUGGEST_COLUMN_FLAGS
  static const SUGGEST_COLUMN_FLAGS = "suggest_flags";

  /// from: static public final java.lang.String SUGGEST_COLUMN_FORMAT
  static const SUGGEST_COLUMN_FORMAT = "suggest_format";

  /// from: static public final java.lang.String SUGGEST_COLUMN_ICON_1
  static const SUGGEST_COLUMN_ICON_1 = "suggest_icon_1";

  /// from: static public final java.lang.String SUGGEST_COLUMN_ICON_2
  static const SUGGEST_COLUMN_ICON_2 = "suggest_icon_2";

  /// from: static public final java.lang.String SUGGEST_COLUMN_INTENT_ACTION
  static const SUGGEST_COLUMN_INTENT_ACTION = "suggest_intent_action";

  /// from: static public final java.lang.String SUGGEST_COLUMN_INTENT_DATA
  static const SUGGEST_COLUMN_INTENT_DATA = "suggest_intent_data";

  /// from: static public final java.lang.String SUGGEST_COLUMN_INTENT_DATA_ID
  static const SUGGEST_COLUMN_INTENT_DATA_ID = "suggest_intent_data_id";

  /// from: static public final java.lang.String SUGGEST_COLUMN_INTENT_EXTRA_DATA
  static const SUGGEST_COLUMN_INTENT_EXTRA_DATA = "suggest_intent_extra_data";

  /// from: static public final java.lang.String SUGGEST_COLUMN_IS_LIVE
  static const SUGGEST_COLUMN_IS_LIVE = "suggest_is_live";

  /// from: static public final java.lang.String SUGGEST_COLUMN_LAST_ACCESS_HINT
  static const SUGGEST_COLUMN_LAST_ACCESS_HINT = "suggest_last_access_hint";

  /// from: static public final java.lang.String SUGGEST_COLUMN_PRODUCTION_YEAR
  static const SUGGEST_COLUMN_PRODUCTION_YEAR = "suggest_production_year";

  /// from: static public final java.lang.String SUGGEST_COLUMN_PURCHASE_PRICE
  static const SUGGEST_COLUMN_PURCHASE_PRICE = "suggest_purchase_price";

  /// from: static public final java.lang.String SUGGEST_COLUMN_QUERY
  static const SUGGEST_COLUMN_QUERY = "suggest_intent_query";

  /// from: static public final java.lang.String SUGGEST_COLUMN_RATING_SCORE
  static const SUGGEST_COLUMN_RATING_SCORE = "suggest_rating_score";

  /// from: static public final java.lang.String SUGGEST_COLUMN_RATING_STYLE
  static const SUGGEST_COLUMN_RATING_STYLE = "suggest_rating_style";

  /// from: static public final java.lang.String SUGGEST_COLUMN_RENTAL_PRICE
  static const SUGGEST_COLUMN_RENTAL_PRICE = "suggest_rental_price";

  /// from: static public final java.lang.String SUGGEST_COLUMN_RESULT_CARD_IMAGE
  static const SUGGEST_COLUMN_RESULT_CARD_IMAGE = "suggest_result_card_image";

  /// from: static public final java.lang.String SUGGEST_COLUMN_SHORTCUT_ID
  static const SUGGEST_COLUMN_SHORTCUT_ID = "suggest_shortcut_id";

  /// from: static public final java.lang.String SUGGEST_COLUMN_SPINNER_WHILE_REFRESHING
  static const SUGGEST_COLUMN_SPINNER_WHILE_REFRESHING =
      "suggest_spinner_while_refreshing";

  /// from: static public final java.lang.String SUGGEST_COLUMN_TEXT_1
  static const SUGGEST_COLUMN_TEXT_1 = "suggest_text_1";

  /// from: static public final java.lang.String SUGGEST_COLUMN_TEXT_2
  static const SUGGEST_COLUMN_TEXT_2 = "suggest_text_2";

  /// from: static public final java.lang.String SUGGEST_COLUMN_TEXT_2_URL
  static const SUGGEST_COLUMN_TEXT_2_URL = "suggest_text_2_url";

  /// from: static public final java.lang.String SUGGEST_COLUMN_VIDEO_HEIGHT
  static const SUGGEST_COLUMN_VIDEO_HEIGHT = "suggest_video_height";

  /// from: static public final java.lang.String SUGGEST_COLUMN_VIDEO_WIDTH
  static const SUGGEST_COLUMN_VIDEO_WIDTH = "suggest_video_width";

  /// from: static public final java.lang.String SUGGEST_MIME_TYPE
  static const SUGGEST_MIME_TYPE =
      "vnd.android.cursor.dir/vnd.android.search.suggest";

  /// from: static public final java.lang.String SUGGEST_NEVER_MAKE_SHORTCUT
  static const SUGGEST_NEVER_MAKE_SHORTCUT = "_-1";

  /// from: static public final java.lang.String SUGGEST_PARAMETER_LIMIT
  static const SUGGEST_PARAMETER_LIMIT = "limit";

  /// from: static public final java.lang.String SUGGEST_URI_PATH_QUERY
  static const SUGGEST_URI_PATH_QUERY = "search_suggest_query";

  /// from: static public final java.lang.String SUGGEST_URI_PATH_SHORTCUT
  static const SUGGEST_URI_PATH_SHORTCUT = "search_suggest_shortcut";

  /// from: static public final java.lang.String USER_QUERY
  static const USER_QUERY = "user_query";

  static final _ctor =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "android_app_SearchManager_new")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();

  /// from: void <init>()
  SearchManager() : super.fromRef(_ctor());

  static final _startSearch = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Uint8,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Uint8)>>("android_app_SearchManager_startSearch")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public void startSearch(java.lang.String initialQuery, boolean selectInitialQuery, android.content.ComponentName launchActivity, android.os.Bundle appSearchData, boolean globalSearch)
  void startSearch(
          jni.JlString initialQuery,
          bool selectInitialQuery,
          content.ComponentName launchActivity,
          os.Bundle appSearchData,
          bool globalSearch) =>
      _startSearch(
          reference,
          initialQuery.reference,
          selectInitialQuery ? 1 : 0,
          launchActivity.reference,
          appSearchData.reference,
          globalSearch ? 1 : 0);

  static final _getGlobalSearchActivity = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_SearchManager_getGlobalSearchActivity")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.content.ComponentName getGlobalSearchActivity()
  content.ComponentName getGlobalSearchActivity() =>
      content.ComponentName.fromRef(_getGlobalSearchActivity(reference));

  static final _triggerSearch = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>)>>(
          "android_app_SearchManager_triggerSearch")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void triggerSearch(java.lang.String query, android.content.ComponentName launchActivity, android.os.Bundle appSearchData)
  void triggerSearch(jni.JlString query, content.ComponentName launchActivity,
          os.Bundle appSearchData) =>
      _triggerSearch(reference, query.reference, launchActivity.reference,
          appSearchData.reference);

  static final _stopSearch =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_SearchManager_stopSearch")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void stopSearch()
  void stopSearch() => _stopSearch(reference);

  static final _setOnDismissListener = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_SearchManager_setOnDismissListener")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void setOnDismissListener(android.app.SearchManager.OnDismissListener listener)
  void setOnDismissListener(SearchManager_OnDismissListener listener) =>
      _setOnDismissListener(reference, listener.reference);

  static final _setOnCancelListener = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_SearchManager_setOnCancelListener")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void setOnCancelListener(android.app.SearchManager.OnCancelListener listener)
  void setOnCancelListener(SearchManager_OnCancelListener listener) =>
      _setOnCancelListener(reference, listener.reference);

  static final _onCancel = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("android_app_SearchManager_onCancel")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void onCancel(android.content.DialogInterface dialog)
  void onCancel(content.DialogInterface dialog) =>
      _onCancel(reference, dialog.reference);

  static final _onDismiss = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_SearchManager_onDismiss")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void onDismiss(android.content.DialogInterface dialog)
  void onDismiss(content.DialogInterface dialog) =>
      _onDismiss(reference, dialog.reference);

  static final _getSearchableInfo = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_SearchManager_getSearchableInfo")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.SearchableInfo getSearchableInfo(android.content.ComponentName componentName)
  SearchableInfo getSearchableInfo(content.ComponentName componentName) =>
      SearchableInfo.fromRef(
          _getSearchableInfo(reference, componentName.reference));

  static final _getSearchablesInGlobalSearch = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_SearchManager_getSearchablesInGlobalSearch")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.util.List<android.app.SearchableInfo> getSearchablesInGlobalSearch()
  jni.JlObject getSearchablesInGlobalSearch() =>
      jni.JlObject.fromRef(_getSearchablesInGlobalSearch(reference));
}

class SearchManager_OnDismissListener extends jni.JlObject {
  SearchManager_OnDismissListener.fromRef(ffi.Pointer<ffi.Void> ref)
      : super.fromRef(ref);

  static final _onDismiss =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_SearchManager__OnDismissListener_onDismiss")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: public abstract void onDismiss()
  void onDismiss() => _onDismiss(reference);
}

class SearchManager_OnCancelListener extends jni.JlObject {
  SearchManager_OnCancelListener.fromRef(ffi.Pointer<ffi.Void> ref)
      : super.fromRef(ref);

  static final _onCancel =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_SearchManager__OnCancelListener_onCancel")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: public abstract void onCancel()
  void onCancel() => _onCancel(reference);
}

class AutomaticZenRule extends jni.JlObject {
  AutomaticZenRule.fromRef(ffi.Pointer<ffi.Void> ref) : super.fromRef(ref);

  /// from: static public final android.os.Parcelable.Creator<android.app.AutomaticZenRule> CREATOR
  static final _getCREATOR =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "get_android_app_AutomaticZenRule_CREATOR")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();
  static os.Parcelable_Creator get CREATOR =>
      os.Parcelable_Creator.fromRef(_getCREATOR());

  static final _ctor = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Int32,
                  ffi.Uint8)>>("android_app_AutomaticZenRule_new")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int, int)>();

  /// from: public void <init>(java.lang.String name, android.content.ComponentName owner, android.net.Uri conditionId, int interruptionFilter, boolean enabled)
  AutomaticZenRule(jni.JlString name, content.ComponentName owner,
      jni.JlObject conditionId, int interruptionFilter, bool enabled)
      : super.fromRef(_ctor(name.reference, owner.reference,
            conditionId.reference, interruptionFilter, enabled ? 1 : 0));

  static final _ctor_1 = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
                  ffi.Pointer<ffi.Void>)>>("android_app_AutomaticZenRule_new_1")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void <init>(android.os.Parcel source)
  AutomaticZenRule.ctor_1(os.Parcel source)
      : super.fromRef(_ctor_1(source.reference));

  static final _getOwner = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_AutomaticZenRule_getOwner")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.content.ComponentName getOwner()
  content.ComponentName getOwner() =>
      content.ComponentName.fromRef(_getOwner(reference));

  static final _getConditionId = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_AutomaticZenRule_getConditionId")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.net.Uri getConditionId()
  jni.JlObject getConditionId() =>
      jni.JlObject.fromRef(_getConditionId(reference));

  static final _getInterruptionFilter =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_AutomaticZenRule_getInterruptionFilter")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int getInterruptionFilter()
  int getInterruptionFilter() => _getInterruptionFilter(reference);

  static final _getName = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_AutomaticZenRule_getName")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.String getName()
  jni.JlString getName() => jni.JlString.fromRef(_getName(reference));

  static final _isEnabled =
      jlookup<ffi.NativeFunction<ffi.Uint8 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_AutomaticZenRule_isEnabled")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public boolean isEnabled()
  bool isEnabled() => _isEnabled(reference) != 0;

  static final _getCreationTime =
      jlookup<ffi.NativeFunction<ffi.Int64 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_AutomaticZenRule_getCreationTime")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public long getCreationTime()
  int getCreationTime() => _getCreationTime(reference);

  static final _setConditionId = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_AutomaticZenRule_setConditionId")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void setConditionId(android.net.Uri conditionId)
  void setConditionId(jni.JlObject conditionId) =>
      _setConditionId(reference, conditionId.reference);

  static final _setInterruptionFilter = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "android_app_AutomaticZenRule_setInterruptionFilter")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public void setInterruptionFilter(int interruptionFilter)
  void setInterruptionFilter(int interruptionFilter) =>
      _setInterruptionFilter(reference, interruptionFilter);

  static final _setName = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_AutomaticZenRule_setName")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void setName(java.lang.String name)
  void setName(jni.JlString name) => _setName(reference, name.reference);

  static final _setEnabled = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  ffi.Uint8)>>("android_app_AutomaticZenRule_setEnabled")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public void setEnabled(boolean enabled)
  void setEnabled(bool enabled) => _setEnabled(reference, enabled ? 1 : 0);

  static final _describeContents =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_AutomaticZenRule_describeContents")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int describeContents()
  int describeContents() => _describeContents(reference);

  static final _writeToParcel = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_app_AutomaticZenRule_writeToParcel")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public void writeToParcel(android.os.Parcel dest, int flags)
  void writeToParcel(os.Parcel dest, int flags) =>
      _writeToParcel(reference, dest.reference, flags);

  static final _toString_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_AutomaticZenRule_toString_1")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.String toString()
  jni.JlString toString_1() => jni.JlString.fromRef(_toString_1(reference));

  static final _equals_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Uint8 Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_AutomaticZenRule_equals_1")
      .asFunction<int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public boolean equals(java.lang.Object o)
  bool equals_1(jni.JlObject o) => _equals_1(reference, o.reference) != 0;

  static final _hashCode_1 =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_AutomaticZenRule_hashCode_1")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int hashCode()
  int hashCode_1() => _hashCode_1(reference);
}

class Service extends content.ContextWrapper {
  Service.fromRef(ffi.Pointer<ffi.Void> ref) : super.fromRef(ref);

  /// from: static public final int START_CONTINUATION_MASK
  static const START_CONTINUATION_MASK = 15;

  /// from: static public final int START_FLAG_REDELIVERY
  static const START_FLAG_REDELIVERY = 1;

  /// from: static public final int START_FLAG_RETRY
  static const START_FLAG_RETRY = 2;

  /// from: static public final int START_NOT_STICKY
  static const START_NOT_STICKY = 2;

  /// from: static public final int START_REDELIVER_INTENT
  static const START_REDELIVER_INTENT = 3;

  /// from: static public final int START_STICKY
  static const START_STICKY = 1;

  /// from: static public final int START_STICKY_COMPATIBILITY
  static const START_STICKY_COMPATIBILITY = 0;

  /// from: static public final int STOP_FOREGROUND_DETACH
  static const STOP_FOREGROUND_DETACH = 2;

  /// from: static public final int STOP_FOREGROUND_REMOVE
  static const STOP_FOREGROUND_REMOVE = 1;

  static final _ctor =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "android_app_Service_new")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();

  /// from: public void <init>()
  Service() : super.fromRef(_ctor());

  static final _getApplication = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
                  ffi.Pointer<ffi.Void>)>>("android_app_Service_getApplication")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public final android.app.Application getApplication()
  Application getApplication() =>
      Application.fromRef(_getApplication(reference));

  static final _onCreate =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_Service_onCreate")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void onCreate()
  void onCreate() => _onCreate(reference);

  static final _onStart = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_app_Service_onStart")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public void onStart(android.content.Intent intent, int startId)
  void onStart(content.Intent intent, int startId) =>
      _onStart(reference, intent.reference, startId);

  static final _onStartCommand = jlookup<
          ffi.NativeFunction<
              ffi.Int32 Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
                  ffi.Int32, ffi.Int32)>>("android_app_Service_onStartCommand")
      .asFunction<
          int Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int, int)>();

  /// from: public int onStartCommand(android.content.Intent intent, int flags, int startId)
  int onStartCommand(content.Intent intent, int flags, int startId) =>
      _onStartCommand(reference, intent.reference, flags, startId);

  static final _onDestroy =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_Service_onDestroy")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void onDestroy()
  void onDestroy() => _onDestroy(reference);

  static final _onConfigurationChanged = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Service_onConfigurationChanged")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void onConfigurationChanged(android.content.res.Configuration newConfig)
  void onConfigurationChanged(res.Configuration newConfig) =>
      _onConfigurationChanged(reference, newConfig.reference);

  static final _onLowMemory =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_Service_onLowMemory")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void onLowMemory()
  void onLowMemory() => _onLowMemory(reference);

  static final _onTrimMemory = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_app_Service_onTrimMemory")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public void onTrimMemory(int level)
  void onTrimMemory(int level) => _onTrimMemory(reference, level);

  static final _onBind = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("android_app_Service_onBind")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public abstract android.os.IBinder onBind(android.content.Intent intent)
  os.IBinder onBind(content.Intent intent) =>
      os.IBinder.fromRef(_onBind(reference, intent.reference));

  static final _onUnbind = jlookup<
          ffi.NativeFunction<
              ffi.Uint8 Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("android_app_Service_onUnbind")
      .asFunction<int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public boolean onUnbind(android.content.Intent intent)
  bool onUnbind(content.Intent intent) =>
      _onUnbind(reference, intent.reference) != 0;

  static final _onRebind = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("android_app_Service_onRebind")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void onRebind(android.content.Intent intent)
  void onRebind(content.Intent intent) =>
      _onRebind(reference, intent.reference);

  static final _onTaskRemoved = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("android_app_Service_onTaskRemoved")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void onTaskRemoved(android.content.Intent rootIntent)
  void onTaskRemoved(content.Intent rootIntent) =>
      _onTaskRemoved(reference, rootIntent.reference);

  static final _stopSelf =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_Service_stopSelf")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: public final void stopSelf()
  void stopSelf() => _stopSelf(reference);

  static final _stopSelf_1 = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_app_Service_stopSelf_1")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public final void stopSelf(int startId)
  void stopSelf_1(int startId) => _stopSelf_1(reference, startId);

  static final _stopSelfResult = jlookup<
          ffi.NativeFunction<
              ffi.Uint8 Function(ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_app_Service_stopSelfResult")
      .asFunction<int Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public final boolean stopSelfResult(int startId)
  bool stopSelfResult(int startId) => _stopSelfResult(reference, startId) != 0;

  static final _startForeground = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Int32,
                      ffi.Pointer<ffi.Void>)>>(
          "android_app_Service_startForeground")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, int, ffi.Pointer<ffi.Void>)>();

  /// from: public final void startForeground(int id, android.app.Notification notification)
  void startForeground(int id, Notification notification) =>
      _startForeground(reference, id, notification.reference);

  static final _stopForeground = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  ffi.Uint8)>>("android_app_Service_stopForeground")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public final void stopForeground(boolean removeNotification)
  void stopForeground(bool removeNotification) =>
      _stopForeground(reference, removeNotification ? 1 : 0);

  static final _stopForeground_1 = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_app_Service_stopForeground_1")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public final void stopForeground(int flags)
  void stopForeground_1(int flags) => _stopForeground_1(reference, flags);

  static final _dump = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("android_app_Service_dump")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: protected void dump(java.io.FileDescriptor fd, java.io.PrintWriter writer, java.lang.String[] args)
  void dump(jni.JlObject fd, jni.JlObject writer, jni.JlObject args) =>
      _dump(reference, fd.reference, writer.reference, args.reference);
}

class AppOpsManager extends jni.JlObject {
  AppOpsManager.fromRef(ffi.Pointer<ffi.Void> ref) : super.fromRef(ref);

  /// from: static public final int MODE_ALLOWED
  static const MODE_ALLOWED = 0;

  /// from: static public final int MODE_DEFAULT
  static const MODE_DEFAULT = 3;

  /// from: static public final int MODE_ERRORED
  static const MODE_ERRORED = 2;

  /// from: static public final int MODE_IGNORED
  static const MODE_IGNORED = 1;

  /// from: static public final java.lang.String OPSTR_ADD_VOICEMAIL
  static const OPSTR_ADD_VOICEMAIL = "android:add_voicemail";

  /// from: static public final java.lang.String OPSTR_ANSWER_PHONE_CALLS
  static const OPSTR_ANSWER_PHONE_CALLS = "android:answer_phone_calls";

  /// from: static public final java.lang.String OPSTR_BODY_SENSORS
  static const OPSTR_BODY_SENSORS = "android:body_sensors";

  /// from: static public final java.lang.String OPSTR_CALL_PHONE
  static const OPSTR_CALL_PHONE = "android:call_phone";

  /// from: static public final java.lang.String OPSTR_CAMERA
  static const OPSTR_CAMERA = "android:camera";

  /// from: static public final java.lang.String OPSTR_COARSE_LOCATION
  static const OPSTR_COARSE_LOCATION = "android:coarse_location";

  /// from: static public final java.lang.String OPSTR_FINE_LOCATION
  static const OPSTR_FINE_LOCATION = "android:fine_location";

  /// from: static public final java.lang.String OPSTR_GET_USAGE_STATS
  static const OPSTR_GET_USAGE_STATS = "android:get_usage_stats";

  /// from: static public final java.lang.String OPSTR_MOCK_LOCATION
  static const OPSTR_MOCK_LOCATION = "android:mock_location";

  /// from: static public final java.lang.String OPSTR_MONITOR_HIGH_POWER_LOCATION
  static const OPSTR_MONITOR_HIGH_POWER_LOCATION =
      "android:monitor_location_high_power";

  /// from: static public final java.lang.String OPSTR_MONITOR_LOCATION
  static const OPSTR_MONITOR_LOCATION = "android:monitor_location";

  /// from: static public final java.lang.String OPSTR_PICTURE_IN_PICTURE
  static const OPSTR_PICTURE_IN_PICTURE = "android:picture_in_picture";

  /// from: static public final java.lang.String OPSTR_PROCESS_OUTGOING_CALLS
  static const OPSTR_PROCESS_OUTGOING_CALLS = "android:process_outgoing_calls";

  /// from: static public final java.lang.String OPSTR_READ_CALENDAR
  static const OPSTR_READ_CALENDAR = "android:read_calendar";

  /// from: static public final java.lang.String OPSTR_READ_CALL_LOG
  static const OPSTR_READ_CALL_LOG = "android:read_call_log";

  /// from: static public final java.lang.String OPSTR_READ_CELL_BROADCASTS
  static const OPSTR_READ_CELL_BROADCASTS = "android:read_cell_broadcasts";

  /// from: static public final java.lang.String OPSTR_READ_CONTACTS
  static const OPSTR_READ_CONTACTS = "android:read_contacts";

  /// from: static public final java.lang.String OPSTR_READ_EXTERNAL_STORAGE
  static const OPSTR_READ_EXTERNAL_STORAGE = "android:read_external_storage";

  /// from: static public final java.lang.String OPSTR_READ_PHONE_NUMBERS
  static const OPSTR_READ_PHONE_NUMBERS = "android:read_phone_numbers";

  /// from: static public final java.lang.String OPSTR_READ_PHONE_STATE
  static const OPSTR_READ_PHONE_STATE = "android:read_phone_state";

  /// from: static public final java.lang.String OPSTR_READ_SMS
  static const OPSTR_READ_SMS = "android:read_sms";

  /// from: static public final java.lang.String OPSTR_RECEIVE_MMS
  static const OPSTR_RECEIVE_MMS = "android:receive_mms";

  /// from: static public final java.lang.String OPSTR_RECEIVE_SMS
  static const OPSTR_RECEIVE_SMS = "android:receive_sms";

  /// from: static public final java.lang.String OPSTR_RECEIVE_WAP_PUSH
  static const OPSTR_RECEIVE_WAP_PUSH = "android:receive_wap_push";

  /// from: static public final java.lang.String OPSTR_RECORD_AUDIO
  static const OPSTR_RECORD_AUDIO = "android:record_audio";

  /// from: static public final java.lang.String OPSTR_SEND_SMS
  static const OPSTR_SEND_SMS = "android:send_sms";

  /// from: static public final java.lang.String OPSTR_SYSTEM_ALERT_WINDOW
  static const OPSTR_SYSTEM_ALERT_WINDOW = "android:system_alert_window";

  /// from: static public final java.lang.String OPSTR_USE_FINGERPRINT
  static const OPSTR_USE_FINGERPRINT = "android:use_fingerprint";

  /// from: static public final java.lang.String OPSTR_USE_SIP
  static const OPSTR_USE_SIP = "android:use_sip";

  /// from: static public final java.lang.String OPSTR_WRITE_CALENDAR
  static const OPSTR_WRITE_CALENDAR = "android:write_calendar";

  /// from: static public final java.lang.String OPSTR_WRITE_CALL_LOG
  static const OPSTR_WRITE_CALL_LOG = "android:write_call_log";

  /// from: static public final java.lang.String OPSTR_WRITE_CONTACTS
  static const OPSTR_WRITE_CONTACTS = "android:write_contacts";

  /// from: static public final java.lang.String OPSTR_WRITE_EXTERNAL_STORAGE
  static const OPSTR_WRITE_EXTERNAL_STORAGE = "android:write_external_storage";

  /// from: static public final java.lang.String OPSTR_WRITE_SETTINGS
  static const OPSTR_WRITE_SETTINGS = "android:write_settings";

  static final _ctor =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "android_app_AppOpsManager_new")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();

  /// from: void <init>()
  AppOpsManager() : super.fromRef(_ctor());

  static final _permissionToOp = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_AppOpsManager_permissionToOp")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: static public java.lang.String permissionToOp(java.lang.String permission)
  static jni.JlString permissionToOp(jni.JlString permission) =>
      jni.JlString.fromRef(_permissionToOp(permission.reference));

  static final _startWatchingMode = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>)>>(
          "android_app_AppOpsManager_startWatchingMode")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void startWatchingMode(java.lang.String op, java.lang.String packageName, android.app.AppOpsManager.OnOpChangedListener callback)
  void startWatchingMode(jni.JlString op, jni.JlString packageName,
          AppOpsManager_OnOpChangedListener callback) =>
      _startWatchingMode(
          reference, op.reference, packageName.reference, callback.reference);

  static final _stopWatchingMode = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_AppOpsManager_stopWatchingMode")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void stopWatchingMode(android.app.AppOpsManager.OnOpChangedListener callback)
  void stopWatchingMode(AppOpsManager_OnOpChangedListener callback) =>
      _stopWatchingMode(reference, callback.reference);

  static final _checkOp = jlookup<
          ffi.NativeFunction<
              ffi.Int32 Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Int32,
                  ffi.Pointer<ffi.Void>)>>("android_app_AppOpsManager_checkOp")
      .asFunction<
          int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int,
              ffi.Pointer<ffi.Void>)>();

  /// from: public int checkOp(java.lang.String op, int uid, java.lang.String packageName)
  int checkOp(jni.JlString op, int uid, jni.JlString packageName) =>
      _checkOp(reference, op.reference, uid, packageName.reference);

  static final _checkOpNoThrow = jlookup<
              ffi.NativeFunction<
                  ffi.Int32 Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Int32,
                      ffi.Pointer<ffi.Void>)>>(
          "android_app_AppOpsManager_checkOpNoThrow")
      .asFunction<
          int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int,
              ffi.Pointer<ffi.Void>)>();

  /// from: public int checkOpNoThrow(java.lang.String op, int uid, java.lang.String packageName)
  int checkOpNoThrow(jni.JlString op, int uid, jni.JlString packageName) =>
      _checkOpNoThrow(reference, op.reference, uid, packageName.reference);

  static final _noteOp = jlookup<
          ffi.NativeFunction<
              ffi.Int32 Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Int32,
                  ffi.Pointer<ffi.Void>)>>("android_app_AppOpsManager_noteOp")
      .asFunction<
          int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int,
              ffi.Pointer<ffi.Void>)>();

  /// from: public int noteOp(java.lang.String op, int uid, java.lang.String packageName)
  int noteOp(jni.JlString op, int uid, jni.JlString packageName) =>
      _noteOp(reference, op.reference, uid, packageName.reference);

  static final _noteOpNoThrow = jlookup<
              ffi.NativeFunction<
                  ffi.Int32 Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Int32,
                      ffi.Pointer<ffi.Void>)>>(
          "android_app_AppOpsManager_noteOpNoThrow")
      .asFunction<
          int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int,
              ffi.Pointer<ffi.Void>)>();

  /// from: public int noteOpNoThrow(java.lang.String op, int uid, java.lang.String packageName)
  int noteOpNoThrow(jni.JlString op, int uid, jni.JlString packageName) =>
      _noteOpNoThrow(reference, op.reference, uid, packageName.reference);

  static final _noteProxyOp = jlookup<
              ffi.NativeFunction<
                  ffi.Int32 Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_AppOpsManager_noteProxyOp")
      .asFunction<
          int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public int noteProxyOp(java.lang.String op, java.lang.String proxiedPackageName)
  int noteProxyOp(jni.JlString op, jni.JlString proxiedPackageName) =>
      _noteProxyOp(reference, op.reference, proxiedPackageName.reference);

  static final _noteProxyOpNoThrow = jlookup<
              ffi.NativeFunction<
                  ffi.Int32 Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_AppOpsManager_noteProxyOpNoThrow")
      .asFunction<
          int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public int noteProxyOpNoThrow(java.lang.String op, java.lang.String proxiedPackageName)
  int noteProxyOpNoThrow(jni.JlString op, jni.JlString proxiedPackageName) =>
      _noteProxyOpNoThrow(
          reference, op.reference, proxiedPackageName.reference);

  static final _startOp = jlookup<
          ffi.NativeFunction<
              ffi.Int32 Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Int32,
                  ffi.Pointer<ffi.Void>)>>("android_app_AppOpsManager_startOp")
      .asFunction<
          int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int,
              ffi.Pointer<ffi.Void>)>();

  /// from: public int startOp(java.lang.String op, int uid, java.lang.String packageName)
  int startOp(jni.JlString op, int uid, jni.JlString packageName) =>
      _startOp(reference, op.reference, uid, packageName.reference);

  static final _startOpNoThrow = jlookup<
              ffi.NativeFunction<
                  ffi.Int32 Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Int32,
                      ffi.Pointer<ffi.Void>)>>(
          "android_app_AppOpsManager_startOpNoThrow")
      .asFunction<
          int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int,
              ffi.Pointer<ffi.Void>)>();

  /// from: public int startOpNoThrow(java.lang.String op, int uid, java.lang.String packageName)
  int startOpNoThrow(jni.JlString op, int uid, jni.JlString packageName) =>
      _startOpNoThrow(reference, op.reference, uid, packageName.reference);

  static final _finishOp = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Int32,
                  ffi.Pointer<ffi.Void>)>>("android_app_AppOpsManager_finishOp")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int,
              ffi.Pointer<ffi.Void>)>();

  /// from: public void finishOp(java.lang.String op, int uid, java.lang.String packageName)
  void finishOp(jni.JlString op, int uid, jni.JlString packageName) =>
      _finishOp(reference, op.reference, uid, packageName.reference);

  static final _checkPackage = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Int32,
                      ffi.Pointer<ffi.Void>)>>(
          "android_app_AppOpsManager_checkPackage")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, int, ffi.Pointer<ffi.Void>)>();

  /// from: public void checkPackage(int uid, java.lang.String packageName)
  void checkPackage(int uid, jni.JlString packageName) =>
      _checkPackage(reference, uid, packageName.reference);
}

class AppOpsManager_OnOpChangedListener extends jni.JlObject {
  AppOpsManager_OnOpChangedListener.fromRef(ffi.Pointer<ffi.Void> ref)
      : super.fromRef(ref);

  static final _onOpChanged = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_AppOpsManager__OnOpChangedListener_onOpChanged")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public abstract void onOpChanged(java.lang.String op, java.lang.String packageName)
  void onOpChanged(jni.JlString op, jni.JlString packageName) =>
      _onOpChanged(reference, op.reference, packageName.reference);
}

class LoaderManager extends jni.JlObject {
  LoaderManager.fromRef(ffi.Pointer<ffi.Void> ref) : super.fromRef(ref);

  static final _ctor =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "android_app_LoaderManager_new")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();

  /// from: public void <init>()
  LoaderManager() : super.fromRef(_ctor());

  static final _initLoader = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Int32,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>)>>(
          "android_app_LoaderManager_initLoader")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public abstract android.content.Loader<D> initLoader(int id, android.os.Bundle args, android.app.LoaderManager.LoaderCallbacks<D> callback)
  content.Loader initLoader(
          int id, os.Bundle args, LoaderManager_LoaderCallbacks callback) =>
      content.Loader.fromRef(
          _initLoader(reference, id, args.reference, callback.reference));

  static final _restartLoader = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Int32,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>)>>(
          "android_app_LoaderManager_restartLoader")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public abstract android.content.Loader<D> restartLoader(int id, android.os.Bundle args, android.app.LoaderManager.LoaderCallbacks<D> callback)
  content.Loader restartLoader(
          int id, os.Bundle args, LoaderManager_LoaderCallbacks callback) =>
      content.Loader.fromRef(
          _restartLoader(reference, id, args.reference, callback.reference));

  static final _destroyLoader = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_app_LoaderManager_destroyLoader")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public abstract void destroyLoader(int id)
  void destroyLoader(int id) => _destroyLoader(reference, id);

  static final _getLoader = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_app_LoaderManager_getLoader")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public abstract android.content.Loader<D> getLoader(int id)
  content.Loader getLoader(int id) =>
      content.Loader.fromRef(_getLoader(reference, id));

  static final _dump = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("android_app_LoaderManager_dump")
      .asFunction<
          void Function(
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public abstract void dump(java.lang.String prefix, java.io.FileDescriptor fd, java.io.PrintWriter writer, java.lang.String[] args)
  void dump(jni.JlString prefix, jni.JlObject fd, jni.JlObject writer,
          jni.JlObject args) =>
      _dump(reference, prefix.reference, fd.reference, writer.reference,
          args.reference);

  static final _enableDebugLogging =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Uint8)>>(
              "android_app_LoaderManager_enableDebugLogging")
          .asFunction<void Function(int)>();

  /// from: static public void enableDebugLogging(boolean enabled)
  static void enableDebugLogging(bool enabled) =>
      _enableDebugLogging(enabled ? 1 : 0);
}

class LoaderManager_LoaderCallbacks extends jni.JlObject {
  LoaderManager_LoaderCallbacks.fromRef(ffi.Pointer<ffi.Void> ref)
      : super.fromRef(ref);

  static final _onCreateLoader = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                      ffi.Int32, ffi.Pointer<ffi.Void>)>>(
          "android_app_LoaderManager__LoaderCallbacks_onCreateLoader")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, int, ffi.Pointer<ffi.Void>)>();

  /// from: public abstract android.content.Loader<D> onCreateLoader(int id, android.os.Bundle args)
  content.Loader onCreateLoader(int id, os.Bundle args) =>
      content.Loader.fromRef(_onCreateLoader(reference, id, args.reference));

  static final _onLoaderReset = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_LoaderManager__LoaderCallbacks_onLoaderReset")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public abstract void onLoaderReset(android.content.Loader<D> loader)
  void onLoaderReset(content.Loader loader) =>
      _onLoaderReset(reference, loader.reference);
}

class FragmentManager extends jni.JlObject {
  FragmentManager.fromRef(ffi.Pointer<ffi.Void> ref) : super.fromRef(ref);

  /// from: static public final int POP_BACK_STACK_INCLUSIVE
  static const POP_BACK_STACK_INCLUSIVE = 1;

  static final _ctor =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "android_app_FragmentManager_new")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();

  /// from: public void <init>()
  FragmentManager() : super.fromRef(_ctor());

  static final _beginTransaction = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_FragmentManager_beginTransaction")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public abstract android.app.FragmentTransaction beginTransaction()
  FragmentTransaction beginTransaction() =>
      FragmentTransaction.fromRef(_beginTransaction(reference));

  static final _executePendingTransactions =
      jlookup<ffi.NativeFunction<ffi.Uint8 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_FragmentManager_executePendingTransactions")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public abstract boolean executePendingTransactions()
  bool executePendingTransactions() =>
      _executePendingTransactions(reference) != 0;

  static final _findFragmentById = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_app_FragmentManager_findFragmentById")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public abstract android.app.Fragment findFragmentById(int id)
  Fragment findFragmentById(int id) =>
      Fragment.fromRef(_findFragmentById(reference, id));

  static final _findFragmentByTag = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_FragmentManager_findFragmentByTag")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public abstract android.app.Fragment findFragmentByTag(java.lang.String tag)
  Fragment findFragmentByTag(jni.JlString tag) =>
      Fragment.fromRef(_findFragmentByTag(reference, tag.reference));

  static final _popBackStack =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_FragmentManager_popBackStack")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: public abstract void popBackStack()
  void popBackStack() => _popBackStack(reference);

  static final _popBackStackImmediate =
      jlookup<ffi.NativeFunction<ffi.Uint8 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_FragmentManager_popBackStackImmediate")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public abstract boolean popBackStackImmediate()
  bool popBackStackImmediate() => _popBackStackImmediate(reference) != 0;

  static final _popBackStack_1 = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_app_FragmentManager_popBackStack_1")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public abstract void popBackStack(java.lang.String name, int flags)
  void popBackStack_1(jni.JlString name, int flags) =>
      _popBackStack_1(reference, name.reference, flags);

  static final _popBackStackImmediate_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Uint8 Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "android_app_FragmentManager_popBackStackImmediate_1")
      .asFunction<
          int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public abstract boolean popBackStackImmediate(java.lang.String name, int flags)
  bool popBackStackImmediate_1(jni.JlString name, int flags) =>
      _popBackStackImmediate_1(reference, name.reference, flags) != 0;

  static final _popBackStack_2 = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Int32,
                  ffi.Int32)>>("android_app_FragmentManager_popBackStack_2")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int, int)>();

  /// from: public abstract void popBackStack(int id, int flags)
  void popBackStack_2(int id, int flags) =>
      _popBackStack_2(reference, id, flags);

  static final _popBackStackImmediate_2 = jlookup<
              ffi.NativeFunction<
                  ffi.Uint8 Function(
                      ffi.Pointer<ffi.Void>, ffi.Int32, ffi.Int32)>>(
          "android_app_FragmentManager_popBackStackImmediate_2")
      .asFunction<int Function(ffi.Pointer<ffi.Void>, int, int)>();

  /// from: public abstract boolean popBackStackImmediate(int id, int flags)
  bool popBackStackImmediate_2(int id, int flags) =>
      _popBackStackImmediate_2(reference, id, flags) != 0;

  static final _getBackStackEntryCount =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_FragmentManager_getBackStackEntryCount")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public abstract int getBackStackEntryCount()
  int getBackStackEntryCount() => _getBackStackEntryCount(reference);

  static final _getBackStackEntryAt = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "android_app_FragmentManager_getBackStackEntryAt")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public abstract android.app.FragmentManager.BackStackEntry getBackStackEntryAt(int index)
  FragmentManager_BackStackEntry getBackStackEntryAt(int index) =>
      FragmentManager_BackStackEntry.fromRef(
          _getBackStackEntryAt(reference, index));

  static final _addOnBackStackChangedListener = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_FragmentManager_addOnBackStackChangedListener")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public abstract void addOnBackStackChangedListener(android.app.FragmentManager.OnBackStackChangedListener listener)
  void addOnBackStackChangedListener(
          FragmentManager_OnBackStackChangedListener listener) =>
      _addOnBackStackChangedListener(reference, listener.reference);

  static final _removeOnBackStackChangedListener = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_FragmentManager_removeOnBackStackChangedListener")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public abstract void removeOnBackStackChangedListener(android.app.FragmentManager.OnBackStackChangedListener listener)
  void removeOnBackStackChangedListener(
          FragmentManager_OnBackStackChangedListener listener) =>
      _removeOnBackStackChangedListener(reference, listener.reference);

  static final _putFragment = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>)>>(
          "android_app_FragmentManager_putFragment")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public abstract void putFragment(android.os.Bundle bundle, java.lang.String key, android.app.Fragment fragment)
  void putFragment(os.Bundle bundle, jni.JlString key, Fragment fragment) =>
      _putFragment(
          reference, bundle.reference, key.reference, fragment.reference);

  static final _getFragment = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_FragmentManager_getFragment")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public abstract android.app.Fragment getFragment(android.os.Bundle bundle, java.lang.String key)
  Fragment getFragment(os.Bundle bundle, jni.JlString key) => Fragment.fromRef(
      _getFragment(reference, bundle.reference, key.reference));

  static final _getFragments = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_FragmentManager_getFragments")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public abstract java.util.List<android.app.Fragment> getFragments()
  jni.JlObject getFragments() => jni.JlObject.fromRef(_getFragments(reference));

  static final _saveFragmentInstanceState = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_FragmentManager_saveFragmentInstanceState")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public abstract android.app.Fragment.SavedState saveFragmentInstanceState(android.app.Fragment f)
  Fragment_SavedState saveFragmentInstanceState(Fragment f) =>
      Fragment_SavedState.fromRef(
          _saveFragmentInstanceState(reference, f.reference));

  static final _isDestroyed =
      jlookup<ffi.NativeFunction<ffi.Uint8 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_FragmentManager_isDestroyed")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public abstract boolean isDestroyed()
  bool isDestroyed() => _isDestroyed(reference) != 0;

  static final _registerFragmentLifecycleCallbacks = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Uint8)>>(
          "android_app_FragmentManager_registerFragmentLifecycleCallbacks")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public abstract void registerFragmentLifecycleCallbacks(android.app.FragmentManager.FragmentLifecycleCallbacks cb, boolean recursive)
  void registerFragmentLifecycleCallbacks(
          FragmentManager_FragmentLifecycleCallbacks cb, bool recursive) =>
      _registerFragmentLifecycleCallbacks(
          reference, cb.reference, recursive ? 1 : 0);

  static final _unregisterFragmentLifecycleCallbacks = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_FragmentManager_unregisterFragmentLifecycleCallbacks")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public abstract void unregisterFragmentLifecycleCallbacks(android.app.FragmentManager.FragmentLifecycleCallbacks cb)
  void unregisterFragmentLifecycleCallbacks(
          FragmentManager_FragmentLifecycleCallbacks cb) =>
      _unregisterFragmentLifecycleCallbacks(reference, cb.reference);

  static final _getPrimaryNavigationFragment = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_FragmentManager_getPrimaryNavigationFragment")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public abstract android.app.Fragment getPrimaryNavigationFragment()
  Fragment getPrimaryNavigationFragment() =>
      Fragment.fromRef(_getPrimaryNavigationFragment(reference));

  static final _dump = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("android_app_FragmentManager_dump")
      .asFunction<
          void Function(
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public abstract void dump(java.lang.String prefix, java.io.FileDescriptor fd, java.io.PrintWriter writer, java.lang.String[] args)
  void dump(jni.JlString prefix, jni.JlObject fd, jni.JlObject writer,
          jni.JlObject args) =>
      _dump(reference, prefix.reference, fd.reference, writer.reference,
          args.reference);

  static final _enableDebugLogging =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Uint8)>>(
              "android_app_FragmentManager_enableDebugLogging")
          .asFunction<void Function(int)>();

  /// from: static public void enableDebugLogging(boolean enabled)
  static void enableDebugLogging(bool enabled) =>
      _enableDebugLogging(enabled ? 1 : 0);

  static final _invalidateOptionsMenu =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_FragmentManager_invalidateOptionsMenu")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void invalidateOptionsMenu()
  void invalidateOptionsMenu() => _invalidateOptionsMenu(reference);

  static final _isStateSaved =
      jlookup<ffi.NativeFunction<ffi.Uint8 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_FragmentManager_isStateSaved")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public abstract boolean isStateSaved()
  bool isStateSaved() => _isStateSaved(reference) != 0;
}

class FragmentManager_OnBackStackChangedListener extends jni.JlObject {
  FragmentManager_OnBackStackChangedListener.fromRef(ffi.Pointer<ffi.Void> ref)
      : super.fromRef(ref);

  static final _onBackStackChanged = jlookup<
              ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_FragmentManager__OnBackStackChangedListener_onBackStackChanged")
      .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: public abstract void onBackStackChanged()
  void onBackStackChanged() => _onBackStackChanged(reference);
}

class FragmentManager_FragmentLifecycleCallbacks extends jni.JlObject {
  FragmentManager_FragmentLifecycleCallbacks.fromRef(ffi.Pointer<ffi.Void> ref)
      : super.fromRef(ref);

  static final _ctor =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "android_app_FragmentManager__FragmentLifecycleCallbacks_new")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();

  /// from: public void <init>()
  FragmentManager_FragmentLifecycleCallbacks() : super.fromRef(_ctor());

  static final _onFragmentPreAttached = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>)>>(
          "android_app_FragmentManager__FragmentLifecycleCallbacks_onFragmentPreAttached")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void onFragmentPreAttached(android.app.FragmentManager fm, android.app.Fragment f, android.content.Context context)
  void onFragmentPreAttached(
          FragmentManager fm, Fragment f, content.Context context) =>
      _onFragmentPreAttached(
          reference, fm.reference, f.reference, context.reference);

  static final _onFragmentAttached = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>)>>(
          "android_app_FragmentManager__FragmentLifecycleCallbacks_onFragmentAttached")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void onFragmentAttached(android.app.FragmentManager fm, android.app.Fragment f, android.content.Context context)
  void onFragmentAttached(
          FragmentManager fm, Fragment f, content.Context context) =>
      _onFragmentAttached(
          reference, fm.reference, f.reference, context.reference);

  static final _onFragmentPreCreated = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>)>>(
          "android_app_FragmentManager__FragmentLifecycleCallbacks_onFragmentPreCreated")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void onFragmentPreCreated(android.app.FragmentManager fm, android.app.Fragment f, android.os.Bundle savedInstanceState)
  void onFragmentPreCreated(
          FragmentManager fm, Fragment f, os.Bundle savedInstanceState) =>
      _onFragmentPreCreated(
          reference, fm.reference, f.reference, savedInstanceState.reference);

  static final _onFragmentCreated = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>)>>(
          "android_app_FragmentManager__FragmentLifecycleCallbacks_onFragmentCreated")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void onFragmentCreated(android.app.FragmentManager fm, android.app.Fragment f, android.os.Bundle savedInstanceState)
  void onFragmentCreated(
          FragmentManager fm, Fragment f, os.Bundle savedInstanceState) =>
      _onFragmentCreated(
          reference, fm.reference, f.reference, savedInstanceState.reference);

  static final _onFragmentActivityCreated = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>)>>(
          "android_app_FragmentManager__FragmentLifecycleCallbacks_onFragmentActivityCreated")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void onFragmentActivityCreated(android.app.FragmentManager fm, android.app.Fragment f, android.os.Bundle savedInstanceState)
  void onFragmentActivityCreated(
          FragmentManager fm, Fragment f, os.Bundle savedInstanceState) =>
      _onFragmentActivityCreated(
          reference, fm.reference, f.reference, savedInstanceState.reference);

  static final _onFragmentViewCreated = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>)>>(
          "android_app_FragmentManager__FragmentLifecycleCallbacks_onFragmentViewCreated")
      .asFunction<
          void Function(
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public void onFragmentViewCreated(android.app.FragmentManager fm, android.app.Fragment f, android.view.View v, android.os.Bundle savedInstanceState)
  void onFragmentViewCreated(FragmentManager fm, Fragment f, jni.JlObject v,
          os.Bundle savedInstanceState) =>
      _onFragmentViewCreated(reference, fm.reference, f.reference, v.reference,
          savedInstanceState.reference);

  static final _onFragmentStarted = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_FragmentManager__FragmentLifecycleCallbacks_onFragmentStarted")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public void onFragmentStarted(android.app.FragmentManager fm, android.app.Fragment f)
  void onFragmentStarted(FragmentManager fm, Fragment f) =>
      _onFragmentStarted(reference, fm.reference, f.reference);

  static final _onFragmentResumed = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_FragmentManager__FragmentLifecycleCallbacks_onFragmentResumed")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public void onFragmentResumed(android.app.FragmentManager fm, android.app.Fragment f)
  void onFragmentResumed(FragmentManager fm, Fragment f) =>
      _onFragmentResumed(reference, fm.reference, f.reference);

  static final _onFragmentPaused = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_FragmentManager__FragmentLifecycleCallbacks_onFragmentPaused")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public void onFragmentPaused(android.app.FragmentManager fm, android.app.Fragment f)
  void onFragmentPaused(FragmentManager fm, Fragment f) =>
      _onFragmentPaused(reference, fm.reference, f.reference);

  static final _onFragmentStopped = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_FragmentManager__FragmentLifecycleCallbacks_onFragmentStopped")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public void onFragmentStopped(android.app.FragmentManager fm, android.app.Fragment f)
  void onFragmentStopped(FragmentManager fm, Fragment f) =>
      _onFragmentStopped(reference, fm.reference, f.reference);

  static final _onFragmentSaveInstanceState = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>)>>(
          "android_app_FragmentManager__FragmentLifecycleCallbacks_onFragmentSaveInstanceState")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void onFragmentSaveInstanceState(android.app.FragmentManager fm, android.app.Fragment f, android.os.Bundle outState)
  void onFragmentSaveInstanceState(
          FragmentManager fm, Fragment f, os.Bundle outState) =>
      _onFragmentSaveInstanceState(
          reference, fm.reference, f.reference, outState.reference);

  static final _onFragmentViewDestroyed = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_FragmentManager__FragmentLifecycleCallbacks_onFragmentViewDestroyed")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public void onFragmentViewDestroyed(android.app.FragmentManager fm, android.app.Fragment f)
  void onFragmentViewDestroyed(FragmentManager fm, Fragment f) =>
      _onFragmentViewDestroyed(reference, fm.reference, f.reference);

  static final _onFragmentDestroyed = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_FragmentManager__FragmentLifecycleCallbacks_onFragmentDestroyed")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public void onFragmentDestroyed(android.app.FragmentManager fm, android.app.Fragment f)
  void onFragmentDestroyed(FragmentManager fm, Fragment f) =>
      _onFragmentDestroyed(reference, fm.reference, f.reference);

  static final _onFragmentDetached = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_FragmentManager__FragmentLifecycleCallbacks_onFragmentDetached")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public void onFragmentDetached(android.app.FragmentManager fm, android.app.Fragment f)
  void onFragmentDetached(FragmentManager fm, Fragment f) =>
      _onFragmentDetached(reference, fm.reference, f.reference);
}

class FragmentManager_BackStackEntry extends jni.JlObject {
  FragmentManager_BackStackEntry.fromRef(ffi.Pointer<ffi.Void> ref)
      : super.fromRef(ref);

  static final _getId =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_FragmentManager__BackStackEntry_getId")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public abstract int getId()
  int getId() => _getId(reference);

  static final _getName = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_FragmentManager__BackStackEntry_getName")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public abstract java.lang.String getName()
  jni.JlString getName() => jni.JlString.fromRef(_getName(reference));

  static final _getBreadCrumbTitleRes = jlookup<
              ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_FragmentManager__BackStackEntry_getBreadCrumbTitleRes")
      .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public abstract int getBreadCrumbTitleRes()
  int getBreadCrumbTitleRes() => _getBreadCrumbTitleRes(reference);

  static final _getBreadCrumbShortTitleRes = jlookup<
              ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_FragmentManager__BackStackEntry_getBreadCrumbShortTitleRes")
      .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public abstract int getBreadCrumbShortTitleRes()
  int getBreadCrumbShortTitleRes() => _getBreadCrumbShortTitleRes(reference);

  static final _getBreadCrumbTitle = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_FragmentManager__BackStackEntry_getBreadCrumbTitle")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public abstract java.lang.CharSequence getBreadCrumbTitle()
  jni.JlObject getBreadCrumbTitle() =>
      jni.JlObject.fromRef(_getBreadCrumbTitle(reference));

  static final _getBreadCrumbShortTitle = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_FragmentManager__BackStackEntry_getBreadCrumbShortTitle")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public abstract java.lang.CharSequence getBreadCrumbShortTitle()
  jni.JlObject getBreadCrumbShortTitle() =>
      jni.JlObject.fromRef(_getBreadCrumbShortTitle(reference));
}

class DownloadManager extends jni.JlObject {
  DownloadManager.fromRef(ffi.Pointer<ffi.Void> ref) : super.fromRef(ref);

  /// from: static public final java.lang.String ACTION_DOWNLOAD_COMPLETE
  static const ACTION_DOWNLOAD_COMPLETE =
      "android.intent.action.DOWNLOAD_COMPLETE";

  /// from: static public final java.lang.String ACTION_NOTIFICATION_CLICKED
  static const ACTION_NOTIFICATION_CLICKED =
      "android.intent.action.DOWNLOAD_NOTIFICATION_CLICKED";

  /// from: static public final java.lang.String ACTION_VIEW_DOWNLOADS
  static const ACTION_VIEW_DOWNLOADS = "android.intent.action.VIEW_DOWNLOADS";

  /// from: static public final java.lang.String COLUMN_BYTES_DOWNLOADED_SO_FAR
  static const COLUMN_BYTES_DOWNLOADED_SO_FAR = "bytes_so_far";

  /// from: static public final java.lang.String COLUMN_DESCRIPTION
  static const COLUMN_DESCRIPTION = "description";

  /// from: static public final java.lang.String COLUMN_ID
  static const COLUMN_ID = "_id";

  /// from: static public final java.lang.String COLUMN_LAST_MODIFIED_TIMESTAMP
  static const COLUMN_LAST_MODIFIED_TIMESTAMP = "last_modified_timestamp";

  /// from: static public final java.lang.String COLUMN_LOCAL_FILENAME
  static const COLUMN_LOCAL_FILENAME = "local_filename";

  /// from: static public final java.lang.String COLUMN_LOCAL_URI
  static const COLUMN_LOCAL_URI = "local_uri";

  /// from: static public final java.lang.String COLUMN_MEDIAPROVIDER_URI
  static const COLUMN_MEDIAPROVIDER_URI = "mediaprovider_uri";

  /// from: static public final java.lang.String COLUMN_MEDIA_TYPE
  static const COLUMN_MEDIA_TYPE = "media_type";

  /// from: static public final java.lang.String COLUMN_REASON
  static const COLUMN_REASON = "reason";

  /// from: static public final java.lang.String COLUMN_STATUS
  static const COLUMN_STATUS = "status";

  /// from: static public final java.lang.String COLUMN_TITLE
  static const COLUMN_TITLE = "title";

  /// from: static public final java.lang.String COLUMN_TOTAL_SIZE_BYTES
  static const COLUMN_TOTAL_SIZE_BYTES = "total_size";

  /// from: static public final java.lang.String COLUMN_URI
  static const COLUMN_URI = "uri";

  /// from: static public final int ERROR_CANNOT_RESUME
  static const ERROR_CANNOT_RESUME = 1008;

  /// from: static public final int ERROR_DEVICE_NOT_FOUND
  static const ERROR_DEVICE_NOT_FOUND = 1007;

  /// from: static public final int ERROR_FILE_ALREADY_EXISTS
  static const ERROR_FILE_ALREADY_EXISTS = 1009;

  /// from: static public final int ERROR_FILE_ERROR
  static const ERROR_FILE_ERROR = 1001;

  /// from: static public final int ERROR_HTTP_DATA_ERROR
  static const ERROR_HTTP_DATA_ERROR = 1004;

  /// from: static public final int ERROR_INSUFFICIENT_SPACE
  static const ERROR_INSUFFICIENT_SPACE = 1006;

  /// from: static public final int ERROR_TOO_MANY_REDIRECTS
  static const ERROR_TOO_MANY_REDIRECTS = 1005;

  /// from: static public final int ERROR_UNHANDLED_HTTP_CODE
  static const ERROR_UNHANDLED_HTTP_CODE = 1002;

  /// from: static public final int ERROR_UNKNOWN
  static const ERROR_UNKNOWN = 1000;

  /// from: static public final java.lang.String EXTRA_DOWNLOAD_ID
  static const EXTRA_DOWNLOAD_ID = "extra_download_id";

  /// from: static public final java.lang.String EXTRA_NOTIFICATION_CLICK_DOWNLOAD_IDS
  static const EXTRA_NOTIFICATION_CLICK_DOWNLOAD_IDS =
      "extra_click_download_ids";

  /// from: static public final java.lang.String INTENT_EXTRAS_SORT_BY_SIZE
  static const INTENT_EXTRAS_SORT_BY_SIZE =
      "android.app.DownloadManager.extra_sortBySize";

  /// from: static public final int PAUSED_QUEUED_FOR_WIFI
  static const PAUSED_QUEUED_FOR_WIFI = 3;

  /// from: static public final int PAUSED_UNKNOWN
  static const PAUSED_UNKNOWN = 4;

  /// from: static public final int PAUSED_WAITING_FOR_NETWORK
  static const PAUSED_WAITING_FOR_NETWORK = 2;

  /// from: static public final int PAUSED_WAITING_TO_RETRY
  static const PAUSED_WAITING_TO_RETRY = 1;

  /// from: static public final int STATUS_FAILED
  static const STATUS_FAILED = 16;

  /// from: static public final int STATUS_PAUSED
  static const STATUS_PAUSED = 4;

  /// from: static public final int STATUS_PENDING
  static const STATUS_PENDING = 1;

  /// from: static public final int STATUS_RUNNING
  static const STATUS_RUNNING = 2;

  /// from: static public final int STATUS_SUCCESSFUL
  static const STATUS_SUCCESSFUL = 8;

  static final _ctor = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
                  ffi.Pointer<ffi.Void>)>>("android_app_DownloadManager_new")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: void <init>(android.content.Context context)
  DownloadManager(content.Context context)
      : super.fromRef(_ctor(context.reference));

  static final _enqueue = jlookup<
              ffi.NativeFunction<
                  ffi.Int64 Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_DownloadManager_enqueue")
      .asFunction<int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public long enqueue(android.app.DownloadManager.Request request)
  int enqueue(DownloadManager_Request request) =>
      _enqueue(reference, request.reference);

  static final _remove = jlookup<
          ffi.NativeFunction<
              ffi.Int32 Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("android_app_DownloadManager_remove")
      .asFunction<int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public int remove(long[] ids)
  int remove(jni.JlObject ids) => _remove(reference, ids.reference);

  static final _query = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("android_app_DownloadManager_query")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.database.Cursor query(android.app.DownloadManager.Query query)
  jni.JlObject query(DownloadManager_Query query_) =>
      jni.JlObject.fromRef(_query(reference, query_.reference));

  static final _openDownloadedFile = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                  ffi.Int64)>>("android_app_DownloadManager_openDownloadedFile")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public android.os.ParcelFileDescriptor openDownloadedFile(long id)
  os.ParcelFileDescriptor openDownloadedFile(int id) =>
      os.ParcelFileDescriptor.fromRef(_openDownloadedFile(reference, id));

  static final _getUriForDownloadedFile = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Int64)>>(
          "android_app_DownloadManager_getUriForDownloadedFile")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public android.net.Uri getUriForDownloadedFile(long id)
  jni.JlObject getUriForDownloadedFile(int id) =>
      jni.JlObject.fromRef(_getUriForDownloadedFile(reference, id));

  static final _getMimeTypeForDownloadedFile = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Int64)>>(
          "android_app_DownloadManager_getMimeTypeForDownloadedFile")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public java.lang.String getMimeTypeForDownloadedFile(long id)
  jni.JlString getMimeTypeForDownloadedFile(int id) =>
      jni.JlString.fromRef(_getMimeTypeForDownloadedFile(reference, id));

  static final _getMaxBytesOverMobile = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_DownloadManager_getMaxBytesOverMobile")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: static public java.lang.Long getMaxBytesOverMobile(android.content.Context context)
  static jni.JlObject getMaxBytesOverMobile(content.Context context) =>
      jni.JlObject.fromRef(_getMaxBytesOverMobile(context.reference));

  static final _getRecommendedMaxBytesOverMobile = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_DownloadManager_getRecommendedMaxBytesOverMobile")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: static public java.lang.Long getRecommendedMaxBytesOverMobile(android.content.Context context)
  static jni.JlObject getRecommendedMaxBytesOverMobile(
          content.Context context) =>
      jni.JlObject.fromRef(
          _getRecommendedMaxBytesOverMobile(context.reference));

  static final _addCompletedDownload = jlookup<
              ffi.NativeFunction<
                  ffi.Int64 Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Uint8,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Int64,
                      ffi.Uint8)>>(
          "android_app_DownloadManager_addCompletedDownload")
      .asFunction<
          int Function(
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              int,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              int,
              int)>();

  /// from: public long addCompletedDownload(java.lang.String title, java.lang.String description, boolean isMediaScannerScannable, java.lang.String mimeType, java.lang.String path, long length, boolean showNotification)
  int addCompletedDownload(
          jni.JlString title,
          jni.JlString description,
          bool isMediaScannerScannable,
          jni.JlString mimeType,
          jni.JlString path,
          int length,
          bool showNotification) =>
      _addCompletedDownload(
          reference,
          title.reference,
          description.reference,
          isMediaScannerScannable ? 1 : 0,
          mimeType.reference,
          path.reference,
          length,
          showNotification ? 1 : 0);

  static final _addCompletedDownload_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Int64 Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Uint8,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Int64,
                      ffi.Uint8,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>)>>(
          "android_app_DownloadManager_addCompletedDownload_1")
      .asFunction<
          int Function(
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              int,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              int,
              int,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public long addCompletedDownload(java.lang.String title, java.lang.String description, boolean isMediaScannerScannable, java.lang.String mimeType, java.lang.String path, long length, boolean showNotification, android.net.Uri uri, android.net.Uri referer)
  int addCompletedDownload_1(
          jni.JlString title,
          jni.JlString description,
          bool isMediaScannerScannable,
          jni.JlString mimeType,
          jni.JlString path,
          int length,
          bool showNotification,
          jni.JlObject uri,
          jni.JlObject referer) =>
      _addCompletedDownload_1(
          reference,
          title.reference,
          description.reference,
          isMediaScannerScannable ? 1 : 0,
          mimeType.reference,
          path.reference,
          length,
          showNotification ? 1 : 0,
          uri.reference,
          referer.reference);
}

class DownloadManager_Request extends jni.JlObject {
  DownloadManager_Request.fromRef(ffi.Pointer<ffi.Void> ref)
      : super.fromRef(ref);

  /// from: static public final int NETWORK_MOBILE
  static const NETWORK_MOBILE = 1;

  /// from: static public final int NETWORK_WIFI
  static const NETWORK_WIFI = 2;

  /// from: static public final int VISIBILITY_HIDDEN
  static const VISIBILITY_HIDDEN = 2;

  /// from: static public final int VISIBILITY_VISIBLE
  static const VISIBILITY_VISIBLE = 0;

  /// from: static public final int VISIBILITY_VISIBLE_NOTIFY_COMPLETED
  static const VISIBILITY_VISIBLE_NOTIFY_COMPLETED = 1;

  /// from: static public final int VISIBILITY_VISIBLE_NOTIFY_ONLY_COMPLETION
  static const VISIBILITY_VISIBLE_NOTIFY_ONLY_COMPLETION = 3;

  static final _ctor = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_DownloadManager__Request_new")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void <init>(android.net.Uri uri)
  DownloadManager_Request(jni.JlObject uri)
      : super.fromRef(_ctor(uri.reference));

  static final _setDestinationUri = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_DownloadManager__Request_setDestinationUri")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.DownloadManager.Request setDestinationUri(android.net.Uri uri)
  DownloadManager_Request setDestinationUri(jni.JlObject uri) =>
      DownloadManager_Request.fromRef(
          _setDestinationUri(reference, uri.reference));

  static final _setDestinationInExternalFilesDir = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>)>>(
          "android_app_DownloadManager__Request_setDestinationInExternalFilesDir")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.DownloadManager.Request setDestinationInExternalFilesDir(android.content.Context context, java.lang.String dirType, java.lang.String subPath)
  DownloadManager_Request setDestinationInExternalFilesDir(
          content.Context context,
          jni.JlString dirType,
          jni.JlString subPath) =>
      DownloadManager_Request.fromRef(_setDestinationInExternalFilesDir(
          reference, context.reference, dirType.reference, subPath.reference));

  static final _setDestinationInExternalPublicDir = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_DownloadManager__Request_setDestinationInExternalPublicDir")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.DownloadManager.Request setDestinationInExternalPublicDir(java.lang.String dirType, java.lang.String subPath)
  DownloadManager_Request setDestinationInExternalPublicDir(
          jni.JlString dirType, jni.JlString subPath) =>
      DownloadManager_Request.fromRef(_setDestinationInExternalPublicDir(
          reference, dirType.reference, subPath.reference));

  static final _allowScanningByMediaScanner = jlookup<
              ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_DownloadManager__Request_allowScanningByMediaScanner")
      .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void allowScanningByMediaScanner()
  void allowScanningByMediaScanner() => _allowScanningByMediaScanner(reference);

  static final _addRequestHeader = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_DownloadManager__Request_addRequestHeader")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.DownloadManager.Request addRequestHeader(java.lang.String header, java.lang.String value)
  DownloadManager_Request addRequestHeader(
          jni.JlString header, jni.JlString value) =>
      DownloadManager_Request.fromRef(
          _addRequestHeader(reference, header.reference, value.reference));

  static final _setTitle = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_DownloadManager__Request_setTitle")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.DownloadManager.Request setTitle(java.lang.CharSequence title)
  DownloadManager_Request setTitle(jni.JlObject title) =>
      DownloadManager_Request.fromRef(_setTitle(reference, title.reference));

  static final _setDescription = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_DownloadManager__Request_setDescription")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.DownloadManager.Request setDescription(java.lang.CharSequence description)
  DownloadManager_Request setDescription(jni.JlObject description) =>
      DownloadManager_Request.fromRef(
          _setDescription(reference, description.reference));

  static final _setMimeType = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_DownloadManager__Request_setMimeType")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.DownloadManager.Request setMimeType(java.lang.String mimeType)
  DownloadManager_Request setMimeType(jni.JlString mimeType) =>
      DownloadManager_Request.fromRef(
          _setMimeType(reference, mimeType.reference));

  static final _setShowRunningNotification = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Uint8)>>(
          "android_app_DownloadManager__Request_setShowRunningNotification")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public android.app.DownloadManager.Request setShowRunningNotification(boolean show)
  DownloadManager_Request setShowRunningNotification(bool show_) =>
      DownloadManager_Request.fromRef(
          _setShowRunningNotification(reference, show_ ? 1 : 0));

  static final _setNotificationVisibility = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "android_app_DownloadManager__Request_setNotificationVisibility")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public android.app.DownloadManager.Request setNotificationVisibility(int visibility)
  DownloadManager_Request setNotificationVisibility(int visibility) =>
      DownloadManager_Request.fromRef(
          _setNotificationVisibility(reference, visibility));

  static final _setAllowedNetworkTypes = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "android_app_DownloadManager__Request_setAllowedNetworkTypes")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public android.app.DownloadManager.Request setAllowedNetworkTypes(int flags)
  DownloadManager_Request setAllowedNetworkTypes(int flags) =>
      DownloadManager_Request.fromRef(
          _setAllowedNetworkTypes(reference, flags));

  static final _setAllowedOverRoaming = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Uint8)>>(
          "android_app_DownloadManager__Request_setAllowedOverRoaming")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public android.app.DownloadManager.Request setAllowedOverRoaming(boolean allowed)
  DownloadManager_Request setAllowedOverRoaming(bool allowed) =>
      DownloadManager_Request.fromRef(
          _setAllowedOverRoaming(reference, allowed ? 1 : 0));

  static final _setAllowedOverMetered = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Uint8)>>(
          "android_app_DownloadManager__Request_setAllowedOverMetered")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public android.app.DownloadManager.Request setAllowedOverMetered(boolean allow)
  DownloadManager_Request setAllowedOverMetered(bool allow) =>
      DownloadManager_Request.fromRef(
          _setAllowedOverMetered(reference, allow ? 1 : 0));

  static final _setRequiresCharging = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Uint8)>>(
          "android_app_DownloadManager__Request_setRequiresCharging")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public android.app.DownloadManager.Request setRequiresCharging(boolean requiresCharging)
  DownloadManager_Request setRequiresCharging(bool requiresCharging) =>
      DownloadManager_Request.fromRef(
          _setRequiresCharging(reference, requiresCharging ? 1 : 0));

  static final _setRequiresDeviceIdle = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Uint8)>>(
          "android_app_DownloadManager__Request_setRequiresDeviceIdle")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public android.app.DownloadManager.Request setRequiresDeviceIdle(boolean requiresDeviceIdle)
  DownloadManager_Request setRequiresDeviceIdle(bool requiresDeviceIdle) =>
      DownloadManager_Request.fromRef(
          _setRequiresDeviceIdle(reference, requiresDeviceIdle ? 1 : 0));

  static final _setVisibleInDownloadsUi = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Uint8)>>(
          "android_app_DownloadManager__Request_setVisibleInDownloadsUi")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public android.app.DownloadManager.Request setVisibleInDownloadsUi(boolean isVisible)
  DownloadManager_Request setVisibleInDownloadsUi(bool isVisible) =>
      DownloadManager_Request.fromRef(
          _setVisibleInDownloadsUi(reference, isVisible ? 1 : 0));
}

class DownloadManager_Query extends jni.JlObject {
  DownloadManager_Query.fromRef(ffi.Pointer<ffi.Void> ref) : super.fromRef(ref);

  static final _ctor =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "android_app_DownloadManager__Query_new")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();

  /// from: public void <init>()
  DownloadManager_Query() : super.fromRef(_ctor());

  static final _setFilterById = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_DownloadManager__Query_setFilterById")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.DownloadManager.Query setFilterById(long[] ids)
  DownloadManager_Query setFilterById(jni.JlObject ids) =>
      DownloadManager_Query.fromRef(_setFilterById(reference, ids.reference));

  static final _setFilterByStatus = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "android_app_DownloadManager__Query_setFilterByStatus")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public android.app.DownloadManager.Query setFilterByStatus(int flags)
  DownloadManager_Query setFilterByStatus(int flags) =>
      DownloadManager_Query.fromRef(_setFilterByStatus(reference, flags));
}

class ListActivity extends Activity {
  ListActivity.fromRef(ffi.Pointer<ffi.Void> ref) : super.fromRef(ref);

  static final _ctor =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "android_app_ListActivity_new")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();

  /// from: public void <init>()
  ListActivity() : super.fromRef(_ctor());

  static final _onListItemClick = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Int32,
                  ffi.Int64)>>("android_app_ListActivity_onListItemClick")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, int, int)>();

  /// from: protected void onListItemClick(android.widget.ListView l, android.view.View v, int position, long id)
  void onListItemClick(jni.JlObject l, jni.JlObject v, int position, int id) =>
      _onListItemClick(reference, l.reference, v.reference, position, id);

  static final _onRestoreInstanceState = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_ListActivity_onRestoreInstanceState")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: protected void onRestoreInstanceState(android.os.Bundle state)
  void onRestoreInstanceState(os.Bundle state) =>
      _onRestoreInstanceState(reference, state.reference);

  static final _onDestroy =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_ListActivity_onDestroy")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: protected void onDestroy()
  void onDestroy() => _onDestroy(reference);

  static final _onContentChanged =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_ListActivity_onContentChanged")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void onContentChanged()
  void onContentChanged() => _onContentChanged(reference);

  static final _setListAdapter = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_ListActivity_setListAdapter")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void setListAdapter(android.widget.ListAdapter adapter)
  void setListAdapter(jni.JlObject adapter) =>
      _setListAdapter(reference, adapter.reference);

  static final _setSelection = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_app_ListActivity_setSelection")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public void setSelection(int position)
  void setSelection(int position) => _setSelection(reference, position);

  static final _getSelectedItemPosition =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_ListActivity_getSelectedItemPosition")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int getSelectedItemPosition()
  int getSelectedItemPosition() => _getSelectedItemPosition(reference);

  static final _getSelectedItemId =
      jlookup<ffi.NativeFunction<ffi.Int64 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_ListActivity_getSelectedItemId")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public long getSelectedItemId()
  int getSelectedItemId() => _getSelectedItemId(reference);

  static final _getListView = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_ListActivity_getListView")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.widget.ListView getListView()
  jni.JlObject getListView() => jni.JlObject.fromRef(_getListView(reference));

  static final _getListAdapter = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_ListActivity_getListAdapter")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.widget.ListAdapter getListAdapter()
  jni.JlObject getListAdapter() =>
      jni.JlObject.fromRef(_getListAdapter(reference));
}

class FragmentContainer extends jni.JlObject {
  FragmentContainer.fromRef(ffi.Pointer<ffi.Void> ref) : super.fromRef(ref);

  static final _ctor =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "android_app_FragmentContainer_new")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();

  /// from: public void <init>()
  FragmentContainer() : super.fromRef(_ctor());

  static final _onHasView =
      jlookup<ffi.NativeFunction<ffi.Uint8 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_FragmentContainer_onHasView")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public abstract boolean onHasView()
  bool onHasView() => _onHasView(reference) != 0;
}

class Person extends jni.JlObject {
  Person.fromRef(ffi.Pointer<ffi.Void> ref) : super.fromRef(ref);

  /// from: static public final android.os.Parcelable.Creator<android.app.Person> CREATOR
  static final _getCREATOR =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "get_android_app_Person_CREATOR")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();
  static os.Parcelable_Creator get CREATOR =>
      os.Parcelable_Creator.fromRef(_getCREATOR());

  static final _ctor = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
                  ffi.Pointer<ffi.Void>)>>("android_app_Person_new")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: void <init>(android.os.Parcel in)
  Person(os.Parcel in_) : super.fromRef(_ctor(in_.reference));

  static final _toBuilder = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
                  ffi.Pointer<ffi.Void>)>>("android_app_Person_toBuilder")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.Person.Builder toBuilder()
  Person_Builder toBuilder() => Person_Builder.fromRef(_toBuilder(reference));

  static final _getUri = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
                  ffi.Pointer<ffi.Void>)>>("android_app_Person_getUri")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.String getUri()
  jni.JlString getUri() => jni.JlString.fromRef(_getUri(reference));

  static final _getName = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
                  ffi.Pointer<ffi.Void>)>>("android_app_Person_getName")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.CharSequence getName()
  jni.JlObject getName() => jni.JlObject.fromRef(_getName(reference));

  static final _getIcon = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
                  ffi.Pointer<ffi.Void>)>>("android_app_Person_getIcon")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.graphics.drawable.Icon getIcon()
  jni.JlObject getIcon() => jni.JlObject.fromRef(_getIcon(reference));

  static final _getKey = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
                  ffi.Pointer<ffi.Void>)>>("android_app_Person_getKey")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.String getKey()
  jni.JlString getKey() => jni.JlString.fromRef(_getKey(reference));

  static final _isBot =
      jlookup<ffi.NativeFunction<ffi.Uint8 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_Person_isBot")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public boolean isBot()
  bool isBot() => _isBot(reference) != 0;

  static final _isImportant =
      jlookup<ffi.NativeFunction<ffi.Uint8 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_Person_isImportant")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public boolean isImportant()
  bool isImportant() => _isImportant(reference) != 0;

  static final _describeContents =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_Person_describeContents")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int describeContents()
  int describeContents() => _describeContents(reference);

  static final _writeToParcel = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_app_Person_writeToParcel")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public void writeToParcel(android.os.Parcel dest, int flags)
  void writeToParcel(os.Parcel dest, int flags) =>
      _writeToParcel(reference, dest.reference, flags);
}

class Person_Builder extends jni.JlObject {
  Person_Builder.fromRef(ffi.Pointer<ffi.Void> ref) : super.fromRef(ref);

  static final _ctor =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "android_app_Person__Builder_new")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();

  /// from: public void <init>()
  Person_Builder() : super.fromRef(_ctor());

  static final _setName = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Person__Builder_setName")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.Person.Builder setName(java.lang.CharSequence name)
  Person_Builder setName(jni.JlObject name) =>
      Person_Builder.fromRef(_setName(reference, name.reference));

  static final _setIcon = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Person__Builder_setIcon")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.Person.Builder setIcon(android.graphics.drawable.Icon icon)
  Person_Builder setIcon(jni.JlObject icon) =>
      Person_Builder.fromRef(_setIcon(reference, icon.reference));

  static final _setUri = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("android_app_Person__Builder_setUri")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.Person.Builder setUri(java.lang.String uri)
  Person_Builder setUri(jni.JlString uri) =>
      Person_Builder.fromRef(_setUri(reference, uri.reference));

  static final _setKey = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("android_app_Person__Builder_setKey")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.Person.Builder setKey(java.lang.String key)
  Person_Builder setKey(jni.JlString key) =>
      Person_Builder.fromRef(_setKey(reference, key.reference));

  static final _setImportant = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                  ffi.Uint8)>>("android_app_Person__Builder_setImportant")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public android.app.Person.Builder setImportant(boolean isImportant)
  Person_Builder setImportant(bool isImportant) =>
      Person_Builder.fromRef(_setImportant(reference, isImportant ? 1 : 0));

  static final _setBot = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                  ffi.Uint8)>>("android_app_Person__Builder_setBot")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public android.app.Person.Builder setBot(boolean isBot)
  Person_Builder setBot(bool isBot) =>
      Person_Builder.fromRef(_setBot(reference, isBot ? 1 : 0));

  static final _build = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
                  ffi.Pointer<ffi.Void>)>>("android_app_Person__Builder_build")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.Person build()
  Person build() => Person.fromRef(_build(reference));
}

class VoiceInteractor extends jni.JlObject {
  VoiceInteractor.fromRef(ffi.Pointer<ffi.Void> ref) : super.fromRef(ref);

  static final _ctor =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "android_app_VoiceInteractor_new")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();

  /// from: void <init>()
  VoiceInteractor() : super.fromRef(_ctor());

  static final _submitRequest = jlookup<
              ffi.NativeFunction<
                  ffi.Uint8 Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_VoiceInteractor_submitRequest")
      .asFunction<int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public boolean submitRequest(android.app.VoiceInteractor.Request request)
  bool submitRequest(VoiceInteractor_Request request) =>
      _submitRequest(reference, request.reference) != 0;

  static final _submitRequest_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Uint8 Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_VoiceInteractor_submitRequest_1")
      .asFunction<
          int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public boolean submitRequest(android.app.VoiceInteractor.Request request, java.lang.String name)
  bool submitRequest_1(VoiceInteractor_Request request, jni.JlString name) =>
      _submitRequest_1(reference, request.reference, name.reference) != 0;

  static final _getActiveRequests = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_VoiceInteractor_getActiveRequests")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.VoiceInteractor.Request[] getActiveRequests()
  jni.JlObject getActiveRequests() =>
      jni.JlObject.fromRef(_getActiveRequests(reference));

  static final _getActiveRequest = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_VoiceInteractor_getActiveRequest")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.VoiceInteractor.Request getActiveRequest(java.lang.String name)
  VoiceInteractor_Request getActiveRequest(jni.JlString name) =>
      VoiceInteractor_Request.fromRef(
          _getActiveRequest(reference, name.reference));

  static final _supportsCommands = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_VoiceInteractor_supportsCommands")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public boolean[] supportsCommands(java.lang.String[] commands)
  jni.JlObject supportsCommands(jni.JlObject commands) =>
      jni.JlObject.fromRef(_supportsCommands(reference, commands.reference));
}

class VoiceInteractor_Request extends jni.JlObject {
  VoiceInteractor_Request.fromRef(ffi.Pointer<ffi.Void> ref)
      : super.fromRef(ref);

  static final _ctor =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "android_app_VoiceInteractor__Request_new")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();

  /// from: void <init>()
  VoiceInteractor_Request() : super.fromRef(_ctor());

  static final _getName = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_VoiceInteractor__Request_getName")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.String getName()
  jni.JlString getName() => jni.JlString.fromRef(_getName(reference));

  static final _cancel =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_VoiceInteractor__Request_cancel")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void cancel()
  void cancel() => _cancel(reference);

  static final _getContext = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_VoiceInteractor__Request_getContext")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.content.Context getContext()
  content.Context getContext() =>
      content.Context.fromRef(_getContext(reference));

  static final _getActivity = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_VoiceInteractor__Request_getActivity")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.Activity getActivity()
  Activity getActivity() => Activity.fromRef(_getActivity(reference));

  static final _onCancel =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_VoiceInteractor__Request_onCancel")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void onCancel()
  void onCancel() => _onCancel(reference);

  static final _onAttached = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_VoiceInteractor__Request_onAttached")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void onAttached(android.app.Activity activity)
  void onAttached(Activity activity) =>
      _onAttached(reference, activity.reference);

  static final _onDetached =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_VoiceInteractor__Request_onDetached")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void onDetached()
  void onDetached() => _onDetached(reference);

  static final _toString_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_VoiceInteractor__Request_toString_1")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.String toString()
  jni.JlString toString_1() => jni.JlString.fromRef(_toString_1(reference));
}

class VoiceInteractor_Prompt extends jni.JlObject {
  VoiceInteractor_Prompt.fromRef(ffi.Pointer<ffi.Void> ref)
      : super.fromRef(ref);

  /// from: static public final android.os.Parcelable.Creator<android.app.VoiceInteractor.Prompt> CREATOR
  static final _getCREATOR =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "get_android_app_VoiceInteractor__Prompt_CREATOR")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();
  static os.Parcelable_Creator get CREATOR =>
      os.Parcelable_Creator.fromRef(_getCREATOR());

  static final _ctor = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_VoiceInteractor__Prompt_new")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void <init>(java.lang.CharSequence[] voicePrompts, java.lang.CharSequence visualPrompt)
  VoiceInteractor_Prompt(jni.JlObject voicePrompts, jni.JlObject visualPrompt)
      : super.fromRef(_ctor(voicePrompts.reference, visualPrompt.reference));

  static final _ctor_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_VoiceInteractor__Prompt_new_1")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void <init>(java.lang.CharSequence prompt)
  VoiceInteractor_Prompt.ctor_1(jni.JlObject prompt)
      : super.fromRef(_ctor_1(prompt.reference));

  static final _getVoicePromptAt = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "android_app_VoiceInteractor__Prompt_getVoicePromptAt")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public java.lang.CharSequence getVoicePromptAt(int index)
  jni.JlObject getVoicePromptAt(int index) =>
      jni.JlObject.fromRef(_getVoicePromptAt(reference, index));

  static final _countVoicePrompts =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_VoiceInteractor__Prompt_countVoicePrompts")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int countVoicePrompts()
  int countVoicePrompts() => _countVoicePrompts(reference);

  static final _getVisualPrompt = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_VoiceInteractor__Prompt_getVisualPrompt")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.CharSequence getVisualPrompt()
  jni.JlObject getVisualPrompt() =>
      jni.JlObject.fromRef(_getVisualPrompt(reference));

  static final _toString_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_VoiceInteractor__Prompt_toString_1")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.String toString()
  jni.JlString toString_1() => jni.JlString.fromRef(_toString_1(reference));

  static final _describeContents =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_VoiceInteractor__Prompt_describeContents")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int describeContents()
  int describeContents() => _describeContents(reference);

  static final _writeToParcel = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "android_app_VoiceInteractor__Prompt_writeToParcel")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public void writeToParcel(android.os.Parcel dest, int flags)
  void writeToParcel(os.Parcel dest, int flags) =>
      _writeToParcel(reference, dest.reference, flags);
}

class VoiceInteractor_PickOptionRequest extends VoiceInteractor_Request {
  VoiceInteractor_PickOptionRequest.fromRef(ffi.Pointer<ffi.Void> ref)
      : super.fromRef(ref);

  static final _ctor = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_VoiceInteractor__PickOptionRequest_new")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void <init>(android.app.VoiceInteractor.Prompt prompt, android.app.VoiceInteractor.PickOptionRequest.Option[] options, android.os.Bundle extras)
  VoiceInteractor_PickOptionRequest(
      VoiceInteractor_Prompt prompt, jni.JlObject options, os.Bundle extras)
      : super.fromRef(
            _ctor(prompt.reference, options.reference, extras.reference));

  static final _onPickOptionResult = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Uint8,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_VoiceInteractor__PickOptionRequest_onPickOptionResult")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, int, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public void onPickOptionResult(boolean finished, android.app.VoiceInteractor.PickOptionRequest.Option[] selections, android.os.Bundle result)
  void onPickOptionResult(
          bool finished, jni.JlObject selections, os.Bundle result) =>
      _onPickOptionResult(
          reference, finished ? 1 : 0, selections.reference, result.reference);
}

class VoiceInteractor_PickOptionRequest_Option extends jni.JlObject {
  VoiceInteractor_PickOptionRequest_Option.fromRef(ffi.Pointer<ffi.Void> ref)
      : super.fromRef(ref);

  /// from: static public final android.os.Parcelable.Creator<android.app.VoiceInteractor.PickOptionRequest.Option> CREATOR
  static final _getCREATOR = jlookup<
              ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
          "get_android_app_VoiceInteractor__PickOptionRequest__Option_CREATOR")
      .asFunction<ffi.Pointer<ffi.Void> Function()>();
  static os.Parcelable_Creator get CREATOR =>
      os.Parcelable_Creator.fromRef(_getCREATOR());

  static final _ctor = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "android_app_VoiceInteractor__PickOptionRequest__Option_new")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public void <init>(java.lang.CharSequence label, int index)
  VoiceInteractor_PickOptionRequest_Option(jni.JlObject label, int index)
      : super.fromRef(_ctor(label.reference, index));

  static final _addSynonym = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_VoiceInteractor__PickOptionRequest__Option_addSynonym")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.VoiceInteractor.PickOptionRequest.Option addSynonym(java.lang.CharSequence synonym)
  VoiceInteractor_PickOptionRequest_Option addSynonym(jni.JlObject synonym) =>
      VoiceInteractor_PickOptionRequest_Option.fromRef(
          _addSynonym(reference, synonym.reference));

  static final _getLabel = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_VoiceInteractor__PickOptionRequest__Option_getLabel")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.CharSequence getLabel()
  jni.JlObject getLabel() => jni.JlObject.fromRef(_getLabel(reference));

  static final _getIndex =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_VoiceInteractor__PickOptionRequest__Option_getIndex")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int getIndex()
  int getIndex() => _getIndex(reference);

  static final _countSynonyms = jlookup<
              ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_VoiceInteractor__PickOptionRequest__Option_countSynonyms")
      .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int countSynonyms()
  int countSynonyms() => _countSynonyms(reference);

  static final _getSynonymAt = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "android_app_VoiceInteractor__PickOptionRequest__Option_getSynonymAt")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public java.lang.CharSequence getSynonymAt(int index)
  jni.JlObject getSynonymAt(int index) =>
      jni.JlObject.fromRef(_getSynonymAt(reference, index));

  static final _setExtras = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_VoiceInteractor__PickOptionRequest__Option_setExtras")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void setExtras(android.os.Bundle extras)
  void setExtras(os.Bundle extras) => _setExtras(reference, extras.reference);

  static final _getExtras = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_VoiceInteractor__PickOptionRequest__Option_getExtras")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.os.Bundle getExtras()
  os.Bundle getExtras() => os.Bundle.fromRef(_getExtras(reference));

  static final _describeContents = jlookup<
              ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_VoiceInteractor__PickOptionRequest__Option_describeContents")
      .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int describeContents()
  int describeContents() => _describeContents(reference);

  static final _writeToParcel = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "android_app_VoiceInteractor__PickOptionRequest__Option_writeToParcel")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public void writeToParcel(android.os.Parcel dest, int flags)
  void writeToParcel(os.Parcel dest, int flags) =>
      _writeToParcel(reference, dest.reference, flags);
}

class VoiceInteractor_ConfirmationRequest extends VoiceInteractor_Request {
  VoiceInteractor_ConfirmationRequest.fromRef(ffi.Pointer<ffi.Void> ref)
      : super.fromRef(ref);

  static final _ctor = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_VoiceInteractor__ConfirmationRequest_new")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void <init>(android.app.VoiceInteractor.Prompt prompt, android.os.Bundle extras)
  VoiceInteractor_ConfirmationRequest(
      VoiceInteractor_Prompt prompt, os.Bundle extras)
      : super.fromRef(_ctor(prompt.reference, extras.reference));

  static final _onConfirmationResult = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Uint8,
                      ffi.Pointer<ffi.Void>)>>(
          "android_app_VoiceInteractor__ConfirmationRequest_onConfirmationResult")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, int, ffi.Pointer<ffi.Void>)>();

  /// from: public void onConfirmationResult(boolean confirmed, android.os.Bundle result)
  void onConfirmationResult(bool confirmed, os.Bundle result) =>
      _onConfirmationResult(reference, confirmed ? 1 : 0, result.reference);
}

class VoiceInteractor_CompleteVoiceRequest extends VoiceInteractor_Request {
  VoiceInteractor_CompleteVoiceRequest.fromRef(ffi.Pointer<ffi.Void> ref)
      : super.fromRef(ref);

  static final _ctor = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_VoiceInteractor__CompleteVoiceRequest_new")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void <init>(android.app.VoiceInteractor.Prompt prompt, android.os.Bundle extras)
  VoiceInteractor_CompleteVoiceRequest(
      VoiceInteractor_Prompt prompt, os.Bundle extras)
      : super.fromRef(_ctor(prompt.reference, extras.reference));

  static final _onCompleteResult = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_VoiceInteractor__CompleteVoiceRequest_onCompleteResult")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void onCompleteResult(android.os.Bundle result)
  void onCompleteResult(os.Bundle result) =>
      _onCompleteResult(reference, result.reference);
}

class VoiceInteractor_CommandRequest extends VoiceInteractor_Request {
  VoiceInteractor_CommandRequest.fromRef(ffi.Pointer<ffi.Void> ref)
      : super.fromRef(ref);

  static final _ctor = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_VoiceInteractor__CommandRequest_new")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void <init>(java.lang.String command, android.os.Bundle args)
  VoiceInteractor_CommandRequest(jni.JlString command, os.Bundle args)
      : super.fromRef(_ctor(command.reference, args.reference));

  static final _onCommandResult = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Uint8,
                      ffi.Pointer<ffi.Void>)>>(
          "android_app_VoiceInteractor__CommandRequest_onCommandResult")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, int, ffi.Pointer<ffi.Void>)>();

  /// from: public void onCommandResult(boolean isCompleted, android.os.Bundle result)
  void onCommandResult(bool isCompleted, os.Bundle result) =>
      _onCommandResult(reference, isCompleted ? 1 : 0, result.reference);
}

class VoiceInteractor_AbortVoiceRequest extends VoiceInteractor_Request {
  VoiceInteractor_AbortVoiceRequest.fromRef(ffi.Pointer<ffi.Void> ref)
      : super.fromRef(ref);

  static final _ctor = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_VoiceInteractor__AbortVoiceRequest_new")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void <init>(android.app.VoiceInteractor.Prompt prompt, android.os.Bundle extras)
  VoiceInteractor_AbortVoiceRequest(
      VoiceInteractor_Prompt prompt, os.Bundle extras)
      : super.fromRef(_ctor(prompt.reference, extras.reference));

  static final _onAbortResult = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_VoiceInteractor__AbortVoiceRequest_onAbortResult")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void onAbortResult(android.os.Bundle result)
  void onAbortResult(os.Bundle result) =>
      _onAbortResult(reference, result.reference);
}

class AlarmManager extends jni.JlObject {
  AlarmManager.fromRef(ffi.Pointer<ffi.Void> ref) : super.fromRef(ref);

  /// from: static public final java.lang.String ACTION_NEXT_ALARM_CLOCK_CHANGED
  static const ACTION_NEXT_ALARM_CLOCK_CHANGED =
      "android.app.action.NEXT_ALARM_CLOCK_CHANGED";

  /// from: static public final int ELAPSED_REALTIME
  static const ELAPSED_REALTIME = 3;

  /// from: static public final int ELAPSED_REALTIME_WAKEUP
  static const ELAPSED_REALTIME_WAKEUP = 2;

  /// from: static public final long INTERVAL_DAY
  static const INTERVAL_DAY = 86400000;

  /// from: static public final long INTERVAL_FIFTEEN_MINUTES
  static const INTERVAL_FIFTEEN_MINUTES = 900000;

  /// from: static public final long INTERVAL_HALF_DAY
  static const INTERVAL_HALF_DAY = 43200000;

  /// from: static public final long INTERVAL_HALF_HOUR
  static const INTERVAL_HALF_HOUR = 1800000;

  /// from: static public final long INTERVAL_HOUR
  static const INTERVAL_HOUR = 3600000;

  /// from: static public final int RTC
  static const RTC = 1;

  /// from: static public final int RTC_WAKEUP
  static const RTC_WAKEUP = 0;

  static final _ctor =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "android_app_AlarmManager_new")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();

  /// from: void <init>()
  AlarmManager() : super.fromRef(_ctor());

  static final _set_ = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Int32, ffi.Int64,
                  ffi.Pointer<ffi.Void>)>>("android_app_AlarmManager_set_")
      .asFunction<
          void Function(
              ffi.Pointer<ffi.Void>, int, int, ffi.Pointer<ffi.Void>)>();

  /// from: public void set(int type, long triggerAtMillis, android.app.PendingIntent operation)
  void set_(int type, int triggerAtMillis, PendingIntent operation) =>
      _set_(reference, type, triggerAtMillis, operation.reference);

  static final _set__1 = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Int32,
                  ffi.Int64,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("android_app_AlarmManager_set__1")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, int, int, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void set(int type, long triggerAtMillis, java.lang.String tag, android.app.AlarmManager.OnAlarmListener listener, android.os.Handler targetHandler)
  void set__1(int type, int triggerAtMillis, jni.JlString tag,
          AlarmManager_OnAlarmListener listener, os.Handler targetHandler) =>
      _set__1(reference, type, triggerAtMillis, tag.reference,
          listener.reference, targetHandler.reference);

  static final _setRepeating = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Int32, ffi.Int64,
                      ffi.Int64, ffi.Pointer<ffi.Void>)>>(
          "android_app_AlarmManager_setRepeating")
      .asFunction<
          void Function(
              ffi.Pointer<ffi.Void>, int, int, int, ffi.Pointer<ffi.Void>)>();

  /// from: public void setRepeating(int type, long triggerAtMillis, long intervalMillis, android.app.PendingIntent operation)
  void setRepeating(int type, int triggerAtMillis, int intervalMillis,
          PendingIntent operation) =>
      _setRepeating(reference, type, triggerAtMillis, intervalMillis,
          operation.reference);

  static final _setWindow = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Int32,
                  ffi.Int64,
                  ffi.Int64,
                  ffi.Pointer<ffi.Void>)>>("android_app_AlarmManager_setWindow")
      .asFunction<
          void Function(
              ffi.Pointer<ffi.Void>, int, int, int, ffi.Pointer<ffi.Void>)>();

  /// from: public void setWindow(int type, long windowStartMillis, long windowLengthMillis, android.app.PendingIntent operation)
  void setWindow(int type, int windowStartMillis, int windowLengthMillis,
          PendingIntent operation) =>
      _setWindow(reference, type, windowStartMillis, windowLengthMillis,
          operation.reference);

  static final _setWindow_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Int32,
                      ffi.Int64,
                      ffi.Int64,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>)>>(
          "android_app_AlarmManager_setWindow_1")
      .asFunction<
          void Function(
              ffi.Pointer<ffi.Void>,
              int,
              int,
              int,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public void setWindow(int type, long windowStartMillis, long windowLengthMillis, java.lang.String tag, android.app.AlarmManager.OnAlarmListener listener, android.os.Handler targetHandler)
  void setWindow_1(
          int type,
          int windowStartMillis,
          int windowLengthMillis,
          jni.JlString tag,
          AlarmManager_OnAlarmListener listener,
          os.Handler targetHandler) =>
      _setWindow_1(reference, type, windowStartMillis, windowLengthMillis,
          tag.reference, listener.reference, targetHandler.reference);

  static final _setExact = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Int32, ffi.Int64,
                  ffi.Pointer<ffi.Void>)>>("android_app_AlarmManager_setExact")
      .asFunction<
          void Function(
              ffi.Pointer<ffi.Void>, int, int, ffi.Pointer<ffi.Void>)>();

  /// from: public void setExact(int type, long triggerAtMillis, android.app.PendingIntent operation)
  void setExact(int type, int triggerAtMillis, PendingIntent operation) =>
      _setExact(reference, type, triggerAtMillis, operation.reference);

  static final _setExact_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Int32,
                      ffi.Int64,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>)>>(
          "android_app_AlarmManager_setExact_1")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, int, int, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void setExact(int type, long triggerAtMillis, java.lang.String tag, android.app.AlarmManager.OnAlarmListener listener, android.os.Handler targetHandler)
  void setExact_1(int type, int triggerAtMillis, jni.JlString tag,
          AlarmManager_OnAlarmListener listener, os.Handler targetHandler) =>
      _setExact_1(reference, type, triggerAtMillis, tag.reference,
          listener.reference, targetHandler.reference);

  static final _setAlarmClock = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_AlarmManager_setAlarmClock")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public void setAlarmClock(android.app.AlarmManager.AlarmClockInfo info, android.app.PendingIntent operation)
  void setAlarmClock(
          AlarmManager_AlarmClockInfo info, PendingIntent operation) =>
      _setAlarmClock(reference, info.reference, operation.reference);

  static final _setInexactRepeating = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Int32, ffi.Int64,
                      ffi.Int64, ffi.Pointer<ffi.Void>)>>(
          "android_app_AlarmManager_setInexactRepeating")
      .asFunction<
          void Function(
              ffi.Pointer<ffi.Void>, int, int, int, ffi.Pointer<ffi.Void>)>();

  /// from: public void setInexactRepeating(int type, long triggerAtMillis, long intervalMillis, android.app.PendingIntent operation)
  void setInexactRepeating(int type, int triggerAtMillis, int intervalMillis,
          PendingIntent operation) =>
      _setInexactRepeating(reference, type, triggerAtMillis, intervalMillis,
          operation.reference);

  static final _setAndAllowWhileIdle = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Int32, ffi.Int64,
                      ffi.Pointer<ffi.Void>)>>(
          "android_app_AlarmManager_setAndAllowWhileIdle")
      .asFunction<
          void Function(
              ffi.Pointer<ffi.Void>, int, int, ffi.Pointer<ffi.Void>)>();

  /// from: public void setAndAllowWhileIdle(int type, long triggerAtMillis, android.app.PendingIntent operation)
  void setAndAllowWhileIdle(
          int type, int triggerAtMillis, PendingIntent operation) =>
      _setAndAllowWhileIdle(
          reference, type, triggerAtMillis, operation.reference);

  static final _setExactAndAllowWhileIdle = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Int32, ffi.Int64,
                      ffi.Pointer<ffi.Void>)>>(
          "android_app_AlarmManager_setExactAndAllowWhileIdle")
      .asFunction<
          void Function(
              ffi.Pointer<ffi.Void>, int, int, ffi.Pointer<ffi.Void>)>();

  /// from: public void setExactAndAllowWhileIdle(int type, long triggerAtMillis, android.app.PendingIntent operation)
  void setExactAndAllowWhileIdle(
          int type, int triggerAtMillis, PendingIntent operation) =>
      _setExactAndAllowWhileIdle(
          reference, type, triggerAtMillis, operation.reference);

  static final _cancel = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("android_app_AlarmManager_cancel")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void cancel(android.app.PendingIntent operation)
  void cancel(PendingIntent operation) =>
      _cancel(reference, operation.reference);

  static final _cancel_1 = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("android_app_AlarmManager_cancel_1")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void cancel(android.app.AlarmManager.OnAlarmListener listener)
  void cancel_1(AlarmManager_OnAlarmListener listener) =>
      _cancel_1(reference, listener.reference);

  static final _setTime = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  ffi.Int64)>>("android_app_AlarmManager_setTime")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public void setTime(long millis)
  void setTime(int millis) => _setTime(reference, millis);

  static final _setTimeZone = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_AlarmManager_setTimeZone")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void setTimeZone(java.lang.String timeZone)
  void setTimeZone(jni.JlString timeZone) =>
      _setTimeZone(reference, timeZone.reference);

  static final _getNextAlarmClock = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_AlarmManager_getNextAlarmClock")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.AlarmManager.AlarmClockInfo getNextAlarmClock()
  AlarmManager_AlarmClockInfo getNextAlarmClock() =>
      AlarmManager_AlarmClockInfo.fromRef(_getNextAlarmClock(reference));
}

class AlarmManager_OnAlarmListener extends jni.JlObject {
  AlarmManager_OnAlarmListener.fromRef(ffi.Pointer<ffi.Void> ref)
      : super.fromRef(ref);

  static final _onAlarm =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_AlarmManager__OnAlarmListener_onAlarm")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: public abstract void onAlarm()
  void onAlarm() => _onAlarm(reference);
}

class AlarmManager_AlarmClockInfo extends jni.JlObject {
  AlarmManager_AlarmClockInfo.fromRef(ffi.Pointer<ffi.Void> ref)
      : super.fromRef(ref);

  /// from: static public final android.os.Parcelable.Creator<android.app.AlarmManager.AlarmClockInfo> CREATOR
  static final _getCREATOR =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "get_android_app_AlarmManager__AlarmClockInfo_CREATOR")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();
  static os.Parcelable_Creator get CREATOR =>
      os.Parcelable_Creator.fromRef(_getCREATOR());

  static final _ctor = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Int64, ffi.Pointer<ffi.Void>)>>(
          "android_app_AlarmManager__AlarmClockInfo_new")
      .asFunction<ffi.Pointer<ffi.Void> Function(int, ffi.Pointer<ffi.Void>)>();

  /// from: public void <init>(long triggerTime, android.app.PendingIntent showIntent)
  AlarmManager_AlarmClockInfo(int triggerTime, PendingIntent showIntent)
      : super.fromRef(_ctor(triggerTime, showIntent.reference));

  static final _getTriggerTime =
      jlookup<ffi.NativeFunction<ffi.Int64 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_AlarmManager__AlarmClockInfo_getTriggerTime")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public long getTriggerTime()
  int getTriggerTime() => _getTriggerTime(reference);

  static final _getShowIntent = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_AlarmManager__AlarmClockInfo_getShowIntent")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.PendingIntent getShowIntent()
  PendingIntent getShowIntent() =>
      PendingIntent.fromRef(_getShowIntent(reference));

  static final _describeContents =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_AlarmManager__AlarmClockInfo_describeContents")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int describeContents()
  int describeContents() => _describeContents(reference);

  static final _writeToParcel = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "android_app_AlarmManager__AlarmClockInfo_writeToParcel")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public void writeToParcel(android.os.Parcel dest, int flags)
  void writeToParcel(os.Parcel dest, int flags) =>
      _writeToParcel(reference, dest.reference, flags);
}

class AliasActivity extends Activity {
  AliasActivity.fromRef(ffi.Pointer<ffi.Void> ref) : super.fromRef(ref);

  static final _ctor =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "android_app_AliasActivity_new")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();

  /// from: public void <init>()
  AliasActivity() : super.fromRef(_ctor());

  static final _onCreate = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("android_app_AliasActivity_onCreate")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: protected void onCreate(android.os.Bundle savedInstanceState)
  void onCreate(os.Bundle savedInstanceState) =>
      _onCreate(reference, savedInstanceState.reference);
}

class NotificationManager extends jni.JlObject {
  NotificationManager.fromRef(ffi.Pointer<ffi.Void> ref) : super.fromRef(ref);

  /// from: static public final java.lang.String ACTION_APP_BLOCK_STATE_CHANGED
  static const ACTION_APP_BLOCK_STATE_CHANGED =
      "android.app.action.APP_BLOCK_STATE_CHANGED";

  /// from: static public final java.lang.String ACTION_INTERRUPTION_FILTER_CHANGED
  static const ACTION_INTERRUPTION_FILTER_CHANGED =
      "android.app.action.INTERRUPTION_FILTER_CHANGED";

  /// from: static public final java.lang.String ACTION_NOTIFICATION_CHANNEL_BLOCK_STATE_CHANGED
  static const ACTION_NOTIFICATION_CHANNEL_BLOCK_STATE_CHANGED =
      "android.app.action.NOTIFICATION_CHANNEL_BLOCK_STATE_CHANGED";

  /// from: static public final java.lang.String ACTION_NOTIFICATION_CHANNEL_GROUP_BLOCK_STATE_CHANGED
  static const ACTION_NOTIFICATION_CHANNEL_GROUP_BLOCK_STATE_CHANGED =
      "android.app.action.NOTIFICATION_CHANNEL_GROUP_BLOCK_STATE_CHANGED";

  /// from: static public final java.lang.String ACTION_NOTIFICATION_POLICY_ACCESS_GRANTED_CHANGED
  static const ACTION_NOTIFICATION_POLICY_ACCESS_GRANTED_CHANGED =
      "android.app.action.NOTIFICATION_POLICY_ACCESS_GRANTED_CHANGED";

  /// from: static public final java.lang.String ACTION_NOTIFICATION_POLICY_CHANGED
  static const ACTION_NOTIFICATION_POLICY_CHANGED =
      "android.app.action.NOTIFICATION_POLICY_CHANGED";

  /// from: static public final java.lang.String EXTRA_BLOCKED_STATE
  static const EXTRA_BLOCKED_STATE = "android.app.extra.BLOCKED_STATE";

  /// from: static public final java.lang.String EXTRA_NOTIFICATION_CHANNEL_GROUP_ID
  static const EXTRA_NOTIFICATION_CHANNEL_GROUP_ID =
      "android.app.extra.NOTIFICATION_CHANNEL_GROUP_ID";

  /// from: static public final java.lang.String EXTRA_NOTIFICATION_CHANNEL_ID
  static const EXTRA_NOTIFICATION_CHANNEL_ID =
      "android.app.extra.NOTIFICATION_CHANNEL_ID";

  /// from: static public final int IMPORTANCE_DEFAULT
  static const IMPORTANCE_DEFAULT = 3;

  /// from: static public final int IMPORTANCE_HIGH
  static const IMPORTANCE_HIGH = 4;

  /// from: static public final int IMPORTANCE_LOW
  static const IMPORTANCE_LOW = 2;

  /// from: static public final int IMPORTANCE_MAX
  static const IMPORTANCE_MAX = 5;

  /// from: static public final int IMPORTANCE_MIN
  static const IMPORTANCE_MIN = 1;

  /// from: static public final int IMPORTANCE_NONE
  static const IMPORTANCE_NONE = 0;

  /// from: static public final int IMPORTANCE_UNSPECIFIED
  static const IMPORTANCE_UNSPECIFIED = -1000;

  /// from: static public final int INTERRUPTION_FILTER_ALARMS
  static const INTERRUPTION_FILTER_ALARMS = 4;

  /// from: static public final int INTERRUPTION_FILTER_ALL
  static const INTERRUPTION_FILTER_ALL = 1;

  /// from: static public final int INTERRUPTION_FILTER_NONE
  static const INTERRUPTION_FILTER_NONE = 3;

  /// from: static public final int INTERRUPTION_FILTER_PRIORITY
  static const INTERRUPTION_FILTER_PRIORITY = 2;

  /// from: static public final int INTERRUPTION_FILTER_UNKNOWN
  static const INTERRUPTION_FILTER_UNKNOWN = 0;

  static final _ctor = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_NotificationManager_new")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: void <init>(android.content.Context context, android.os.Handler handler)
  NotificationManager(content.Context context, os.Handler handler)
      : super.fromRef(_ctor(context.reference, handler.reference));

  static final _notify = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Int32,
                      ffi.Pointer<ffi.Void>)>>(
          "android_app_NotificationManager_notify")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, int, ffi.Pointer<ffi.Void>)>();

  /// from: public void notify(int id, android.app.Notification notification)
  void notify(int id, Notification notification) =>
      _notify(reference, id, notification.reference);

  static final _notify_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Int32,
                      ffi.Pointer<ffi.Void>)>>(
          "android_app_NotificationManager_notify_1")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int,
              ffi.Pointer<ffi.Void>)>();

  /// from: public void notify(java.lang.String tag, int id, android.app.Notification notification)
  void notify_1(jni.JlString tag, int id, Notification notification) =>
      _notify_1(reference, tag.reference, id, notification.reference);

  static final _cancel = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_app_NotificationManager_cancel")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public void cancel(int id)
  void cancel(int id) => _cancel(reference, id);

  static final _cancel_1 = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_app_NotificationManager_cancel_1")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public void cancel(java.lang.String tag, int id)
  void cancel_1(jni.JlString tag, int id) =>
      _cancel_1(reference, tag.reference, id);

  static final _cancelAll =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_NotificationManager_cancelAll")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void cancelAll()
  void cancelAll() => _cancelAll(reference);

  static final _createNotificationChannelGroup = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_NotificationManager_createNotificationChannelGroup")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void createNotificationChannelGroup(android.app.NotificationChannelGroup group)
  void createNotificationChannelGroup(NotificationChannelGroup group) =>
      _createNotificationChannelGroup(reference, group.reference);

  static final _createNotificationChannelGroups = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_NotificationManager_createNotificationChannelGroups")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void createNotificationChannelGroups(java.util.List<android.app.NotificationChannelGroup> groups)
  void createNotificationChannelGroups(jni.JlObject groups) =>
      _createNotificationChannelGroups(reference, groups.reference);

  static final _createNotificationChannel = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_NotificationManager_createNotificationChannel")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void createNotificationChannel(android.app.NotificationChannel channel)
  void createNotificationChannel(NotificationChannel channel) =>
      _createNotificationChannel(reference, channel.reference);

  static final _createNotificationChannels = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_NotificationManager_createNotificationChannels")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void createNotificationChannels(java.util.List<android.app.NotificationChannel> channels)
  void createNotificationChannels(jni.JlObject channels) =>
      _createNotificationChannels(reference, channels.reference);

  static final _getNotificationChannel = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_NotificationManager_getNotificationChannel")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.NotificationChannel getNotificationChannel(java.lang.String channelId)
  NotificationChannel getNotificationChannel(jni.JlString channelId) =>
      NotificationChannel.fromRef(
          _getNotificationChannel(reference, channelId.reference));

  static final _getNotificationChannels = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_NotificationManager_getNotificationChannels")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.util.List<android.app.NotificationChannel> getNotificationChannels()
  jni.JlObject getNotificationChannels() =>
      jni.JlObject.fromRef(_getNotificationChannels(reference));

  static final _deleteNotificationChannel = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_NotificationManager_deleteNotificationChannel")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void deleteNotificationChannel(java.lang.String channelId)
  void deleteNotificationChannel(jni.JlString channelId) =>
      _deleteNotificationChannel(reference, channelId.reference);

  static final _getNotificationChannelGroup = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_NotificationManager_getNotificationChannelGroup")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.NotificationChannelGroup getNotificationChannelGroup(java.lang.String channelGroupId)
  NotificationChannelGroup getNotificationChannelGroup(
          jni.JlString channelGroupId) =>
      NotificationChannelGroup.fromRef(
          _getNotificationChannelGroup(reference, channelGroupId.reference));

  static final _getNotificationChannelGroups = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_NotificationManager_getNotificationChannelGroups")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.util.List<android.app.NotificationChannelGroup> getNotificationChannelGroups()
  jni.JlObject getNotificationChannelGroups() =>
      jni.JlObject.fromRef(_getNotificationChannelGroups(reference));

  static final _deleteNotificationChannelGroup = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_NotificationManager_deleteNotificationChannelGroup")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void deleteNotificationChannelGroup(java.lang.String groupId)
  void deleteNotificationChannelGroup(jni.JlString groupId) =>
      _deleteNotificationChannelGroup(reference, groupId.reference);

  static final _getAutomaticZenRules = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_NotificationManager_getAutomaticZenRules")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.util.Map<java.lang.String,android.app.AutomaticZenRule> getAutomaticZenRules()
  jni.JlObject getAutomaticZenRules() =>
      jni.JlObject.fromRef(_getAutomaticZenRules(reference));

  static final _getAutomaticZenRule = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_NotificationManager_getAutomaticZenRule")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.AutomaticZenRule getAutomaticZenRule(java.lang.String id)
  AutomaticZenRule getAutomaticZenRule(jni.JlString id) =>
      AutomaticZenRule.fromRef(_getAutomaticZenRule(reference, id.reference));

  static final _addAutomaticZenRule = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_NotificationManager_addAutomaticZenRule")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.String addAutomaticZenRule(android.app.AutomaticZenRule automaticZenRule)
  jni.JlString addAutomaticZenRule(AutomaticZenRule automaticZenRule) =>
      jni.JlString.fromRef(
          _addAutomaticZenRule(reference, automaticZenRule.reference));

  static final _updateAutomaticZenRule = jlookup<
              ffi.NativeFunction<
                  ffi.Uint8 Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_NotificationManager_updateAutomaticZenRule")
      .asFunction<
          int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public boolean updateAutomaticZenRule(java.lang.String id, android.app.AutomaticZenRule automaticZenRule)
  bool updateAutomaticZenRule(
          jni.JlString id, AutomaticZenRule automaticZenRule) =>
      _updateAutomaticZenRule(
          reference, id.reference, automaticZenRule.reference) !=
      0;

  static final _removeAutomaticZenRule = jlookup<
              ffi.NativeFunction<
                  ffi.Uint8 Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_NotificationManager_removeAutomaticZenRule")
      .asFunction<int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public boolean removeAutomaticZenRule(java.lang.String id)
  bool removeAutomaticZenRule(jni.JlString id) =>
      _removeAutomaticZenRule(reference, id.reference) != 0;

  static final _getImportance =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_NotificationManager_getImportance")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int getImportance()
  int getImportance() => _getImportance(reference);

  static final _areNotificationsEnabled =
      jlookup<ffi.NativeFunction<ffi.Uint8 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_NotificationManager_areNotificationsEnabled")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public boolean areNotificationsEnabled()
  bool areNotificationsEnabled() => _areNotificationsEnabled(reference) != 0;

  static final _isNotificationPolicyAccessGranted = jlookup<
              ffi.NativeFunction<ffi.Uint8 Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_NotificationManager_isNotificationPolicyAccessGranted")
      .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public boolean isNotificationPolicyAccessGranted()
  bool isNotificationPolicyAccessGranted() =>
      _isNotificationPolicyAccessGranted(reference) != 0;

  static final _isNotificationListenerAccessGranted = jlookup<
              ffi.NativeFunction<
                  ffi.Uint8 Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_NotificationManager_isNotificationListenerAccessGranted")
      .asFunction<int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public boolean isNotificationListenerAccessGranted(android.content.ComponentName listener)
  bool isNotificationListenerAccessGranted(content.ComponentName listener) =>
      _isNotificationListenerAccessGranted(reference, listener.reference) != 0;

  static final _getNotificationPolicy = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_NotificationManager_getNotificationPolicy")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.NotificationManager.Policy getNotificationPolicy()
  NotificationManager_Policy getNotificationPolicy() =>
      NotificationManager_Policy.fromRef(_getNotificationPolicy(reference));

  static final _setNotificationPolicy = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_NotificationManager_setNotificationPolicy")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void setNotificationPolicy(android.app.NotificationManager.Policy policy)
  void setNotificationPolicy(NotificationManager_Policy policy) =>
      _setNotificationPolicy(reference, policy.reference);

  static final _getActiveNotifications = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_NotificationManager_getActiveNotifications")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.service.notification.StatusBarNotification[] getActiveNotifications()
  jni.JlObject getActiveNotifications() =>
      jni.JlObject.fromRef(_getActiveNotifications(reference));

  static final _getCurrentInterruptionFilter =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_NotificationManager_getCurrentInterruptionFilter")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public final int getCurrentInterruptionFilter()
  int getCurrentInterruptionFilter() =>
      _getCurrentInterruptionFilter(reference);

  static final _setInterruptionFilter = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "android_app_NotificationManager_setInterruptionFilter")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public final void setInterruptionFilter(int interruptionFilter)
  void setInterruptionFilter(int interruptionFilter) =>
      _setInterruptionFilter(reference, interruptionFilter);
}

class NotificationManager_Policy extends jni.JlObject {
  NotificationManager_Policy.fromRef(ffi.Pointer<ffi.Void> ref)
      : super.fromRef(ref);

  /// from: static public final android.os.Parcelable.Creator<android.app.NotificationManager.Policy> CREATOR
  static final _getCREATOR =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "get_android_app_NotificationManager__Policy_CREATOR")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();
  static os.Parcelable_Creator get CREATOR =>
      os.Parcelable_Creator.fromRef(_getCREATOR());

  /// from: static public final int PRIORITY_CATEGORY_ALARMS
  static const PRIORITY_CATEGORY_ALARMS = 32;

  /// from: static public final int PRIORITY_CATEGORY_CALLS
  static const PRIORITY_CATEGORY_CALLS = 8;

  /// from: static public final int PRIORITY_CATEGORY_EVENTS
  static const PRIORITY_CATEGORY_EVENTS = 2;

  /// from: static public final int PRIORITY_CATEGORY_MEDIA
  static const PRIORITY_CATEGORY_MEDIA = 64;

  /// from: static public final int PRIORITY_CATEGORY_MESSAGES
  static const PRIORITY_CATEGORY_MESSAGES = 4;

  /// from: static public final int PRIORITY_CATEGORY_REMINDERS
  static const PRIORITY_CATEGORY_REMINDERS = 1;

  /// from: static public final int PRIORITY_CATEGORY_REPEAT_CALLERS
  static const PRIORITY_CATEGORY_REPEAT_CALLERS = 16;

  /// from: static public final int PRIORITY_CATEGORY_SYSTEM
  static const PRIORITY_CATEGORY_SYSTEM = 128;

  /// from: static public final int PRIORITY_SENDERS_ANY
  static const PRIORITY_SENDERS_ANY = 0;

  /// from: static public final int PRIORITY_SENDERS_CONTACTS
  static const PRIORITY_SENDERS_CONTACTS = 1;

  /// from: static public final int PRIORITY_SENDERS_STARRED
  static const PRIORITY_SENDERS_STARRED = 2;

  /// from: static public final int SUPPRESSED_EFFECT_AMBIENT
  static const SUPPRESSED_EFFECT_AMBIENT = 128;

  /// from: static public final int SUPPRESSED_EFFECT_BADGE
  static const SUPPRESSED_EFFECT_BADGE = 64;

  /// from: static public final int SUPPRESSED_EFFECT_FULL_SCREEN_INTENT
  static const SUPPRESSED_EFFECT_FULL_SCREEN_INTENT = 4;

  /// from: static public final int SUPPRESSED_EFFECT_LIGHTS
  static const SUPPRESSED_EFFECT_LIGHTS = 8;

  /// from: static public final int SUPPRESSED_EFFECT_NOTIFICATION_LIST
  static const SUPPRESSED_EFFECT_NOTIFICATION_LIST = 256;

  /// from: static public final int SUPPRESSED_EFFECT_PEEK
  static const SUPPRESSED_EFFECT_PEEK = 16;

  /// from: static public final int SUPPRESSED_EFFECT_SCREEN_OFF
  static const SUPPRESSED_EFFECT_SCREEN_OFF = 1;

  /// from: static public final int SUPPRESSED_EFFECT_SCREEN_ON
  static const SUPPRESSED_EFFECT_SCREEN_ON = 2;

  /// from: static public final int SUPPRESSED_EFFECT_STATUS_BAR
  static const SUPPRESSED_EFFECT_STATUS_BAR = 32;

  /// from: public final int priorityCallSenders
  static final _getpriorityCallSenders = jlookup<
          ffi.NativeFunction<
              ffi.Int32 Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_app_NotificationManager__Policy_priorityCallSenders")
      .asFunction<
          int Function(
    ffi.Pointer<ffi.Void>,
  )>();
  int get priorityCallSenders => _getpriorityCallSenders(reference);

  /// from: public final int priorityCategories
  static final _getpriorityCategories = jlookup<
          ffi.NativeFunction<
              ffi.Int32 Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_app_NotificationManager__Policy_priorityCategories")
      .asFunction<
          int Function(
    ffi.Pointer<ffi.Void>,
  )>();
  int get priorityCategories => _getpriorityCategories(reference);

  /// from: public final int priorityMessageSenders
  static final _getpriorityMessageSenders = jlookup<
          ffi.NativeFunction<
              ffi.Int32 Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_app_NotificationManager__Policy_priorityMessageSenders")
      .asFunction<
          int Function(
    ffi.Pointer<ffi.Void>,
  )>();
  int get priorityMessageSenders => _getpriorityMessageSenders(reference);

  /// from: public final int suppressedVisualEffects
  static final _getsuppressedVisualEffects = jlookup<
          ffi.NativeFunction<
              ffi.Int32 Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_app_NotificationManager__Policy_suppressedVisualEffects")
      .asFunction<
          int Function(
    ffi.Pointer<ffi.Void>,
  )>();
  int get suppressedVisualEffects => _getsuppressedVisualEffects(reference);

  static final _ctor = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(ffi.Int32, ffi.Int32,
                  ffi.Int32)>>("android_app_NotificationManager__Policy_new")
      .asFunction<ffi.Pointer<ffi.Void> Function(int, int, int)>();

  /// from: public void <init>(int priorityCategories, int priorityCallSenders, int priorityMessageSenders)
  NotificationManager_Policy(int priorityCategories, int priorityCallSenders,
      int priorityMessageSenders)
      : super.fromRef(_ctor(
            priorityCategories, priorityCallSenders, priorityMessageSenders));

  static final _ctor_1 = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(ffi.Int32, ffi.Int32, ffi.Int32,
                  ffi.Int32)>>("android_app_NotificationManager__Policy_new_1")
      .asFunction<ffi.Pointer<ffi.Void> Function(int, int, int, int)>();

  /// from: public void <init>(int priorityCategories, int priorityCallSenders, int priorityMessageSenders, int suppressedVisualEffects)
  NotificationManager_Policy.ctor_1(
      int priorityCategories,
      int priorityCallSenders,
      int priorityMessageSenders,
      int suppressedVisualEffects)
      : super.fromRef(_ctor_1(priorityCategories, priorityCallSenders,
            priorityMessageSenders, suppressedVisualEffects));

  static final _writeToParcel = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "android_app_NotificationManager__Policy_writeToParcel")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public void writeToParcel(android.os.Parcel dest, int flags)
  void writeToParcel(os.Parcel dest, int flags) =>
      _writeToParcel(reference, dest.reference, flags);

  static final _describeContents =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_NotificationManager__Policy_describeContents")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int describeContents()
  int describeContents() => _describeContents(reference);

  static final _hashCode_1 =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_NotificationManager__Policy_hashCode_1")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int hashCode()
  int hashCode_1() => _hashCode_1(reference);

  static final _equals_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Uint8 Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_NotificationManager__Policy_equals_1")
      .asFunction<int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public boolean equals(java.lang.Object o)
  bool equals_1(jni.JlObject o) => _equals_1(reference, o.reference) != 0;

  static final _toString_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_NotificationManager__Policy_toString_1")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.String toString()
  jni.JlString toString_1() => jni.JlString.fromRef(_toString_1(reference));

  static final _suppressedEffectsToString = jlookup<
              ffi.NativeFunction<ffi.Pointer<ffi.Void> Function(ffi.Int32)>>(
          "android_app_NotificationManager__Policy_suppressedEffectsToString")
      .asFunction<ffi.Pointer<ffi.Void> Function(int)>();

  /// from: static public java.lang.String suppressedEffectsToString(int effects)
  static jni.JlString suppressedEffectsToString(int effects) =>
      jni.JlString.fromRef(_suppressedEffectsToString(effects));

  static final _priorityCategoriesToString = jlookup<
              ffi.NativeFunction<ffi.Pointer<ffi.Void> Function(ffi.Int32)>>(
          "android_app_NotificationManager__Policy_priorityCategoriesToString")
      .asFunction<ffi.Pointer<ffi.Void> Function(int)>();

  /// from: static public java.lang.String priorityCategoriesToString(int priorityCategories)
  static jni.JlString priorityCategoriesToString(int priorityCategories) =>
      jni.JlString.fromRef(_priorityCategoriesToString(priorityCategories));

  static final _prioritySendersToString =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function(ffi.Int32)>>(
              "android_app_NotificationManager__Policy_prioritySendersToString")
          .asFunction<ffi.Pointer<ffi.Void> Function(int)>();

  /// from: static public java.lang.String prioritySendersToString(int prioritySenders)
  static jni.JlString prioritySendersToString(int prioritySenders) =>
      jni.JlString.fromRef(_prioritySendersToString(prioritySenders));
}

class Presentation extends Dialog {
  Presentation.fromRef(ffi.Pointer<ffi.Void> ref) : super.fromRef(ref);

  static final _ctor = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("android_app_Presentation_new")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void <init>(android.content.Context outerContext, android.view.Display display)
  Presentation(content.Context outerContext, jni.JlObject display)
      : super.fromRef(_ctor(outerContext.reference, display.reference));

  static final _ctor_1 = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_app_Presentation_new_1")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public void <init>(android.content.Context outerContext, android.view.Display display, int theme)
  Presentation.ctor_1(
      content.Context outerContext, jni.JlObject display, int theme)
      : super.fromRef(
            _ctor_1(outerContext.reference, display.reference, theme));

  static final _getDisplay = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_Presentation_getDisplay")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.view.Display getDisplay()
  jni.JlObject getDisplay() => jni.JlObject.fromRef(_getDisplay(reference));

  static final _getResources = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_Presentation_getResources")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.content.res.Resources getResources()
  res.Resources getResources() =>
      res.Resources.fromRef(_getResources(reference));

  static final _onStart =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_Presentation_onStart")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: protected void onStart()
  void onStart() => _onStart(reference);

  static final _onStop =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_Presentation_onStop")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: protected void onStop()
  void onStop() => _onStop(reference);

  static final _show_ =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_Presentation_show_")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void show()
  void show_() => _show_(reference);

  static final _onDisplayRemoved =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_Presentation_onDisplayRemoved")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void onDisplayRemoved()
  void onDisplayRemoved() => _onDisplayRemoved(reference);

  static final _onDisplayChanged =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_Presentation_onDisplayChanged")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void onDisplayChanged()
  void onDisplayChanged() => _onDisplayChanged(reference);
}

class AuthenticationRequiredException extends jni.JlObject {
  AuthenticationRequiredException.fromRef(ffi.Pointer<ffi.Void> ref)
      : super.fromRef(ref);

  /// from: static public final android.os.Parcelable.Creator<android.app.AuthenticationRequiredException> CREATOR
  static final _getCREATOR =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "get_android_app_AuthenticationRequiredException_CREATOR")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();
  static os.Parcelable_Creator get CREATOR =>
      os.Parcelable_Creator.fromRef(_getCREATOR());

  static final _ctor = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_AuthenticationRequiredException_new")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void <init>(java.lang.Throwable cause, android.app.PendingIntent userAction)
  AuthenticationRequiredException(jni.JlObject cause, PendingIntent userAction)
      : super.fromRef(_ctor(cause.reference, userAction.reference));

  static final _getUserAction = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_AuthenticationRequiredException_getUserAction")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.PendingIntent getUserAction()
  PendingIntent getUserAction() =>
      PendingIntent.fromRef(_getUserAction(reference));

  static final _describeContents =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_AuthenticationRequiredException_describeContents")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int describeContents()
  int describeContents() => _describeContents(reference);

  static final _writeToParcel = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "android_app_AuthenticationRequiredException_writeToParcel")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public void writeToParcel(android.os.Parcel dest, int flags)
  void writeToParcel(os.Parcel dest, int flags) =>
      _writeToParcel(reference, dest.reference, flags);
}

class UiModeManager extends jni.JlObject {
  UiModeManager.fromRef(ffi.Pointer<ffi.Void> ref) : super.fromRef(ref);

  /// from: static public java.lang.String ACTION_ENTER_CAR_MODE
  static final _getACTION_ENTER_CAR_MODE =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "get_android_app_UiModeManager_ACTION_ENTER_CAR_MODE")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();
  static jni.JlString get ACTION_ENTER_CAR_MODE =>
      jni.JlString.fromRef(_getACTION_ENTER_CAR_MODE());
  static final _setACTION_ENTER_CAR_MODE =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "set_android_app_UiModeManager_ACTION_ENTER_CAR_MODE")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();
  static set ACTION_ENTER_CAR_MODE(jni.JlString value) =>
      _setACTION_ENTER_CAR_MODE(value.reference);

  /// from: static public java.lang.String ACTION_ENTER_DESK_MODE
  static final _getACTION_ENTER_DESK_MODE =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "get_android_app_UiModeManager_ACTION_ENTER_DESK_MODE")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();
  static jni.JlString get ACTION_ENTER_DESK_MODE =>
      jni.JlString.fromRef(_getACTION_ENTER_DESK_MODE());
  static final _setACTION_ENTER_DESK_MODE =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "set_android_app_UiModeManager_ACTION_ENTER_DESK_MODE")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();
  static set ACTION_ENTER_DESK_MODE(jni.JlString value) =>
      _setACTION_ENTER_DESK_MODE(value.reference);

  /// from: static public java.lang.String ACTION_EXIT_CAR_MODE
  static final _getACTION_EXIT_CAR_MODE =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "get_android_app_UiModeManager_ACTION_EXIT_CAR_MODE")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();
  static jni.JlString get ACTION_EXIT_CAR_MODE =>
      jni.JlString.fromRef(_getACTION_EXIT_CAR_MODE());
  static final _setACTION_EXIT_CAR_MODE =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "set_android_app_UiModeManager_ACTION_EXIT_CAR_MODE")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();
  static set ACTION_EXIT_CAR_MODE(jni.JlString value) =>
      _setACTION_EXIT_CAR_MODE(value.reference);

  /// from: static public java.lang.String ACTION_EXIT_DESK_MODE
  static final _getACTION_EXIT_DESK_MODE =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "get_android_app_UiModeManager_ACTION_EXIT_DESK_MODE")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();
  static jni.JlString get ACTION_EXIT_DESK_MODE =>
      jni.JlString.fromRef(_getACTION_EXIT_DESK_MODE());
  static final _setACTION_EXIT_DESK_MODE =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "set_android_app_UiModeManager_ACTION_EXIT_DESK_MODE")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();
  static set ACTION_EXIT_DESK_MODE(jni.JlString value) =>
      _setACTION_EXIT_DESK_MODE(value.reference);

  /// from: static public final int DISABLE_CAR_MODE_GO_HOME
  static const DISABLE_CAR_MODE_GO_HOME = 1;

  /// from: static public final int ENABLE_CAR_MODE_ALLOW_SLEEP
  static const ENABLE_CAR_MODE_ALLOW_SLEEP = 2;

  /// from: static public final int ENABLE_CAR_MODE_GO_CAR_HOME
  static const ENABLE_CAR_MODE_GO_CAR_HOME = 1;

  /// from: static public final int MODE_NIGHT_AUTO
  static const MODE_NIGHT_AUTO = 0;

  /// from: static public final int MODE_NIGHT_NO
  static const MODE_NIGHT_NO = 1;

  /// from: static public final int MODE_NIGHT_YES
  static const MODE_NIGHT_YES = 2;

  static final _ctor =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "android_app_UiModeManager_new")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();

  /// from: void <init>()
  UiModeManager() : super.fromRef(_ctor());

  static final _enableCarMode = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_app_UiModeManager_enableCarMode")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public void enableCarMode(int flags)
  void enableCarMode(int flags) => _enableCarMode(reference, flags);

  static final _disableCarMode = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_app_UiModeManager_disableCarMode")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public void disableCarMode(int flags)
  void disableCarMode(int flags) => _disableCarMode(reference, flags);

  static final _getCurrentModeType =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_UiModeManager_getCurrentModeType")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int getCurrentModeType()
  int getCurrentModeType() => _getCurrentModeType(reference);

  static final _setNightMode = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_app_UiModeManager_setNightMode")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public void setNightMode(int mode)
  void setNightMode(int mode) => _setNightMode(reference, mode);

  static final _getNightMode =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_UiModeManager_getNightMode")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int getNightMode()
  int getNightMode() => _getNightMode(reference);
}

class NotificationChannelGroup extends jni.JlObject {
  NotificationChannelGroup.fromRef(ffi.Pointer<ffi.Void> ref)
      : super.fromRef(ref);

  /// from: static public final android.os.Parcelable.Creator<android.app.NotificationChannelGroup> CREATOR
  static final _getCREATOR =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "get_android_app_NotificationChannelGroup_CREATOR")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();
  static os.Parcelable_Creator get CREATOR =>
      os.Parcelable_Creator.fromRef(_getCREATOR());

  static final _ctor = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_NotificationChannelGroup_new")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void <init>(java.lang.String id, java.lang.CharSequence name)
  NotificationChannelGroup(jni.JlString id, jni.JlObject name)
      : super.fromRef(_ctor(id.reference, name.reference));

  static final _writeToParcel = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "android_app_NotificationChannelGroup_writeToParcel")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public void writeToParcel(android.os.Parcel dest, int flags)
  void writeToParcel(os.Parcel dest, int flags) =>
      _writeToParcel(reference, dest.reference, flags);

  static final _getId = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_NotificationChannelGroup_getId")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.String getId()
  jni.JlString getId() => jni.JlString.fromRef(_getId(reference));

  static final _getName = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_NotificationChannelGroup_getName")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.CharSequence getName()
  jni.JlObject getName() => jni.JlObject.fromRef(_getName(reference));

  static final _getDescription = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_NotificationChannelGroup_getDescription")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.String getDescription()
  jni.JlString getDescription() =>
      jni.JlString.fromRef(_getDescription(reference));

  static final _getChannels = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_NotificationChannelGroup_getChannels")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.util.List<android.app.NotificationChannel> getChannels()
  jni.JlObject getChannels() => jni.JlObject.fromRef(_getChannels(reference));

  static final _isBlocked =
      jlookup<ffi.NativeFunction<ffi.Uint8 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_NotificationChannelGroup_isBlocked")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public boolean isBlocked()
  bool isBlocked() => _isBlocked(reference) != 0;

  static final _setDescription = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_NotificationChannelGroup_setDescription")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void setDescription(java.lang.String description)
  void setDescription(jni.JlString description) =>
      _setDescription(reference, description.reference);

  static final _describeContents =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_NotificationChannelGroup_describeContents")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int describeContents()
  int describeContents() => _describeContents(reference);

  static final _equals_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Uint8 Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_NotificationChannelGroup_equals_1")
      .asFunction<int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public boolean equals(java.lang.Object o)
  bool equals_1(jni.JlObject o) => _equals_1(reference, o.reference) != 0;

  static final _hashCode_1 =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_NotificationChannelGroup_hashCode_1")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int hashCode()
  int hashCode_1() => _hashCode_1(reference);

  static final _clone = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_NotificationChannelGroup_clone")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.NotificationChannelGroup clone()
  NotificationChannelGroup clone() =>
      NotificationChannelGroup.fromRef(_clone(reference));

  static final _toString_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_NotificationChannelGroup_toString_1")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.String toString()
  jni.JlString toString_1() => jni.JlString.fromRef(_toString_1(reference));
}

class DatePickerDialog extends AlertDialog {
  DatePickerDialog.fromRef(ffi.Pointer<ffi.Void> ref) : super.fromRef(ref);

  static final _ctor = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
                  ffi.Pointer<ffi.Void>)>>("android_app_DatePickerDialog_new")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void <init>(android.content.Context context)
  DatePickerDialog(content.Context context)
      : super.fromRef(_ctor(context.reference));

  static final _ctor_1 = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_app_DatePickerDialog_new_1")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public void <init>(android.content.Context context, int themeResId)
  DatePickerDialog.ctor_1(content.Context context, int themeResId)
      : super.fromRef(_ctor_1(context.reference, themeResId));

  static final _ctor_2 = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Int32,
                  ffi.Int32,
                  ffi.Int32)>>("android_app_DatePickerDialog_new_2")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int, int, int)>();

  /// from: public void <init>(android.content.Context context, android.app.DatePickerDialog.OnDateSetListener listener, int year, int month, int dayOfMonth)
  DatePickerDialog.ctor_2(
      content.Context context,
      DatePickerDialog_OnDateSetListener listener,
      int year,
      int month,
      int dayOfMonth)
      : super.fromRef(_ctor_2(
            context.reference, listener.reference, year, month, dayOfMonth));

  static final _ctor_3 = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Int32,
                  ffi.Pointer<ffi.Void>,
                  ffi.Int32,
                  ffi.Int32,
                  ffi.Int32)>>("android_app_DatePickerDialog_new_3")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int,
              ffi.Pointer<ffi.Void>, int, int, int)>();

  /// from: public void <init>(android.content.Context context, int themeResId, android.app.DatePickerDialog.OnDateSetListener listener, int year, int monthOfYear, int dayOfMonth)
  DatePickerDialog.ctor_3(
      content.Context context,
      int themeResId,
      DatePickerDialog_OnDateSetListener listener,
      int year,
      int monthOfYear,
      int dayOfMonth)
      : super.fromRef(_ctor_3(context.reference, themeResId, listener.reference,
            year, monthOfYear, dayOfMonth));

  static final _onDateChanged = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Int32,
                  ffi.Int32,
                  ffi.Int32)>>("android_app_DatePickerDialog_onDateChanged")
      .asFunction<
          void Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int, int, int)>();

  /// from: public void onDateChanged(android.widget.DatePicker view, int year, int month, int dayOfMonth)
  void onDateChanged(jni.JlObject view, int year, int month, int dayOfMonth) =>
      _onDateChanged(reference, view.reference, year, month, dayOfMonth);

  static final _setOnDateSetListener = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_DatePickerDialog_setOnDateSetListener")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void setOnDateSetListener(android.app.DatePickerDialog.OnDateSetListener listener)
  void setOnDateSetListener(DatePickerDialog_OnDateSetListener listener) =>
      _setOnDateSetListener(reference, listener.reference);

  static final _onClick = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_app_DatePickerDialog_onClick")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public void onClick(android.content.DialogInterface dialog, int which)
  void onClick(content.DialogInterface dialog, int which) =>
      _onClick(reference, dialog.reference, which);

  static final _getDatePicker = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_DatePickerDialog_getDatePicker")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.widget.DatePicker getDatePicker()
  jni.JlObject getDatePicker() =>
      jni.JlObject.fromRef(_getDatePicker(reference));

  static final _updateDate = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Int32, ffi.Int32,
                  ffi.Int32)>>("android_app_DatePickerDialog_updateDate")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int, int, int)>();

  /// from: public void updateDate(int year, int month, int dayOfMonth)
  void updateDate(int year, int month, int dayOfMonth) =>
      _updateDate(reference, year, month, dayOfMonth);

  static final _onSaveInstanceState = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_DatePickerDialog_onSaveInstanceState")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.os.Bundle onSaveInstanceState()
  os.Bundle onSaveInstanceState() =>
      os.Bundle.fromRef(_onSaveInstanceState(reference));

  static final _onRestoreInstanceState = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_DatePickerDialog_onRestoreInstanceState")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void onRestoreInstanceState(android.os.Bundle savedInstanceState)
  void onRestoreInstanceState(os.Bundle savedInstanceState) =>
      _onRestoreInstanceState(reference, savedInstanceState.reference);
}

class DatePickerDialog_OnDateSetListener extends jni.JlObject {
  DatePickerDialog_OnDateSetListener.fromRef(ffi.Pointer<ffi.Void> ref)
      : super.fromRef(ref);

  static final _onDateSet = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Int32, ffi.Int32, ffi.Int32)>>(
          "android_app_DatePickerDialog__OnDateSetListener_onDateSet")
      .asFunction<
          void Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int, int, int)>();

  /// from: public abstract void onDateSet(android.widget.DatePicker view, int year, int month, int dayOfMonth)
  void onDateSet(jni.JlObject view, int year, int month, int dayOfMonth) =>
      _onDateSet(reference, view.reference, year, month, dayOfMonth);
}

class TimePickerDialog extends AlertDialog {
  TimePickerDialog.fromRef(ffi.Pointer<ffi.Void> ref) : super.fromRef(ref);

  static final _ctor = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Int32,
                  ffi.Int32,
                  ffi.Uint8)>>("android_app_TimePickerDialog_new")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int, int, int)>();

  /// from: public void <init>(android.content.Context context, android.app.TimePickerDialog.OnTimeSetListener listener, int hourOfDay, int minute, boolean is24HourView)
  TimePickerDialog(
      content.Context context,
      TimePickerDialog_OnTimeSetListener listener,
      int hourOfDay,
      int minute,
      bool is24HourView)
      : super.fromRef(_ctor(context.reference, listener.reference, hourOfDay,
            minute, is24HourView ? 1 : 0));

  static final _ctor_1 = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Int32,
                  ffi.Pointer<ffi.Void>,
                  ffi.Int32,
                  ffi.Int32,
                  ffi.Uint8)>>("android_app_TimePickerDialog_new_1")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int,
              ffi.Pointer<ffi.Void>, int, int, int)>();

  /// from: public void <init>(android.content.Context context, int themeResId, android.app.TimePickerDialog.OnTimeSetListener listener, int hourOfDay, int minute, boolean is24HourView)
  TimePickerDialog.ctor_1(
      content.Context context,
      int themeResId,
      TimePickerDialog_OnTimeSetListener listener,
      int hourOfDay,
      int minute,
      bool is24HourView)
      : super.fromRef(_ctor_1(context.reference, themeResId, listener.reference,
            hourOfDay, minute, is24HourView ? 1 : 0));

  static final _onTimeChanged = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Int32,
                  ffi.Int32)>>("android_app_TimePickerDialog_onTimeChanged")
      .asFunction<
          void Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int, int)>();

  /// from: public void onTimeChanged(android.widget.TimePicker view, int hourOfDay, int minute)
  void onTimeChanged(jni.JlObject view, int hourOfDay, int minute) =>
      _onTimeChanged(reference, view.reference, hourOfDay, minute);

  static final _show_ =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_TimePickerDialog_show_")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void show()
  void show_() => _show_(reference);

  static final _onClick = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_app_TimePickerDialog_onClick")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public void onClick(android.content.DialogInterface dialog, int which)
  void onClick(content.DialogInterface dialog, int which) =>
      _onClick(reference, dialog.reference, which);

  static final _updateTime = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Int32,
                  ffi.Int32)>>("android_app_TimePickerDialog_updateTime")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int, int)>();

  /// from: public void updateTime(int hourOfDay, int minuteOfHour)
  void updateTime(int hourOfDay, int minuteOfHour) =>
      _updateTime(reference, hourOfDay, minuteOfHour);

  static final _onSaveInstanceState = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_TimePickerDialog_onSaveInstanceState")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.os.Bundle onSaveInstanceState()
  os.Bundle onSaveInstanceState() =>
      os.Bundle.fromRef(_onSaveInstanceState(reference));

  static final _onRestoreInstanceState = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_TimePickerDialog_onRestoreInstanceState")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void onRestoreInstanceState(android.os.Bundle savedInstanceState)
  void onRestoreInstanceState(os.Bundle savedInstanceState) =>
      _onRestoreInstanceState(reference, savedInstanceState.reference);
}

class TimePickerDialog_OnTimeSetListener extends jni.JlObject {
  TimePickerDialog_OnTimeSetListener.fromRef(ffi.Pointer<ffi.Void> ref)
      : super.fromRef(ref);

  static final _onTimeSet = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Int32, ffi.Int32)>>(
          "android_app_TimePickerDialog__OnTimeSetListener_onTimeSet")
      .asFunction<
          void Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int, int)>();

  /// from: public abstract void onTimeSet(android.widget.TimePicker view, int hourOfDay, int minute)
  void onTimeSet(jni.JlObject view, int hourOfDay, int minute) =>
      _onTimeSet(reference, view.reference, hourOfDay, minute);
}

class DialogFragment extends Fragment {
  DialogFragment.fromRef(ffi.Pointer<ffi.Void> ref) : super.fromRef(ref);

  /// from: static public final int STYLE_NORMAL
  static const STYLE_NORMAL = 0;

  /// from: static public final int STYLE_NO_FRAME
  static const STYLE_NO_FRAME = 2;

  /// from: static public final int STYLE_NO_INPUT
  static const STYLE_NO_INPUT = 3;

  /// from: static public final int STYLE_NO_TITLE
  static const STYLE_NO_TITLE = 1;

  static final _ctor =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "android_app_DialogFragment_new")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();

  /// from: public void <init>()
  DialogFragment() : super.fromRef(_ctor());

  static final _setStyle = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Int32,
                  ffi.Int32)>>("android_app_DialogFragment_setStyle")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int, int)>();

  /// from: public void setStyle(int style, int theme)
  void setStyle(int style, int theme) => _setStyle(reference, style, theme);

  static final _show_ = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("android_app_DialogFragment_show_")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public void show(android.app.FragmentManager manager, java.lang.String tag)
  void show_(FragmentManager manager, jni.JlString tag) =>
      _show_(reference, manager.reference, tag.reference);

  static final _show__1 = jlookup<
          ffi.NativeFunction<
              ffi.Int32 Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("android_app_DialogFragment_show__1")
      .asFunction<
          int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public int show(android.app.FragmentTransaction transaction, java.lang.String tag)
  int show__1(FragmentTransaction transaction, jni.JlString tag) =>
      _show__1(reference, transaction.reference, tag.reference);

  static final _dismiss =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_DialogFragment_dismiss")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void dismiss()
  void dismiss() => _dismiss(reference);

  static final _dismissAllowingStateLoss =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_DialogFragment_dismissAllowingStateLoss")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void dismissAllowingStateLoss()
  void dismissAllowingStateLoss() => _dismissAllowingStateLoss(reference);

  static final _getDialog = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_DialogFragment_getDialog")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.Dialog getDialog()
  Dialog getDialog() => Dialog.fromRef(_getDialog(reference));

  static final _getTheme =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_DialogFragment_getTheme")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int getTheme()
  int getTheme() => _getTheme(reference);

  static final _setCancelable = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  ffi.Uint8)>>("android_app_DialogFragment_setCancelable")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public void setCancelable(boolean cancelable)
  void setCancelable(bool cancelable) =>
      _setCancelable(reference, cancelable ? 1 : 0);

  static final _isCancelable =
      jlookup<ffi.NativeFunction<ffi.Uint8 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_DialogFragment_isCancelable")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public boolean isCancelable()
  bool isCancelable() => _isCancelable(reference) != 0;

  static final _setShowsDialog = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  ffi.Uint8)>>("android_app_DialogFragment_setShowsDialog")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public void setShowsDialog(boolean showsDialog)
  void setShowsDialog(bool showsDialog) =>
      _setShowsDialog(reference, showsDialog ? 1 : 0);

  static final _getShowsDialog =
      jlookup<ffi.NativeFunction<ffi.Uint8 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_DialogFragment_getShowsDialog")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public boolean getShowsDialog()
  bool getShowsDialog() => _getShowsDialog(reference) != 0;

  static final _onAttach = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_DialogFragment_onAttach")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void onAttach(android.content.Context context)
  void onAttach(content.Context context) =>
      _onAttach(reference, context.reference);

  static final _onDetach =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_DialogFragment_onDetach")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void onDetach()
  void onDetach() => _onDetach(reference);

  static final _onCreate = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_DialogFragment_onCreate")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void onCreate(android.os.Bundle savedInstanceState)
  void onCreate(os.Bundle savedInstanceState) =>
      _onCreate(reference, savedInstanceState.reference);

  static final _onGetLayoutInflater = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_DialogFragment_onGetLayoutInflater")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.view.LayoutInflater onGetLayoutInflater(android.os.Bundle savedInstanceState)
  jni.JlObject onGetLayoutInflater(os.Bundle savedInstanceState) =>
      jni.JlObject.fromRef(
          _onGetLayoutInflater(reference, savedInstanceState.reference));

  static final _onCreateDialog = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_DialogFragment_onCreateDialog")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.Dialog onCreateDialog(android.os.Bundle savedInstanceState)
  Dialog onCreateDialog(os.Bundle savedInstanceState) =>
      Dialog.fromRef(_onCreateDialog(reference, savedInstanceState.reference));

  static final _onCancel = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_DialogFragment_onCancel")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void onCancel(android.content.DialogInterface dialog)
  void onCancel(content.DialogInterface dialog) =>
      _onCancel(reference, dialog.reference);

  static final _onDismiss = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_DialogFragment_onDismiss")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void onDismiss(android.content.DialogInterface dialog)
  void onDismiss(content.DialogInterface dialog) =>
      _onDismiss(reference, dialog.reference);

  static final _onActivityCreated = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_DialogFragment_onActivityCreated")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void onActivityCreated(android.os.Bundle savedInstanceState)
  void onActivityCreated(os.Bundle savedInstanceState) =>
      _onActivityCreated(reference, savedInstanceState.reference);

  static final _onStart =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_DialogFragment_onStart")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void onStart()
  void onStart() => _onStart(reference);

  static final _onSaveInstanceState = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_DialogFragment_onSaveInstanceState")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void onSaveInstanceState(android.os.Bundle outState)
  void onSaveInstanceState(os.Bundle outState) =>
      _onSaveInstanceState(reference, outState.reference);

  static final _onStop =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_DialogFragment_onStop")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void onStop()
  void onStop() => _onStop(reference);

  static final _onDestroyView =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_DialogFragment_onDestroyView")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void onDestroyView()
  void onDestroyView() => _onDestroyView(reference);

  static final _dump = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("android_app_DialogFragment_dump")
      .asFunction<
          void Function(
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public void dump(java.lang.String prefix, java.io.FileDescriptor fd, java.io.PrintWriter writer, java.lang.String[] args)
  void dump(jni.JlString prefix, jni.JlObject fd, jni.JlObject writer,
          jni.JlObject args) =>
      _dump(reference, prefix.reference, fd.reference, writer.reference,
          args.reference);
}

class RemoteAction extends jni.JlObject {
  RemoteAction.fromRef(ffi.Pointer<ffi.Void> ref) : super.fromRef(ref);

  /// from: static public final android.os.Parcelable.Creator<android.app.RemoteAction> CREATOR
  static final _getCREATOR =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "get_android_app_RemoteAction_CREATOR")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();
  static os.Parcelable_Creator get CREATOR =>
      os.Parcelable_Creator.fromRef(_getCREATOR());

  static final _ctor = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("android_app_RemoteAction_new")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public void <init>(android.graphics.drawable.Icon icon, java.lang.CharSequence title, java.lang.CharSequence contentDescription, android.app.PendingIntent intent)
  RemoteAction(jni.JlObject icon, jni.JlObject title,
      jni.JlObject contentDescription, PendingIntent intent)
      : super.fromRef(_ctor(icon.reference, title.reference,
            contentDescription.reference, intent.reference));

  static final _setEnabled = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  ffi.Uint8)>>("android_app_RemoteAction_setEnabled")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public void setEnabled(boolean enabled)
  void setEnabled(bool enabled) => _setEnabled(reference, enabled ? 1 : 0);

  static final _isEnabled =
      jlookup<ffi.NativeFunction<ffi.Uint8 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_RemoteAction_isEnabled")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public boolean isEnabled()
  bool isEnabled() => _isEnabled(reference) != 0;

  static final _setShouldShowIcon = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  ffi.Uint8)>>("android_app_RemoteAction_setShouldShowIcon")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public void setShouldShowIcon(boolean shouldShowIcon)
  void setShouldShowIcon(bool shouldShowIcon) =>
      _setShouldShowIcon(reference, shouldShowIcon ? 1 : 0);

  static final _shouldShowIcon =
      jlookup<ffi.NativeFunction<ffi.Uint8 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_RemoteAction_shouldShowIcon")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public boolean shouldShowIcon()
  bool shouldShowIcon() => _shouldShowIcon(reference) != 0;

  static final _getIcon = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
                  ffi.Pointer<ffi.Void>)>>("android_app_RemoteAction_getIcon")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.graphics.drawable.Icon getIcon()
  jni.JlObject getIcon() => jni.JlObject.fromRef(_getIcon(reference));

  static final _getTitle = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
                  ffi.Pointer<ffi.Void>)>>("android_app_RemoteAction_getTitle")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.CharSequence getTitle()
  jni.JlObject getTitle() => jni.JlObject.fromRef(_getTitle(reference));

  static final _getContentDescription = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_RemoteAction_getContentDescription")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.CharSequence getContentDescription()
  jni.JlObject getContentDescription() =>
      jni.JlObject.fromRef(_getContentDescription(reference));

  static final _getActionIntent = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_RemoteAction_getActionIntent")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.PendingIntent getActionIntent()
  PendingIntent getActionIntent() =>
      PendingIntent.fromRef(_getActionIntent(reference));

  static final _clone = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
                  ffi.Pointer<ffi.Void>)>>("android_app_RemoteAction_clone")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.RemoteAction clone()
  RemoteAction clone() => RemoteAction.fromRef(_clone(reference));

  static final _describeContents =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_RemoteAction_describeContents")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int describeContents()
  int describeContents() => _describeContents(reference);

  static final _writeToParcel = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_app_RemoteAction_writeToParcel")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public void writeToParcel(android.os.Parcel out, int flags)
  void writeToParcel(os.Parcel out, int flags) =>
      _writeToParcel(reference, out.reference, flags);

  static final _dump = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("android_app_RemoteAction_dump")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public void dump(java.lang.String prefix, java.io.PrintWriter pw)
  void dump(jni.JlString prefix, jni.JlObject pw) =>
      _dump(reference, prefix.reference, pw.reference);
}

class FragmentController extends jni.JlObject {
  FragmentController.fromRef(ffi.Pointer<ffi.Void> ref) : super.fromRef(ref);

  static final _ctor = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
                  ffi.Pointer<ffi.Void>)>>("android_app_FragmentController_new")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: void <init>(android.app.FragmentHostCallback<?> callbacks)
  FragmentController(FragmentHostCallback callbacks)
      : super.fromRef(_ctor(callbacks.reference));

  static final _createController = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_FragmentController_createController")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: static public final android.app.FragmentController createController(android.app.FragmentHostCallback<?> callbacks)
  static FragmentController createController(FragmentHostCallback callbacks) =>
      FragmentController.fromRef(_createController(callbacks.reference));

  static final _getFragmentManager = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_FragmentController_getFragmentManager")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.FragmentManager getFragmentManager()
  FragmentManager getFragmentManager() =>
      FragmentManager.fromRef(_getFragmentManager(reference));

  static final _getLoaderManager = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_FragmentController_getLoaderManager")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.LoaderManager getLoaderManager()
  LoaderManager getLoaderManager() =>
      LoaderManager.fromRef(_getLoaderManager(reference));

  static final _findFragmentByWho = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_FragmentController_findFragmentByWho")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.Fragment findFragmentByWho(java.lang.String who)
  Fragment findFragmentByWho(jni.JlString who) =>
      Fragment.fromRef(_findFragmentByWho(reference, who.reference));

  static final _attachHost = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_FragmentController_attachHost")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void attachHost(android.app.Fragment parent)
  void attachHost(Fragment parent) => _attachHost(reference, parent.reference);

  static final _onCreateView = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>)>>(
          "android_app_FragmentController_onCreateView")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public android.view.View onCreateView(android.view.View parent, java.lang.String name, android.content.Context context, android.util.AttributeSet attrs)
  jni.JlObject onCreateView(jni.JlObject parent, jni.JlString name,
          content.Context context, jni.JlObject attrs) =>
      jni.JlObject.fromRef(_onCreateView(reference, parent.reference,
          name.reference, context.reference, attrs.reference));

  static final _noteStateNotSaved =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_FragmentController_noteStateNotSaved")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void noteStateNotSaved()
  void noteStateNotSaved() => _noteStateNotSaved(reference);

  static final _saveAllState = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_FragmentController_saveAllState")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.os.Parcelable saveAllState()
  os.Parcelable saveAllState() =>
      os.Parcelable.fromRef(_saveAllState(reference));

  static final _restoreAllState = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_FragmentController_restoreAllState")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public void restoreAllState(android.os.Parcelable state, java.util.List<android.app.Fragment> nonConfigList)
  void restoreAllState(os.Parcelable state, jni.JlObject nonConfigList) =>
      _restoreAllState(reference, state.reference, nonConfigList.reference);

  static final _restoreAllState_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_FragmentController_restoreAllState_1")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public void restoreAllState(android.os.Parcelable state, android.app.FragmentManagerNonConfig nonConfig)
  void restoreAllState_1(
          os.Parcelable state, FragmentManagerNonConfig nonConfig) =>
      _restoreAllState_1(reference, state.reference, nonConfig.reference);

  static final _retainNonConfig = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_FragmentController_retainNonConfig")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.util.List<android.app.Fragment> retainNonConfig()
  jni.JlObject retainNonConfig() =>
      jni.JlObject.fromRef(_retainNonConfig(reference));

  static final _retainNestedNonConfig = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_FragmentController_retainNestedNonConfig")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.FragmentManagerNonConfig retainNestedNonConfig()
  FragmentManagerNonConfig retainNestedNonConfig() =>
      FragmentManagerNonConfig.fromRef(_retainNestedNonConfig(reference));

  static final _dispatchCreate =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_FragmentController_dispatchCreate")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void dispatchCreate()
  void dispatchCreate() => _dispatchCreate(reference);

  static final _dispatchActivityCreated =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_FragmentController_dispatchActivityCreated")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void dispatchActivityCreated()
  void dispatchActivityCreated() => _dispatchActivityCreated(reference);

  static final _dispatchStart =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_FragmentController_dispatchStart")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void dispatchStart()
  void dispatchStart() => _dispatchStart(reference);

  static final _dispatchResume =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_FragmentController_dispatchResume")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void dispatchResume()
  void dispatchResume() => _dispatchResume(reference);

  static final _dispatchPause =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_FragmentController_dispatchPause")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void dispatchPause()
  void dispatchPause() => _dispatchPause(reference);

  static final _dispatchStop =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_FragmentController_dispatchStop")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void dispatchStop()
  void dispatchStop() => _dispatchStop(reference);

  static final _dispatchDestroyView =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_FragmentController_dispatchDestroyView")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void dispatchDestroyView()
  void dispatchDestroyView() => _dispatchDestroyView(reference);

  static final _dispatchDestroy =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_FragmentController_dispatchDestroy")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void dispatchDestroy()
  void dispatchDestroy() => _dispatchDestroy(reference);

  static final _dispatchMultiWindowModeChanged = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Uint8)>>(
          "android_app_FragmentController_dispatchMultiWindowModeChanged")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public void dispatchMultiWindowModeChanged(boolean isInMultiWindowMode)
  void dispatchMultiWindowModeChanged(bool isInMultiWindowMode) =>
      _dispatchMultiWindowModeChanged(reference, isInMultiWindowMode ? 1 : 0);

  static final _dispatchMultiWindowModeChanged_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Uint8,
                      ffi.Pointer<ffi.Void>)>>(
          "android_app_FragmentController_dispatchMultiWindowModeChanged_1")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, int, ffi.Pointer<ffi.Void>)>();

  /// from: public void dispatchMultiWindowModeChanged(boolean isInMultiWindowMode, android.content.res.Configuration newConfig)
  void dispatchMultiWindowModeChanged_1(
          bool isInMultiWindowMode, res.Configuration newConfig) =>
      _dispatchMultiWindowModeChanged_1(
          reference, isInMultiWindowMode ? 1 : 0, newConfig.reference);

  static final _dispatchPictureInPictureModeChanged = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Uint8)>>(
          "android_app_FragmentController_dispatchPictureInPictureModeChanged")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public void dispatchPictureInPictureModeChanged(boolean isInPictureInPictureMode)
  void dispatchPictureInPictureModeChanged(bool isInPictureInPictureMode) =>
      _dispatchPictureInPictureModeChanged(
          reference, isInPictureInPictureMode ? 1 : 0);

  static final _dispatchPictureInPictureModeChanged_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Uint8,
                      ffi.Pointer<ffi.Void>)>>(
          "android_app_FragmentController_dispatchPictureInPictureModeChanged_1")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, int, ffi.Pointer<ffi.Void>)>();

  /// from: public void dispatchPictureInPictureModeChanged(boolean isInPictureInPictureMode, android.content.res.Configuration newConfig)
  void dispatchPictureInPictureModeChanged_1(
          bool isInPictureInPictureMode, res.Configuration newConfig) =>
      _dispatchPictureInPictureModeChanged_1(
          reference, isInPictureInPictureMode ? 1 : 0, newConfig.reference);

  static final _dispatchConfigurationChanged = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_FragmentController_dispatchConfigurationChanged")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void dispatchConfigurationChanged(android.content.res.Configuration newConfig)
  void dispatchConfigurationChanged(res.Configuration newConfig) =>
      _dispatchConfigurationChanged(reference, newConfig.reference);

  static final _dispatchLowMemory =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_FragmentController_dispatchLowMemory")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void dispatchLowMemory()
  void dispatchLowMemory() => _dispatchLowMemory(reference);

  static final _dispatchTrimMemory = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "android_app_FragmentController_dispatchTrimMemory")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public void dispatchTrimMemory(int level)
  void dispatchTrimMemory(int level) => _dispatchTrimMemory(reference, level);

  static final _dispatchCreateOptionsMenu = jlookup<
              ffi.NativeFunction<
                  ffi.Uint8 Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_FragmentController_dispatchCreateOptionsMenu")
      .asFunction<
          int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public boolean dispatchCreateOptionsMenu(android.view.Menu menu, android.view.MenuInflater inflater)
  bool dispatchCreateOptionsMenu(jni.JlObject menu, jni.JlObject inflater) =>
      _dispatchCreateOptionsMenu(
          reference, menu.reference, inflater.reference) !=
      0;

  static final _dispatchPrepareOptionsMenu = jlookup<
              ffi.NativeFunction<
                  ffi.Uint8 Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_FragmentController_dispatchPrepareOptionsMenu")
      .asFunction<int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public boolean dispatchPrepareOptionsMenu(android.view.Menu menu)
  bool dispatchPrepareOptionsMenu(jni.JlObject menu) =>
      _dispatchPrepareOptionsMenu(reference, menu.reference) != 0;

  static final _dispatchOptionsItemSelected = jlookup<
              ffi.NativeFunction<
                  ffi.Uint8 Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_FragmentController_dispatchOptionsItemSelected")
      .asFunction<int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public boolean dispatchOptionsItemSelected(android.view.MenuItem item)
  bool dispatchOptionsItemSelected(jni.JlObject item) =>
      _dispatchOptionsItemSelected(reference, item.reference) != 0;

  static final _dispatchContextItemSelected = jlookup<
              ffi.NativeFunction<
                  ffi.Uint8 Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_FragmentController_dispatchContextItemSelected")
      .asFunction<int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public boolean dispatchContextItemSelected(android.view.MenuItem item)
  bool dispatchContextItemSelected(jni.JlObject item) =>
      _dispatchContextItemSelected(reference, item.reference) != 0;

  static final _dispatchOptionsMenuClosed = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_FragmentController_dispatchOptionsMenuClosed")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void dispatchOptionsMenuClosed(android.view.Menu menu)
  void dispatchOptionsMenuClosed(jni.JlObject menu) =>
      _dispatchOptionsMenuClosed(reference, menu.reference);

  static final _execPendingActions =
      jlookup<ffi.NativeFunction<ffi.Uint8 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_FragmentController_execPendingActions")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public boolean execPendingActions()
  bool execPendingActions() => _execPendingActions(reference) != 0;

  static final _doLoaderStart =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_FragmentController_doLoaderStart")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void doLoaderStart()
  void doLoaderStart() => _doLoaderStart(reference);

  static final _doLoaderStop = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  ffi.Uint8)>>("android_app_FragmentController_doLoaderStop")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public void doLoaderStop(boolean retain)
  void doLoaderStop(bool retain) => _doLoaderStop(reference, retain ? 1 : 0);

  static final _doLoaderDestroy =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_FragmentController_doLoaderDestroy")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void doLoaderDestroy()
  void doLoaderDestroy() => _doLoaderDestroy(reference);

  static final _reportLoaderStart =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_FragmentController_reportLoaderStart")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void reportLoaderStart()
  void reportLoaderStart() => _reportLoaderStart(reference);

  static final _retainLoaderNonConfig = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_FragmentController_retainLoaderNonConfig")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.util.ArrayMap<java.lang.String,android.app.LoaderManager> retainLoaderNonConfig()
  jni.JlObject retainLoaderNonConfig() =>
      jni.JlObject.fromRef(_retainLoaderNonConfig(reference));

  static final _restoreLoaderNonConfig = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_FragmentController_restoreLoaderNonConfig")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void restoreLoaderNonConfig(android.util.ArrayMap<java.lang.String,android.app.LoaderManager> loaderManagers)
  void restoreLoaderNonConfig(jni.JlObject loaderManagers) =>
      _restoreLoaderNonConfig(reference, loaderManagers.reference);

  static final _dumpLoaders = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>)>>(
          "android_app_FragmentController_dumpLoaders")
      .asFunction<
          void Function(
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public void dumpLoaders(java.lang.String prefix, java.io.FileDescriptor fd, java.io.PrintWriter writer, java.lang.String[] args)
  void dumpLoaders(jni.JlString prefix, jni.JlObject fd, jni.JlObject writer,
          jni.JlObject args) =>
      _dumpLoaders(reference, prefix.reference, fd.reference, writer.reference,
          args.reference);
}

class FragmentHostCallback extends FragmentContainer {
  FragmentHostCallback.fromRef(ffi.Pointer<ffi.Void> ref) : super.fromRef(ref);

  static final _ctor = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_app_FragmentHostCallback_new")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public void <init>(android.content.Context context, android.os.Handler handler, int windowAnimations)
  FragmentHostCallback(
      content.Context context, os.Handler handler, int windowAnimations)
      : super.fromRef(
            _ctor(context.reference, handler.reference, windowAnimations));

  static final _onDump = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>)>>(
          "android_app_FragmentHostCallback_onDump")
      .asFunction<
          void Function(
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public void onDump(java.lang.String prefix, java.io.FileDescriptor fd, java.io.PrintWriter writer, java.lang.String[] args)
  void onDump(jni.JlString prefix, jni.JlObject fd, jni.JlObject writer,
          jni.JlObject args) =>
      _onDump(reference, prefix.reference, fd.reference, writer.reference,
          args.reference);

  static final _onShouldSaveFragmentState = jlookup<
              ffi.NativeFunction<
                  ffi.Uint8 Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_FragmentHostCallback_onShouldSaveFragmentState")
      .asFunction<int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public boolean onShouldSaveFragmentState(android.app.Fragment fragment)
  bool onShouldSaveFragmentState(Fragment fragment) =>
      _onShouldSaveFragmentState(reference, fragment.reference) != 0;

  static final _onGetLayoutInflater = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_FragmentHostCallback_onGetLayoutInflater")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.view.LayoutInflater onGetLayoutInflater()
  jni.JlObject onGetLayoutInflater() =>
      jni.JlObject.fromRef(_onGetLayoutInflater(reference));

  static final _onUseFragmentManagerInflaterFactory = jlookup<
              ffi.NativeFunction<ffi.Uint8 Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_FragmentHostCallback_onUseFragmentManagerInflaterFactory")
      .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public boolean onUseFragmentManagerInflaterFactory()
  bool onUseFragmentManagerInflaterFactory() =>
      _onUseFragmentManagerInflaterFactory(reference) != 0;

  static final _onInvalidateOptionsMenu =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_FragmentHostCallback_onInvalidateOptionsMenu")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void onInvalidateOptionsMenu()
  void onInvalidateOptionsMenu() => _onInvalidateOptionsMenu(reference);

  static final _onStartActivityFromFragment = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Int32,
                      ffi.Pointer<ffi.Void>)>>(
          "android_app_FragmentHostCallback_onStartActivityFromFragment")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, int, ffi.Pointer<ffi.Void>)>();

  /// from: public void onStartActivityFromFragment(android.app.Fragment fragment, android.content.Intent intent, int requestCode, android.os.Bundle options)
  void onStartActivityFromFragment(Fragment fragment, content.Intent intent,
          int requestCode, os.Bundle options) =>
      _onStartActivityFromFragment(reference, fragment.reference,
          intent.reference, requestCode, options.reference);

  static final _onStartIntentSenderFromFragment = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Int32,
                      ffi.Pointer<ffi.Void>,
                      ffi.Int32,
                      ffi.Int32,
                      ffi.Int32,
                      ffi.Pointer<ffi.Void>)>>(
          "android_app_FragmentHostCallback_onStartIntentSenderFromFragment")
      .asFunction<
          void Function(
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              int,
              ffi.Pointer<ffi.Void>,
              int,
              int,
              int,
              ffi.Pointer<ffi.Void>)>();

  /// from: public void onStartIntentSenderFromFragment(android.app.Fragment fragment, android.content.IntentSender intent, int requestCode, android.content.Intent fillInIntent, int flagsMask, int flagsValues, int extraFlags, android.os.Bundle options)
  void onStartIntentSenderFromFragment(
          Fragment fragment,
          content.IntentSender intent,
          int requestCode,
          content.Intent fillInIntent,
          int flagsMask,
          int flagsValues,
          int extraFlags,
          os.Bundle options) =>
      _onStartIntentSenderFromFragment(
          reference,
          fragment.reference,
          intent.reference,
          requestCode,
          fillInIntent.reference,
          flagsMask,
          flagsValues,
          extraFlags,
          options.reference);

  static final _onRequestPermissionsFromFragment = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Int32)>>(
          "android_app_FragmentHostCallback_onRequestPermissionsFromFragment")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, int)>();

  /// from: public void onRequestPermissionsFromFragment(android.app.Fragment fragment, java.lang.String[] permissions, int requestCode)
  void onRequestPermissionsFromFragment(
          Fragment fragment, jni.JlObject permissions, int requestCode) =>
      _onRequestPermissionsFromFragment(
          reference, fragment.reference, permissions.reference, requestCode);

  static final _onHasWindowAnimations =
      jlookup<ffi.NativeFunction<ffi.Uint8 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_FragmentHostCallback_onHasWindowAnimations")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public boolean onHasWindowAnimations()
  bool onHasWindowAnimations() => _onHasWindowAnimations(reference) != 0;

  static final _onGetWindowAnimations =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_FragmentHostCallback_onGetWindowAnimations")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int onGetWindowAnimations()
  int onGetWindowAnimations() => _onGetWindowAnimations(reference);

  static final _onAttachFragment = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_FragmentHostCallback_onAttachFragment")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void onAttachFragment(android.app.Fragment fragment)
  void onAttachFragment(Fragment fragment) =>
      _onAttachFragment(reference, fragment.reference);

  static final _onHasView =
      jlookup<ffi.NativeFunction<ffi.Uint8 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_FragmentHostCallback_onHasView")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public boolean onHasView()
  bool onHasView() => _onHasView(reference) != 0;
}

class FragmentTransaction extends jni.JlObject {
  FragmentTransaction.fromRef(ffi.Pointer<ffi.Void> ref) : super.fromRef(ref);

  /// from: static public final int TRANSIT_ENTER_MASK
  static const TRANSIT_ENTER_MASK = 4096;

  /// from: static public final int TRANSIT_EXIT_MASK
  static const TRANSIT_EXIT_MASK = 8192;

  /// from: static public final int TRANSIT_FRAGMENT_CLOSE
  static const TRANSIT_FRAGMENT_CLOSE = 8194;

  /// from: static public final int TRANSIT_FRAGMENT_FADE
  static const TRANSIT_FRAGMENT_FADE = 4099;

  /// from: static public final int TRANSIT_FRAGMENT_OPEN
  static const TRANSIT_FRAGMENT_OPEN = 4097;

  /// from: static public final int TRANSIT_NONE
  static const TRANSIT_NONE = 0;

  /// from: static public final int TRANSIT_UNSET
  static const TRANSIT_UNSET = -1;

  static final _ctor =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "android_app_FragmentTransaction_new")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();

  /// from: public void <init>()
  FragmentTransaction() : super.fromRef(_ctor());

  static final _add = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_FragmentTransaction_add")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public abstract android.app.FragmentTransaction add(android.app.Fragment fragment, java.lang.String tag)
  FragmentTransaction add(Fragment fragment, jni.JlString tag) =>
      FragmentTransaction.fromRef(
          _add(reference, fragment.reference, tag.reference));

  static final _add_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                      ffi.Int32, ffi.Pointer<ffi.Void>)>>(
          "android_app_FragmentTransaction_add_1")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, int, ffi.Pointer<ffi.Void>)>();

  /// from: public abstract android.app.FragmentTransaction add(int containerViewId, android.app.Fragment fragment)
  FragmentTransaction add_1(int containerViewId, Fragment fragment) =>
      FragmentTransaction.fromRef(
          _add_1(reference, containerViewId, fragment.reference));

  static final _add_2 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Int32,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>)>>(
          "android_app_FragmentTransaction_add_2")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public abstract android.app.FragmentTransaction add(int containerViewId, android.app.Fragment fragment, java.lang.String tag)
  FragmentTransaction add_2(
          int containerViewId, Fragment fragment, jni.JlString tag) =>
      FragmentTransaction.fromRef(_add_2(
          reference, containerViewId, fragment.reference, tag.reference));

  static final _replace = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                      ffi.Int32, ffi.Pointer<ffi.Void>)>>(
          "android_app_FragmentTransaction_replace")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, int, ffi.Pointer<ffi.Void>)>();

  /// from: public abstract android.app.FragmentTransaction replace(int containerViewId, android.app.Fragment fragment)
  FragmentTransaction replace(int containerViewId, Fragment fragment) =>
      FragmentTransaction.fromRef(
          _replace(reference, containerViewId, fragment.reference));

  static final _replace_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Int32,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>)>>(
          "android_app_FragmentTransaction_replace_1")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public abstract android.app.FragmentTransaction replace(int containerViewId, android.app.Fragment fragment, java.lang.String tag)
  FragmentTransaction replace_1(
          int containerViewId, Fragment fragment, jni.JlString tag) =>
      FragmentTransaction.fromRef(_replace_1(
          reference, containerViewId, fragment.reference, tag.reference));

  static final _remove = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_FragmentTransaction_remove")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public abstract android.app.FragmentTransaction remove(android.app.Fragment fragment)
  FragmentTransaction remove(Fragment fragment) =>
      FragmentTransaction.fromRef(_remove(reference, fragment.reference));

  static final _hide_ = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_FragmentTransaction_hide_")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public abstract android.app.FragmentTransaction hide(android.app.Fragment fragment)
  FragmentTransaction hide_(Fragment fragment) =>
      FragmentTransaction.fromRef(_hide_(reference, fragment.reference));

  static final _show_ = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_FragmentTransaction_show_")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public abstract android.app.FragmentTransaction show(android.app.Fragment fragment)
  FragmentTransaction show_(Fragment fragment) =>
      FragmentTransaction.fromRef(_show_(reference, fragment.reference));

  static final _detach = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_FragmentTransaction_detach")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public abstract android.app.FragmentTransaction detach(android.app.Fragment fragment)
  FragmentTransaction detach(Fragment fragment) =>
      FragmentTransaction.fromRef(_detach(reference, fragment.reference));

  static final _attach = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_FragmentTransaction_attach")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public abstract android.app.FragmentTransaction attach(android.app.Fragment fragment)
  FragmentTransaction attach(Fragment fragment) =>
      FragmentTransaction.fromRef(_attach(reference, fragment.reference));

  static final _setPrimaryNavigationFragment = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_FragmentTransaction_setPrimaryNavigationFragment")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public abstract android.app.FragmentTransaction setPrimaryNavigationFragment(android.app.Fragment fragment)
  FragmentTransaction setPrimaryNavigationFragment(Fragment fragment) =>
      FragmentTransaction.fromRef(
          _setPrimaryNavigationFragment(reference, fragment.reference));

  static final _isEmpty =
      jlookup<ffi.NativeFunction<ffi.Uint8 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_FragmentTransaction_isEmpty")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public abstract boolean isEmpty()
  bool isEmpty() => _isEmpty(reference) != 0;

  static final _setCustomAnimations = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Int32, ffi.Int32)>>(
          "android_app_FragmentTransaction_setCustomAnimations")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int, int)>();

  /// from: public abstract android.app.FragmentTransaction setCustomAnimations(int enter, int exit)
  FragmentTransaction setCustomAnimations(int enter, int exit) =>
      FragmentTransaction.fromRef(_setCustomAnimations(reference, enter, exit));

  static final _setCustomAnimations_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                      ffi.Int32, ffi.Int32, ffi.Int32, ffi.Int32)>>(
          "android_app_FragmentTransaction_setCustomAnimations_1")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, int, int, int, int)>();

  /// from: public abstract android.app.FragmentTransaction setCustomAnimations(int enter, int exit, int popEnter, int popExit)
  FragmentTransaction setCustomAnimations_1(
          int enter, int exit, int popEnter, int popExit) =>
      FragmentTransaction.fromRef(
          _setCustomAnimations_1(reference, enter, exit, popEnter, popExit));

  static final _setTransition = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_app_FragmentTransaction_setTransition")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public abstract android.app.FragmentTransaction setTransition(int transit)
  FragmentTransaction setTransition(int transit) =>
      FragmentTransaction.fromRef(_setTransition(reference, transit));

  static final _addSharedElement = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_FragmentTransaction_addSharedElement")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public abstract android.app.FragmentTransaction addSharedElement(android.view.View sharedElement, java.lang.String name)
  FragmentTransaction addSharedElement(
          jni.JlObject sharedElement, jni.JlString name) =>
      FragmentTransaction.fromRef(_addSharedElement(
          reference, sharedElement.reference, name.reference));

  static final _setTransitionStyle = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "android_app_FragmentTransaction_setTransitionStyle")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public abstract android.app.FragmentTransaction setTransitionStyle(int styleRes)
  FragmentTransaction setTransitionStyle(int styleRes) =>
      FragmentTransaction.fromRef(_setTransitionStyle(reference, styleRes));

  static final _addToBackStack = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_FragmentTransaction_addToBackStack")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public abstract android.app.FragmentTransaction addToBackStack(java.lang.String name)
  FragmentTransaction addToBackStack(jni.JlString name) =>
      FragmentTransaction.fromRef(_addToBackStack(reference, name.reference));

  static final _isAddToBackStackAllowed =
      jlookup<ffi.NativeFunction<ffi.Uint8 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_FragmentTransaction_isAddToBackStackAllowed")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public abstract boolean isAddToBackStackAllowed()
  bool isAddToBackStackAllowed() => _isAddToBackStackAllowed(reference) != 0;

  static final _disallowAddToBackStack = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_FragmentTransaction_disallowAddToBackStack")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public abstract android.app.FragmentTransaction disallowAddToBackStack()
  FragmentTransaction disallowAddToBackStack() =>
      FragmentTransaction.fromRef(_disallowAddToBackStack(reference));

  static final _setBreadCrumbTitle = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "android_app_FragmentTransaction_setBreadCrumbTitle")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public abstract android.app.FragmentTransaction setBreadCrumbTitle(int res)
  FragmentTransaction setBreadCrumbTitle(int res_) =>
      FragmentTransaction.fromRef(_setBreadCrumbTitle(reference, res_));

  static final _setBreadCrumbTitle_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_FragmentTransaction_setBreadCrumbTitle_1")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public abstract android.app.FragmentTransaction setBreadCrumbTitle(java.lang.CharSequence text)
  FragmentTransaction setBreadCrumbTitle_1(jni.JlObject text) =>
      FragmentTransaction.fromRef(
          _setBreadCrumbTitle_1(reference, text.reference));

  static final _setBreadCrumbShortTitle = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "android_app_FragmentTransaction_setBreadCrumbShortTitle")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public abstract android.app.FragmentTransaction setBreadCrumbShortTitle(int res)
  FragmentTransaction setBreadCrumbShortTitle(int res_) =>
      FragmentTransaction.fromRef(_setBreadCrumbShortTitle(reference, res_));

  static final _setBreadCrumbShortTitle_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_FragmentTransaction_setBreadCrumbShortTitle_1")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public abstract android.app.FragmentTransaction setBreadCrumbShortTitle(java.lang.CharSequence text)
  FragmentTransaction setBreadCrumbShortTitle_1(jni.JlObject text) =>
      FragmentTransaction.fromRef(
          _setBreadCrumbShortTitle_1(reference, text.reference));

  static final _setReorderingAllowed = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Uint8)>>(
          "android_app_FragmentTransaction_setReorderingAllowed")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public abstract android.app.FragmentTransaction setReorderingAllowed(boolean reorderingAllowed)
  FragmentTransaction setReorderingAllowed(bool reorderingAllowed) =>
      FragmentTransaction.fromRef(
          _setReorderingAllowed(reference, reorderingAllowed ? 1 : 0));

  static final _runOnCommit = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_FragmentTransaction_runOnCommit")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public abstract android.app.FragmentTransaction runOnCommit(java.lang.Runnable runnable)
  FragmentTransaction runOnCommit(jni.JlObject runnable) =>
      FragmentTransaction.fromRef(_runOnCommit(reference, runnable.reference));

  static final _commit =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_FragmentTransaction_commit")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public abstract int commit()
  int commit() => _commit(reference);

  static final _commitAllowingStateLoss =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_FragmentTransaction_commitAllowingStateLoss")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public abstract int commitAllowingStateLoss()
  int commitAllowingStateLoss() => _commitAllowingStateLoss(reference);

  static final _commitNow =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_FragmentTransaction_commitNow")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: public abstract void commitNow()
  void commitNow() => _commitNow(reference);

  static final _commitNowAllowingStateLoss =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_FragmentTransaction_commitNowAllowingStateLoss")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: public abstract void commitNowAllowingStateLoss()
  void commitNowAllowingStateLoss() => _commitNowAllowingStateLoss(reference);
}

class ActivityOptions extends jni.JlObject {
  ActivityOptions.fromRef(ffi.Pointer<ffi.Void> ref) : super.fromRef(ref);

  /// from: static public final java.lang.String EXTRA_USAGE_TIME_REPORT
  static const EXTRA_USAGE_TIME_REPORT = "android.activity.usage_time";

  /// from: static public final java.lang.String EXTRA_USAGE_TIME_REPORT_PACKAGES
  static const EXTRA_USAGE_TIME_REPORT_PACKAGES = "android.usage_time_packages";

  static final _ctor =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "android_app_ActivityOptions_new")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();

  /// from: void <init>()
  ActivityOptions() : super.fromRef(_ctor());

  static final _makeCustomAnimation = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Int32, ffi.Int32)>>(
          "android_app_ActivityOptions_makeCustomAnimation")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int, int)>();

  /// from: static public android.app.ActivityOptions makeCustomAnimation(android.content.Context context, int enterResId, int exitResId)
  static ActivityOptions makeCustomAnimation(
          content.Context context, int enterResId, int exitResId) =>
      ActivityOptions.fromRef(
          _makeCustomAnimation(context.reference, enterResId, exitResId));

  static final _makeScaleUpAnimation = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                      ffi.Int32, ffi.Int32, ffi.Int32, ffi.Int32)>>(
          "android_app_ActivityOptions_makeScaleUpAnimation")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, int, int, int, int)>();

  /// from: static public android.app.ActivityOptions makeScaleUpAnimation(android.view.View source, int startX, int startY, int width, int height)
  static ActivityOptions makeScaleUpAnimation(
          jni.JlObject source, int startX, int startY, int width, int height) =>
      ActivityOptions.fromRef(_makeScaleUpAnimation(
          source.reference, startX, startY, width, height));

  static final _makeClipRevealAnimation = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                      ffi.Int32, ffi.Int32, ffi.Int32, ffi.Int32)>>(
          "android_app_ActivityOptions_makeClipRevealAnimation")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, int, int, int, int)>();

  /// from: static public android.app.ActivityOptions makeClipRevealAnimation(android.view.View source, int startX, int startY, int width, int height)
  static ActivityOptions makeClipRevealAnimation(
          jni.JlObject source, int startX, int startY, int width, int height) =>
      ActivityOptions.fromRef(_makeClipRevealAnimation(
          source.reference, startX, startY, width, height));

  static final _makeThumbnailScaleUpAnimation = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Int32, ffi.Int32)>>(
          "android_app_ActivityOptions_makeThumbnailScaleUpAnimation")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int, int)>();

  /// from: static public android.app.ActivityOptions makeThumbnailScaleUpAnimation(android.view.View source, android.graphics.Bitmap thumbnail, int startX, int startY)
  static ActivityOptions makeThumbnailScaleUpAnimation(jni.JlObject source,
          jni.JlObject thumbnail, int startX, int startY) =>
      ActivityOptions.fromRef(_makeThumbnailScaleUpAnimation(
          source.reference, thumbnail.reference, startX, startY));

  static final _makeSceneTransitionAnimation = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_ActivityOptions_makeSceneTransitionAnimation")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: static public android.app.ActivityOptions makeSceneTransitionAnimation(android.app.Activity activity, android.view.View sharedElement, java.lang.String sharedElementName)
  static ActivityOptions makeSceneTransitionAnimation(Activity activity,
          jni.JlObject sharedElement, jni.JlString sharedElementName) =>
      ActivityOptions.fromRef(_makeSceneTransitionAnimation(activity.reference,
          sharedElement.reference, sharedElementName.reference));

  static final _makeSceneTransitionAnimation_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_ActivityOptions_makeSceneTransitionAnimation_1")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: static public android.app.ActivityOptions makeSceneTransitionAnimation(android.app.Activity activity, android.util.Pair<android.view.View,java.lang.String>[] sharedElements)
  static ActivityOptions makeSceneTransitionAnimation_1(
          Activity activity, jni.JlObject sharedElements) =>
      ActivityOptions.fromRef(_makeSceneTransitionAnimation_1(
          activity.reference, sharedElements.reference));

  static final _makeTaskLaunchBehind =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "android_app_ActivityOptions_makeTaskLaunchBehind")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();

  /// from: static public android.app.ActivityOptions makeTaskLaunchBehind()
  static ActivityOptions makeTaskLaunchBehind() =>
      ActivityOptions.fromRef(_makeTaskLaunchBehind());

  static final _makeBasic =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "android_app_ActivityOptions_makeBasic")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();

  /// from: static public android.app.ActivityOptions makeBasic()
  static ActivityOptions makeBasic() => ActivityOptions.fromRef(_makeBasic());

  static final _setLaunchBounds = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_ActivityOptions_setLaunchBounds")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.ActivityOptions setLaunchBounds(android.graphics.Rect screenSpacePixelRect)
  ActivityOptions setLaunchBounds(jni.JlObject screenSpacePixelRect) =>
      ActivityOptions.fromRef(
          _setLaunchBounds(reference, screenSpacePixelRect.reference));

  static final _getLaunchBounds = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_ActivityOptions_getLaunchBounds")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.graphics.Rect getLaunchBounds()
  jni.JlObject getLaunchBounds() =>
      jni.JlObject.fromRef(_getLaunchBounds(reference));

  static final _getLockTaskMode =
      jlookup<ffi.NativeFunction<ffi.Uint8 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_ActivityOptions_getLockTaskMode")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public boolean getLockTaskMode()
  bool getLockTaskMode() => _getLockTaskMode(reference) != 0;

  static final _setLockTaskEnabled = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                  ffi.Uint8)>>("android_app_ActivityOptions_setLockTaskEnabled")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public android.app.ActivityOptions setLockTaskEnabled(boolean lockTaskMode)
  ActivityOptions setLockTaskEnabled(bool lockTaskMode) =>
      ActivityOptions.fromRef(
          _setLockTaskEnabled(reference, lockTaskMode ? 1 : 0));

  static final _getLaunchDisplayId =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_ActivityOptions_getLaunchDisplayId")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int getLaunchDisplayId()
  int getLaunchDisplayId() => _getLaunchDisplayId(reference);

  static final _setLaunchDisplayId = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_app_ActivityOptions_setLaunchDisplayId")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public android.app.ActivityOptions setLaunchDisplayId(int launchDisplayId)
  ActivityOptions setLaunchDisplayId(int launchDisplayId) =>
      ActivityOptions.fromRef(_setLaunchDisplayId(reference, launchDisplayId));

  static final _update = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("android_app_ActivityOptions_update")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void update(android.app.ActivityOptions otherOptions)
  void update(ActivityOptions otherOptions) =>
      _update(reference, otherOptions.reference);

  static final _toBundle = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_ActivityOptions_toBundle")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.os.Bundle toBundle()
  os.Bundle toBundle() => os.Bundle.fromRef(_toBundle(reference));

  static final _requestUsageTimeReport = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_ActivityOptions_requestUsageTimeReport")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void requestUsageTimeReport(android.app.PendingIntent receiver)
  void requestUsageTimeReport(PendingIntent receiver) =>
      _requestUsageTimeReport(reference, receiver.reference);

  static final _setAppVerificationBundle = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_ActivityOptions_setAppVerificationBundle")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.ActivityOptions setAppVerificationBundle(android.os.Bundle bundle)
  ActivityOptions setAppVerificationBundle(os.Bundle bundle) =>
      ActivityOptions.fromRef(
          _setAppVerificationBundle(reference, bundle.reference));

  static final _toString_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_ActivityOptions_toString_1")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.String toString()
  jni.JlString toString_1() => jni.JlString.fromRef(_toString_1(reference));
}

class Instrumentation extends jni.JlObject {
  Instrumentation.fromRef(ffi.Pointer<ffi.Void> ref) : super.fromRef(ref);

  /// from: static public final java.lang.String REPORT_KEY_IDENTIFIER
  static const REPORT_KEY_IDENTIFIER = "id";

  /// from: static public final java.lang.String REPORT_KEY_STREAMRESULT
  static const REPORT_KEY_STREAMRESULT = "stream";

  static final _ctor =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "android_app_Instrumentation_new")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();

  /// from: public void <init>()
  Instrumentation() : super.fromRef(_ctor());

  static final _onCreate = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Instrumentation_onCreate")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void onCreate(android.os.Bundle arguments)
  void onCreate(os.Bundle arguments) =>
      _onCreate(reference, arguments.reference);

  static final _start =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_Instrumentation_start")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void start()
  void start() => _start(reference);

  static final _onStart =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_Instrumentation_onStart")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void onStart()
  void onStart() => _onStart(reference);

  static final _onException = jlookup<
              ffi.NativeFunction<
                  ffi.Uint8 Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Instrumentation_onException")
      .asFunction<
          int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public boolean onException(java.lang.Object obj, java.lang.Throwable e)
  bool onException(jni.JlObject obj, jni.JlObject e) =>
      _onException(reference, obj.reference, e.reference) != 0;

  static final _sendStatus = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Int32,
                      ffi.Pointer<ffi.Void>)>>(
          "android_app_Instrumentation_sendStatus")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, int, ffi.Pointer<ffi.Void>)>();

  /// from: public void sendStatus(int resultCode, android.os.Bundle results)
  void sendStatus(int resultCode, os.Bundle results) =>
      _sendStatus(reference, resultCode, results.reference);

  static final _addResults = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Instrumentation_addResults")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void addResults(android.os.Bundle results)
  void addResults(os.Bundle results) =>
      _addResults(reference, results.reference);

  static final _finish = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Int32,
                  ffi.Pointer<ffi.Void>)>>("android_app_Instrumentation_finish")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, int, ffi.Pointer<ffi.Void>)>();

  /// from: public void finish(int resultCode, android.os.Bundle results)
  void finish(int resultCode, os.Bundle results) =>
      _finish(reference, resultCode, results.reference);

  static final _setAutomaticPerformanceSnapshots =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_Instrumentation_setAutomaticPerformanceSnapshots")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void setAutomaticPerformanceSnapshots()
  void setAutomaticPerformanceSnapshots() =>
      _setAutomaticPerformanceSnapshots(reference);

  static final _startPerformanceSnapshot =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_Instrumentation_startPerformanceSnapshot")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void startPerformanceSnapshot()
  void startPerformanceSnapshot() => _startPerformanceSnapshot(reference);

  static final _endPerformanceSnapshot =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_Instrumentation_endPerformanceSnapshot")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void endPerformanceSnapshot()
  void endPerformanceSnapshot() => _endPerformanceSnapshot(reference);

  static final _onDestroy =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_Instrumentation_onDestroy")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void onDestroy()
  void onDestroy() => _onDestroy(reference);

  static final _getContext = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_Instrumentation_getContext")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.content.Context getContext()
  content.Context getContext() =>
      content.Context.fromRef(_getContext(reference));

  static final _getComponentName = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_Instrumentation_getComponentName")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.content.ComponentName getComponentName()
  content.ComponentName getComponentName() =>
      content.ComponentName.fromRef(_getComponentName(reference));

  static final _getTargetContext = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_Instrumentation_getTargetContext")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.content.Context getTargetContext()
  content.Context getTargetContext() =>
      content.Context.fromRef(_getTargetContext(reference));

  static final _getProcessName = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_Instrumentation_getProcessName")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.String getProcessName()
  jni.JlString getProcessName() =>
      jni.JlString.fromRef(_getProcessName(reference));

  static final _isProfiling =
      jlookup<ffi.NativeFunction<ffi.Uint8 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_Instrumentation_isProfiling")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public boolean isProfiling()
  bool isProfiling() => _isProfiling(reference) != 0;

  static final _startProfiling =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_Instrumentation_startProfiling")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void startProfiling()
  void startProfiling() => _startProfiling(reference);

  static final _stopProfiling =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_Instrumentation_stopProfiling")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void stopProfiling()
  void stopProfiling() => _stopProfiling(reference);

  static final _setInTouchMode = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  ffi.Uint8)>>("android_app_Instrumentation_setInTouchMode")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public void setInTouchMode(boolean inTouch)
  void setInTouchMode(bool inTouch) =>
      _setInTouchMode(reference, inTouch ? 1 : 0);

  static final _waitForIdle = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Instrumentation_waitForIdle")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void waitForIdle(java.lang.Runnable recipient)
  void waitForIdle(jni.JlObject recipient) =>
      _waitForIdle(reference, recipient.reference);

  static final _waitForIdleSync =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_Instrumentation_waitForIdleSync")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void waitForIdleSync()
  void waitForIdleSync() => _waitForIdleSync(reference);

  static final _runOnMainSync = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Instrumentation_runOnMainSync")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void runOnMainSync(java.lang.Runnable runner)
  void runOnMainSync(jni.JlObject runner) =>
      _runOnMainSync(reference, runner.reference);

  static final _startActivitySync = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Instrumentation_startActivitySync")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.Activity startActivitySync(android.content.Intent intent)
  Activity startActivitySync(content.Intent intent) =>
      Activity.fromRef(_startActivitySync(reference, intent.reference));

  static final _startActivitySync_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Instrumentation_startActivitySync_1")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.Activity startActivitySync(android.content.Intent intent, android.os.Bundle options)
  Activity startActivitySync_1(content.Intent intent, os.Bundle options) =>
      Activity.fromRef(
          _startActivitySync_1(reference, intent.reference, options.reference));

  static final _addMonitor = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Instrumentation_addMonitor")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void addMonitor(android.app.Instrumentation.ActivityMonitor monitor)
  void addMonitor(Instrumentation_ActivityMonitor monitor) =>
      _addMonitor(reference, monitor.reference);

  static final _addMonitor_1 = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Uint8)>>("android_app_Instrumentation_addMonitor_1")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public android.app.Instrumentation.ActivityMonitor addMonitor(android.content.IntentFilter filter, android.app.Instrumentation.ActivityResult result, boolean block)
  Instrumentation_ActivityMonitor addMonitor_1(content.IntentFilter filter,
          Instrumentation_ActivityResult result, bool block) =>
      Instrumentation_ActivityMonitor.fromRef(_addMonitor_1(
          reference, filter.reference, result.reference, block ? 1 : 0));

  static final _addMonitor_2 = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Uint8)>>("android_app_Instrumentation_addMonitor_2")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public android.app.Instrumentation.ActivityMonitor addMonitor(java.lang.String cls, android.app.Instrumentation.ActivityResult result, boolean block)
  Instrumentation_ActivityMonitor addMonitor_2(jni.JlString cls,
          Instrumentation_ActivityResult result, bool block) =>
      Instrumentation_ActivityMonitor.fromRef(_addMonitor_2(
          reference, cls.reference, result.reference, block ? 1 : 0));

  static final _checkMonitorHit = jlookup<
          ffi.NativeFunction<
              ffi.Uint8 Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_app_Instrumentation_checkMonitorHit")
      .asFunction<
          int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public boolean checkMonitorHit(android.app.Instrumentation.ActivityMonitor monitor, int minHits)
  bool checkMonitorHit(Instrumentation_ActivityMonitor monitor, int minHits) =>
      _checkMonitorHit(reference, monitor.reference, minHits) != 0;

  static final _waitForMonitor = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Instrumentation_waitForMonitor")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.Activity waitForMonitor(android.app.Instrumentation.ActivityMonitor monitor)
  Activity waitForMonitor(Instrumentation_ActivityMonitor monitor) =>
      Activity.fromRef(_waitForMonitor(reference, monitor.reference));

  static final _waitForMonitorWithTimeout = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Int64)>>(
          "android_app_Instrumentation_waitForMonitorWithTimeout")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public android.app.Activity waitForMonitorWithTimeout(android.app.Instrumentation.ActivityMonitor monitor, long timeOut)
  Activity waitForMonitorWithTimeout(
          Instrumentation_ActivityMonitor monitor, int timeOut) =>
      Activity.fromRef(
          _waitForMonitorWithTimeout(reference, monitor.reference, timeOut));

  static final _removeMonitor = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Instrumentation_removeMonitor")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void removeMonitor(android.app.Instrumentation.ActivityMonitor monitor)
  void removeMonitor(Instrumentation_ActivityMonitor monitor) =>
      _removeMonitor(reference, monitor.reference);

  static final _invokeMenuActionSync = jlookup<
              ffi.NativeFunction<
                  ffi.Uint8 Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Int32, ffi.Int32)>>(
          "android_app_Instrumentation_invokeMenuActionSync")
      .asFunction<
          int Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int, int)>();

  /// from: public boolean invokeMenuActionSync(android.app.Activity targetActivity, int id, int flag)
  bool invokeMenuActionSync(Activity targetActivity, int id, int flag) =>
      _invokeMenuActionSync(reference, targetActivity.reference, id, flag) != 0;

  static final _invokeContextMenuAction = jlookup<
              ffi.NativeFunction<
                  ffi.Uint8 Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Int32, ffi.Int32)>>(
          "android_app_Instrumentation_invokeContextMenuAction")
      .asFunction<
          int Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int, int)>();

  /// from: public boolean invokeContextMenuAction(android.app.Activity targetActivity, int id, int flag)
  bool invokeContextMenuAction(Activity targetActivity, int id, int flag) =>
      _invokeContextMenuAction(reference, targetActivity.reference, id, flag) !=
      0;

  static final _sendStringSync = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Instrumentation_sendStringSync")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void sendStringSync(java.lang.String text)
  void sendStringSync(jni.JlString text) =>
      _sendStringSync(reference, text.reference);

  static final _sendKeySync = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Instrumentation_sendKeySync")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void sendKeySync(android.view.KeyEvent event)
  void sendKeySync(jni.JlObject event) =>
      _sendKeySync(reference, event.reference);

  static final _sendKeyDownUpSync = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_app_Instrumentation_sendKeyDownUpSync")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public void sendKeyDownUpSync(int key)
  void sendKeyDownUpSync(int key) => _sendKeyDownUpSync(reference, key);

  static final _sendCharacterSync = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_app_Instrumentation_sendCharacterSync")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public void sendCharacterSync(int keyCode)
  void sendCharacterSync(int keyCode) => _sendCharacterSync(reference, keyCode);

  static final _sendPointerSync = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Instrumentation_sendPointerSync")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void sendPointerSync(android.view.MotionEvent event)
  void sendPointerSync(jni.JlObject event) =>
      _sendPointerSync(reference, event.reference);

  static final _sendTrackballEventSync = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Instrumentation_sendTrackballEventSync")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void sendTrackballEventSync(android.view.MotionEvent event)
  void sendTrackballEventSync(jni.JlObject event) =>
      _sendTrackballEventSync(reference, event.reference);

  static final _newApplication = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>)>>(
          "android_app_Instrumentation_newApplication")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.Application newApplication(java.lang.ClassLoader cl, java.lang.String className, android.content.Context context)
  Application newApplication(
          jni.JlObject cl, jni.JlString className, content.Context context) =>
      Application.fromRef(_newApplication(
          reference, cl.reference, className.reference, context.reference));

  static final _newApplication_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Instrumentation_newApplication_1")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: static public android.app.Application newApplication(java.lang.Class<?> clazz, android.content.Context context)
  static Application newApplication_1(
          jni.JlObject clazz, content.Context context) =>
      Application.fromRef(
          _newApplication_1(clazz.reference, context.reference));

  static final _callApplicationOnCreate = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Instrumentation_callApplicationOnCreate")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void callApplicationOnCreate(android.app.Application app)
  void callApplicationOnCreate(Application app) =>
      _callApplicationOnCreate(reference, app.reference);

  static final _newActivity = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>)>>(
          "android_app_Instrumentation_newActivity")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.Activity newActivity(java.lang.Class<?> clazz, android.content.Context context, android.os.IBinder token, android.app.Application application, android.content.Intent intent, android.content.pm.ActivityInfo info, java.lang.CharSequence title, android.app.Activity parent, java.lang.String id, java.lang.Object lastNonConfigurationInstance)
  Activity newActivity(
          jni.JlObject clazz,
          content.Context context,
          os.IBinder token,
          Application application,
          content.Intent intent,
          pm.ActivityInfo info,
          jni.JlObject title,
          Activity parent,
          jni.JlString id,
          jni.JlObject lastNonConfigurationInstance) =>
      Activity.fromRef(_newActivity(
          reference,
          clazz.reference,
          context.reference,
          token.reference,
          application.reference,
          intent.reference,
          info.reference,
          title.reference,
          parent.reference,
          id.reference,
          lastNonConfigurationInstance.reference));

  static final _newActivity_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>)>>(
          "android_app_Instrumentation_newActivity_1")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.Activity newActivity(java.lang.ClassLoader cl, java.lang.String className, android.content.Intent intent)
  Activity newActivity_1(
          jni.JlObject cl, jni.JlString className, content.Intent intent) =>
      Activity.fromRef(_newActivity_1(
          reference, cl.reference, className.reference, intent.reference));

  static final _callActivityOnCreate = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Instrumentation_callActivityOnCreate")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public void callActivityOnCreate(android.app.Activity activity, android.os.Bundle icicle)
  void callActivityOnCreate(Activity activity, os.Bundle icicle) =>
      _callActivityOnCreate(reference, activity.reference, icicle.reference);

  static final _callActivityOnCreate_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>)>>(
          "android_app_Instrumentation_callActivityOnCreate_1")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void callActivityOnCreate(android.app.Activity activity, android.os.Bundle icicle, android.os.PersistableBundle persistentState)
  void callActivityOnCreate_1(Activity activity, os.Bundle icicle,
          os.PersistableBundle persistentState) =>
      _callActivityOnCreate_1(reference, activity.reference, icicle.reference,
          persistentState.reference);

  static final _callActivityOnDestroy = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Instrumentation_callActivityOnDestroy")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void callActivityOnDestroy(android.app.Activity activity)
  void callActivityOnDestroy(Activity activity) =>
      _callActivityOnDestroy(reference, activity.reference);

  static final _callActivityOnRestoreInstanceState = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Instrumentation_callActivityOnRestoreInstanceState")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public void callActivityOnRestoreInstanceState(android.app.Activity activity, android.os.Bundle savedInstanceState)
  void callActivityOnRestoreInstanceState(
          Activity activity, os.Bundle savedInstanceState) =>
      _callActivityOnRestoreInstanceState(
          reference, activity.reference, savedInstanceState.reference);

  static final _callActivityOnRestoreInstanceState_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>)>>(
          "android_app_Instrumentation_callActivityOnRestoreInstanceState_1")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void callActivityOnRestoreInstanceState(android.app.Activity activity, android.os.Bundle savedInstanceState, android.os.PersistableBundle persistentState)
  void callActivityOnRestoreInstanceState_1(Activity activity,
          os.Bundle savedInstanceState, os.PersistableBundle persistentState) =>
      _callActivityOnRestoreInstanceState_1(reference, activity.reference,
          savedInstanceState.reference, persistentState.reference);

  static final _callActivityOnPostCreate = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Instrumentation_callActivityOnPostCreate")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public void callActivityOnPostCreate(android.app.Activity activity, android.os.Bundle icicle)
  void callActivityOnPostCreate(Activity activity, os.Bundle icicle) =>
      _callActivityOnPostCreate(
          reference, activity.reference, icicle.reference);

  static final _callActivityOnPostCreate_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>)>>(
          "android_app_Instrumentation_callActivityOnPostCreate_1")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void callActivityOnPostCreate(android.app.Activity activity, android.os.Bundle icicle, android.os.PersistableBundle persistentState)
  void callActivityOnPostCreate_1(Activity activity, os.Bundle icicle,
          os.PersistableBundle persistentState) =>
      _callActivityOnPostCreate_1(reference, activity.reference,
          icicle.reference, persistentState.reference);

  static final _callActivityOnNewIntent = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Instrumentation_callActivityOnNewIntent")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public void callActivityOnNewIntent(android.app.Activity activity, android.content.Intent intent)
  void callActivityOnNewIntent(Activity activity, content.Intent intent) =>
      _callActivityOnNewIntent(reference, activity.reference, intent.reference);

  static final _callActivityOnStart = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Instrumentation_callActivityOnStart")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void callActivityOnStart(android.app.Activity activity)
  void callActivityOnStart(Activity activity) =>
      _callActivityOnStart(reference, activity.reference);

  static final _callActivityOnRestart = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Instrumentation_callActivityOnRestart")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void callActivityOnRestart(android.app.Activity activity)
  void callActivityOnRestart(Activity activity) =>
      _callActivityOnRestart(reference, activity.reference);

  static final _callActivityOnResume = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Instrumentation_callActivityOnResume")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void callActivityOnResume(android.app.Activity activity)
  void callActivityOnResume(Activity activity) =>
      _callActivityOnResume(reference, activity.reference);

  static final _callActivityOnStop = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Instrumentation_callActivityOnStop")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void callActivityOnStop(android.app.Activity activity)
  void callActivityOnStop(Activity activity) =>
      _callActivityOnStop(reference, activity.reference);

  static final _callActivityOnSaveInstanceState = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Instrumentation_callActivityOnSaveInstanceState")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public void callActivityOnSaveInstanceState(android.app.Activity activity, android.os.Bundle outState)
  void callActivityOnSaveInstanceState(Activity activity, os.Bundle outState) =>
      _callActivityOnSaveInstanceState(
          reference, activity.reference, outState.reference);

  static final _callActivityOnSaveInstanceState_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>)>>(
          "android_app_Instrumentation_callActivityOnSaveInstanceState_1")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void callActivityOnSaveInstanceState(android.app.Activity activity, android.os.Bundle outState, android.os.PersistableBundle outPersistentState)
  void callActivityOnSaveInstanceState_1(Activity activity, os.Bundle outState,
          os.PersistableBundle outPersistentState) =>
      _callActivityOnSaveInstanceState_1(reference, activity.reference,
          outState.reference, outPersistentState.reference);

  static final _callActivityOnPause = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Instrumentation_callActivityOnPause")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void callActivityOnPause(android.app.Activity activity)
  void callActivityOnPause(Activity activity) =>
      _callActivityOnPause(reference, activity.reference);

  static final _callActivityOnUserLeaving = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Instrumentation_callActivityOnUserLeaving")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void callActivityOnUserLeaving(android.app.Activity activity)
  void callActivityOnUserLeaving(Activity activity) =>
      _callActivityOnUserLeaving(reference, activity.reference);

  static final _startAllocCounting =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_Instrumentation_startAllocCounting")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void startAllocCounting()
  void startAllocCounting() => _startAllocCounting(reference);

  static final _stopAllocCounting =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_Instrumentation_stopAllocCounting")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void stopAllocCounting()
  void stopAllocCounting() => _stopAllocCounting(reference);

  static final _getAllocCounts = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_Instrumentation_getAllocCounts")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.os.Bundle getAllocCounts()
  os.Bundle getAllocCounts() => os.Bundle.fromRef(_getAllocCounts(reference));

  static final _getBinderCounts = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_Instrumentation_getBinderCounts")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.os.Bundle getBinderCounts()
  os.Bundle getBinderCounts() => os.Bundle.fromRef(_getBinderCounts(reference));

  static final _getUiAutomation = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_Instrumentation_getUiAutomation")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.UiAutomation getUiAutomation()
  UiAutomation getUiAutomation() =>
      UiAutomation.fromRef(_getUiAutomation(reference));

  static final _getUiAutomation_1 = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_app_Instrumentation_getUiAutomation_1")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public android.app.UiAutomation getUiAutomation(int flags)
  UiAutomation getUiAutomation_1(int flags) =>
      UiAutomation.fromRef(_getUiAutomation_1(reference, flags));

  static final _acquireLooperManager = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Instrumentation_acquireLooperManager")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.os.TestLooperManager acquireLooperManager(android.os.Looper looper)
  os.TestLooperManager acquireLooperManager(os.Looper looper) =>
      os.TestLooperManager.fromRef(
          _acquireLooperManager(reference, looper.reference));
}

class Instrumentation_ActivityResult extends jni.JlObject {
  Instrumentation_ActivityResult.fromRef(ffi.Pointer<ffi.Void> ref)
      : super.fromRef(ref);

  static final _ctor = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Int32, ffi.Pointer<ffi.Void>)>>(
          "android_app_Instrumentation__ActivityResult_new")
      .asFunction<ffi.Pointer<ffi.Void> Function(int, ffi.Pointer<ffi.Void>)>();

  /// from: public void <init>(int resultCode, android.content.Intent resultData)
  Instrumentation_ActivityResult(int resultCode, content.Intent resultData)
      : super.fromRef(_ctor(resultCode, resultData.reference));

  static final _getResultCode =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_Instrumentation__ActivityResult_getResultCode")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int getResultCode()
  int getResultCode() => _getResultCode(reference);

  static final _getResultData = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_Instrumentation__ActivityResult_getResultData")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.content.Intent getResultData()
  content.Intent getResultData() =>
      content.Intent.fromRef(_getResultData(reference));
}

class Instrumentation_ActivityMonitor extends jni.JlObject {
  Instrumentation_ActivityMonitor.fromRef(ffi.Pointer<ffi.Void> ref)
      : super.fromRef(ref);

  static final _ctor = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Uint8)>>(
          "android_app_Instrumentation__ActivityMonitor_new")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public void <init>(android.content.IntentFilter which, android.app.Instrumentation.ActivityResult result, boolean block)
  Instrumentation_ActivityMonitor(content.IntentFilter which,
      Instrumentation_ActivityResult result, bool block)
      : super.fromRef(_ctor(which.reference, result.reference, block ? 1 : 0));

  static final _ctor_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Uint8)>>(
          "android_app_Instrumentation__ActivityMonitor_new_1")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public void <init>(java.lang.String cls, android.app.Instrumentation.ActivityResult result, boolean block)
  Instrumentation_ActivityMonitor.ctor_1(
      jni.JlString cls, Instrumentation_ActivityResult result, bool block)
      : super.fromRef(_ctor_1(cls.reference, result.reference, block ? 1 : 0));

  static final _ctor_2 =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "android_app_Instrumentation__ActivityMonitor_new_2")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();

  /// from: public void <init>()
  Instrumentation_ActivityMonitor.ctor_2() : super.fromRef(_ctor_2());

  static final _getFilter = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_Instrumentation__ActivityMonitor_getFilter")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public final android.content.IntentFilter getFilter()
  content.IntentFilter getFilter() =>
      content.IntentFilter.fromRef(_getFilter(reference));

  static final _getResult = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_Instrumentation__ActivityMonitor_getResult")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public final android.app.Instrumentation.ActivityResult getResult()
  Instrumentation_ActivityResult getResult() =>
      Instrumentation_ActivityResult.fromRef(_getResult(reference));

  static final _isBlocking =
      jlookup<ffi.NativeFunction<ffi.Uint8 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_Instrumentation__ActivityMonitor_isBlocking")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public final boolean isBlocking()
  bool isBlocking() => _isBlocking(reference) != 0;

  static final _getHits =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_Instrumentation__ActivityMonitor_getHits")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public final int getHits()
  int getHits() => _getHits(reference);

  static final _getLastActivity = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_Instrumentation__ActivityMonitor_getLastActivity")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public final android.app.Activity getLastActivity()
  Activity getLastActivity() => Activity.fromRef(_getLastActivity(reference));

  static final _waitForActivity = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_Instrumentation__ActivityMonitor_waitForActivity")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public final android.app.Activity waitForActivity()
  Activity waitForActivity() => Activity.fromRef(_waitForActivity(reference));

  static final _waitForActivityWithTimeout = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Int64)>>(
          "android_app_Instrumentation__ActivityMonitor_waitForActivityWithTimeout")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public final android.app.Activity waitForActivityWithTimeout(long timeOut)
  Activity waitForActivityWithTimeout(int timeOut) =>
      Activity.fromRef(_waitForActivityWithTimeout(reference, timeOut));

  static final _onStartActivity = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Instrumentation__ActivityMonitor_onStartActivity")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.Instrumentation.ActivityResult onStartActivity(android.content.Intent intent)
  Instrumentation_ActivityResult onStartActivity(content.Intent intent) =>
      Instrumentation_ActivityResult.fromRef(
          _onStartActivity(reference, intent.reference));
}

class IntentService extends Service {
  IntentService.fromRef(ffi.Pointer<ffi.Void> ref) : super.fromRef(ref);

  static final _ctor = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
                  ffi.Pointer<ffi.Void>)>>("android_app_IntentService_new")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void <init>(java.lang.String name)
  IntentService(jni.JlString name) : super.fromRef(_ctor(name.reference));

  static final _setIntentRedelivery = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  ffi.Uint8)>>("android_app_IntentService_setIntentRedelivery")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public void setIntentRedelivery(boolean enabled)
  void setIntentRedelivery(bool enabled) =>
      _setIntentRedelivery(reference, enabled ? 1 : 0);

  static final _onCreate =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_IntentService_onCreate")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void onCreate()
  void onCreate() => _onCreate(reference);

  static final _onStart = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_app_IntentService_onStart")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public void onStart(android.content.Intent intent, int startId)
  void onStart(content.Intent intent, int startId) =>
      _onStart(reference, intent.reference, startId);

  static final _onStartCommand = jlookup<
          ffi.NativeFunction<
              ffi.Int32 Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Int32,
                  ffi.Int32)>>("android_app_IntentService_onStartCommand")
      .asFunction<
          int Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int, int)>();

  /// from: public int onStartCommand(android.content.Intent intent, int flags, int startId)
  int onStartCommand(content.Intent intent, int flags, int startId) =>
      _onStartCommand(reference, intent.reference, flags, startId);

  static final _onDestroy =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_IntentService_onDestroy")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void onDestroy()
  void onDestroy() => _onDestroy(reference);

  static final _onBind = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("android_app_IntentService_onBind")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.os.IBinder onBind(android.content.Intent intent)
  os.IBinder onBind(content.Intent intent) =>
      os.IBinder.fromRef(_onBind(reference, intent.reference));

  static final _onHandleIntent = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_IntentService_onHandleIntent")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: protected abstract void onHandleIntent(android.content.Intent intent)
  void onHandleIntent(content.Intent intent) =>
      _onHandleIntent(reference, intent.reference);
}

class NotificationChannel extends jni.JlObject {
  NotificationChannel.fromRef(ffi.Pointer<ffi.Void> ref) : super.fromRef(ref);

  /// from: static public final android.os.Parcelable.Creator<android.app.NotificationChannel> CREATOR
  static final _getCREATOR =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "get_android_app_NotificationChannel_CREATOR")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();
  static os.Parcelable_Creator get CREATOR =>
      os.Parcelable_Creator.fromRef(_getCREATOR());

  /// from: static public final java.lang.String DEFAULT_CHANNEL_ID
  static const DEFAULT_CHANNEL_ID = "miscellaneous";

  static final _ctor = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_app_NotificationChannel_new")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public void <init>(java.lang.String id, java.lang.CharSequence name, int importance)
  NotificationChannel(jni.JlString id, jni.JlObject name, int importance)
      : super.fromRef(_ctor(id.reference, name.reference, importance));

  static final _writeToParcel = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_app_NotificationChannel_writeToParcel")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public void writeToParcel(android.os.Parcel dest, int flags)
  void writeToParcel(os.Parcel dest, int flags) =>
      _writeToParcel(reference, dest.reference, flags);

  static final _setName = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_NotificationChannel_setName")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void setName(java.lang.CharSequence name)
  void setName(jni.JlObject name) => _setName(reference, name.reference);

  static final _setDescription = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_NotificationChannel_setDescription")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void setDescription(java.lang.String description)
  void setDescription(jni.JlString description) =>
      _setDescription(reference, description.reference);

  static final _setGroup = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_NotificationChannel_setGroup")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void setGroup(java.lang.String groupId)
  void setGroup(jni.JlString groupId) =>
      _setGroup(reference, groupId.reference);

  static final _setShowBadge = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  ffi.Uint8)>>("android_app_NotificationChannel_setShowBadge")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public void setShowBadge(boolean showBadge)
  void setShowBadge(bool showBadge) =>
      _setShowBadge(reference, showBadge ? 1 : 0);

  static final _setSound = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_NotificationChannel_setSound")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public void setSound(android.net.Uri sound, android.media.AudioAttributes audioAttributes)
  void setSound(jni.JlObject sound, jni.JlObject audioAttributes) =>
      _setSound(reference, sound.reference, audioAttributes.reference);

  static final _enableLights = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  ffi.Uint8)>>("android_app_NotificationChannel_enableLights")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public void enableLights(boolean lights)
  void enableLights(bool lights) => _enableLights(reference, lights ? 1 : 0);

  static final _setLightColor = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_app_NotificationChannel_setLightColor")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public void setLightColor(int argb)
  void setLightColor(int argb) => _setLightColor(reference, argb);

  static final _enableVibration = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Uint8)>>(
          "android_app_NotificationChannel_enableVibration")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public void enableVibration(boolean vibration)
  void enableVibration(bool vibration) =>
      _enableVibration(reference, vibration ? 1 : 0);

  static final _setVibrationPattern = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_NotificationChannel_setVibrationPattern")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void setVibrationPattern(long[] vibrationPattern)
  void setVibrationPattern(jni.JlObject vibrationPattern) =>
      _setVibrationPattern(reference, vibrationPattern.reference);

  static final _setImportance = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_app_NotificationChannel_setImportance")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public void setImportance(int importance)
  void setImportance(int importance) => _setImportance(reference, importance);

  static final _setBypassDnd = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  ffi.Uint8)>>("android_app_NotificationChannel_setBypassDnd")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public void setBypassDnd(boolean bypassDnd)
  void setBypassDnd(bool bypassDnd) =>
      _setBypassDnd(reference, bypassDnd ? 1 : 0);

  static final _setLockscreenVisibility = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "android_app_NotificationChannel_setLockscreenVisibility")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public void setLockscreenVisibility(int lockscreenVisibility)
  void setLockscreenVisibility(int lockscreenVisibility) =>
      _setLockscreenVisibility(reference, lockscreenVisibility);

  static final _getId = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_NotificationChannel_getId")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.String getId()
  jni.JlString getId() => jni.JlString.fromRef(_getId(reference));

  static final _getName = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_NotificationChannel_getName")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.CharSequence getName()
  jni.JlObject getName() => jni.JlObject.fromRef(_getName(reference));

  static final _getDescription = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_NotificationChannel_getDescription")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.String getDescription()
  jni.JlString getDescription() =>
      jni.JlString.fromRef(_getDescription(reference));

  static final _getImportance =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_NotificationChannel_getImportance")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int getImportance()
  int getImportance() => _getImportance(reference);

  static final _canBypassDnd =
      jlookup<ffi.NativeFunction<ffi.Uint8 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_NotificationChannel_canBypassDnd")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public boolean canBypassDnd()
  bool canBypassDnd() => _canBypassDnd(reference) != 0;

  static final _getSound = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_NotificationChannel_getSound")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.net.Uri getSound()
  jni.JlObject getSound() => jni.JlObject.fromRef(_getSound(reference));

  static final _getAudioAttributes = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_NotificationChannel_getAudioAttributes")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.media.AudioAttributes getAudioAttributes()
  jni.JlObject getAudioAttributes() =>
      jni.JlObject.fromRef(_getAudioAttributes(reference));

  static final _shouldShowLights =
      jlookup<ffi.NativeFunction<ffi.Uint8 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_NotificationChannel_shouldShowLights")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public boolean shouldShowLights()
  bool shouldShowLights() => _shouldShowLights(reference) != 0;

  static final _getLightColor =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_NotificationChannel_getLightColor")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int getLightColor()
  int getLightColor() => _getLightColor(reference);

  static final _shouldVibrate =
      jlookup<ffi.NativeFunction<ffi.Uint8 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_NotificationChannel_shouldVibrate")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public boolean shouldVibrate()
  bool shouldVibrate() => _shouldVibrate(reference) != 0;

  static final _getVibrationPattern = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_NotificationChannel_getVibrationPattern")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public long[] getVibrationPattern()
  jni.JlObject getVibrationPattern() =>
      jni.JlObject.fromRef(_getVibrationPattern(reference));

  static final _getLockscreenVisibility =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_NotificationChannel_getLockscreenVisibility")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int getLockscreenVisibility()
  int getLockscreenVisibility() => _getLockscreenVisibility(reference);

  static final _canShowBadge =
      jlookup<ffi.NativeFunction<ffi.Uint8 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_NotificationChannel_canShowBadge")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public boolean canShowBadge()
  bool canShowBadge() => _canShowBadge(reference) != 0;

  static final _getGroup = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_NotificationChannel_getGroup")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.String getGroup()
  jni.JlString getGroup() => jni.JlString.fromRef(_getGroup(reference));

  static final _describeContents =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_NotificationChannel_describeContents")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int describeContents()
  int describeContents() => _describeContents(reference);

  static final _equals_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Uint8 Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_NotificationChannel_equals_1")
      .asFunction<int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public boolean equals(java.lang.Object o)
  bool equals_1(jni.JlObject o) => _equals_1(reference, o.reference) != 0;

  static final _hashCode_1 =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_NotificationChannel_hashCode_1")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int hashCode()
  int hashCode_1() => _hashCode_1(reference);

  static final _toString_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_NotificationChannel_toString_1")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.String toString()
  jni.JlString toString_1() => jni.JlString.fromRef(_toString_1(reference));
}

class ListFragment extends Fragment {
  ListFragment.fromRef(ffi.Pointer<ffi.Void> ref) : super.fromRef(ref);

  static final _ctor =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "android_app_ListFragment_new")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();

  /// from: public void <init>()
  ListFragment() : super.fromRef(_ctor());

  static final _onCreateView = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>)>>(
          "android_app_ListFragment_onCreateView")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public android.view.View onCreateView(android.view.LayoutInflater inflater, android.view.ViewGroup container, android.os.Bundle savedInstanceState)
  jni.JlObject onCreateView(jni.JlObject inflater, jni.JlObject container,
          os.Bundle savedInstanceState) =>
      jni.JlObject.fromRef(_onCreateView(reference, inflater.reference,
          container.reference, savedInstanceState.reference));

  static final _onViewCreated = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_ListFragment_onViewCreated")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public void onViewCreated(android.view.View view, android.os.Bundle savedInstanceState)
  void onViewCreated(jni.JlObject view, os.Bundle savedInstanceState) =>
      _onViewCreated(reference, view.reference, savedInstanceState.reference);

  static final _onDestroyView =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_ListFragment_onDestroyView")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void onDestroyView()
  void onDestroyView() => _onDestroyView(reference);

  static final _onListItemClick = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Int32,
                  ffi.Int64)>>("android_app_ListFragment_onListItemClick")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, int, int)>();

  /// from: public void onListItemClick(android.widget.ListView l, android.view.View v, int position, long id)
  void onListItemClick(jni.JlObject l, jni.JlObject v, int position, int id) =>
      _onListItemClick(reference, l.reference, v.reference, position, id);

  static final _setListAdapter = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_ListFragment_setListAdapter")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void setListAdapter(android.widget.ListAdapter adapter)
  void setListAdapter(jni.JlObject adapter) =>
      _setListAdapter(reference, adapter.reference);

  static final _setSelection = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_app_ListFragment_setSelection")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public void setSelection(int position)
  void setSelection(int position) => _setSelection(reference, position);

  static final _getSelectedItemPosition =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_ListFragment_getSelectedItemPosition")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int getSelectedItemPosition()
  int getSelectedItemPosition() => _getSelectedItemPosition(reference);

  static final _getSelectedItemId =
      jlookup<ffi.NativeFunction<ffi.Int64 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_ListFragment_getSelectedItemId")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public long getSelectedItemId()
  int getSelectedItemId() => _getSelectedItemId(reference);

  static final _getListView = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_ListFragment_getListView")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.widget.ListView getListView()
  jni.JlObject getListView() => jni.JlObject.fromRef(_getListView(reference));

  static final _setEmptyText = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_ListFragment_setEmptyText")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void setEmptyText(java.lang.CharSequence text)
  void setEmptyText(jni.JlObject text) =>
      _setEmptyText(reference, text.reference);

  static final _setListShown = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  ffi.Uint8)>>("android_app_ListFragment_setListShown")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public void setListShown(boolean shown)
  void setListShown(bool shown) => _setListShown(reference, shown ? 1 : 0);

  static final _setListShownNoAnimation = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Uint8)>>(
          "android_app_ListFragment_setListShownNoAnimation")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public void setListShownNoAnimation(boolean shown)
  void setListShownNoAnimation(bool shown) =>
      _setListShownNoAnimation(reference, shown ? 1 : 0);

  static final _getListAdapter = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_ListFragment_getListAdapter")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.widget.ListAdapter getListAdapter()
  jni.JlObject getListAdapter() =>
      jni.JlObject.fromRef(_getListAdapter(reference));
}

class SearchableInfo extends jni.JlObject {
  SearchableInfo.fromRef(ffi.Pointer<ffi.Void> ref) : super.fromRef(ref);

  /// from: static public final android.os.Parcelable.Creator<android.app.SearchableInfo> CREATOR
  static final _getCREATOR =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "get_android_app_SearchableInfo_CREATOR")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();
  static os.Parcelable_Creator get CREATOR =>
      os.Parcelable_Creator.fromRef(_getCREATOR());

  static final _ctor = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
                  ffi.Pointer<ffi.Void>)>>("android_app_SearchableInfo_new")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: void <init>(android.os.Parcel in)
  SearchableInfo(os.Parcel in_) : super.fromRef(_ctor(in_.reference));

  static final _getSuggestAuthority = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_SearchableInfo_getSuggestAuthority")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.String getSuggestAuthority()
  jni.JlString getSuggestAuthority() =>
      jni.JlString.fromRef(_getSuggestAuthority(reference));

  static final _getSuggestPackage = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_SearchableInfo_getSuggestPackage")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.String getSuggestPackage()
  jni.JlString getSuggestPackage() =>
      jni.JlString.fromRef(_getSuggestPackage(reference));

  static final _getSearchActivity = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_SearchableInfo_getSearchActivity")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.content.ComponentName getSearchActivity()
  content.ComponentName getSearchActivity() =>
      content.ComponentName.fromRef(_getSearchActivity(reference));

  static final _shouldRewriteQueryFromData =
      jlookup<ffi.NativeFunction<ffi.Uint8 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_SearchableInfo_shouldRewriteQueryFromData")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public boolean shouldRewriteQueryFromData()
  bool shouldRewriteQueryFromData() =>
      _shouldRewriteQueryFromData(reference) != 0;

  static final _shouldRewriteQueryFromText =
      jlookup<ffi.NativeFunction<ffi.Uint8 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_SearchableInfo_shouldRewriteQueryFromText")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public boolean shouldRewriteQueryFromText()
  bool shouldRewriteQueryFromText() =>
      _shouldRewriteQueryFromText(reference) != 0;

  static final _getSettingsDescriptionId =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_SearchableInfo_getSettingsDescriptionId")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int getSettingsDescriptionId()
  int getSettingsDescriptionId() => _getSettingsDescriptionId(reference);

  static final _getSuggestPath = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_SearchableInfo_getSuggestPath")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.String getSuggestPath()
  jni.JlString getSuggestPath() =>
      jni.JlString.fromRef(_getSuggestPath(reference));

  static final _getSuggestSelection = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_SearchableInfo_getSuggestSelection")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.String getSuggestSelection()
  jni.JlString getSuggestSelection() =>
      jni.JlString.fromRef(_getSuggestSelection(reference));

  static final _getSuggestIntentAction = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_SearchableInfo_getSuggestIntentAction")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.String getSuggestIntentAction()
  jni.JlString getSuggestIntentAction() =>
      jni.JlString.fromRef(_getSuggestIntentAction(reference));

  static final _getSuggestIntentData = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_SearchableInfo_getSuggestIntentData")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.String getSuggestIntentData()
  jni.JlString getSuggestIntentData() =>
      jni.JlString.fromRef(_getSuggestIntentData(reference));

  static final _getSuggestThreshold =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_SearchableInfo_getSuggestThreshold")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int getSuggestThreshold()
  int getSuggestThreshold() => _getSuggestThreshold(reference);

  static final _getHintId =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_SearchableInfo_getHintId")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int getHintId()
  int getHintId() => _getHintId(reference);

  static final _getVoiceSearchEnabled =
      jlookup<ffi.NativeFunction<ffi.Uint8 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_SearchableInfo_getVoiceSearchEnabled")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public boolean getVoiceSearchEnabled()
  bool getVoiceSearchEnabled() => _getVoiceSearchEnabled(reference) != 0;

  static final _getVoiceSearchLaunchWebSearch =
      jlookup<ffi.NativeFunction<ffi.Uint8 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_SearchableInfo_getVoiceSearchLaunchWebSearch")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public boolean getVoiceSearchLaunchWebSearch()
  bool getVoiceSearchLaunchWebSearch() =>
      _getVoiceSearchLaunchWebSearch(reference) != 0;

  static final _getVoiceSearchLaunchRecognizer =
      jlookup<ffi.NativeFunction<ffi.Uint8 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_SearchableInfo_getVoiceSearchLaunchRecognizer")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public boolean getVoiceSearchLaunchRecognizer()
  bool getVoiceSearchLaunchRecognizer() =>
      _getVoiceSearchLaunchRecognizer(reference) != 0;

  static final _getVoiceLanguageModeId =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_SearchableInfo_getVoiceLanguageModeId")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int getVoiceLanguageModeId()
  int getVoiceLanguageModeId() => _getVoiceLanguageModeId(reference);

  static final _getVoicePromptTextId =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_SearchableInfo_getVoicePromptTextId")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int getVoicePromptTextId()
  int getVoicePromptTextId() => _getVoicePromptTextId(reference);

  static final _getVoiceLanguageId =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_SearchableInfo_getVoiceLanguageId")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int getVoiceLanguageId()
  int getVoiceLanguageId() => _getVoiceLanguageId(reference);

  static final _getVoiceMaxResults =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_SearchableInfo_getVoiceMaxResults")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int getVoiceMaxResults()
  int getVoiceMaxResults() => _getVoiceMaxResults(reference);

  static final _getInputType =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_SearchableInfo_getInputType")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int getInputType()
  int getInputType() => _getInputType(reference);

  static final _getImeOptions =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_SearchableInfo_getImeOptions")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int getImeOptions()
  int getImeOptions() => _getImeOptions(reference);

  static final _shouldIncludeInGlobalSearch =
      jlookup<ffi.NativeFunction<ffi.Uint8 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_SearchableInfo_shouldIncludeInGlobalSearch")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public boolean shouldIncludeInGlobalSearch()
  bool shouldIncludeInGlobalSearch() =>
      _shouldIncludeInGlobalSearch(reference) != 0;

  static final _queryAfterZeroResults =
      jlookup<ffi.NativeFunction<ffi.Uint8 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_SearchableInfo_queryAfterZeroResults")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public boolean queryAfterZeroResults()
  bool queryAfterZeroResults() => _queryAfterZeroResults(reference) != 0;

  static final _autoUrlDetect =
      jlookup<ffi.NativeFunction<ffi.Uint8 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_SearchableInfo_autoUrlDetect")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public boolean autoUrlDetect()
  bool autoUrlDetect() => _autoUrlDetect(reference) != 0;

  static final _describeContents =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_SearchableInfo_describeContents")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int describeContents()
  int describeContents() => _describeContents(reference);

  static final _writeToParcel = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_app_SearchableInfo_writeToParcel")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public void writeToParcel(android.os.Parcel dest, int flags)
  void writeToParcel(os.Parcel dest, int flags) =>
      _writeToParcel(reference, dest.reference, flags);
}

class ExpandableListActivity extends Activity {
  ExpandableListActivity.fromRef(ffi.Pointer<ffi.Void> ref)
      : super.fromRef(ref);

  static final _ctor =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "android_app_ExpandableListActivity_new")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();

  /// from: public void <init>()
  ExpandableListActivity() : super.fromRef(_ctor());

  static final _onCreateContextMenu = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>)>>(
          "android_app_ExpandableListActivity_onCreateContextMenu")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void onCreateContextMenu(android.view.ContextMenu menu, android.view.View v, android.view.ContextMenu.ContextMenuInfo menuInfo)
  void onCreateContextMenu(
          jni.JlObject menu, jni.JlObject v, jni.JlObject menuInfo) =>
      _onCreateContextMenu(
          reference, menu.reference, v.reference, menuInfo.reference);

  static final _onChildClick = jlookup<
              ffi.NativeFunction<
                  ffi.Uint8 Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Int32,
                      ffi.Int32,
                      ffi.Int64)>>(
          "android_app_ExpandableListActivity_onChildClick")
      .asFunction<
          int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, int, int, int)>();

  /// from: public boolean onChildClick(android.widget.ExpandableListView parent, android.view.View v, int groupPosition, int childPosition, long id)
  bool onChildClick(jni.JlObject parent, jni.JlObject v, int groupPosition,
          int childPosition, int id) =>
      _onChildClick(reference, parent.reference, v.reference, groupPosition,
          childPosition, id) !=
      0;

  static final _onGroupCollapse = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "android_app_ExpandableListActivity_onGroupCollapse")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public void onGroupCollapse(int groupPosition)
  void onGroupCollapse(int groupPosition) =>
      _onGroupCollapse(reference, groupPosition);

  static final _onGroupExpand = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "android_app_ExpandableListActivity_onGroupExpand")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public void onGroupExpand(int groupPosition)
  void onGroupExpand(int groupPosition) =>
      _onGroupExpand(reference, groupPosition);

  static final _onRestoreInstanceState = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_ExpandableListActivity_onRestoreInstanceState")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: protected void onRestoreInstanceState(android.os.Bundle state)
  void onRestoreInstanceState(os.Bundle state) =>
      _onRestoreInstanceState(reference, state.reference);

  static final _onContentChanged =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_ExpandableListActivity_onContentChanged")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void onContentChanged()
  void onContentChanged() => _onContentChanged(reference);

  static final _setListAdapter = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_ExpandableListActivity_setListAdapter")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void setListAdapter(android.widget.ExpandableListAdapter adapter)
  void setListAdapter(jni.JlObject adapter) =>
      _setListAdapter(reference, adapter.reference);

  static final _getExpandableListView = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_ExpandableListActivity_getExpandableListView")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.widget.ExpandableListView getExpandableListView()
  jni.JlObject getExpandableListView() =>
      jni.JlObject.fromRef(_getExpandableListView(reference));

  static final _getExpandableListAdapter = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_ExpandableListActivity_getExpandableListAdapter")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.widget.ExpandableListAdapter getExpandableListAdapter()
  jni.JlObject getExpandableListAdapter() =>
      jni.JlObject.fromRef(_getExpandableListAdapter(reference));

  static final _getSelectedId =
      jlookup<ffi.NativeFunction<ffi.Int64 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_ExpandableListActivity_getSelectedId")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public long getSelectedId()
  int getSelectedId() => _getSelectedId(reference);

  static final _getSelectedPosition =
      jlookup<ffi.NativeFunction<ffi.Int64 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_ExpandableListActivity_getSelectedPosition")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public long getSelectedPosition()
  int getSelectedPosition() => _getSelectedPosition(reference);

  static final _setSelectedChild = jlookup<
              ffi.NativeFunction<
                  ffi.Uint8 Function(
                      ffi.Pointer<ffi.Void>, ffi.Int32, ffi.Int32, ffi.Uint8)>>(
          "android_app_ExpandableListActivity_setSelectedChild")
      .asFunction<int Function(ffi.Pointer<ffi.Void>, int, int, int)>();

  /// from: public boolean setSelectedChild(int groupPosition, int childPosition, boolean shouldExpandGroup)
  bool setSelectedChild(
          int groupPosition, int childPosition, bool shouldExpandGroup) =>
      _setSelectedChild(
          reference, groupPosition, childPosition, shouldExpandGroup ? 1 : 0) !=
      0;

  static final _setSelectedGroup = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "android_app_ExpandableListActivity_setSelectedGroup")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public void setSelectedGroup(int groupPosition)
  void setSelectedGroup(int groupPosition) =>
      _setSelectedGroup(reference, groupPosition);
}

class Application extends content.ContextWrapper {
  Application.fromRef(ffi.Pointer<ffi.Void> ref) : super.fromRef(ref);

  static final _ctor =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "android_app_Application_new")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();

  /// from: public void <init>()
  Application() : super.fromRef(_ctor());

  static final _onCreate =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_Application_onCreate")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void onCreate()
  void onCreate() => _onCreate(reference);

  static final _onTerminate =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_Application_onTerminate")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void onTerminate()
  void onTerminate() => _onTerminate(reference);

  static final _onConfigurationChanged = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Application_onConfigurationChanged")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void onConfigurationChanged(android.content.res.Configuration newConfig)
  void onConfigurationChanged(res.Configuration newConfig) =>
      _onConfigurationChanged(reference, newConfig.reference);

  static final _onLowMemory =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_Application_onLowMemory")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void onLowMemory()
  void onLowMemory() => _onLowMemory(reference);

  static final _onTrimMemory = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_app_Application_onTrimMemory")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public void onTrimMemory(int level)
  void onTrimMemory(int level) => _onTrimMemory(reference, level);

  static final _registerComponentCallbacks = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Application_registerComponentCallbacks")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void registerComponentCallbacks(android.content.ComponentCallbacks callback)
  void registerComponentCallbacks(content.ComponentCallbacks callback) =>
      _registerComponentCallbacks(reference, callback.reference);

  static final _unregisterComponentCallbacks = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Application_unregisterComponentCallbacks")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void unregisterComponentCallbacks(android.content.ComponentCallbacks callback)
  void unregisterComponentCallbacks(content.ComponentCallbacks callback) =>
      _unregisterComponentCallbacks(reference, callback.reference);

  static final _registerActivityLifecycleCallbacks = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Application_registerActivityLifecycleCallbacks")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void registerActivityLifecycleCallbacks(android.app.Application.ActivityLifecycleCallbacks callback)
  void registerActivityLifecycleCallbacks(
          Application_ActivityLifecycleCallbacks callback) =>
      _registerActivityLifecycleCallbacks(reference, callback.reference);

  static final _unregisterActivityLifecycleCallbacks = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Application_unregisterActivityLifecycleCallbacks")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void unregisterActivityLifecycleCallbacks(android.app.Application.ActivityLifecycleCallbacks callback)
  void unregisterActivityLifecycleCallbacks(
          Application_ActivityLifecycleCallbacks callback) =>
      _unregisterActivityLifecycleCallbacks(reference, callback.reference);

  static final _registerOnProvideAssistDataListener = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Application_registerOnProvideAssistDataListener")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void registerOnProvideAssistDataListener(android.app.Application.OnProvideAssistDataListener callback)
  void registerOnProvideAssistDataListener(
          Application_OnProvideAssistDataListener callback) =>
      _registerOnProvideAssistDataListener(reference, callback.reference);

  static final _unregisterOnProvideAssistDataListener = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Application_unregisterOnProvideAssistDataListener")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void unregisterOnProvideAssistDataListener(android.app.Application.OnProvideAssistDataListener callback)
  void unregisterOnProvideAssistDataListener(
          Application_OnProvideAssistDataListener callback) =>
      _unregisterOnProvideAssistDataListener(reference, callback.reference);

  static final _getProcessName =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "android_app_Application_getProcessName")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();

  /// from: static public java.lang.String getProcessName()
  static jni.JlString getProcessName() =>
      jni.JlString.fromRef(_getProcessName());
}

class Application_OnProvideAssistDataListener extends jni.JlObject {
  Application_OnProvideAssistDataListener.fromRef(ffi.Pointer<ffi.Void> ref)
      : super.fromRef(ref);

  static final _onProvideAssistData = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Application__OnProvideAssistDataListener_onProvideAssistData")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public abstract void onProvideAssistData(android.app.Activity activity, android.os.Bundle data)
  void onProvideAssistData(Activity activity, os.Bundle data) =>
      _onProvideAssistData(reference, activity.reference, data.reference);
}

class Application_ActivityLifecycleCallbacks extends jni.JlObject {
  Application_ActivityLifecycleCallbacks.fromRef(ffi.Pointer<ffi.Void> ref)
      : super.fromRef(ref);

  static final _onActivityCreated = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Application__ActivityLifecycleCallbacks_onActivityCreated")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public abstract void onActivityCreated(android.app.Activity activity, android.os.Bundle savedInstanceState)
  void onActivityCreated(Activity activity, os.Bundle savedInstanceState) =>
      _onActivityCreated(
          reference, activity.reference, savedInstanceState.reference);

  static final _onActivityStarted = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Application__ActivityLifecycleCallbacks_onActivityStarted")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public abstract void onActivityStarted(android.app.Activity activity)
  void onActivityStarted(Activity activity) =>
      _onActivityStarted(reference, activity.reference);

  static final _onActivityResumed = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Application__ActivityLifecycleCallbacks_onActivityResumed")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public abstract void onActivityResumed(android.app.Activity activity)
  void onActivityResumed(Activity activity) =>
      _onActivityResumed(reference, activity.reference);

  static final _onActivityPaused = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Application__ActivityLifecycleCallbacks_onActivityPaused")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public abstract void onActivityPaused(android.app.Activity activity)
  void onActivityPaused(Activity activity) =>
      _onActivityPaused(reference, activity.reference);

  static final _onActivityStopped = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Application__ActivityLifecycleCallbacks_onActivityStopped")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public abstract void onActivityStopped(android.app.Activity activity)
  void onActivityStopped(Activity activity) =>
      _onActivityStopped(reference, activity.reference);

  static final _onActivitySaveInstanceState = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Application__ActivityLifecycleCallbacks_onActivitySaveInstanceState")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public abstract void onActivitySaveInstanceState(android.app.Activity activity, android.os.Bundle outState)
  void onActivitySaveInstanceState(Activity activity, os.Bundle outState) =>
      _onActivitySaveInstanceState(
          reference, activity.reference, outState.reference);

  static final _onActivityDestroyed = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_Application__ActivityLifecycleCallbacks_onActivityDestroyed")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public abstract void onActivityDestroyed(android.app.Activity activity)
  void onActivityDestroyed(Activity activity) =>
      _onActivityDestroyed(reference, activity.reference);
}

class ActivityManager extends jni.JlObject {
  ActivityManager.fromRef(ffi.Pointer<ffi.Void> ref) : super.fromRef(ref);

  /// from: static public final java.lang.String ACTION_REPORT_HEAP_LIMIT
  static const ACTION_REPORT_HEAP_LIMIT =
      "android.app.action.REPORT_HEAP_LIMIT";

  /// from: static public final int LOCK_TASK_MODE_LOCKED
  static const LOCK_TASK_MODE_LOCKED = 1;

  /// from: static public final int LOCK_TASK_MODE_NONE
  static const LOCK_TASK_MODE_NONE = 0;

  /// from: static public final int LOCK_TASK_MODE_PINNED
  static const LOCK_TASK_MODE_PINNED = 2;

  /// from: static public final java.lang.String META_HOME_ALTERNATE
  static const META_HOME_ALTERNATE = "android.app.home.alternate";

  /// from: static public final int MOVE_TASK_NO_USER_ACTION
  static const MOVE_TASK_NO_USER_ACTION = 2;

  /// from: static public final int MOVE_TASK_WITH_HOME
  static const MOVE_TASK_WITH_HOME = 1;

  /// from: static public final int RECENT_IGNORE_UNAVAILABLE
  static const RECENT_IGNORE_UNAVAILABLE = 2;

  /// from: static public final int RECENT_WITH_EXCLUDED
  static const RECENT_WITH_EXCLUDED = 1;

  static final _ctor = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("android_app_ActivityManager_new")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: void <init>(android.content.Context context, android.os.Handler handler)
  ActivityManager(content.Context context, os.Handler handler)
      : super.fromRef(_ctor(context.reference, handler.reference));

  static final _getMemoryClass =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_ActivityManager_getMemoryClass")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int getMemoryClass()
  int getMemoryClass() => _getMemoryClass(reference);

  static final _getLargeMemoryClass =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_ActivityManager_getLargeMemoryClass")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int getLargeMemoryClass()
  int getLargeMemoryClass() => _getLargeMemoryClass(reference);

  static final _isLowRamDevice =
      jlookup<ffi.NativeFunction<ffi.Uint8 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_ActivityManager_isLowRamDevice")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public boolean isLowRamDevice()
  bool isLowRamDevice() => _isLowRamDevice(reference) != 0;

  static final _getRecentTasks = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, ffi.Int32,
                  ffi.Int32)>>("android_app_ActivityManager_getRecentTasks")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int, int)>();

  /// from: public java.util.List<android.app.ActivityManager.RecentTaskInfo> getRecentTasks(int maxNum, int flags)
  jni.JlObject getRecentTasks(int maxNum, int flags) =>
      jni.JlObject.fromRef(_getRecentTasks(reference, maxNum, flags));

  static final _getAppTasks = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_ActivityManager_getAppTasks")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.util.List<android.app.ActivityManager.AppTask> getAppTasks()
  jni.JlObject getAppTasks() => jni.JlObject.fromRef(_getAppTasks(reference));

  static final _getAppTaskThumbnailSize = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_ActivityManager_getAppTaskThumbnailSize")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.util.Size getAppTaskThumbnailSize()
  jni.JlObject getAppTaskThumbnailSize() =>
      jni.JlObject.fromRef(_getAppTaskThumbnailSize(reference));

  static final _addAppTask = jlookup<
              ffi.NativeFunction<
                  ffi.Int32 Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>)>>(
          "android_app_ActivityManager_addAppTask")
      .asFunction<
          int Function(
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public int addAppTask(android.app.Activity activity, android.content.Intent intent, android.app.ActivityManager.TaskDescription description, android.graphics.Bitmap thumbnail)
  int addAppTask(
          Activity activity,
          content.Intent intent,
          ActivityManager_TaskDescription description,
          jni.JlObject thumbnail) =>
      _addAppTask(reference, activity.reference, intent.reference,
          description.reference, thumbnail.reference);

  static final _getRunningTasks = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_app_ActivityManager_getRunningTasks")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public java.util.List<android.app.ActivityManager.RunningTaskInfo> getRunningTasks(int maxNum)
  jni.JlObject getRunningTasks(int maxNum) =>
      jni.JlObject.fromRef(_getRunningTasks(reference, maxNum));

  static final _moveTaskToFront = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Int32,
                  ffi.Int32)>>("android_app_ActivityManager_moveTaskToFront")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int, int)>();

  /// from: public void moveTaskToFront(int taskId, int flags)
  void moveTaskToFront(int taskId, int flags) =>
      _moveTaskToFront(reference, taskId, flags);

  static final _moveTaskToFront_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Int32, ffi.Int32,
                      ffi.Pointer<ffi.Void>)>>(
          "android_app_ActivityManager_moveTaskToFront_1")
      .asFunction<
          void Function(
              ffi.Pointer<ffi.Void>, int, int, ffi.Pointer<ffi.Void>)>();

  /// from: public void moveTaskToFront(int taskId, int flags, android.os.Bundle options)
  void moveTaskToFront_1(int taskId, int flags, os.Bundle options) =>
      _moveTaskToFront_1(reference, taskId, flags, options.reference);

  static final _getRunningServices = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_app_ActivityManager_getRunningServices")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public java.util.List<android.app.ActivityManager.RunningServiceInfo> getRunningServices(int maxNum)
  jni.JlObject getRunningServices(int maxNum) =>
      jni.JlObject.fromRef(_getRunningServices(reference, maxNum));

  static final _getRunningServiceControlPanel = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_ActivityManager_getRunningServiceControlPanel")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.PendingIntent getRunningServiceControlPanel(android.content.ComponentName service)
  PendingIntent getRunningServiceControlPanel(content.ComponentName service) =>
      PendingIntent.fromRef(
          _getRunningServiceControlPanel(reference, service.reference));

  static final _getMemoryInfo = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_ActivityManager_getMemoryInfo")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void getMemoryInfo(android.app.ActivityManager.MemoryInfo outInfo)
  void getMemoryInfo(ActivityManager_MemoryInfo outInfo) =>
      _getMemoryInfo(reference, outInfo.reference);

  static final _clearApplicationUserData =
      jlookup<ffi.NativeFunction<ffi.Uint8 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_ActivityManager_clearApplicationUserData")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public boolean clearApplicationUserData()
  bool clearApplicationUserData() => _clearApplicationUserData(reference) != 0;

  static final _getProcessesInErrorState = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_ActivityManager_getProcessesInErrorState")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.util.List<android.app.ActivityManager.ProcessErrorStateInfo> getProcessesInErrorState()
  jni.JlObject getProcessesInErrorState() =>
      jni.JlObject.fromRef(_getProcessesInErrorState(reference));

  static final _isBackgroundRestricted =
      jlookup<ffi.NativeFunction<ffi.Uint8 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_ActivityManager_isBackgroundRestricted")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public boolean isBackgroundRestricted()
  bool isBackgroundRestricted() => _isBackgroundRestricted(reference) != 0;

  static final _getRunningAppProcesses = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_ActivityManager_getRunningAppProcesses")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.util.List<android.app.ActivityManager.RunningAppProcessInfo> getRunningAppProcesses()
  jni.JlObject getRunningAppProcesses() =>
      jni.JlObject.fromRef(_getRunningAppProcesses(reference));

  static final _getMyMemoryState =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_ActivityManager_getMyMemoryState")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: static public void getMyMemoryState(android.app.ActivityManager.RunningAppProcessInfo outState)
  static void getMyMemoryState(
          ActivityManager_RunningAppProcessInfo outState) =>
      _getMyMemoryState(outState.reference);

  static final _getProcessMemoryInfo = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_ActivityManager_getProcessMemoryInfo")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.os.Debug.MemoryInfo[] getProcessMemoryInfo(int[] pids)
  jni.JlObject getProcessMemoryInfo(jni.JlObject pids) =>
      jni.JlObject.fromRef(_getProcessMemoryInfo(reference, pids.reference));

  static final _restartPackage = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_ActivityManager_restartPackage")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void restartPackage(java.lang.String packageName)
  void restartPackage(jni.JlString packageName) =>
      _restartPackage(reference, packageName.reference);

  static final _killBackgroundProcesses = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_ActivityManager_killBackgroundProcesses")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void killBackgroundProcesses(java.lang.String packageName)
  void killBackgroundProcesses(jni.JlString packageName) =>
      _killBackgroundProcesses(reference, packageName.reference);

  static final _getDeviceConfigurationInfo = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_ActivityManager_getDeviceConfigurationInfo")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.content.pm.ConfigurationInfo getDeviceConfigurationInfo()
  pm.ConfigurationInfo getDeviceConfigurationInfo() =>
      pm.ConfigurationInfo.fromRef(_getDeviceConfigurationInfo(reference));

  static final _getLauncherLargeIconDensity =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_ActivityManager_getLauncherLargeIconDensity")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int getLauncherLargeIconDensity()
  int getLauncherLargeIconDensity() => _getLauncherLargeIconDensity(reference);

  static final _getLauncherLargeIconSize =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_ActivityManager_getLauncherLargeIconSize")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int getLauncherLargeIconSize()
  int getLauncherLargeIconSize() => _getLauncherLargeIconSize(reference);

  static final _isUserAMonkey =
      jlookup<ffi.NativeFunction<ffi.Uint8 Function()>>(
              "android_app_ActivityManager_isUserAMonkey")
          .asFunction<int Function()>();

  /// from: static public boolean isUserAMonkey()
  static bool isUserAMonkey() => _isUserAMonkey() != 0;

  static final _isRunningInTestHarness =
      jlookup<ffi.NativeFunction<ffi.Uint8 Function()>>(
              "android_app_ActivityManager_isRunningInTestHarness")
          .asFunction<int Function()>();

  /// from: static public boolean isRunningInTestHarness()
  static bool isRunningInTestHarness() => _isRunningInTestHarness() != 0;

  static final _dumpPackageState = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_ActivityManager_dumpPackageState")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public void dumpPackageState(java.io.FileDescriptor fd, java.lang.String packageName)
  void dumpPackageState(jni.JlObject fd, jni.JlString packageName) =>
      _dumpPackageState(reference, fd.reference, packageName.reference);

  static final _setWatchHeapLimit = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  ffi.Int64)>>("android_app_ActivityManager_setWatchHeapLimit")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public void setWatchHeapLimit(long pssSize)
  void setWatchHeapLimit(int pssSize) => _setWatchHeapLimit(reference, pssSize);

  static final _clearWatchHeapLimit =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_ActivityManager_clearWatchHeapLimit")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void clearWatchHeapLimit()
  void clearWatchHeapLimit() => _clearWatchHeapLimit(reference);

  static final _isInLockTaskMode =
      jlookup<ffi.NativeFunction<ffi.Uint8 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_ActivityManager_isInLockTaskMode")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public boolean isInLockTaskMode()
  bool isInLockTaskMode() => _isInLockTaskMode(reference) != 0;

  static final _getLockTaskModeState =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_ActivityManager_getLockTaskModeState")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int getLockTaskModeState()
  int getLockTaskModeState() => _getLockTaskModeState(reference);

  static final _setVrThread =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Int32)>>(
              "android_app_ActivityManager_setVrThread")
          .asFunction<void Function(int)>();

  /// from: static public void setVrThread(int tid)
  static void setVrThread(int tid) => _setVrThread(tid);
}

class ActivityManager_TaskDescription extends jni.JlObject {
  ActivityManager_TaskDescription.fromRef(ffi.Pointer<ffi.Void> ref)
      : super.fromRef(ref);

  /// from: static public final android.os.Parcelable.Creator<android.app.ActivityManager.TaskDescription> CREATOR
  static final _getCREATOR =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "get_android_app_ActivityManager__TaskDescription_CREATOR")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();
  static os.Parcelable_Creator get CREATOR =>
      os.Parcelable_Creator.fromRef(_getCREATOR());

  static final _ctor = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "android_app_ActivityManager__TaskDescription_new")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public void <init>(java.lang.String label, android.graphics.Bitmap icon, int colorPrimary)
  ActivityManager_TaskDescription(
      jni.JlString label, jni.JlObject icon, int colorPrimary)
      : super.fromRef(_ctor(label.reference, icon.reference, colorPrimary));

  static final _ctor_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Int32, ffi.Int32)>>(
          "android_app_ActivityManager__TaskDescription_new_1")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int, int)>();

  /// from: public void <init>(java.lang.String label, int iconRes, int colorPrimary)
  ActivityManager_TaskDescription.ctor_1(
      jni.JlString label, int iconRes, int colorPrimary)
      : super.fromRef(_ctor_1(label.reference, iconRes, colorPrimary));

  static final _ctor_2 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_ActivityManager__TaskDescription_new_2")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void <init>(java.lang.String label, android.graphics.Bitmap icon)
  ActivityManager_TaskDescription.ctor_2(jni.JlString label, jni.JlObject icon)
      : super.fromRef(_ctor_2(label.reference, icon.reference));

  static final _ctor_3 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "android_app_ActivityManager__TaskDescription_new_3")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public void <init>(java.lang.String label, int iconRes)
  ActivityManager_TaskDescription.ctor_3(jni.JlString label, int iconRes)
      : super.fromRef(_ctor_3(label.reference, iconRes));

  static final _ctor_4 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_ActivityManager__TaskDescription_new_4")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void <init>(java.lang.String label)
  ActivityManager_TaskDescription.ctor_4(jni.JlString label)
      : super.fromRef(_ctor_4(label.reference));

  static final _ctor_5 =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "android_app_ActivityManager__TaskDescription_new_5")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();

  /// from: public void <init>()
  ActivityManager_TaskDescription.ctor_5() : super.fromRef(_ctor_5());

  static final _ctor_6 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_ActivityManager__TaskDescription_new_6")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void <init>(android.app.ActivityManager.TaskDescription td)
  ActivityManager_TaskDescription.ctor_6(ActivityManager_TaskDescription td)
      : super.fromRef(_ctor_6(td.reference));

  static final _getLabel = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_ActivityManager__TaskDescription_getLabel")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.String getLabel()
  jni.JlString getLabel() => jni.JlString.fromRef(_getLabel(reference));

  static final _getIcon = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_ActivityManager__TaskDescription_getIcon")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.graphics.Bitmap getIcon()
  jni.JlObject getIcon() => jni.JlObject.fromRef(_getIcon(reference));

  static final _getPrimaryColor =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_ActivityManager__TaskDescription_getPrimaryColor")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int getPrimaryColor()
  int getPrimaryColor() => _getPrimaryColor(reference);

  static final _describeContents =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_ActivityManager__TaskDescription_describeContents")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int describeContents()
  int describeContents() => _describeContents(reference);

  static final _writeToParcel = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "android_app_ActivityManager__TaskDescription_writeToParcel")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public void writeToParcel(android.os.Parcel dest, int flags)
  void writeToParcel(os.Parcel dest, int flags) =>
      _writeToParcel(reference, dest.reference, flags);

  static final _readFromParcel = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_ActivityManager__TaskDescription_readFromParcel")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void readFromParcel(android.os.Parcel source)
  void readFromParcel(os.Parcel source) =>
      _readFromParcel(reference, source.reference);

  static final _toString_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_ActivityManager__TaskDescription_toString_1")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.String toString()
  jni.JlString toString_1() => jni.JlString.fromRef(_toString_1(reference));
}

class ActivityManager_RunningTaskInfo extends jni.JlObject {
  ActivityManager_RunningTaskInfo.fromRef(ffi.Pointer<ffi.Void> ref)
      : super.fromRef(ref);

  /// from: static public final android.os.Parcelable.Creator<android.app.ActivityManager.RunningTaskInfo> CREATOR
  static final _getCREATOR =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "get_android_app_ActivityManager__RunningTaskInfo_CREATOR")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();
  static os.Parcelable_Creator get CREATOR =>
      os.Parcelable_Creator.fromRef(_getCREATOR());

  /// from: public android.content.ComponentName baseActivity
  static final _getbaseActivity = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_app_ActivityManager__RunningTaskInfo_baseActivity")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>();
  content.ComponentName get baseActivity =>
      content.ComponentName.fromRef(_getbaseActivity(reference));
  static final _setbaseActivity = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "set_android_app_ActivityManager__RunningTaskInfo_baseActivity")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();
  set baseActivity(content.ComponentName value) =>
      _setbaseActivity(reference, value.reference);

  /// from: public java.lang.CharSequence description
  static final _getdescription = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_app_ActivityManager__RunningTaskInfo_description")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>();
  jni.JlObject get description =>
      jni.JlObject.fromRef(_getdescription(reference));
  static final _setdescription = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "set_android_app_ActivityManager__RunningTaskInfo_description")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();
  set description(jni.JlObject value) =>
      _setdescription(reference, value.reference);

  /// from: public int id
  static final _getid = jlookup<
          ffi.NativeFunction<
              ffi.Int32 Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_app_ActivityManager__RunningTaskInfo_id")
      .asFunction<
          int Function(
    ffi.Pointer<ffi.Void>,
  )>();
  int get id => _getid(reference);
  static final _setid = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "set_android_app_ActivityManager__RunningTaskInfo_id")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();
  set id(int value) => _setid(reference, value);

  /// from: public int numActivities
  static final _getnumActivities = jlookup<
          ffi.NativeFunction<
              ffi.Int32 Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_app_ActivityManager__RunningTaskInfo_numActivities")
      .asFunction<
          int Function(
    ffi.Pointer<ffi.Void>,
  )>();
  int get numActivities => _getnumActivities(reference);
  static final _setnumActivities = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "set_android_app_ActivityManager__RunningTaskInfo_numActivities")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();
  set numActivities(int value) => _setnumActivities(reference, value);

  /// from: public int numRunning
  static final _getnumRunning = jlookup<
          ffi.NativeFunction<
              ffi.Int32 Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_app_ActivityManager__RunningTaskInfo_numRunning")
      .asFunction<
          int Function(
    ffi.Pointer<ffi.Void>,
  )>();
  int get numRunning => _getnumRunning(reference);
  static final _setnumRunning = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "set_android_app_ActivityManager__RunningTaskInfo_numRunning")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();
  set numRunning(int value) => _setnumRunning(reference, value);

  /// from: public android.graphics.Bitmap thumbnail
  static final _getthumbnail = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_app_ActivityManager__RunningTaskInfo_thumbnail")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>();
  jni.JlObject get thumbnail => jni.JlObject.fromRef(_getthumbnail(reference));
  static final _setthumbnail = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "set_android_app_ActivityManager__RunningTaskInfo_thumbnail")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();
  set thumbnail(jni.JlObject value) =>
      _setthumbnail(reference, value.reference);

  /// from: public android.content.ComponentName topActivity
  static final _gettopActivity = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_app_ActivityManager__RunningTaskInfo_topActivity")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>();
  content.ComponentName get topActivity =>
      content.ComponentName.fromRef(_gettopActivity(reference));
  static final _settopActivity = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "set_android_app_ActivityManager__RunningTaskInfo_topActivity")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();
  set topActivity(content.ComponentName value) =>
      _settopActivity(reference, value.reference);

  static final _ctor =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "android_app_ActivityManager__RunningTaskInfo_new")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();

  /// from: public void <init>()
  ActivityManager_RunningTaskInfo() : super.fromRef(_ctor());

  static final _describeContents =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_ActivityManager__RunningTaskInfo_describeContents")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int describeContents()
  int describeContents() => _describeContents(reference);

  static final _writeToParcel = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "android_app_ActivityManager__RunningTaskInfo_writeToParcel")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public void writeToParcel(android.os.Parcel dest, int flags)
  void writeToParcel(os.Parcel dest, int flags) =>
      _writeToParcel(reference, dest.reference, flags);

  static final _readFromParcel = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_ActivityManager__RunningTaskInfo_readFromParcel")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void readFromParcel(android.os.Parcel source)
  void readFromParcel(os.Parcel source) =>
      _readFromParcel(reference, source.reference);
}

class ActivityManager_RunningServiceInfo extends jni.JlObject {
  ActivityManager_RunningServiceInfo.fromRef(ffi.Pointer<ffi.Void> ref)
      : super.fromRef(ref);

  /// from: static public final android.os.Parcelable.Creator<android.app.ActivityManager.RunningServiceInfo> CREATOR
  static final _getCREATOR =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "get_android_app_ActivityManager__RunningServiceInfo_CREATOR")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();
  static os.Parcelable_Creator get CREATOR =>
      os.Parcelable_Creator.fromRef(_getCREATOR());

  /// from: static public final int FLAG_FOREGROUND
  static const FLAG_FOREGROUND = 2;

  /// from: static public final int FLAG_PERSISTENT_PROCESS
  static const FLAG_PERSISTENT_PROCESS = 8;

  /// from: static public final int FLAG_STARTED
  static const FLAG_STARTED = 1;

  /// from: static public final int FLAG_SYSTEM_PROCESS
  static const FLAG_SYSTEM_PROCESS = 4;

  /// from: public long activeSince
  static final _getactiveSince = jlookup<
          ffi.NativeFunction<
              ffi.Int64 Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_app_ActivityManager__RunningServiceInfo_activeSince")
      .asFunction<
          int Function(
    ffi.Pointer<ffi.Void>,
  )>();
  int get activeSince => _getactiveSince(reference);
  static final _setactiveSince = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Int64)>>(
          "set_android_app_ActivityManager__RunningServiceInfo_activeSince")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();
  set activeSince(int value) => _setactiveSince(reference, value);

  /// from: public int clientCount
  static final _getclientCount = jlookup<
          ffi.NativeFunction<
              ffi.Int32 Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_app_ActivityManager__RunningServiceInfo_clientCount")
      .asFunction<
          int Function(
    ffi.Pointer<ffi.Void>,
  )>();
  int get clientCount => _getclientCount(reference);
  static final _setclientCount = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "set_android_app_ActivityManager__RunningServiceInfo_clientCount")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();
  set clientCount(int value) => _setclientCount(reference, value);

  /// from: public int clientLabel
  static final _getclientLabel = jlookup<
          ffi.NativeFunction<
              ffi.Int32 Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_app_ActivityManager__RunningServiceInfo_clientLabel")
      .asFunction<
          int Function(
    ffi.Pointer<ffi.Void>,
  )>();
  int get clientLabel => _getclientLabel(reference);
  static final _setclientLabel = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "set_android_app_ActivityManager__RunningServiceInfo_clientLabel")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();
  set clientLabel(int value) => _setclientLabel(reference, value);

  /// from: public java.lang.String clientPackage
  static final _getclientPackage = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_app_ActivityManager__RunningServiceInfo_clientPackage")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>();
  jni.JlString get clientPackage =>
      jni.JlString.fromRef(_getclientPackage(reference));
  static final _setclientPackage = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "set_android_app_ActivityManager__RunningServiceInfo_clientPackage")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();
  set clientPackage(jni.JlString value) =>
      _setclientPackage(reference, value.reference);

  /// from: public int crashCount
  static final _getcrashCount = jlookup<
          ffi.NativeFunction<
              ffi.Int32 Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_app_ActivityManager__RunningServiceInfo_crashCount")
      .asFunction<
          int Function(
    ffi.Pointer<ffi.Void>,
  )>();
  int get crashCount => _getcrashCount(reference);
  static final _setcrashCount = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "set_android_app_ActivityManager__RunningServiceInfo_crashCount")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();
  set crashCount(int value) => _setcrashCount(reference, value);

  /// from: public int flags
  static final _getflags = jlookup<
          ffi.NativeFunction<
              ffi.Int32 Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_app_ActivityManager__RunningServiceInfo_flags")
      .asFunction<
          int Function(
    ffi.Pointer<ffi.Void>,
  )>();
  int get flags => _getflags(reference);
  static final _setflags = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "set_android_app_ActivityManager__RunningServiceInfo_flags")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();
  set flags(int value) => _setflags(reference, value);

  /// from: public boolean foreground
  static final _getforeground = jlookup<
          ffi.NativeFunction<
              ffi.Uint8 Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_app_ActivityManager__RunningServiceInfo_foreground")
      .asFunction<
          int Function(
    ffi.Pointer<ffi.Void>,
  )>();
  bool get foreground => _getforeground(reference) != 0;
  static final _setforeground = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Uint8)>>(
          "set_android_app_ActivityManager__RunningServiceInfo_foreground")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();
  set foreground(bool value) => _setforeground(reference, value ? 1 : 0);

  /// from: public long lastActivityTime
  static final _getlastActivityTime = jlookup<
          ffi.NativeFunction<
              ffi.Int64 Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_app_ActivityManager__RunningServiceInfo_lastActivityTime")
      .asFunction<
          int Function(
    ffi.Pointer<ffi.Void>,
  )>();
  int get lastActivityTime => _getlastActivityTime(reference);
  static final _setlastActivityTime = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Int64)>>(
          "set_android_app_ActivityManager__RunningServiceInfo_lastActivityTime")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();
  set lastActivityTime(int value) => _setlastActivityTime(reference, value);

  /// from: public int pid
  static final _getpid = jlookup<
          ffi.NativeFunction<
              ffi.Int32 Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_app_ActivityManager__RunningServiceInfo_pid")
      .asFunction<
          int Function(
    ffi.Pointer<ffi.Void>,
  )>();
  int get pid => _getpid(reference);
  static final _setpid = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "set_android_app_ActivityManager__RunningServiceInfo_pid")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();
  set pid(int value) => _setpid(reference, value);

  /// from: public java.lang.String process
  static final _getprocess = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_app_ActivityManager__RunningServiceInfo_process")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>();
  jni.JlString get process => jni.JlString.fromRef(_getprocess(reference));
  static final _setprocess = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "set_android_app_ActivityManager__RunningServiceInfo_process")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();
  set process(jni.JlString value) => _setprocess(reference, value.reference);

  /// from: public long restarting
  static final _getrestarting = jlookup<
          ffi.NativeFunction<
              ffi.Int64 Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_app_ActivityManager__RunningServiceInfo_restarting")
      .asFunction<
          int Function(
    ffi.Pointer<ffi.Void>,
  )>();
  int get restarting => _getrestarting(reference);
  static final _setrestarting = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Int64)>>(
          "set_android_app_ActivityManager__RunningServiceInfo_restarting")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();
  set restarting(int value) => _setrestarting(reference, value);

  /// from: public android.content.ComponentName service
  static final _getservice = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_app_ActivityManager__RunningServiceInfo_service")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>();
  content.ComponentName get service =>
      content.ComponentName.fromRef(_getservice(reference));
  static final _setservice = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "set_android_app_ActivityManager__RunningServiceInfo_service")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();
  set service(content.ComponentName value) =>
      _setservice(reference, value.reference);

  /// from: public boolean started
  static final _getstarted = jlookup<
          ffi.NativeFunction<
              ffi.Uint8 Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_app_ActivityManager__RunningServiceInfo_started")
      .asFunction<
          int Function(
    ffi.Pointer<ffi.Void>,
  )>();
  bool get started => _getstarted(reference) != 0;
  static final _setstarted = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Uint8)>>(
          "set_android_app_ActivityManager__RunningServiceInfo_started")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();
  set started(bool value) => _setstarted(reference, value ? 1 : 0);

  /// from: public int uid
  static final _getuid = jlookup<
          ffi.NativeFunction<
              ffi.Int32 Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_app_ActivityManager__RunningServiceInfo_uid")
      .asFunction<
          int Function(
    ffi.Pointer<ffi.Void>,
  )>();
  int get uid => _getuid(reference);
  static final _setuid = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "set_android_app_ActivityManager__RunningServiceInfo_uid")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();
  set uid(int value) => _setuid(reference, value);

  static final _ctor =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "android_app_ActivityManager__RunningServiceInfo_new")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();

  /// from: public void <init>()
  ActivityManager_RunningServiceInfo() : super.fromRef(_ctor());

  static final _describeContents = jlookup<
              ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_ActivityManager__RunningServiceInfo_describeContents")
      .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int describeContents()
  int describeContents() => _describeContents(reference);

  static final _writeToParcel = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "android_app_ActivityManager__RunningServiceInfo_writeToParcel")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public void writeToParcel(android.os.Parcel dest, int flags)
  void writeToParcel(os.Parcel dest, int flags) =>
      _writeToParcel(reference, dest.reference, flags);

  static final _readFromParcel = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_ActivityManager__RunningServiceInfo_readFromParcel")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void readFromParcel(android.os.Parcel source)
  void readFromParcel(os.Parcel source) =>
      _readFromParcel(reference, source.reference);
}

class ActivityManager_RunningAppProcessInfo extends jni.JlObject {
  ActivityManager_RunningAppProcessInfo.fromRef(ffi.Pointer<ffi.Void> ref)
      : super.fromRef(ref);

  /// from: static public final android.os.Parcelable.Creator<android.app.ActivityManager.RunningAppProcessInfo> CREATOR
  static final _getCREATOR =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "get_android_app_ActivityManager__RunningAppProcessInfo_CREATOR")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();
  static os.Parcelable_Creator get CREATOR =>
      os.Parcelable_Creator.fromRef(_getCREATOR());

  /// from: static public final int IMPORTANCE_BACKGROUND
  static const IMPORTANCE_BACKGROUND = 400;

  /// from: static public final int IMPORTANCE_CACHED
  static const IMPORTANCE_CACHED = 400;

  /// from: static public final int IMPORTANCE_CANT_SAVE_STATE
  static const IMPORTANCE_CANT_SAVE_STATE = 350;

  /// from: static public final int IMPORTANCE_EMPTY
  static const IMPORTANCE_EMPTY = 500;

  /// from: static public final int IMPORTANCE_FOREGROUND
  static const IMPORTANCE_FOREGROUND = 100;

  /// from: static public final int IMPORTANCE_FOREGROUND_SERVICE
  static const IMPORTANCE_FOREGROUND_SERVICE = 125;

  /// from: static public final int IMPORTANCE_GONE
  static const IMPORTANCE_GONE = 1000;

  /// from: static public final int IMPORTANCE_PERCEPTIBLE
  static const IMPORTANCE_PERCEPTIBLE = 230;

  /// from: static public final int IMPORTANCE_PERCEPTIBLE_PRE_26
  static const IMPORTANCE_PERCEPTIBLE_PRE_26 = 130;

  /// from: static public final int IMPORTANCE_SERVICE
  static const IMPORTANCE_SERVICE = 300;

  /// from: static public final int IMPORTANCE_TOP_SLEEPING
  static const IMPORTANCE_TOP_SLEEPING = 325;

  /// from: static public final int IMPORTANCE_TOP_SLEEPING_PRE_28
  static const IMPORTANCE_TOP_SLEEPING_PRE_28 = 150;

  /// from: static public final int IMPORTANCE_VISIBLE
  static const IMPORTANCE_VISIBLE = 200;

  /// from: static public final int REASON_PROVIDER_IN_USE
  static const REASON_PROVIDER_IN_USE = 1;

  /// from: static public final int REASON_SERVICE_IN_USE
  static const REASON_SERVICE_IN_USE = 2;

  /// from: static public final int REASON_UNKNOWN
  static const REASON_UNKNOWN = 0;

  /// from: public int importance
  static final _getimportance = jlookup<
          ffi.NativeFunction<
              ffi.Int32 Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_app_ActivityManager__RunningAppProcessInfo_importance")
      .asFunction<
          int Function(
    ffi.Pointer<ffi.Void>,
  )>();
  int get importance => _getimportance(reference);
  static final _setimportance = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "set_android_app_ActivityManager__RunningAppProcessInfo_importance")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();
  set importance(int value) => _setimportance(reference, value);

  /// from: public int importanceReasonCode
  static final _getimportanceReasonCode = jlookup<
          ffi.NativeFunction<
              ffi.Int32 Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_app_ActivityManager__RunningAppProcessInfo_importanceReasonCode")
      .asFunction<
          int Function(
    ffi.Pointer<ffi.Void>,
  )>();
  int get importanceReasonCode => _getimportanceReasonCode(reference);
  static final _setimportanceReasonCode = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "set_android_app_ActivityManager__RunningAppProcessInfo_importanceReasonCode")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();
  set importanceReasonCode(int value) =>
      _setimportanceReasonCode(reference, value);

  /// from: public android.content.ComponentName importanceReasonComponent
  static final _getimportanceReasonComponent = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_app_ActivityManager__RunningAppProcessInfo_importanceReasonComponent")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>();
  content.ComponentName get importanceReasonComponent =>
      content.ComponentName.fromRef(_getimportanceReasonComponent(reference));
  static final _setimportanceReasonComponent = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "set_android_app_ActivityManager__RunningAppProcessInfo_importanceReasonComponent")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();
  set importanceReasonComponent(content.ComponentName value) =>
      _setimportanceReasonComponent(reference, value.reference);

  /// from: public int importanceReasonPid
  static final _getimportanceReasonPid = jlookup<
          ffi.NativeFunction<
              ffi.Int32 Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_app_ActivityManager__RunningAppProcessInfo_importanceReasonPid")
      .asFunction<
          int Function(
    ffi.Pointer<ffi.Void>,
  )>();
  int get importanceReasonPid => _getimportanceReasonPid(reference);
  static final _setimportanceReasonPid = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "set_android_app_ActivityManager__RunningAppProcessInfo_importanceReasonPid")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();
  set importanceReasonPid(int value) =>
      _setimportanceReasonPid(reference, value);

  /// from: public int lastTrimLevel
  static final _getlastTrimLevel = jlookup<
          ffi.NativeFunction<
              ffi.Int32 Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_app_ActivityManager__RunningAppProcessInfo_lastTrimLevel")
      .asFunction<
          int Function(
    ffi.Pointer<ffi.Void>,
  )>();
  int get lastTrimLevel => _getlastTrimLevel(reference);
  static final _setlastTrimLevel = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "set_android_app_ActivityManager__RunningAppProcessInfo_lastTrimLevel")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();
  set lastTrimLevel(int value) => _setlastTrimLevel(reference, value);

  /// from: public int lru
  static final _getlru = jlookup<
          ffi.NativeFunction<
              ffi.Int32 Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_app_ActivityManager__RunningAppProcessInfo_lru")
      .asFunction<
          int Function(
    ffi.Pointer<ffi.Void>,
  )>();
  int get lru => _getlru(reference);
  static final _setlru = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "set_android_app_ActivityManager__RunningAppProcessInfo_lru")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();
  set lru(int value) => _setlru(reference, value);

  /// from: public int pid
  static final _getpid = jlookup<
          ffi.NativeFunction<
              ffi.Int32 Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_app_ActivityManager__RunningAppProcessInfo_pid")
      .asFunction<
          int Function(
    ffi.Pointer<ffi.Void>,
  )>();
  int get pid => _getpid(reference);
  static final _setpid = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "set_android_app_ActivityManager__RunningAppProcessInfo_pid")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();
  set pid(int value) => _setpid(reference, value);

  /// from: public java.lang.String[] pkgList
  static final _getpkgList = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_app_ActivityManager__RunningAppProcessInfo_pkgList")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>();
  jni.JlObject get pkgList => jni.JlObject.fromRef(_getpkgList(reference));
  static final _setpkgList = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "set_android_app_ActivityManager__RunningAppProcessInfo_pkgList")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();
  set pkgList(jni.JlObject value) => _setpkgList(reference, value.reference);

  /// from: public java.lang.String processName
  static final _getprocessName = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_app_ActivityManager__RunningAppProcessInfo_processName")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>();
  jni.JlString get processName =>
      jni.JlString.fromRef(_getprocessName(reference));
  static final _setprocessName = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "set_android_app_ActivityManager__RunningAppProcessInfo_processName")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();
  set processName(jni.JlString value) =>
      _setprocessName(reference, value.reference);

  /// from: public int uid
  static final _getuid = jlookup<
          ffi.NativeFunction<
              ffi.Int32 Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_app_ActivityManager__RunningAppProcessInfo_uid")
      .asFunction<
          int Function(
    ffi.Pointer<ffi.Void>,
  )>();
  int get uid => _getuid(reference);
  static final _setuid = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "set_android_app_ActivityManager__RunningAppProcessInfo_uid")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();
  set uid(int value) => _setuid(reference, value);

  static final _ctor =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "android_app_ActivityManager__RunningAppProcessInfo_new")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();

  /// from: public void <init>()
  ActivityManager_RunningAppProcessInfo() : super.fromRef(_ctor());

  static final _ctor_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                      ffi.Int32, ffi.Pointer<ffi.Void>)>>(
          "android_app_ActivityManager__RunningAppProcessInfo_new_1")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, int, ffi.Pointer<ffi.Void>)>();

  /// from: public void <init>(java.lang.String pProcessName, int pPid, java.lang.String[] pArr)
  ActivityManager_RunningAppProcessInfo.ctor_1(
      jni.JlString pProcessName, int pPid, jni.JlObject pArr)
      : super.fromRef(_ctor_1(pProcessName.reference, pPid, pArr.reference));

  static final _describeContents = jlookup<
              ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_ActivityManager__RunningAppProcessInfo_describeContents")
      .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int describeContents()
  int describeContents() => _describeContents(reference);

  static final _writeToParcel = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "android_app_ActivityManager__RunningAppProcessInfo_writeToParcel")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public void writeToParcel(android.os.Parcel dest, int flags)
  void writeToParcel(os.Parcel dest, int flags) =>
      _writeToParcel(reference, dest.reference, flags);

  static final _readFromParcel = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_ActivityManager__RunningAppProcessInfo_readFromParcel")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void readFromParcel(android.os.Parcel source)
  void readFromParcel(os.Parcel source) =>
      _readFromParcel(reference, source.reference);
}

class ActivityManager_RecentTaskInfo extends jni.JlObject {
  ActivityManager_RecentTaskInfo.fromRef(ffi.Pointer<ffi.Void> ref)
      : super.fromRef(ref);

  /// from: static public final android.os.Parcelable.Creator<android.app.ActivityManager.RecentTaskInfo> CREATOR
  static final _getCREATOR =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "get_android_app_ActivityManager__RecentTaskInfo_CREATOR")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();
  static os.Parcelable_Creator get CREATOR =>
      os.Parcelable_Creator.fromRef(_getCREATOR());

  /// from: public int affiliatedTaskId
  static final _getaffiliatedTaskId = jlookup<
          ffi.NativeFunction<
              ffi.Int32 Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_app_ActivityManager__RecentTaskInfo_affiliatedTaskId")
      .asFunction<
          int Function(
    ffi.Pointer<ffi.Void>,
  )>();
  int get affiliatedTaskId => _getaffiliatedTaskId(reference);
  static final _setaffiliatedTaskId = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "set_android_app_ActivityManager__RecentTaskInfo_affiliatedTaskId")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();
  set affiliatedTaskId(int value) => _setaffiliatedTaskId(reference, value);

  /// from: public android.content.ComponentName baseActivity
  static final _getbaseActivity = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_app_ActivityManager__RecentTaskInfo_baseActivity")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>();
  content.ComponentName get baseActivity =>
      content.ComponentName.fromRef(_getbaseActivity(reference));
  static final _setbaseActivity = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "set_android_app_ActivityManager__RecentTaskInfo_baseActivity")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();
  set baseActivity(content.ComponentName value) =>
      _setbaseActivity(reference, value.reference);

  /// from: public android.content.Intent baseIntent
  static final _getbaseIntent = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_app_ActivityManager__RecentTaskInfo_baseIntent")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>();
  content.Intent get baseIntent =>
      content.Intent.fromRef(_getbaseIntent(reference));
  static final _setbaseIntent = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "set_android_app_ActivityManager__RecentTaskInfo_baseIntent")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();
  set baseIntent(content.Intent value) =>
      _setbaseIntent(reference, value.reference);

  /// from: public java.lang.CharSequence description
  static final _getdescription = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_app_ActivityManager__RecentTaskInfo_description")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>();
  jni.JlObject get description =>
      jni.JlObject.fromRef(_getdescription(reference));
  static final _setdescription = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "set_android_app_ActivityManager__RecentTaskInfo_description")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();
  set description(jni.JlObject value) =>
      _setdescription(reference, value.reference);

  /// from: public int id
  static final _getid = jlookup<
          ffi.NativeFunction<
              ffi.Int32 Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_app_ActivityManager__RecentTaskInfo_id")
      .asFunction<
          int Function(
    ffi.Pointer<ffi.Void>,
  )>();
  int get id => _getid(reference);
  static final _setid = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "set_android_app_ActivityManager__RecentTaskInfo_id")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();
  set id(int value) => _setid(reference, value);

  /// from: public int numActivities
  static final _getnumActivities = jlookup<
          ffi.NativeFunction<
              ffi.Int32 Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_app_ActivityManager__RecentTaskInfo_numActivities")
      .asFunction<
          int Function(
    ffi.Pointer<ffi.Void>,
  )>();
  int get numActivities => _getnumActivities(reference);
  static final _setnumActivities = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "set_android_app_ActivityManager__RecentTaskInfo_numActivities")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();
  set numActivities(int value) => _setnumActivities(reference, value);

  /// from: public android.content.ComponentName origActivity
  static final _getorigActivity = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_app_ActivityManager__RecentTaskInfo_origActivity")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>();
  content.ComponentName get origActivity =>
      content.ComponentName.fromRef(_getorigActivity(reference));
  static final _setorigActivity = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "set_android_app_ActivityManager__RecentTaskInfo_origActivity")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();
  set origActivity(content.ComponentName value) =>
      _setorigActivity(reference, value.reference);

  /// from: public int persistentId
  static final _getpersistentId = jlookup<
          ffi.NativeFunction<
              ffi.Int32 Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_app_ActivityManager__RecentTaskInfo_persistentId")
      .asFunction<
          int Function(
    ffi.Pointer<ffi.Void>,
  )>();
  int get persistentId => _getpersistentId(reference);
  static final _setpersistentId = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "set_android_app_ActivityManager__RecentTaskInfo_persistentId")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();
  set persistentId(int value) => _setpersistentId(reference, value);

  /// from: public android.app.ActivityManager.TaskDescription taskDescription
  static final _gettaskDescription = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_app_ActivityManager__RecentTaskInfo_taskDescription")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>();
  ActivityManager_TaskDescription get taskDescription =>
      ActivityManager_TaskDescription.fromRef(_gettaskDescription(reference));
  static final _settaskDescription = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "set_android_app_ActivityManager__RecentTaskInfo_taskDescription")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();
  set taskDescription(ActivityManager_TaskDescription value) =>
      _settaskDescription(reference, value.reference);

  /// from: public android.content.ComponentName topActivity
  static final _gettopActivity = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_app_ActivityManager__RecentTaskInfo_topActivity")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>();
  content.ComponentName get topActivity =>
      content.ComponentName.fromRef(_gettopActivity(reference));
  static final _settopActivity = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "set_android_app_ActivityManager__RecentTaskInfo_topActivity")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();
  set topActivity(content.ComponentName value) =>
      _settopActivity(reference, value.reference);

  static final _ctor =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "android_app_ActivityManager__RecentTaskInfo_new")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();

  /// from: public void <init>()
  ActivityManager_RecentTaskInfo() : super.fromRef(_ctor());

  static final _describeContents =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_ActivityManager__RecentTaskInfo_describeContents")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int describeContents()
  int describeContents() => _describeContents(reference);

  static final _writeToParcel = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "android_app_ActivityManager__RecentTaskInfo_writeToParcel")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public void writeToParcel(android.os.Parcel dest, int flags)
  void writeToParcel(os.Parcel dest, int flags) =>
      _writeToParcel(reference, dest.reference, flags);

  static final _readFromParcel = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_ActivityManager__RecentTaskInfo_readFromParcel")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void readFromParcel(android.os.Parcel source)
  void readFromParcel(os.Parcel source) =>
      _readFromParcel(reference, source.reference);
}

class ActivityManager_ProcessErrorStateInfo extends jni.JlObject {
  ActivityManager_ProcessErrorStateInfo.fromRef(ffi.Pointer<ffi.Void> ref)
      : super.fromRef(ref);

  /// from: static public final int CRASHED
  static const CRASHED = 1;

  /// from: static public final android.os.Parcelable.Creator<android.app.ActivityManager.ProcessErrorStateInfo> CREATOR
  static final _getCREATOR =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "get_android_app_ActivityManager__ProcessErrorStateInfo_CREATOR")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();
  static os.Parcelable_Creator get CREATOR =>
      os.Parcelable_Creator.fromRef(_getCREATOR());

  /// from: static public final int NOT_RESPONDING
  static const NOT_RESPONDING = 2;

  /// from: static public final int NO_ERROR
  static const NO_ERROR = 0;

  /// from: public int condition
  static final _getcondition = jlookup<
          ffi.NativeFunction<
              ffi.Int32 Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_app_ActivityManager__ProcessErrorStateInfo_condition")
      .asFunction<
          int Function(
    ffi.Pointer<ffi.Void>,
  )>();
  int get condition => _getcondition(reference);
  static final _setcondition = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "set_android_app_ActivityManager__ProcessErrorStateInfo_condition")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();
  set condition(int value) => _setcondition(reference, value);

  /// from: public byte[] crashData
  static final _getcrashData = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_app_ActivityManager__ProcessErrorStateInfo_crashData")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>();
  jni.JlObject get crashData => jni.JlObject.fromRef(_getcrashData(reference));
  static final _setcrashData = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "set_android_app_ActivityManager__ProcessErrorStateInfo_crashData")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();
  set crashData(jni.JlObject value) =>
      _setcrashData(reference, value.reference);

  /// from: public java.lang.String longMsg
  static final _getlongMsg = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_app_ActivityManager__ProcessErrorStateInfo_longMsg")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>();
  jni.JlString get longMsg => jni.JlString.fromRef(_getlongMsg(reference));
  static final _setlongMsg = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "set_android_app_ActivityManager__ProcessErrorStateInfo_longMsg")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();
  set longMsg(jni.JlString value) => _setlongMsg(reference, value.reference);

  /// from: public int pid
  static final _getpid = jlookup<
          ffi.NativeFunction<
              ffi.Int32 Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_app_ActivityManager__ProcessErrorStateInfo_pid")
      .asFunction<
          int Function(
    ffi.Pointer<ffi.Void>,
  )>();
  int get pid => _getpid(reference);
  static final _setpid = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "set_android_app_ActivityManager__ProcessErrorStateInfo_pid")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();
  set pid(int value) => _setpid(reference, value);

  /// from: public java.lang.String processName
  static final _getprocessName = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_app_ActivityManager__ProcessErrorStateInfo_processName")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>();
  jni.JlString get processName =>
      jni.JlString.fromRef(_getprocessName(reference));
  static final _setprocessName = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "set_android_app_ActivityManager__ProcessErrorStateInfo_processName")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();
  set processName(jni.JlString value) =>
      _setprocessName(reference, value.reference);

  /// from: public java.lang.String shortMsg
  static final _getshortMsg = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_app_ActivityManager__ProcessErrorStateInfo_shortMsg")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>();
  jni.JlString get shortMsg => jni.JlString.fromRef(_getshortMsg(reference));
  static final _setshortMsg = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "set_android_app_ActivityManager__ProcessErrorStateInfo_shortMsg")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();
  set shortMsg(jni.JlString value) => _setshortMsg(reference, value.reference);

  /// from: public java.lang.String stackTrace
  static final _getstackTrace = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_app_ActivityManager__ProcessErrorStateInfo_stackTrace")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>();
  jni.JlString get stackTrace =>
      jni.JlString.fromRef(_getstackTrace(reference));
  static final _setstackTrace = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "set_android_app_ActivityManager__ProcessErrorStateInfo_stackTrace")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();
  set stackTrace(jni.JlString value) =>
      _setstackTrace(reference, value.reference);

  /// from: public java.lang.String tag
  static final _gettag = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_app_ActivityManager__ProcessErrorStateInfo_tag")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>();
  jni.JlString get tag => jni.JlString.fromRef(_gettag(reference));
  static final _settag = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "set_android_app_ActivityManager__ProcessErrorStateInfo_tag")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();
  set tag(jni.JlString value) => _settag(reference, value.reference);

  /// from: public int uid
  static final _getuid = jlookup<
          ffi.NativeFunction<
              ffi.Int32 Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_app_ActivityManager__ProcessErrorStateInfo_uid")
      .asFunction<
          int Function(
    ffi.Pointer<ffi.Void>,
  )>();
  int get uid => _getuid(reference);
  static final _setuid = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "set_android_app_ActivityManager__ProcessErrorStateInfo_uid")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();
  set uid(int value) => _setuid(reference, value);

  static final _ctor =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "android_app_ActivityManager__ProcessErrorStateInfo_new")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();

  /// from: public void <init>()
  ActivityManager_ProcessErrorStateInfo() : super.fromRef(_ctor());

  static final _describeContents = jlookup<
              ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_ActivityManager__ProcessErrorStateInfo_describeContents")
      .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int describeContents()
  int describeContents() => _describeContents(reference);

  static final _writeToParcel = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "android_app_ActivityManager__ProcessErrorStateInfo_writeToParcel")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public void writeToParcel(android.os.Parcel dest, int flags)
  void writeToParcel(os.Parcel dest, int flags) =>
      _writeToParcel(reference, dest.reference, flags);

  static final _readFromParcel = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_ActivityManager__ProcessErrorStateInfo_readFromParcel")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void readFromParcel(android.os.Parcel source)
  void readFromParcel(os.Parcel source) =>
      _readFromParcel(reference, source.reference);
}

class ActivityManager_MemoryInfo extends jni.JlObject {
  ActivityManager_MemoryInfo.fromRef(ffi.Pointer<ffi.Void> ref)
      : super.fromRef(ref);

  /// from: static public final android.os.Parcelable.Creator<android.app.ActivityManager.MemoryInfo> CREATOR
  static final _getCREATOR =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "get_android_app_ActivityManager__MemoryInfo_CREATOR")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();
  static os.Parcelable_Creator get CREATOR =>
      os.Parcelable_Creator.fromRef(_getCREATOR());

  /// from: public long availMem
  static final _getavailMem = jlookup<
          ffi.NativeFunction<
              ffi.Int64 Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_app_ActivityManager__MemoryInfo_availMem")
      .asFunction<
          int Function(
    ffi.Pointer<ffi.Void>,
  )>();
  int get availMem => _getavailMem(reference);
  static final _setavailMem = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Int64)>>(
          "set_android_app_ActivityManager__MemoryInfo_availMem")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();
  set availMem(int value) => _setavailMem(reference, value);

  /// from: public boolean lowMemory
  static final _getlowMemory = jlookup<
          ffi.NativeFunction<
              ffi.Uint8 Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_app_ActivityManager__MemoryInfo_lowMemory")
      .asFunction<
          int Function(
    ffi.Pointer<ffi.Void>,
  )>();
  bool get lowMemory => _getlowMemory(reference) != 0;
  static final _setlowMemory = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Uint8)>>(
          "set_android_app_ActivityManager__MemoryInfo_lowMemory")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();
  set lowMemory(bool value) => _setlowMemory(reference, value ? 1 : 0);

  /// from: public long threshold
  static final _getthreshold = jlookup<
          ffi.NativeFunction<
              ffi.Int64 Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_app_ActivityManager__MemoryInfo_threshold")
      .asFunction<
          int Function(
    ffi.Pointer<ffi.Void>,
  )>();
  int get threshold => _getthreshold(reference);
  static final _setthreshold = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Int64)>>(
          "set_android_app_ActivityManager__MemoryInfo_threshold")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();
  set threshold(int value) => _setthreshold(reference, value);

  /// from: public long totalMem
  static final _gettotalMem = jlookup<
          ffi.NativeFunction<
              ffi.Int64 Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_app_ActivityManager__MemoryInfo_totalMem")
      .asFunction<
          int Function(
    ffi.Pointer<ffi.Void>,
  )>();
  int get totalMem => _gettotalMem(reference);
  static final _settotalMem = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Int64)>>(
          "set_android_app_ActivityManager__MemoryInfo_totalMem")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();
  set totalMem(int value) => _settotalMem(reference, value);

  static final _ctor =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "android_app_ActivityManager__MemoryInfo_new")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();

  /// from: public void <init>()
  ActivityManager_MemoryInfo() : super.fromRef(_ctor());

  static final _describeContents =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_ActivityManager__MemoryInfo_describeContents")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int describeContents()
  int describeContents() => _describeContents(reference);

  static final _writeToParcel = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "android_app_ActivityManager__MemoryInfo_writeToParcel")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public void writeToParcel(android.os.Parcel dest, int flags)
  void writeToParcel(os.Parcel dest, int flags) =>
      _writeToParcel(reference, dest.reference, flags);

  static final _readFromParcel = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_ActivityManager__MemoryInfo_readFromParcel")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void readFromParcel(android.os.Parcel source)
  void readFromParcel(os.Parcel source) =>
      _readFromParcel(reference, source.reference);
}

class ActivityManager_AppTask extends jni.JlObject {
  ActivityManager_AppTask.fromRef(ffi.Pointer<ffi.Void> ref)
      : super.fromRef(ref);

  static final _ctor =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "android_app_ActivityManager__AppTask_new")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();

  /// from: void <init>()
  ActivityManager_AppTask() : super.fromRef(_ctor());

  static final _finishAndRemoveTask =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_ActivityManager__AppTask_finishAndRemoveTask")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void finishAndRemoveTask()
  void finishAndRemoveTask() => _finishAndRemoveTask(reference);

  static final _getTaskInfo = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_ActivityManager__AppTask_getTaskInfo")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.app.ActivityManager.RecentTaskInfo getTaskInfo()
  ActivityManager_RecentTaskInfo getTaskInfo() =>
      ActivityManager_RecentTaskInfo.fromRef(_getTaskInfo(reference));

  static final _moveToFront =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_ActivityManager__AppTask_moveToFront")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void moveToFront()
  void moveToFront() => _moveToFront(reference);

  static final _startActivity = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>)>>(
          "android_app_ActivityManager__AppTask_startActivity")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void startActivity(android.content.Context context, android.content.Intent intent, android.os.Bundle options)
  void startActivity(
          content.Context context, content.Intent intent, os.Bundle options) =>
      _startActivity(
          reference, context.reference, intent.reference, options.reference);

  static final _setExcludeFromRecents = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Uint8)>>(
          "android_app_ActivityManager__AppTask_setExcludeFromRecents")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public void setExcludeFromRecents(boolean exclude)
  void setExcludeFromRecents(bool exclude) =>
      _setExcludeFromRecents(reference, exclude ? 1 : 0);
}

class PendingIntent extends jni.JlObject {
  PendingIntent.fromRef(ffi.Pointer<ffi.Void> ref) : super.fromRef(ref);

  /// from: static public final android.os.Parcelable.Creator<android.app.PendingIntent> CREATOR
  static final _getCREATOR =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "get_android_app_PendingIntent_CREATOR")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();
  static os.Parcelable_Creator get CREATOR =>
      os.Parcelable_Creator.fromRef(_getCREATOR());

  /// from: static public final int FLAG_CANCEL_CURRENT
  static const FLAG_CANCEL_CURRENT = 268435456;

  /// from: static public final int FLAG_IMMUTABLE
  static const FLAG_IMMUTABLE = 67108864;

  /// from: static public final int FLAG_NO_CREATE
  static const FLAG_NO_CREATE = 536870912;

  /// from: static public final int FLAG_ONE_SHOT
  static const FLAG_ONE_SHOT = 1073741824;

  /// from: static public final int FLAG_UPDATE_CURRENT
  static const FLAG_UPDATE_CURRENT = 134217728;

  static final _ctor = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("android_app_PendingIntent_new")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: void <init>(android.os.IBinder target, java.lang.Object cookie)
  PendingIntent(os.IBinder target, jni.JlObject cookie)
      : super.fromRef(_ctor(target.reference, cookie.reference));

  static final _getActivity = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Int32,
                  ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_app_PendingIntent_getActivity")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, int, ffi.Pointer<ffi.Void>, int)>();

  /// from: static public android.app.PendingIntent getActivity(android.content.Context context, int requestCode, android.content.Intent intent, int flags)
  static PendingIntent getActivity(content.Context context, int requestCode,
          content.Intent intent, int flags) =>
      PendingIntent.fromRef(_getActivity(
          context.reference, requestCode, intent.reference, flags));

  static final _getActivity_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Int32,
                      ffi.Pointer<ffi.Void>,
                      ffi.Int32,
                      ffi.Pointer<ffi.Void>)>>(
          "android_app_PendingIntent_getActivity_1")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int,
              ffi.Pointer<ffi.Void>, int, ffi.Pointer<ffi.Void>)>();

  /// from: static public android.app.PendingIntent getActivity(android.content.Context context, int requestCode, android.content.Intent intent, int flags, android.os.Bundle options)
  static PendingIntent getActivity_1(content.Context context, int requestCode,
          content.Intent intent, int flags, os.Bundle options) =>
      PendingIntent.fromRef(_getActivity_1(context.reference, requestCode,
          intent.reference, flags, options.reference));

  static final _getActivities = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Int32,
                  ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_app_PendingIntent_getActivities")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, int, ffi.Pointer<ffi.Void>, int)>();

  /// from: static public android.app.PendingIntent getActivities(android.content.Context context, int requestCode, android.content.Intent[] intents, int flags)
  static PendingIntent getActivities(content.Context context, int requestCode,
          jni.JlObject intents, int flags) =>
      PendingIntent.fromRef(_getActivities(
          context.reference, requestCode, intents.reference, flags));

  static final _getActivities_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Int32,
                      ffi.Pointer<ffi.Void>,
                      ffi.Int32,
                      ffi.Pointer<ffi.Void>)>>(
          "android_app_PendingIntent_getActivities_1")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int,
              ffi.Pointer<ffi.Void>, int, ffi.Pointer<ffi.Void>)>();

  /// from: static public android.app.PendingIntent getActivities(android.content.Context context, int requestCode, android.content.Intent[] intents, int flags, android.os.Bundle options)
  static PendingIntent getActivities_1(content.Context context, int requestCode,
          jni.JlObject intents, int flags, os.Bundle options) =>
      PendingIntent.fromRef(_getActivities_1(context.reference, requestCode,
          intents.reference, flags, options.reference));

  static final _getBroadcast = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Int32,
                  ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_app_PendingIntent_getBroadcast")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, int, ffi.Pointer<ffi.Void>, int)>();

  /// from: static public android.app.PendingIntent getBroadcast(android.content.Context context, int requestCode, android.content.Intent intent, int flags)
  static PendingIntent getBroadcast(content.Context context, int requestCode,
          content.Intent intent, int flags) =>
      PendingIntent.fromRef(_getBroadcast(
          context.reference, requestCode, intent.reference, flags));

  static final _getService = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Int32,
                  ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_app_PendingIntent_getService")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, int, ffi.Pointer<ffi.Void>, int)>();

  /// from: static public android.app.PendingIntent getService(android.content.Context context, int requestCode, android.content.Intent intent, int flags)
  static PendingIntent getService(content.Context context, int requestCode,
          content.Intent intent, int flags) =>
      PendingIntent.fromRef(
          _getService(context.reference, requestCode, intent.reference, flags));

  static final _getForegroundService = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Int32,
                  ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_app_PendingIntent_getForegroundService")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, int, ffi.Pointer<ffi.Void>, int)>();

  /// from: static public android.app.PendingIntent getForegroundService(android.content.Context context, int requestCode, android.content.Intent intent, int flags)
  static PendingIntent getForegroundService(content.Context context,
          int requestCode, content.Intent intent, int flags) =>
      PendingIntent.fromRef(_getForegroundService(
          context.reference, requestCode, intent.reference, flags));

  static final _getIntentSender = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_PendingIntent_getIntentSender")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.content.IntentSender getIntentSender()
  content.IntentSender getIntentSender() =>
      content.IntentSender.fromRef(_getIntentSender(reference));

  static final _cancel =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_PendingIntent_cancel")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void cancel()
  void cancel() => _cancel(reference);

  static final _send =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_PendingIntent_send")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void send()
  void send() => _send(reference);

  static final _send_1 = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_app_PendingIntent_send_1")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public void send(int code)
  void send_1(int code) => _send_1(reference, code);

  static final _send_2 = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Int32,
                  ffi.Pointer<ffi.Void>)>>("android_app_PendingIntent_send_2")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int,
              ffi.Pointer<ffi.Void>)>();

  /// from: public void send(android.content.Context context, int code, android.content.Intent intent)
  void send_2(content.Context context, int code, content.Intent intent) =>
      _send_2(reference, context.reference, code, intent.reference);

  static final _send_3 = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Int32,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("android_app_PendingIntent_send_3")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, int, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public void send(int code, android.app.PendingIntent.OnFinished onFinished, android.os.Handler handler)
  void send_3(
          int code, PendingIntent_OnFinished onFinished, os.Handler handler) =>
      _send_3(reference, code, onFinished.reference, handler.reference);

  static final _send_4 = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Int32,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("android_app_PendingIntent_send_4")
      .asFunction<
          void Function(
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              int,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public void send(android.content.Context context, int code, android.content.Intent intent, android.app.PendingIntent.OnFinished onFinished, android.os.Handler handler)
  void send_4(content.Context context, int code, content.Intent intent,
          PendingIntent_OnFinished onFinished, os.Handler handler) =>
      _send_4(reference, context.reference, code, intent.reference,
          onFinished.reference, handler.reference);

  static final _send_5 = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Int32,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("android_app_PendingIntent_send_5")
      .asFunction<
          void Function(
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              int,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public void send(android.content.Context context, int code, android.content.Intent intent, android.app.PendingIntent.OnFinished onFinished, android.os.Handler handler, java.lang.String requiredPermission)
  void send_5(
          content.Context context,
          int code,
          content.Intent intent,
          PendingIntent_OnFinished onFinished,
          os.Handler handler,
          jni.JlString requiredPermission) =>
      _send_5(
          reference,
          context.reference,
          code,
          intent.reference,
          onFinished.reference,
          handler.reference,
          requiredPermission.reference);

  static final _send_6 = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Int32,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("android_app_PendingIntent_send_6")
      .asFunction<
          void Function(
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              int,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public void send(android.content.Context context, int code, android.content.Intent intent, android.app.PendingIntent.OnFinished onFinished, android.os.Handler handler, java.lang.String requiredPermission, android.os.Bundle options)
  void send_6(
          content.Context context,
          int code,
          content.Intent intent,
          PendingIntent_OnFinished onFinished,
          os.Handler handler,
          jni.JlString requiredPermission,
          os.Bundle options) =>
      _send_6(
          reference,
          context.reference,
          code,
          intent.reference,
          onFinished.reference,
          handler.reference,
          requiredPermission.reference,
          options.reference);

  static final _getTargetPackage = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_PendingIntent_getTargetPackage")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.String getTargetPackage()
  jni.JlString getTargetPackage() =>
      jni.JlString.fromRef(_getTargetPackage(reference));

  static final _getCreatorPackage = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_PendingIntent_getCreatorPackage")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.String getCreatorPackage()
  jni.JlString getCreatorPackage() =>
      jni.JlString.fromRef(_getCreatorPackage(reference));

  static final _getCreatorUid =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_PendingIntent_getCreatorUid")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int getCreatorUid()
  int getCreatorUid() => _getCreatorUid(reference);

  static final _getCreatorUserHandle = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_PendingIntent_getCreatorUserHandle")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.os.UserHandle getCreatorUserHandle()
  os.UserHandle getCreatorUserHandle() =>
      os.UserHandle.fromRef(_getCreatorUserHandle(reference));

  static final _equals_1 = jlookup<
          ffi.NativeFunction<
              ffi.Uint8 Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("android_app_PendingIntent_equals_1")
      .asFunction<int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public boolean equals(java.lang.Object otherObj)
  bool equals_1(jni.JlObject otherObj) =>
      _equals_1(reference, otherObj.reference) != 0;

  static final _hashCode_1 =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_PendingIntent_hashCode_1")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int hashCode()
  int hashCode_1() => _hashCode_1(reference);

  static final _toString_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_PendingIntent_toString_1")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.String toString()
  jni.JlString toString_1() => jni.JlString.fromRef(_toString_1(reference));

  static final _describeContents =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_PendingIntent_describeContents")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int describeContents()
  int describeContents() => _describeContents(reference);

  static final _writeToParcel = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_app_PendingIntent_writeToParcel")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public void writeToParcel(android.os.Parcel out, int flags)
  void writeToParcel(os.Parcel out, int flags) =>
      _writeToParcel(reference, out.reference, flags);

  static final _writePendingIntentOrNullToParcel = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_PendingIntent_writePendingIntentOrNullToParcel")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: static public void writePendingIntentOrNullToParcel(android.app.PendingIntent sender, android.os.Parcel out)
  static void writePendingIntentOrNullToParcel(
          PendingIntent sender, os.Parcel out) =>
      _writePendingIntentOrNullToParcel(sender.reference, out.reference);

  static final _readPendingIntentOrNullFromParcel = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_PendingIntent_readPendingIntentOrNullFromParcel")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: static public android.app.PendingIntent readPendingIntentOrNullFromParcel(android.os.Parcel in)
  static PendingIntent readPendingIntentOrNullFromParcel(os.Parcel in_) =>
      PendingIntent.fromRef(_readPendingIntentOrNullFromParcel(in_.reference));
}

class PendingIntent_OnFinished extends jni.JlObject {
  PendingIntent_OnFinished.fromRef(ffi.Pointer<ffi.Void> ref)
      : super.fromRef(ref);

  static final _onSendFinished = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Int32,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>)>>(
          "android_app_PendingIntent__OnFinished_onSendFinished")
      .asFunction<
          void Function(
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              int,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public abstract void onSendFinished(android.app.PendingIntent pendingIntent, android.content.Intent intent, int resultCode, java.lang.String resultData, android.os.Bundle resultExtras)
  void onSendFinished(PendingIntent pendingIntent, content.Intent intent,
          int resultCode, jni.JlString resultData, os.Bundle resultExtras) =>
      _onSendFinished(reference, pendingIntent.reference, intent.reference,
          resultCode, resultData.reference, resultExtras.reference);
}

class PendingIntent_CanceledException extends jni.JlObject {
  PendingIntent_CanceledException.fromRef(ffi.Pointer<ffi.Void> ref)
      : super.fromRef(ref);

  static final _ctor =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "android_app_PendingIntent__CanceledException_new")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();

  /// from: public void <init>()
  PendingIntent_CanceledException() : super.fromRef(_ctor());

  static final _ctor_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_PendingIntent__CanceledException_new_1")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void <init>(java.lang.String name)
  PendingIntent_CanceledException.ctor_1(jni.JlString name)
      : super.fromRef(_ctor_1(name.reference));

  static final _ctor_2 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_PendingIntent__CanceledException_new_2")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void <init>(java.lang.Exception cause)
  PendingIntent_CanceledException.ctor_2(jni.JlObject cause)
      : super.fromRef(_ctor_2(cause.reference));
}

class WallpaperInfo extends jni.JlObject {
  WallpaperInfo.fromRef(ffi.Pointer<ffi.Void> ref) : super.fromRef(ref);

  /// from: static public final android.os.Parcelable.Creator<android.app.WallpaperInfo> CREATOR
  static final _getCREATOR =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "get_android_app_WallpaperInfo_CREATOR")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();
  static os.Parcelable_Creator get CREATOR =>
      os.Parcelable_Creator.fromRef(_getCREATOR());

  static final _ctor = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("android_app_WallpaperInfo_new")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void <init>(android.content.Context context, android.content.pm.ResolveInfo service)
  WallpaperInfo(content.Context context, pm.ResolveInfo service)
      : super.fromRef(_ctor(context.reference, service.reference));

  static final _getPackageName = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_WallpaperInfo_getPackageName")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.String getPackageName()
  jni.JlString getPackageName() =>
      jni.JlString.fromRef(_getPackageName(reference));

  static final _getServiceName = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_WallpaperInfo_getServiceName")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.String getServiceName()
  jni.JlString getServiceName() =>
      jni.JlString.fromRef(_getServiceName(reference));

  static final _getServiceInfo = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_WallpaperInfo_getServiceInfo")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.content.pm.ServiceInfo getServiceInfo()
  pm.ServiceInfo getServiceInfo() =>
      pm.ServiceInfo.fromRef(_getServiceInfo(reference));

  static final _getComponent = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_WallpaperInfo_getComponent")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.content.ComponentName getComponent()
  content.ComponentName getComponent() =>
      content.ComponentName.fromRef(_getComponent(reference));

  static final _loadLabel = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_WallpaperInfo_loadLabel")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.CharSequence loadLabel(android.content.pm.PackageManager pm)
  jni.JlObject loadLabel(pm.PackageManager pm_) =>
      jni.JlObject.fromRef(_loadLabel(reference, pm_.reference));

  static final _loadIcon = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("android_app_WallpaperInfo_loadIcon")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.graphics.drawable.Drawable loadIcon(android.content.pm.PackageManager pm)
  jni.JlObject loadIcon(pm.PackageManager pm_) =>
      jni.JlObject.fromRef(_loadIcon(reference, pm_.reference));

  static final _loadThumbnail = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_WallpaperInfo_loadThumbnail")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.graphics.drawable.Drawable loadThumbnail(android.content.pm.PackageManager pm)
  jni.JlObject loadThumbnail(pm.PackageManager pm_) =>
      jni.JlObject.fromRef(_loadThumbnail(reference, pm_.reference));

  static final _loadAuthor = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_WallpaperInfo_loadAuthor")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.CharSequence loadAuthor(android.content.pm.PackageManager pm)
  jni.JlObject loadAuthor(pm.PackageManager pm_) =>
      jni.JlObject.fromRef(_loadAuthor(reference, pm_.reference));

  static final _loadDescription = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_WallpaperInfo_loadDescription")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.CharSequence loadDescription(android.content.pm.PackageManager pm)
  jni.JlObject loadDescription(pm.PackageManager pm_) =>
      jni.JlObject.fromRef(_loadDescription(reference, pm_.reference));

  static final _loadContextUri = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_WallpaperInfo_loadContextUri")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.net.Uri loadContextUri(android.content.pm.PackageManager pm)
  jni.JlObject loadContextUri(pm.PackageManager pm_) =>
      jni.JlObject.fromRef(_loadContextUri(reference, pm_.reference));

  static final _loadContextDescription = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_app_WallpaperInfo_loadContextDescription")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.CharSequence loadContextDescription(android.content.pm.PackageManager pm)
  jni.JlObject loadContextDescription(pm.PackageManager pm_) =>
      jni.JlObject.fromRef(_loadContextDescription(reference, pm_.reference));

  static final _getShowMetadataInPreview =
      jlookup<ffi.NativeFunction<ffi.Uint8 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_WallpaperInfo_getShowMetadataInPreview")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public boolean getShowMetadataInPreview()
  bool getShowMetadataInPreview() => _getShowMetadataInPreview(reference) != 0;

  static final _getSettingsActivity = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_WallpaperInfo_getSettingsActivity")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.String getSettingsActivity()
  jni.JlString getSettingsActivity() =>
      jni.JlString.fromRef(_getSettingsActivity(reference));

  static final _dump = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("android_app_WallpaperInfo_dump")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public void dump(android.util.Printer pw, java.lang.String prefix)
  void dump(jni.JlObject pw, jni.JlString prefix) =>
      _dump(reference, pw.reference, prefix.reference);

  static final _toString_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_app_WallpaperInfo_toString_1")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.String toString()
  jni.JlString toString_1() => jni.JlString.fromRef(_toString_1(reference));

  static final _writeToParcel = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_app_WallpaperInfo_writeToParcel")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public void writeToParcel(android.os.Parcel dest, int flags)
  void writeToParcel(os.Parcel dest, int flags) =>
      _writeToParcel(reference, dest.reference, flags);

  static final _describeContents =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_app_WallpaperInfo_describeContents")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int describeContents()
  int describeContents() => _describeContents(reference);
}
