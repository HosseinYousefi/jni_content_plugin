// AutoGenerated by jni_gen. Do not edit.
// ignore_for_file: camel_case_types
// ignore_for_file: non_constant_identifier_names
// ignore_for_file: constant_identifier_names
// ignore_for_file: annotate_overrides
// ignore_for_file: no_leading_underscores_for_local_identifiers
// ignore_for_file: unused_element

import "dart:ffi" as ffi;

import "package:jni/jni.dart" as jni;
import "content/res.dart" as res;

import "content/pm.dart" as pm;
import "../init.dart" show jlookup;

class ComponentCallbacks2 extends jni.JlObject {
  ComponentCallbacks2.fromRef(ffi.Pointer<ffi.Void> ref) : super.fromRef(ref);

  /// from: static public final int TRIM_MEMORY_BACKGROUND
  static const TRIM_MEMORY_BACKGROUND = 40;

  /// from: static public final int TRIM_MEMORY_COMPLETE
  static const TRIM_MEMORY_COMPLETE = 80;

  /// from: static public final int TRIM_MEMORY_MODERATE
  static const TRIM_MEMORY_MODERATE = 60;

  /// from: static public final int TRIM_MEMORY_RUNNING_CRITICAL
  static const TRIM_MEMORY_RUNNING_CRITICAL = 15;

  /// from: static public final int TRIM_MEMORY_RUNNING_LOW
  static const TRIM_MEMORY_RUNNING_LOW = 10;

  /// from: static public final int TRIM_MEMORY_RUNNING_MODERATE
  static const TRIM_MEMORY_RUNNING_MODERATE = 5;

  /// from: static public final int TRIM_MEMORY_UI_HIDDEN
  static const TRIM_MEMORY_UI_HIDDEN = 20;

  static final _onTrimMemory = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "android_content_ComponentCallbacks2_onTrimMemory")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public abstract void onTrimMemory(int level)
  void onTrimMemory(int level) => _onTrimMemory(reference, level);
}

class ClipDescription extends jni.JlObject {
  ClipDescription.fromRef(ffi.Pointer<ffi.Void> ref) : super.fromRef(ref);

  /// from: static public final android.os.Parcelable.Creator<android.content.ClipDescription> CREATOR
  static final _getCREATOR =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "get_android_content_ClipDescription_CREATOR")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();
  static jni.JlObject get CREATOR => jni.JlObject.fromRef(_getCREATOR());

  /// from: static public final java.lang.String MIMETYPE_TEXT_HTML
  static const MIMETYPE_TEXT_HTML = "text/html";

  /// from: static public final java.lang.String MIMETYPE_TEXT_INTENT
  static const MIMETYPE_TEXT_INTENT = "text/vnd.android.intent";

  /// from: static public final java.lang.String MIMETYPE_TEXT_PLAIN
  static const MIMETYPE_TEXT_PLAIN = "text/plain";

  /// from: static public final java.lang.String MIMETYPE_TEXT_URILIST
  static const MIMETYPE_TEXT_URILIST = "text/uri-list";

  static final _ctor = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_ClipDescription_new")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void <init>(java.lang.CharSequence label, java.lang.String[] mimeTypes)
  ClipDescription(jni.JlObject label, jni.JlObject mimeTypes)
      : super.fromRef(_ctor(label.reference, mimeTypes.reference));

  static final _ctor_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_ClipDescription_new_1")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void <init>(android.content.ClipDescription o)
  ClipDescription.ctor_1(ClipDescription o)
      : super.fromRef(_ctor_1(o.reference));

  static final _compareMimeTypes = jlookup<
              ffi.NativeFunction<
                  ffi.Uint8 Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_ClipDescription_compareMimeTypes")
      .asFunction<int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: static public boolean compareMimeTypes(java.lang.String concreteType, java.lang.String desiredType)
  static bool compareMimeTypes(
          jni.JlString concreteType, jni.JlString desiredType) =>
      _compareMimeTypes(concreteType.reference, desiredType.reference) != 0;

  static final _getTimestamp =
      jlookup<ffi.NativeFunction<ffi.Int64 Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_ClipDescription_getTimestamp")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public long getTimestamp()
  int getTimestamp() => _getTimestamp(reference);

  static final _getLabel = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_ClipDescription_getLabel")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.CharSequence getLabel()
  jni.JlObject getLabel() => jni.JlObject.fromRef(_getLabel(reference));

  static final _hasMimeType = jlookup<
              ffi.NativeFunction<
                  ffi.Uint8 Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_ClipDescription_hasMimeType")
      .asFunction<int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public boolean hasMimeType(java.lang.String mimeType)
  bool hasMimeType(jni.JlString mimeType) =>
      _hasMimeType(reference, mimeType.reference) != 0;

  static final _filterMimeTypes = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_ClipDescription_filterMimeTypes")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.String[] filterMimeTypes(java.lang.String mimeType)
  jni.JlObject filterMimeTypes(jni.JlString mimeType) =>
      jni.JlObject.fromRef(_filterMimeTypes(reference, mimeType.reference));

  static final _getMimeTypeCount =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_ClipDescription_getMimeTypeCount")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int getMimeTypeCount()
  int getMimeTypeCount() => _getMimeTypeCount(reference);

  static final _getMimeType = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_content_ClipDescription_getMimeType")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public java.lang.String getMimeType(int index)
  jni.JlString getMimeType(int index) =>
      jni.JlString.fromRef(_getMimeType(reference, index));

  static final _getExtras = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_ClipDescription_getExtras")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.os.PersistableBundle getExtras()
  jni.JlObject getExtras() => jni.JlObject.fromRef(_getExtras(reference));

  static final _setExtras = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_ClipDescription_setExtras")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void setExtras(android.os.PersistableBundle extras)
  void setExtras(jni.JlObject extras) =>
      _setExtras(reference, extras.reference);

  static final _toString_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_ClipDescription_toString_1")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.String toString()
  jni.JlString toString_1() => jni.JlString.fromRef(_toString_1(reference));

  static final _describeContents =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_ClipDescription_describeContents")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int describeContents()
  int describeContents() => _describeContents(reference);

  static final _writeToParcel = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_content_ClipDescription_writeToParcel")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public void writeToParcel(android.os.Parcel dest, int flags)
  void writeToParcel(jni.JlObject dest, int flags) =>
      _writeToParcel(reference, dest.reference, flags);
}

class ClipboardManager extends jni.JlObject {
  ClipboardManager.fromRef(ffi.Pointer<ffi.Void> ref) : super.fromRef(ref);

  static final _ctor =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "android_content_ClipboardManager_new")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();

  /// from: void <init>()
  ClipboardManager() : super.fromRef(_ctor());

  static final _setPrimaryClip = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_ClipboardManager_setPrimaryClip")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void setPrimaryClip(android.content.ClipData clip)
  void setPrimaryClip(ClipData clip) =>
      _setPrimaryClip(reference, clip.reference);

  static final _clearPrimaryClip =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_ClipboardManager_clearPrimaryClip")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void clearPrimaryClip()
  void clearPrimaryClip() => _clearPrimaryClip(reference);

  static final _getPrimaryClip = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_ClipboardManager_getPrimaryClip")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.content.ClipData getPrimaryClip()
  ClipData getPrimaryClip() => ClipData.fromRef(_getPrimaryClip(reference));

  static final _getPrimaryClipDescription = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_ClipboardManager_getPrimaryClipDescription")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.content.ClipDescription getPrimaryClipDescription()
  ClipDescription getPrimaryClipDescription() =>
      ClipDescription.fromRef(_getPrimaryClipDescription(reference));

  static final _hasPrimaryClip =
      jlookup<ffi.NativeFunction<ffi.Uint8 Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_ClipboardManager_hasPrimaryClip")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public boolean hasPrimaryClip()
  bool hasPrimaryClip() => _hasPrimaryClip(reference) != 0;

  static final _addPrimaryClipChangedListener = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_ClipboardManager_addPrimaryClipChangedListener")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void addPrimaryClipChangedListener(android.content.ClipboardManager.OnPrimaryClipChangedListener what)
  void addPrimaryClipChangedListener(
          ClipboardManager_OnPrimaryClipChangedListener what) =>
      _addPrimaryClipChangedListener(reference, what.reference);

  static final _removePrimaryClipChangedListener = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_ClipboardManager_removePrimaryClipChangedListener")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void removePrimaryClipChangedListener(android.content.ClipboardManager.OnPrimaryClipChangedListener what)
  void removePrimaryClipChangedListener(
          ClipboardManager_OnPrimaryClipChangedListener what) =>
      _removePrimaryClipChangedListener(reference, what.reference);

  static final _getText = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_ClipboardManager_getText")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.CharSequence getText()
  jni.JlObject getText() => jni.JlObject.fromRef(_getText(reference));

  static final _setText = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_ClipboardManager_setText")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void setText(java.lang.CharSequence text)
  void setText(jni.JlObject text) => _setText(reference, text.reference);

  static final _hasText =
      jlookup<ffi.NativeFunction<ffi.Uint8 Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_ClipboardManager_hasText")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public boolean hasText()
  bool hasText() => _hasText(reference) != 0;
}

class ClipboardManager_OnPrimaryClipChangedListener extends jni.JlObject {
  ClipboardManager_OnPrimaryClipChangedListener.fromRef(
      ffi.Pointer<ffi.Void> ref)
      : super.fromRef(ref);

  static final _onPrimaryClipChanged = jlookup<
              ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_ClipboardManager__OnPrimaryClipChangedListener_onPrimaryClipChanged")
      .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: public abstract void onPrimaryClipChanged()
  void onPrimaryClipChanged() => _onPrimaryClipChanged(reference);
}

class ActivityNotFoundException extends jni.JlObject {
  ActivityNotFoundException.fromRef(ffi.Pointer<ffi.Void> ref)
      : super.fromRef(ref);

  static final _ctor =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "android_content_ActivityNotFoundException_new")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();

  /// from: public void <init>()
  ActivityNotFoundException() : super.fromRef(_ctor());

  static final _ctor_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_ActivityNotFoundException_new_1")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void <init>(java.lang.String name)
  ActivityNotFoundException.ctor_1(jni.JlString name)
      : super.fromRef(_ctor_1(name.reference));
}

class ContentResolver extends jni.JlObject {
  ContentResolver.fromRef(ffi.Pointer<ffi.Void> ref) : super.fromRef(ref);

  /// from: static public final java.lang.String ANY_CURSOR_ITEM_TYPE
  static const ANY_CURSOR_ITEM_TYPE = "vnd.android.cursor.item/*";

  /// from: static public final java.lang.String CURSOR_DIR_BASE_TYPE
  static const CURSOR_DIR_BASE_TYPE = "vnd.android.cursor.dir";

  /// from: static public final java.lang.String CURSOR_ITEM_BASE_TYPE
  static const CURSOR_ITEM_BASE_TYPE = "vnd.android.cursor.item";

  /// from: static public final java.lang.String EXTRA_HONORED_ARGS
  static const EXTRA_HONORED_ARGS = "android.content.extra.HONORED_ARGS";

  /// from: static public final java.lang.String EXTRA_REFRESH_SUPPORTED
  static const EXTRA_REFRESH_SUPPORTED =
      "android.content.extra.REFRESH_SUPPORTED";

  /// from: static public final java.lang.String EXTRA_SIZE
  static const EXTRA_SIZE = "android.content.extra.SIZE";

  /// from: static public final java.lang.String EXTRA_TOTAL_COUNT
  static const EXTRA_TOTAL_COUNT = "android.content.extra.TOTAL_COUNT";

  /// from: static public final int NOTIFY_SKIP_NOTIFY_FOR_DESCENDANTS
  static const NOTIFY_SKIP_NOTIFY_FOR_DESCENDANTS = 2;

  /// from: static public final int NOTIFY_SYNC_TO_NETWORK
  static const NOTIFY_SYNC_TO_NETWORK = 1;

  /// from: static public final java.lang.String QUERY_ARG_LIMIT
  static const QUERY_ARG_LIMIT = "android:query-arg-limit";

  /// from: static public final java.lang.String QUERY_ARG_OFFSET
  static const QUERY_ARG_OFFSET = "android:query-arg-offset";

  /// from: static public final java.lang.String QUERY_ARG_SORT_COLLATION
  static const QUERY_ARG_SORT_COLLATION = "android:query-arg-sort-collation";

  /// from: static public final java.lang.String QUERY_ARG_SORT_COLUMNS
  static const QUERY_ARG_SORT_COLUMNS = "android:query-arg-sort-columns";

  /// from: static public final java.lang.String QUERY_ARG_SORT_DIRECTION
  static const QUERY_ARG_SORT_DIRECTION = "android:query-arg-sort-direction";

  /// from: static public final java.lang.String QUERY_ARG_SQL_SELECTION
  static const QUERY_ARG_SQL_SELECTION = "android:query-arg-sql-selection";

  /// from: static public final java.lang.String QUERY_ARG_SQL_SELECTION_ARGS
  static const QUERY_ARG_SQL_SELECTION_ARGS =
      "android:query-arg-sql-selection-args";

  /// from: static public final java.lang.String QUERY_ARG_SQL_SORT_ORDER
  static const QUERY_ARG_SQL_SORT_ORDER = "android:query-arg-sql-sort-order";

  /// from: static public final int QUERY_SORT_DIRECTION_ASCENDING
  static const QUERY_SORT_DIRECTION_ASCENDING = 0;

  /// from: static public final int QUERY_SORT_DIRECTION_DESCENDING
  static const QUERY_SORT_DIRECTION_DESCENDING = 1;

  /// from: static public final java.lang.String SCHEME_ANDROID_RESOURCE
  static const SCHEME_ANDROID_RESOURCE = "android.resource";

  /// from: static public final java.lang.String SCHEME_CONTENT
  static const SCHEME_CONTENT = "content";

  /// from: static public final java.lang.String SCHEME_FILE
  static const SCHEME_FILE = "file";

  /// from: static public final java.lang.String SYNC_EXTRAS_ACCOUNT
  static const SYNC_EXTRAS_ACCOUNT = "account";

  /// from: static public final java.lang.String SYNC_EXTRAS_DISCARD_LOCAL_DELETIONS
  static const SYNC_EXTRAS_DISCARD_LOCAL_DELETIONS = "discard_deletions";

  /// from: static public final java.lang.String SYNC_EXTRAS_DO_NOT_RETRY
  static const SYNC_EXTRAS_DO_NOT_RETRY = "do_not_retry";

  /// from: static public final java.lang.String SYNC_EXTRAS_EXPEDITED
  static const SYNC_EXTRAS_EXPEDITED = "expedited";

  /// from: static public final java.lang.String SYNC_EXTRAS_FORCE
  static const SYNC_EXTRAS_FORCE = "force";

  /// from: static public final java.lang.String SYNC_EXTRAS_IGNORE_BACKOFF
  static const SYNC_EXTRAS_IGNORE_BACKOFF = "ignore_backoff";

  /// from: static public final java.lang.String SYNC_EXTRAS_IGNORE_SETTINGS
  static const SYNC_EXTRAS_IGNORE_SETTINGS = "ignore_settings";

  /// from: static public final java.lang.String SYNC_EXTRAS_INITIALIZE
  static const SYNC_EXTRAS_INITIALIZE = "initialize";

  /// from: static public final java.lang.String SYNC_EXTRAS_MANUAL
  static const SYNC_EXTRAS_MANUAL = "force";

  /// from: static public final java.lang.String SYNC_EXTRAS_OVERRIDE_TOO_MANY_DELETIONS
  static const SYNC_EXTRAS_OVERRIDE_TOO_MANY_DELETIONS = "deletions_override";

  /// from: static public final java.lang.String SYNC_EXTRAS_REQUIRE_CHARGING
  static const SYNC_EXTRAS_REQUIRE_CHARGING = "require_charging";

  /// from: static public final java.lang.String SYNC_EXTRAS_UPLOAD
  static const SYNC_EXTRAS_UPLOAD = "upload";

  /// from: static public final int SYNC_OBSERVER_TYPE_ACTIVE
  static const SYNC_OBSERVER_TYPE_ACTIVE = 4;

  /// from: static public final int SYNC_OBSERVER_TYPE_PENDING
  static const SYNC_OBSERVER_TYPE_PENDING = 2;

  /// from: static public final int SYNC_OBSERVER_TYPE_SETTINGS
  static const SYNC_OBSERVER_TYPE_SETTINGS = 1;

  static final _ctor = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_ContentResolver_new")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void <init>(android.content.Context context)
  ContentResolver(Context context) : super.fromRef(_ctor(context.reference));

  static final _getType = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_ContentResolver_getType")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public final java.lang.String getType(android.net.Uri url)
  jni.JlString getType(jni.JlObject url) =>
      jni.JlString.fromRef(_getType(reference, url.reference));

  static final _getStreamTypes = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_ContentResolver_getStreamTypes")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.String[] getStreamTypes(android.net.Uri url, java.lang.String mimeTypeFilter)
  jni.JlObject getStreamTypes(jni.JlObject url, jni.JlString mimeTypeFilter) =>
      jni.JlObject.fromRef(
          _getStreamTypes(reference, url.reference, mimeTypeFilter.reference));

  static final _query = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>)>>(
          "android_content_ContentResolver_query")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public final android.database.Cursor query(android.net.Uri uri, java.lang.String[] projection, java.lang.String selection, java.lang.String[] selectionArgs, java.lang.String sortOrder)
  jni.JlObject query(
          jni.JlObject uri,
          jni.JlObject projection,
          jni.JlString selection,
          jni.JlObject selectionArgs,
          jni.JlString sortOrder) =>
      jni.JlObject.fromRef(_query(
          reference,
          uri.reference,
          projection.reference,
          selection.reference,
          selectionArgs.reference,
          sortOrder.reference));

  static final _query_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>)>>(
          "android_content_ContentResolver_query_1")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public final android.database.Cursor query(android.net.Uri uri, java.lang.String[] projection, java.lang.String selection, java.lang.String[] selectionArgs, java.lang.String sortOrder, android.os.CancellationSignal cancellationSignal)
  jni.JlObject query_1(
          jni.JlObject uri,
          jni.JlObject projection,
          jni.JlString selection,
          jni.JlObject selectionArgs,
          jni.JlString sortOrder,
          jni.JlObject cancellationSignal) =>
      jni.JlObject.fromRef(_query_1(
          reference,
          uri.reference,
          projection.reference,
          selection.reference,
          selectionArgs.reference,
          sortOrder.reference,
          cancellationSignal.reference));

  static final _query_2 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>)>>(
          "android_content_ContentResolver_query_2")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public final android.database.Cursor query(android.net.Uri uri, java.lang.String[] projection, android.os.Bundle queryArgs, android.os.CancellationSignal cancellationSignal)
  jni.JlObject query_2(jni.JlObject uri, jni.JlObject projection,
          jni.JlObject queryArgs, jni.JlObject cancellationSignal) =>
      jni.JlObject.fromRef(_query_2(
          reference,
          uri.reference,
          projection.reference,
          queryArgs.reference,
          cancellationSignal.reference));

  static final _canonicalize = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_ContentResolver_canonicalize")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public final android.net.Uri canonicalize(android.net.Uri url)
  jni.JlObject canonicalize(jni.JlObject url) =>
      jni.JlObject.fromRef(_canonicalize(reference, url.reference));

  static final _uncanonicalize = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_ContentResolver_uncanonicalize")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public final android.net.Uri uncanonicalize(android.net.Uri url)
  jni.JlObject uncanonicalize(jni.JlObject url) =>
      jni.JlObject.fromRef(_uncanonicalize(reference, url.reference));

  static final _refresh = jlookup<
              ffi.NativeFunction<
                  ffi.Uint8 Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>)>>(
          "android_content_ContentResolver_refresh")
      .asFunction<
          int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public final boolean refresh(android.net.Uri url, android.os.Bundle args, android.os.CancellationSignal cancellationSignal)
  bool refresh(jni.JlObject url, jni.JlObject args,
          jni.JlObject cancellationSignal) =>
      _refresh(reference, url.reference, args.reference,
          cancellationSignal.reference) !=
      0;

  static final _openInputStream = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_ContentResolver_openInputStream")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public final java.io.InputStream openInputStream(android.net.Uri uri)
  jni.JlObject openInputStream(jni.JlObject uri) =>
      jni.JlObject.fromRef(_openInputStream(reference, uri.reference));

  static final _openOutputStream = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_ContentResolver_openOutputStream")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public final java.io.OutputStream openOutputStream(android.net.Uri uri)
  jni.JlObject openOutputStream(jni.JlObject uri) =>
      jni.JlObject.fromRef(_openOutputStream(reference, uri.reference));

  static final _openOutputStream_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_ContentResolver_openOutputStream_1")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public final java.io.OutputStream openOutputStream(android.net.Uri uri, java.lang.String mode)
  jni.JlObject openOutputStream_1(jni.JlObject uri, jni.JlString mode) =>
      jni.JlObject.fromRef(
          _openOutputStream_1(reference, uri.reference, mode.reference));

  static final _openFileDescriptor = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_ContentResolver_openFileDescriptor")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public final android.os.ParcelFileDescriptor openFileDescriptor(android.net.Uri uri, java.lang.String mode)
  jni.JlObject openFileDescriptor(jni.JlObject uri, jni.JlString mode) =>
      jni.JlObject.fromRef(
          _openFileDescriptor(reference, uri.reference, mode.reference));

  static final _openFileDescriptor_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>)>>(
          "android_content_ContentResolver_openFileDescriptor_1")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public final android.os.ParcelFileDescriptor openFileDescriptor(android.net.Uri uri, java.lang.String mode, android.os.CancellationSignal cancellationSignal)
  jni.JlObject openFileDescriptor_1(jni.JlObject uri, jni.JlString mode,
          jni.JlObject cancellationSignal) =>
      jni.JlObject.fromRef(_openFileDescriptor_1(reference, uri.reference,
          mode.reference, cancellationSignal.reference));

  static final _openAssetFileDescriptor = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_ContentResolver_openAssetFileDescriptor")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public final android.content.res.AssetFileDescriptor openAssetFileDescriptor(android.net.Uri uri, java.lang.String mode)
  res.AssetFileDescriptor openAssetFileDescriptor(
          jni.JlObject uri, jni.JlString mode) =>
      res.AssetFileDescriptor.fromRef(
          _openAssetFileDescriptor(reference, uri.reference, mode.reference));

  static final _openAssetFileDescriptor_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>)>>(
          "android_content_ContentResolver_openAssetFileDescriptor_1")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public final android.content.res.AssetFileDescriptor openAssetFileDescriptor(android.net.Uri uri, java.lang.String mode, android.os.CancellationSignal cancellationSignal)
  res.AssetFileDescriptor openAssetFileDescriptor_1(jni.JlObject uri,
          jni.JlString mode, jni.JlObject cancellationSignal) =>
      res.AssetFileDescriptor.fromRef(_openAssetFileDescriptor_1(reference,
          uri.reference, mode.reference, cancellationSignal.reference));

  static final _openTypedAssetFileDescriptor = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>)>>(
          "android_content_ContentResolver_openTypedAssetFileDescriptor")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public final android.content.res.AssetFileDescriptor openTypedAssetFileDescriptor(android.net.Uri uri, java.lang.String mimeType, android.os.Bundle opts)
  res.AssetFileDescriptor openTypedAssetFileDescriptor(
          jni.JlObject uri, jni.JlString mimeType, jni.JlObject opts) =>
      res.AssetFileDescriptor.fromRef(_openTypedAssetFileDescriptor(
          reference, uri.reference, mimeType.reference, opts.reference));

  static final _openTypedAssetFileDescriptor_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>)>>(
          "android_content_ContentResolver_openTypedAssetFileDescriptor_1")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public final android.content.res.AssetFileDescriptor openTypedAssetFileDescriptor(android.net.Uri uri, java.lang.String mimeType, android.os.Bundle opts, android.os.CancellationSignal cancellationSignal)
  res.AssetFileDescriptor openTypedAssetFileDescriptor_1(
          jni.JlObject uri,
          jni.JlString mimeType,
          jni.JlObject opts,
          jni.JlObject cancellationSignal) =>
      res.AssetFileDescriptor.fromRef(_openTypedAssetFileDescriptor_1(
          reference,
          uri.reference,
          mimeType.reference,
          opts.reference,
          cancellationSignal.reference));

  static final _insert = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_ContentResolver_insert")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public final android.net.Uri insert(android.net.Uri url, android.content.ContentValues values)
  jni.JlObject insert(jni.JlObject url, ContentValues values) =>
      jni.JlObject.fromRef(_insert(reference, url.reference, values.reference));

  static final _applyBatch = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_ContentResolver_applyBatch")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.content.ContentProviderResult[] applyBatch(java.lang.String authority, java.util.ArrayList<android.content.ContentProviderOperation> operations)
  jni.JlObject applyBatch(jni.JlString authority, jni.JlObject operations) =>
      jni.JlObject.fromRef(
          _applyBatch(reference, authority.reference, operations.reference));

  static final _bulkInsert = jlookup<
              ffi.NativeFunction<
                  ffi.Int32 Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_ContentResolver_bulkInsert")
      .asFunction<
          int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public final int bulkInsert(android.net.Uri url, android.content.ContentValues[] values)
  int bulkInsert(jni.JlObject url, jni.JlObject values) =>
      _bulkInsert(reference, url.reference, values.reference);

  static final _delete_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Int32 Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>)>>(
          "android_content_ContentResolver_delete_1")
      .asFunction<
          int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public final int delete(android.net.Uri url, java.lang.String where, java.lang.String[] selectionArgs)
  int delete_1(
          jni.JlObject url, jni.JlString where, jni.JlObject selectionArgs) =>
      _delete_1(
          reference, url.reference, where.reference, selectionArgs.reference);

  static final _update = jlookup<
              ffi.NativeFunction<
                  ffi.Int32 Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>)>>(
          "android_content_ContentResolver_update")
      .asFunction<
          int Function(
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public final int update(android.net.Uri uri, android.content.ContentValues values, java.lang.String where, java.lang.String[] selectionArgs)
  int update(jni.JlObject uri, ContentValues values, jni.JlString where,
          jni.JlObject selectionArgs) =>
      _update(reference, uri.reference, values.reference, where.reference,
          selectionArgs.reference);

  static final _call = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>)>>(
          "android_content_ContentResolver_call")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public final android.os.Bundle call(android.net.Uri uri, java.lang.String method, java.lang.String arg, android.os.Bundle extras)
  jni.JlObject call(jni.JlObject uri, jni.JlString method, jni.JlString arg,
          jni.JlObject extras) =>
      jni.JlObject.fromRef(_call(reference, uri.reference, method.reference,
          arg.reference, extras.reference));

  static final _acquireContentProviderClient = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_ContentResolver_acquireContentProviderClient")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public final android.content.ContentProviderClient acquireContentProviderClient(android.net.Uri uri)
  ContentProviderClient acquireContentProviderClient(jni.JlObject uri) =>
      ContentProviderClient.fromRef(
          _acquireContentProviderClient(reference, uri.reference));

  static final _acquireContentProviderClient_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_ContentResolver_acquireContentProviderClient_1")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public final android.content.ContentProviderClient acquireContentProviderClient(java.lang.String name)
  ContentProviderClient acquireContentProviderClient_1(jni.JlString name) =>
      ContentProviderClient.fromRef(
          _acquireContentProviderClient_1(reference, name.reference));

  static final _acquireUnstableContentProviderClient = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_ContentResolver_acquireUnstableContentProviderClient")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public final android.content.ContentProviderClient acquireUnstableContentProviderClient(android.net.Uri uri)
  ContentProviderClient acquireUnstableContentProviderClient(
          jni.JlObject uri) =>
      ContentProviderClient.fromRef(
          _acquireUnstableContentProviderClient(reference, uri.reference));

  static final _acquireUnstableContentProviderClient_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_ContentResolver_acquireUnstableContentProviderClient_1")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public final android.content.ContentProviderClient acquireUnstableContentProviderClient(java.lang.String name)
  ContentProviderClient acquireUnstableContentProviderClient_1(
          jni.JlString name) =>
      ContentProviderClient.fromRef(
          _acquireUnstableContentProviderClient_1(reference, name.reference));

  static final _registerContentObserver = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Uint8,
                      ffi.Pointer<ffi.Void>)>>(
          "android_content_ContentResolver_registerContentObserver")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int,
              ffi.Pointer<ffi.Void>)>();

  /// from: public final void registerContentObserver(android.net.Uri uri, boolean notifyForDescendants, android.database.ContentObserver observer)
  void registerContentObserver(
          jni.JlObject uri, bool notifyForDescendants, jni.JlObject observer) =>
      _registerContentObserver(reference, uri.reference,
          notifyForDescendants ? 1 : 0, observer.reference);

  static final _unregisterContentObserver = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_ContentResolver_unregisterContentObserver")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public final void unregisterContentObserver(android.database.ContentObserver observer)
  void unregisterContentObserver(jni.JlObject observer) =>
      _unregisterContentObserver(reference, observer.reference);

  static final _notifyChange = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_ContentResolver_notifyChange")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public void notifyChange(android.net.Uri uri, android.database.ContentObserver observer)
  void notifyChange(jni.JlObject uri, jni.JlObject observer) =>
      _notifyChange(reference, uri.reference, observer.reference);

  static final _notifyChange_1 = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Uint8)>>("android_content_ContentResolver_notifyChange_1")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, int)>();

  /// from: public void notifyChange(android.net.Uri uri, android.database.ContentObserver observer, boolean syncToNetwork)
  void notifyChange_1(
          jni.JlObject uri, jni.JlObject observer, bool syncToNetwork) =>
      _notifyChange_1(
          reference, uri.reference, observer.reference, syncToNetwork ? 1 : 0);

  static final _notifyChange_2 = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_content_ContentResolver_notifyChange_2")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, int)>();

  /// from: public void notifyChange(android.net.Uri uri, android.database.ContentObserver observer, int flags)
  void notifyChange_2(jni.JlObject uri, jni.JlObject observer, int flags) =>
      _notifyChange_2(reference, uri.reference, observer.reference, flags);

  static final _takePersistableUriPermission = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "android_content_ContentResolver_takePersistableUriPermission")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public void takePersistableUriPermission(android.net.Uri uri, int modeFlags)
  void takePersistableUriPermission(jni.JlObject uri, int modeFlags) =>
      _takePersistableUriPermission(reference, uri.reference, modeFlags);

  static final _releasePersistableUriPermission = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "android_content_ContentResolver_releasePersistableUriPermission")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public void releasePersistableUriPermission(android.net.Uri uri, int modeFlags)
  void releasePersistableUriPermission(jni.JlObject uri, int modeFlags) =>
      _releasePersistableUriPermission(reference, uri.reference, modeFlags);

  static final _getPersistedUriPermissions = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_ContentResolver_getPersistedUriPermissions")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.util.List<android.content.UriPermission> getPersistedUriPermissions()
  jni.JlObject getPersistedUriPermissions() =>
      jni.JlObject.fromRef(_getPersistedUriPermissions(reference));

  static final _getOutgoingPersistedUriPermissions = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_ContentResolver_getOutgoingPersistedUriPermissions")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.util.List<android.content.UriPermission> getOutgoingPersistedUriPermissions()
  jni.JlObject getOutgoingPersistedUriPermissions() =>
      jni.JlObject.fromRef(_getOutgoingPersistedUriPermissions(reference));

  static final _startSync = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_ContentResolver_startSync")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public void startSync(android.net.Uri uri, android.os.Bundle extras)
  void startSync(jni.JlObject uri, jni.JlObject extras) =>
      _startSync(reference, uri.reference, extras.reference);

  static final _requestSync = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_ContentResolver_requestSync")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: static public void requestSync(android.accounts.Account account, java.lang.String authority, android.os.Bundle extras)
  static void requestSync(
          jni.JlObject account, jni.JlString authority, jni.JlObject extras) =>
      _requestSync(account.reference, authority.reference, extras.reference);

  static final _requestSync_1 =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_ContentResolver_requestSync_1")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: static public void requestSync(android.content.SyncRequest request)
  static void requestSync_1(SyncRequest request) =>
      _requestSync_1(request.reference);

  static final _validateSyncExtrasBundle =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_ContentResolver_validateSyncExtrasBundle")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: static public void validateSyncExtrasBundle(android.os.Bundle extras)
  static void validateSyncExtrasBundle(jni.JlObject extras) =>
      _validateSyncExtrasBundle(extras.reference);

  static final _cancelSync = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_ContentResolver_cancelSync")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void cancelSync(android.net.Uri uri)
  void cancelSync(jni.JlObject uri) => _cancelSync(reference, uri.reference);

  static final _cancelSync_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_ContentResolver_cancelSync_1")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: static public void cancelSync(android.accounts.Account account, java.lang.String authority)
  static void cancelSync_1(jni.JlObject account, jni.JlString authority) =>
      _cancelSync_1(account.reference, authority.reference);

  static final _getSyncAdapterTypes =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "android_content_ContentResolver_getSyncAdapterTypes")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();

  /// from: static public android.content.SyncAdapterType[] getSyncAdapterTypes()
  static jni.JlObject getSyncAdapterTypes() =>
      jni.JlObject.fromRef(_getSyncAdapterTypes());

  static final _getSyncAutomatically = jlookup<
              ffi.NativeFunction<
                  ffi.Uint8 Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_ContentResolver_getSyncAutomatically")
      .asFunction<int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: static public boolean getSyncAutomatically(android.accounts.Account account, java.lang.String authority)
  static bool getSyncAutomatically(
          jni.JlObject account, jni.JlString authority) =>
      _getSyncAutomatically(account.reference, authority.reference) != 0;

  static final _setSyncAutomatically = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Uint8)>>(
          "android_content_ContentResolver_setSyncAutomatically")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: static public void setSyncAutomatically(android.accounts.Account account, java.lang.String authority, boolean sync)
  static void setSyncAutomatically(
          jni.JlObject account, jni.JlString authority, bool sync_) =>
      _setSyncAutomatically(
          account.reference, authority.reference, sync_ ? 1 : 0);

  static final _addPeriodicSync = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Int64)>>(
          "android_content_ContentResolver_addPeriodicSync")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, int)>();

  /// from: static public void addPeriodicSync(android.accounts.Account account, java.lang.String authority, android.os.Bundle extras, long pollFrequency)
  static void addPeriodicSync(jni.JlObject account, jni.JlString authority,
          jni.JlObject extras, int pollFrequency) =>
      _addPeriodicSync(account.reference, authority.reference, extras.reference,
          pollFrequency);

  static final _removePeriodicSync = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_ContentResolver_removePeriodicSync")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: static public void removePeriodicSync(android.accounts.Account account, java.lang.String authority, android.os.Bundle extras)
  static void removePeriodicSync(
          jni.JlObject account, jni.JlString authority, jni.JlObject extras) =>
      _removePeriodicSync(
          account.reference, authority.reference, extras.reference);

  static final _cancelSync_2 =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_ContentResolver_cancelSync_2")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: static public void cancelSync(android.content.SyncRequest request)
  static void cancelSync_2(SyncRequest request) =>
      _cancelSync_2(request.reference);

  static final _getPeriodicSyncs = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_ContentResolver_getPeriodicSyncs")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: static public java.util.List<android.content.PeriodicSync> getPeriodicSyncs(android.accounts.Account account, java.lang.String authority)
  static jni.JlObject getPeriodicSyncs(
          jni.JlObject account, jni.JlString authority) =>
      jni.JlObject.fromRef(
          _getPeriodicSyncs(account.reference, authority.reference));

  static final _getIsSyncable = jlookup<
              ffi.NativeFunction<
                  ffi.Int32 Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_ContentResolver_getIsSyncable")
      .asFunction<int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: static public int getIsSyncable(android.accounts.Account account, java.lang.String authority)
  static int getIsSyncable(jni.JlObject account, jni.JlString authority) =>
      _getIsSyncable(account.reference, authority.reference);

  static final _setIsSyncable = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_content_ContentResolver_setIsSyncable")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: static public void setIsSyncable(android.accounts.Account account, java.lang.String authority, int syncable)
  static void setIsSyncable(
          jni.JlObject account, jni.JlString authority, int syncable) =>
      _setIsSyncable(account.reference, authority.reference, syncable);

  static final _getMasterSyncAutomatically =
      jlookup<ffi.NativeFunction<ffi.Uint8 Function()>>(
              "android_content_ContentResolver_getMasterSyncAutomatically")
          .asFunction<int Function()>();

  /// from: static public boolean getMasterSyncAutomatically()
  static bool getMasterSyncAutomatically() =>
      _getMasterSyncAutomatically() != 0;

  static final _setMasterSyncAutomatically =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Uint8)>>(
              "android_content_ContentResolver_setMasterSyncAutomatically")
          .asFunction<void Function(int)>();

  /// from: static public void setMasterSyncAutomatically(boolean sync)
  static void setMasterSyncAutomatically(bool sync_) =>
      _setMasterSyncAutomatically(sync_ ? 1 : 0);

  static final _isSyncActive = jlookup<
              ffi.NativeFunction<
                  ffi.Uint8 Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_ContentResolver_isSyncActive")
      .asFunction<int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: static public boolean isSyncActive(android.accounts.Account account, java.lang.String authority)
  static bool isSyncActive(jni.JlObject account, jni.JlString authority) =>
      _isSyncActive(account.reference, authority.reference) != 0;

  static final _getCurrentSync =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "android_content_ContentResolver_getCurrentSync")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();

  /// from: static public android.content.SyncInfo getCurrentSync()
  static SyncInfo getCurrentSync() => SyncInfo.fromRef(_getCurrentSync());

  static final _getCurrentSyncs =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "android_content_ContentResolver_getCurrentSyncs")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();

  /// from: static public java.util.List<android.content.SyncInfo> getCurrentSyncs()
  static jni.JlObject getCurrentSyncs() =>
      jni.JlObject.fromRef(_getCurrentSyncs());

  static final _isSyncPending = jlookup<
              ffi.NativeFunction<
                  ffi.Uint8 Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_ContentResolver_isSyncPending")
      .asFunction<int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: static public boolean isSyncPending(android.accounts.Account account, java.lang.String authority)
  static bool isSyncPending(jni.JlObject account, jni.JlString authority) =>
      _isSyncPending(account.reference, authority.reference) != 0;

  static final _addStatusChangeListener = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Int32, ffi.Pointer<ffi.Void>)>>(
          "android_content_ContentResolver_addStatusChangeListener")
      .asFunction<ffi.Pointer<ffi.Void> Function(int, ffi.Pointer<ffi.Void>)>();

  /// from: static public java.lang.Object addStatusChangeListener(int mask, android.content.SyncStatusObserver callback)
  static jni.JlObject addStatusChangeListener(
          int mask, SyncStatusObserver callback) =>
      jni.JlObject.fromRef(_addStatusChangeListener(mask, callback.reference));

  static final _removeStatusChangeListener =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_ContentResolver_removeStatusChangeListener")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: static public void removeStatusChangeListener(java.lang.Object handle)
  static void removeStatusChangeListener(jni.JlObject handle) =>
      _removeStatusChangeListener(handle.reference);
}

class DialogInterface extends jni.JlObject {
  DialogInterface.fromRef(ffi.Pointer<ffi.Void> ref) : super.fromRef(ref);

  /// from: static public final int BUTTON1
  static const BUTTON1 = -1;

  /// from: static public final int BUTTON2
  static const BUTTON2 = -2;

  /// from: static public final int BUTTON3
  static const BUTTON3 = -3;

  /// from: static public final int BUTTON_NEGATIVE
  static const BUTTON_NEGATIVE = -2;

  /// from: static public final int BUTTON_NEUTRAL
  static const BUTTON_NEUTRAL = -3;

  /// from: static public final int BUTTON_POSITIVE
  static const BUTTON_POSITIVE = -1;

  static final _cancel =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_DialogInterface_cancel")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: public abstract void cancel()
  void cancel() => _cancel(reference);

  static final _dismiss =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_DialogInterface_dismiss")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: public abstract void dismiss()
  void dismiss() => _dismiss(reference);
}

class DialogInterface_OnShowListener extends jni.JlObject {
  DialogInterface_OnShowListener.fromRef(ffi.Pointer<ffi.Void> ref)
      : super.fromRef(ref);

  static final _onShow = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_DialogInterface__OnShowListener_onShow")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public abstract void onShow(android.content.DialogInterface dialog)
  void onShow(DialogInterface dialog) => _onShow(reference, dialog.reference);
}

class DialogInterface_OnMultiChoiceClickListener extends jni.JlObject {
  DialogInterface_OnMultiChoiceClickListener.fromRef(ffi.Pointer<ffi.Void> ref)
      : super.fromRef(ref);

  static final _onClick = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Int32, ffi.Uint8)>>(
          "android_content_DialogInterface__OnMultiChoiceClickListener_onClick")
      .asFunction<
          void Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int, int)>();

  /// from: public abstract void onClick(android.content.DialogInterface dialog, int which, boolean isChecked)
  void onClick(DialogInterface dialog, int which, bool isChecked) =>
      _onClick(reference, dialog.reference, which, isChecked ? 1 : 0);
}

class DialogInterface_OnKeyListener extends jni.JlObject {
  DialogInterface_OnKeyListener.fromRef(ffi.Pointer<ffi.Void> ref)
      : super.fromRef(ref);

  static final _onKey = jlookup<
              ffi.NativeFunction<
                  ffi.Uint8 Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Int32,
                      ffi.Pointer<ffi.Void>)>>(
          "android_content_DialogInterface__OnKeyListener_onKey")
      .asFunction<
          int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int,
              ffi.Pointer<ffi.Void>)>();

  /// from: public abstract boolean onKey(android.content.DialogInterface dialog, int keyCode, android.view.KeyEvent event)
  bool onKey(DialogInterface dialog, int keyCode, jni.JlObject event) =>
      _onKey(reference, dialog.reference, keyCode, event.reference) != 0;
}

class DialogInterface_OnDismissListener extends jni.JlObject {
  DialogInterface_OnDismissListener.fromRef(ffi.Pointer<ffi.Void> ref)
      : super.fromRef(ref);

  static final _onDismiss = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_DialogInterface__OnDismissListener_onDismiss")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public abstract void onDismiss(android.content.DialogInterface dialog)
  void onDismiss(DialogInterface dialog) =>
      _onDismiss(reference, dialog.reference);
}

class DialogInterface_OnClickListener extends jni.JlObject {
  DialogInterface_OnClickListener.fromRef(ffi.Pointer<ffi.Void> ref)
      : super.fromRef(ref);

  static final _onClick = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "android_content_DialogInterface__OnClickListener_onClick")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public abstract void onClick(android.content.DialogInterface dialog, int which)
  void onClick(DialogInterface dialog, int which) =>
      _onClick(reference, dialog.reference, which);
}

class DialogInterface_OnCancelListener extends jni.JlObject {
  DialogInterface_OnCancelListener.fromRef(ffi.Pointer<ffi.Void> ref)
      : super.fromRef(ref);

  static final _onCancel = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_DialogInterface__OnCancelListener_onCancel")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public abstract void onCancel(android.content.DialogInterface dialog)
  void onCancel(DialogInterface dialog) =>
      _onCancel(reference, dialog.reference);
}

class RestrictionsManager extends jni.JlObject {
  RestrictionsManager.fromRef(ffi.Pointer<ffi.Void> ref) : super.fromRef(ref);

  /// from: static public final java.lang.String ACTION_PERMISSION_RESPONSE_RECEIVED
  static const ACTION_PERMISSION_RESPONSE_RECEIVED =
      "android.content.action.PERMISSION_RESPONSE_RECEIVED";

  /// from: static public final java.lang.String ACTION_REQUEST_LOCAL_APPROVAL
  static const ACTION_REQUEST_LOCAL_APPROVAL =
      "android.content.action.REQUEST_LOCAL_APPROVAL";

  /// from: static public final java.lang.String ACTION_REQUEST_PERMISSION
  static const ACTION_REQUEST_PERMISSION =
      "android.content.action.REQUEST_PERMISSION";

  /// from: static public final java.lang.String EXTRA_PACKAGE_NAME
  static const EXTRA_PACKAGE_NAME = "android.content.extra.PACKAGE_NAME";

  /// from: static public final java.lang.String EXTRA_REQUEST_BUNDLE
  static const EXTRA_REQUEST_BUNDLE = "android.content.extra.REQUEST_BUNDLE";

  /// from: static public final java.lang.String EXTRA_REQUEST_ID
  static const EXTRA_REQUEST_ID = "android.content.extra.REQUEST_ID";

  /// from: static public final java.lang.String EXTRA_REQUEST_TYPE
  static const EXTRA_REQUEST_TYPE = "android.content.extra.REQUEST_TYPE";

  /// from: static public final java.lang.String EXTRA_RESPONSE_BUNDLE
  static const EXTRA_RESPONSE_BUNDLE = "android.content.extra.RESPONSE_BUNDLE";

  /// from: static public final java.lang.String META_DATA_APP_RESTRICTIONS
  static const META_DATA_APP_RESTRICTIONS = "android.content.APP_RESTRICTIONS";

  /// from: static public final java.lang.String REQUEST_KEY_APPROVE_LABEL
  static const REQUEST_KEY_APPROVE_LABEL = "android.request.approve_label";

  /// from: static public final java.lang.String REQUEST_KEY_DATA
  static const REQUEST_KEY_DATA = "android.request.data";

  /// from: static public final java.lang.String REQUEST_KEY_DENY_LABEL
  static const REQUEST_KEY_DENY_LABEL = "android.request.deny_label";

  /// from: static public final java.lang.String REQUEST_KEY_ICON
  static const REQUEST_KEY_ICON = "android.request.icon";

  /// from: static public final java.lang.String REQUEST_KEY_ID
  static const REQUEST_KEY_ID = "android.request.id";

  /// from: static public final java.lang.String REQUEST_KEY_MESSAGE
  static const REQUEST_KEY_MESSAGE = "android.request.mesg";

  /// from: static public final java.lang.String REQUEST_KEY_NEW_REQUEST
  static const REQUEST_KEY_NEW_REQUEST = "android.request.new_request";

  /// from: static public final java.lang.String REQUEST_KEY_TITLE
  static const REQUEST_KEY_TITLE = "android.request.title";

  /// from: static public final java.lang.String REQUEST_TYPE_APPROVAL
  static const REQUEST_TYPE_APPROVAL = "android.request.type.approval";

  /// from: static public final java.lang.String RESPONSE_KEY_ERROR_CODE
  static const RESPONSE_KEY_ERROR_CODE = "android.response.errorcode";

  /// from: static public final java.lang.String RESPONSE_KEY_MESSAGE
  static const RESPONSE_KEY_MESSAGE = "android.response.msg";

  /// from: static public final java.lang.String RESPONSE_KEY_RESPONSE_TIMESTAMP
  static const RESPONSE_KEY_RESPONSE_TIMESTAMP = "android.response.timestamp";

  /// from: static public final java.lang.String RESPONSE_KEY_RESULT
  static const RESPONSE_KEY_RESULT = "android.response.result";

  /// from: static public final int RESULT_APPROVED
  static const RESULT_APPROVED = 1;

  /// from: static public final int RESULT_DENIED
  static const RESULT_DENIED = 2;

  /// from: static public final int RESULT_ERROR
  static const RESULT_ERROR = 5;

  /// from: static public final int RESULT_ERROR_BAD_REQUEST
  static const RESULT_ERROR_BAD_REQUEST = 1;

  /// from: static public final int RESULT_ERROR_INTERNAL
  static const RESULT_ERROR_INTERNAL = 3;

  /// from: static public final int RESULT_ERROR_NETWORK
  static const RESULT_ERROR_NETWORK = 2;

  /// from: static public final int RESULT_NO_RESPONSE
  static const RESULT_NO_RESPONSE = 3;

  /// from: static public final int RESULT_UNKNOWN_REQUEST
  static const RESULT_UNKNOWN_REQUEST = 4;

  static final _ctor =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "android_content_RestrictionsManager_new")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();

  /// from: void <init>()
  RestrictionsManager() : super.fromRef(_ctor());

  static final _getApplicationRestrictions = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_RestrictionsManager_getApplicationRestrictions")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.os.Bundle getApplicationRestrictions()
  jni.JlObject getApplicationRestrictions() =>
      jni.JlObject.fromRef(_getApplicationRestrictions(reference));

  static final _hasRestrictionsProvider =
      jlookup<ffi.NativeFunction<ffi.Uint8 Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_RestrictionsManager_hasRestrictionsProvider")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public boolean hasRestrictionsProvider()
  bool hasRestrictionsProvider() => _hasRestrictionsProvider(reference) != 0;

  static final _requestPermission = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>)>>(
          "android_content_RestrictionsManager_requestPermission")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void requestPermission(java.lang.String requestType, java.lang.String requestId, android.os.PersistableBundle request)
  void requestPermission(jni.JlString requestType, jni.JlString requestId,
          jni.JlObject request) =>
      _requestPermission(reference, requestType.reference, requestId.reference,
          request.reference);

  static final _createLocalApprovalIntent = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_RestrictionsManager_createLocalApprovalIntent")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.content.Intent createLocalApprovalIntent()
  Intent createLocalApprovalIntent() =>
      Intent.fromRef(_createLocalApprovalIntent(reference));

  static final _notifyPermissionResponse = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_RestrictionsManager_notifyPermissionResponse")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public void notifyPermissionResponse(java.lang.String packageName, android.os.PersistableBundle response)
  void notifyPermissionResponse(
          jni.JlString packageName, jni.JlObject response) =>
      _notifyPermissionResponse(
          reference, packageName.reference, response.reference);

  static final _getManifestRestrictions = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_RestrictionsManager_getManifestRestrictions")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public java.util.List<android.content.RestrictionEntry> getManifestRestrictions(java.lang.String packageName)
  jni.JlObject getManifestRestrictions(jni.JlString packageName) =>
      jni.JlObject.fromRef(
          _getManifestRestrictions(reference, packageName.reference));

  static final _convertRestrictionsToBundle = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_RestrictionsManager_convertRestrictionsToBundle")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: static public android.os.Bundle convertRestrictionsToBundle(java.util.List<android.content.RestrictionEntry> entries)
  static jni.JlObject convertRestrictionsToBundle(jni.JlObject entries) =>
      jni.JlObject.fromRef(_convertRestrictionsToBundle(entries.reference));
}

class ContentProviderResult extends jni.JlObject {
  ContentProviderResult.fromRef(ffi.Pointer<ffi.Void> ref) : super.fromRef(ref);

  /// from: static public final android.os.Parcelable.Creator<android.content.ContentProviderResult> CREATOR
  static final _getCREATOR =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "get_android_content_ContentProviderResult_CREATOR")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();
  static jni.JlObject get CREATOR => jni.JlObject.fromRef(_getCREATOR());

  /// from: public final java.lang.Integer count
  static final _getcount = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_content_ContentProviderResult_count")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>();
  jni.JlObject get count => jni.JlObject.fromRef(_getcount(reference));

  /// from: public final android.net.Uri uri
  static final _geturi = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_content_ContentProviderResult_uri")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>();
  jni.JlObject get uri => jni.JlObject.fromRef(_geturi(reference));

  static final _ctor = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_ContentProviderResult_new")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void <init>(android.net.Uri uri)
  ContentProviderResult(jni.JlObject uri) : super.fromRef(_ctor(uri.reference));

  static final _ctor_1 =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function(ffi.Int32)>>(
              "android_content_ContentProviderResult_new_1")
          .asFunction<ffi.Pointer<ffi.Void> Function(int)>();

  /// from: public void <init>(int count)
  ContentProviderResult.ctor_1(int count) : super.fromRef(_ctor_1(count));

  static final _ctor_2 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_ContentProviderResult_new_2")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void <init>(android.os.Parcel source)
  ContentProviderResult.ctor_2(jni.JlObject source)
      : super.fromRef(_ctor_2(source.reference));

  static final _writeToParcel = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "android_content_ContentProviderResult_writeToParcel")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public void writeToParcel(android.os.Parcel dest, int flags)
  void writeToParcel(jni.JlObject dest, int flags) =>
      _writeToParcel(reference, dest.reference, flags);

  static final _describeContents =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_ContentProviderResult_describeContents")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int describeContents()
  int describeContents() => _describeContents(reference);

  static final _toString_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_ContentProviderResult_toString_1")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.String toString()
  jni.JlString toString_1() => jni.JlString.fromRef(_toString_1(reference));
}

class ComponentCallbacks extends jni.JlObject {
  ComponentCallbacks.fromRef(ffi.Pointer<ffi.Void> ref) : super.fromRef(ref);

  static final _onConfigurationChanged = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_ComponentCallbacks_onConfigurationChanged")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public abstract void onConfigurationChanged(android.content.res.Configuration newConfig)
  void onConfigurationChanged(res.Configuration newConfig) =>
      _onConfigurationChanged(reference, newConfig.reference);

  static final _onLowMemory =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_ComponentCallbacks_onLowMemory")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: public abstract void onLowMemory()
  void onLowMemory() => _onLowMemory(reference);
}

class Context extends jni.JlObject {
  Context.fromRef(ffi.Pointer<ffi.Void> ref) : super.fromRef(ref);

  /// from: static public final java.lang.String ACCESSIBILITY_SERVICE
  static const ACCESSIBILITY_SERVICE = "accessibility";

  /// from: static public final java.lang.String ACCOUNT_SERVICE
  static const ACCOUNT_SERVICE = "account";

  /// from: static public final java.lang.String ACTIVITY_SERVICE
  static const ACTIVITY_SERVICE = "activity";

  /// from: static public final java.lang.String ALARM_SERVICE
  static const ALARM_SERVICE = "alarm";

  /// from: static public final java.lang.String APPWIDGET_SERVICE
  static const APPWIDGET_SERVICE = "appwidget";

  /// from: static public final java.lang.String APP_OPS_SERVICE
  static const APP_OPS_SERVICE = "appops";

  /// from: static public final java.lang.String AUDIO_SERVICE
  static const AUDIO_SERVICE = "audio";

  /// from: static public final java.lang.String BATTERY_SERVICE
  static const BATTERY_SERVICE = "batterymanager";

  /// from: static public final int BIND_ABOVE_CLIENT
  static const BIND_ABOVE_CLIENT = 8;

  /// from: static public final int BIND_ADJUST_WITH_ACTIVITY
  static const BIND_ADJUST_WITH_ACTIVITY = 128;

  /// from: static public final int BIND_ALLOW_OOM_MANAGEMENT
  static const BIND_ALLOW_OOM_MANAGEMENT = 16;

  /// from: static public final int BIND_AUTO_CREATE
  static const BIND_AUTO_CREATE = 1;

  /// from: static public final int BIND_DEBUG_UNBIND
  static const BIND_DEBUG_UNBIND = 2;

  /// from: static public final int BIND_EXTERNAL_SERVICE
  static const BIND_EXTERNAL_SERVICE = -2147483648;

  /// from: static public final int BIND_IMPORTANT
  static const BIND_IMPORTANT = 64;

  /// from: static public final int BIND_NOT_FOREGROUND
  static const BIND_NOT_FOREGROUND = 4;

  /// from: static public final int BIND_WAIVE_PRIORITY
  static const BIND_WAIVE_PRIORITY = 32;

  /// from: static public final java.lang.String BLUETOOTH_SERVICE
  static const BLUETOOTH_SERVICE = "bluetooth";

  /// from: static public final java.lang.String CAMERA_SERVICE
  static const CAMERA_SERVICE = "camera";

  /// from: static public final java.lang.String CAPTIONING_SERVICE
  static const CAPTIONING_SERVICE = "captioning";

  /// from: static public final java.lang.String CARRIER_CONFIG_SERVICE
  static const CARRIER_CONFIG_SERVICE = "carrier_config";

  /// from: static public final java.lang.String CLIPBOARD_SERVICE
  static const CLIPBOARD_SERVICE = "clipboard";

  /// from: static public final java.lang.String COMPANION_DEVICE_SERVICE
  static const COMPANION_DEVICE_SERVICE = "companiondevice";

  /// from: static public final java.lang.String CONNECTIVITY_SERVICE
  static const CONNECTIVITY_SERVICE = "connectivity";

  /// from: static public final java.lang.String CONSUMER_IR_SERVICE
  static const CONSUMER_IR_SERVICE = "consumer_ir";

  /// from: static public final int CONTEXT_IGNORE_SECURITY
  static const CONTEXT_IGNORE_SECURITY = 2;

  /// from: static public final int CONTEXT_INCLUDE_CODE
  static const CONTEXT_INCLUDE_CODE = 1;

  /// from: static public final int CONTEXT_RESTRICTED
  static const CONTEXT_RESTRICTED = 4;

  /// from: static public final java.lang.String CROSS_PROFILE_APPS_SERVICE
  static const CROSS_PROFILE_APPS_SERVICE = "crossprofileapps";

  /// from: static public final java.lang.String DEVICE_POLICY_SERVICE
  static const DEVICE_POLICY_SERVICE = "device_policy";

  /// from: static public final java.lang.String DISPLAY_SERVICE
  static const DISPLAY_SERVICE = "display";

  /// from: static public final java.lang.String DOWNLOAD_SERVICE
  static const DOWNLOAD_SERVICE = "download";

  /// from: static public final java.lang.String DROPBOX_SERVICE
  static const DROPBOX_SERVICE = "dropbox";

  /// from: static public final java.lang.String EUICC_SERVICE
  static const EUICC_SERVICE = "euicc";

  /// from: static public final java.lang.String FINGERPRINT_SERVICE
  static const FINGERPRINT_SERVICE = "fingerprint";

  /// from: static public final java.lang.String HARDWARE_PROPERTIES_SERVICE
  static const HARDWARE_PROPERTIES_SERVICE = "hardware_properties";

  /// from: static public final java.lang.String INPUT_METHOD_SERVICE
  static const INPUT_METHOD_SERVICE = "input_method";

  /// from: static public final java.lang.String INPUT_SERVICE
  static const INPUT_SERVICE = "input";

  /// from: static public final java.lang.String IPSEC_SERVICE
  static const IPSEC_SERVICE = "ipsec";

  /// from: static public final java.lang.String JOB_SCHEDULER_SERVICE
  static const JOB_SCHEDULER_SERVICE = "jobscheduler";

  /// from: static public final java.lang.String KEYGUARD_SERVICE
  static const KEYGUARD_SERVICE = "keyguard";

  /// from: static public final java.lang.String LAUNCHER_APPS_SERVICE
  static const LAUNCHER_APPS_SERVICE = "launcherapps";

  /// from: static public final java.lang.String LAYOUT_INFLATER_SERVICE
  static const LAYOUT_INFLATER_SERVICE = "layout_inflater";

  /// from: static public final java.lang.String LOCATION_SERVICE
  static const LOCATION_SERVICE = "location";

  /// from: static public final java.lang.String MEDIA_PROJECTION_SERVICE
  static const MEDIA_PROJECTION_SERVICE = "media_projection";

  /// from: static public final java.lang.String MEDIA_ROUTER_SERVICE
  static const MEDIA_ROUTER_SERVICE = "media_router";

  /// from: static public final java.lang.String MEDIA_SESSION_SERVICE
  static const MEDIA_SESSION_SERVICE = "media_session";

  /// from: static public final java.lang.String MIDI_SERVICE
  static const MIDI_SERVICE = "midi";

  /// from: static public final int MODE_APPEND
  static const MODE_APPEND = 32768;

  /// from: static public final int MODE_ENABLE_WRITE_AHEAD_LOGGING
  static const MODE_ENABLE_WRITE_AHEAD_LOGGING = 8;

  /// from: static public final int MODE_MULTI_PROCESS
  static const MODE_MULTI_PROCESS = 4;

  /// from: static public final int MODE_NO_LOCALIZED_COLLATORS
  static const MODE_NO_LOCALIZED_COLLATORS = 16;

  /// from: static public final int MODE_PRIVATE
  static const MODE_PRIVATE = 0;

  /// from: static public final int MODE_WORLD_READABLE
  static const MODE_WORLD_READABLE = 1;

  /// from: static public final int MODE_WORLD_WRITEABLE
  static const MODE_WORLD_WRITEABLE = 2;

  /// from: static public final java.lang.String NETWORK_STATS_SERVICE
  static const NETWORK_STATS_SERVICE = "netstats";

  /// from: static public final java.lang.String NFC_SERVICE
  static const NFC_SERVICE = "nfc";

  /// from: static public final java.lang.String NOTIFICATION_SERVICE
  static const NOTIFICATION_SERVICE = "notification";

  /// from: static public final java.lang.String NSD_SERVICE
  static const NSD_SERVICE = "servicediscovery";

  /// from: static public final java.lang.String POWER_SERVICE
  static const POWER_SERVICE = "power";

  /// from: static public final java.lang.String PRINT_SERVICE
  static const PRINT_SERVICE = "print";

  /// from: static public final int RECEIVER_VISIBLE_TO_INSTANT_APPS
  static const RECEIVER_VISIBLE_TO_INSTANT_APPS = 1;

  /// from: static public final java.lang.String RESTRICTIONS_SERVICE
  static const RESTRICTIONS_SERVICE = "restrictions";

  /// from: static public final java.lang.String SEARCH_SERVICE
  static const SEARCH_SERVICE = "search";

  /// from: static public final java.lang.String SENSOR_SERVICE
  static const SENSOR_SERVICE = "sensor";

  /// from: static public final java.lang.String SHORTCUT_SERVICE
  static const SHORTCUT_SERVICE = "shortcut";

  /// from: static public final java.lang.String STORAGE_SERVICE
  static const STORAGE_SERVICE = "storage";

  /// from: static public final java.lang.String STORAGE_STATS_SERVICE
  static const STORAGE_STATS_SERVICE = "storagestats";

  /// from: static public final java.lang.String SYSTEM_HEALTH_SERVICE
  static const SYSTEM_HEALTH_SERVICE = "systemhealth";

  /// from: static public final java.lang.String TELECOM_SERVICE
  static const TELECOM_SERVICE = "telecom";

  /// from: static public final java.lang.String TELEPHONY_SERVICE
  static const TELEPHONY_SERVICE = "phone";

  /// from: static public final java.lang.String TELEPHONY_SUBSCRIPTION_SERVICE
  static const TELEPHONY_SUBSCRIPTION_SERVICE =
      "telephony_subscription_service";

  /// from: static public final java.lang.String TEXT_CLASSIFICATION_SERVICE
  static const TEXT_CLASSIFICATION_SERVICE = "textclassification";

  /// from: static public final java.lang.String TEXT_SERVICES_MANAGER_SERVICE
  static const TEXT_SERVICES_MANAGER_SERVICE = "textservices";

  /// from: static public final java.lang.String TV_INPUT_SERVICE
  static const TV_INPUT_SERVICE = "tv_input";

  /// from: static public final java.lang.String UI_MODE_SERVICE
  static const UI_MODE_SERVICE = "uimode";

  /// from: static public final java.lang.String USAGE_STATS_SERVICE
  static const USAGE_STATS_SERVICE = "usagestats";

  /// from: static public final java.lang.String USB_SERVICE
  static const USB_SERVICE = "usb";

  /// from: static public final java.lang.String USER_SERVICE
  static const USER_SERVICE = "user";

  /// from: static public final java.lang.String VIBRATOR_SERVICE
  static const VIBRATOR_SERVICE = "vibrator";

  /// from: static public final java.lang.String WALLPAPER_SERVICE
  static const WALLPAPER_SERVICE = "wallpaper";

  /// from: static public final java.lang.String WIFI_AWARE_SERVICE
  static const WIFI_AWARE_SERVICE = "wifiaware";

  /// from: static public final java.lang.String WIFI_P2P_SERVICE
  static const WIFI_P2P_SERVICE = "wifip2p";

  /// from: static public final java.lang.String WIFI_RTT_RANGING_SERVICE
  static const WIFI_RTT_RANGING_SERVICE = "wifirtt";

  /// from: static public final java.lang.String WIFI_SERVICE
  static const WIFI_SERVICE = "wifi";

  /// from: static public final java.lang.String WINDOW_SERVICE
  static const WINDOW_SERVICE = "window";

  static final _ctor =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "android_content_Context_new")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();

  /// from: public void <init>()
  Context() : super.fromRef(_ctor());

  static final _getAssets = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
                  ffi.Pointer<ffi.Void>)>>("android_content_Context_getAssets")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public abstract android.content.res.AssetManager getAssets()
  res.AssetManager getAssets() =>
      res.AssetManager.fromRef(_getAssets(reference));

  static final _getResources = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_Context_getResources")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public abstract android.content.res.Resources getResources()
  res.Resources getResources() =>
      res.Resources.fromRef(_getResources(reference));

  static final _getPackageManager = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_Context_getPackageManager")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public abstract android.content.pm.PackageManager getPackageManager()
  pm.PackageManager getPackageManager() =>
      pm.PackageManager.fromRef(_getPackageManager(reference));

  static final _getContentResolver = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_Context_getContentResolver")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public abstract android.content.ContentResolver getContentResolver()
  ContentResolver getContentResolver() =>
      ContentResolver.fromRef(_getContentResolver(reference));

  static final _getMainLooper = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_Context_getMainLooper")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public abstract android.os.Looper getMainLooper()
  jni.JlObject getMainLooper() =>
      jni.JlObject.fromRef(_getMainLooper(reference));

  static final _getMainExecutor = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_Context_getMainExecutor")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.util.concurrent.Executor getMainExecutor()
  jni.JlObject getMainExecutor() =>
      jni.JlObject.fromRef(_getMainExecutor(reference));

  static final _getApplicationContext = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_Context_getApplicationContext")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public abstract android.content.Context getApplicationContext()
  Context getApplicationContext() =>
      Context.fromRef(_getApplicationContext(reference));

  static final _registerComponentCallbacks = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_Context_registerComponentCallbacks")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void registerComponentCallbacks(android.content.ComponentCallbacks callback)
  void registerComponentCallbacks(ComponentCallbacks callback) =>
      _registerComponentCallbacks(reference, callback.reference);

  static final _unregisterComponentCallbacks = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_Context_unregisterComponentCallbacks")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void unregisterComponentCallbacks(android.content.ComponentCallbacks callback)
  void unregisterComponentCallbacks(ComponentCallbacks callback) =>
      _unregisterComponentCallbacks(reference, callback.reference);

  static final _getText = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_content_Context_getText")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public final java.lang.CharSequence getText(int resId)
  jni.JlObject getText(int resId) =>
      jni.JlObject.fromRef(_getText(reference, resId));

  static final _getString = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_content_Context_getString")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public final java.lang.String getString(int resId)
  jni.JlString getString(int resId) =>
      jni.JlString.fromRef(_getString(reference, resId));

  static final _getString_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                      ffi.Int32, ffi.Pointer<ffi.Void>)>>(
          "android_content_Context_getString_1")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, int, ffi.Pointer<ffi.Void>)>();

  /// from: public final java.lang.String getString(int resId, java.lang.Object[] formatArgs)
  jni.JlString getString_1(int resId, jni.JlObject formatArgs) =>
      jni.JlString.fromRef(
          _getString_1(reference, resId, formatArgs.reference));

  static final _getColor = jlookup<
          ffi.NativeFunction<
              ffi.Int32 Function(ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_content_Context_getColor")
      .asFunction<int Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public final int getColor(int id)
  int getColor(int id) => _getColor(reference, id);

  static final _getDrawable = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_content_Context_getDrawable")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public final android.graphics.drawable.Drawable getDrawable(int id)
  jni.JlObject getDrawable(int id) =>
      jni.JlObject.fromRef(_getDrawable(reference, id));

  static final _getColorStateList = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_content_Context_getColorStateList")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public final android.content.res.ColorStateList getColorStateList(int id)
  res.ColorStateList getColorStateList(int id) =>
      res.ColorStateList.fromRef(_getColorStateList(reference, id));

  static final _setTheme = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_content_Context_setTheme")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public abstract void setTheme(int resid)
  void setTheme(int resid) => _setTheme(reference, resid);

  static final _getTheme = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
                  ffi.Pointer<ffi.Void>)>>("android_content_Context_getTheme")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public abstract android.content.res.Resources.Theme getTheme()
  res.Resources_Theme getTheme() =>
      res.Resources_Theme.fromRef(_getTheme(reference));

  static final _obtainStyledAttributes = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_Context_obtainStyledAttributes")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public final android.content.res.TypedArray obtainStyledAttributes(int[] attrs)
  res.TypedArray obtainStyledAttributes(jni.JlObject attrs) =>
      res.TypedArray.fromRef(
          _obtainStyledAttributes(reference, attrs.reference));

  static final _obtainStyledAttributes_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                      ffi.Int32, ffi.Pointer<ffi.Void>)>>(
          "android_content_Context_obtainStyledAttributes_1")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, int, ffi.Pointer<ffi.Void>)>();

  /// from: public final android.content.res.TypedArray obtainStyledAttributes(int resid, int[] attrs)
  res.TypedArray obtainStyledAttributes_1(int resid, jni.JlObject attrs) =>
      res.TypedArray.fromRef(
          _obtainStyledAttributes_1(reference, resid, attrs.reference));

  static final _obtainStyledAttributes_2 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_Context_obtainStyledAttributes_2")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public final android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet set, int[] attrs)
  res.TypedArray obtainStyledAttributes_2(
          jni.JlObject set_, jni.JlObject attrs) =>
      res.TypedArray.fromRef(_obtainStyledAttributes_2(
          reference, set_.reference, attrs.reference));

  static final _obtainStyledAttributes_3 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Int32,
                      ffi.Int32)>>(
          "android_content_Context_obtainStyledAttributes_3")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int, int)>();

  /// from: public final android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet set, int[] attrs, int defStyleAttr, int defStyleRes)
  res.TypedArray obtainStyledAttributes_3(jni.JlObject set_, jni.JlObject attrs,
          int defStyleAttr, int defStyleRes) =>
      res.TypedArray.fromRef(_obtainStyledAttributes_3(reference,
          set_.reference, attrs.reference, defStyleAttr, defStyleRes));

  static final _getClassLoader = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_Context_getClassLoader")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public abstract java.lang.ClassLoader getClassLoader()
  jni.JlObject getClassLoader() =>
      jni.JlObject.fromRef(_getClassLoader(reference));

  static final _getPackageName = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_Context_getPackageName")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public abstract java.lang.String getPackageName()
  jni.JlString getPackageName() =>
      jni.JlString.fromRef(_getPackageName(reference));

  static final _getApplicationInfo = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_Context_getApplicationInfo")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public abstract android.content.pm.ApplicationInfo getApplicationInfo()
  pm.ApplicationInfo getApplicationInfo() =>
      pm.ApplicationInfo.fromRef(_getApplicationInfo(reference));

  static final _getPackageResourcePath = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_Context_getPackageResourcePath")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public abstract java.lang.String getPackageResourcePath()
  jni.JlString getPackageResourcePath() =>
      jni.JlString.fromRef(_getPackageResourcePath(reference));

  static final _getPackageCodePath = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_Context_getPackageCodePath")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public abstract java.lang.String getPackageCodePath()
  jni.JlString getPackageCodePath() =>
      jni.JlString.fromRef(_getPackageCodePath(reference));

  static final _getSharedPreferences = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_content_Context_getSharedPreferences")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public abstract android.content.SharedPreferences getSharedPreferences(java.lang.String name, int mode)
  SharedPreferences getSharedPreferences(jni.JlString name, int mode) =>
      SharedPreferences.fromRef(
          _getSharedPreferences(reference, name.reference, mode));

  static final _moveSharedPreferencesFrom = jlookup<
              ffi.NativeFunction<
                  ffi.Uint8 Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_Context_moveSharedPreferencesFrom")
      .asFunction<
          int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public abstract boolean moveSharedPreferencesFrom(android.content.Context sourceContext, java.lang.String name)
  bool moveSharedPreferencesFrom(Context sourceContext, jni.JlString name) =>
      _moveSharedPreferencesFrom(
          reference, sourceContext.reference, name.reference) !=
      0;

  static final _deleteSharedPreferences = jlookup<
              ffi.NativeFunction<
                  ffi.Uint8 Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_Context_deleteSharedPreferences")
      .asFunction<int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public abstract boolean deleteSharedPreferences(java.lang.String name)
  bool deleteSharedPreferences(jni.JlString name) =>
      _deleteSharedPreferences(reference, name.reference) != 0;

  static final _openFileInput = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_Context_openFileInput")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public abstract java.io.FileInputStream openFileInput(java.lang.String name)
  jni.JlObject openFileInput(jni.JlString name) =>
      jni.JlObject.fromRef(_openFileInput(reference, name.reference));

  static final _openFileOutput = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_content_Context_openFileOutput")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public abstract java.io.FileOutputStream openFileOutput(java.lang.String name, int mode)
  jni.JlObject openFileOutput(jni.JlString name, int mode) =>
      jni.JlObject.fromRef(_openFileOutput(reference, name.reference, mode));

  static final _deleteFile = jlookup<
          ffi.NativeFunction<
              ffi.Uint8 Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("android_content_Context_deleteFile")
      .asFunction<int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public abstract boolean deleteFile(java.lang.String name)
  bool deleteFile(jni.JlString name) =>
      _deleteFile(reference, name.reference) != 0;

  static final _getFileStreamPath = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_Context_getFileStreamPath")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public abstract java.io.File getFileStreamPath(java.lang.String name)
  jni.JlObject getFileStreamPath(jni.JlString name) =>
      jni.JlObject.fromRef(_getFileStreamPath(reference, name.reference));

  static final _getDataDir = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
                  ffi.Pointer<ffi.Void>)>>("android_content_Context_getDataDir")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public abstract java.io.File getDataDir()
  jni.JlObject getDataDir() => jni.JlObject.fromRef(_getDataDir(reference));

  static final _getFilesDir = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_Context_getFilesDir")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public abstract java.io.File getFilesDir()
  jni.JlObject getFilesDir() => jni.JlObject.fromRef(_getFilesDir(reference));

  static final _getNoBackupFilesDir = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_Context_getNoBackupFilesDir")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public abstract java.io.File getNoBackupFilesDir()
  jni.JlObject getNoBackupFilesDir() =>
      jni.JlObject.fromRef(_getNoBackupFilesDir(reference));

  static final _getExternalFilesDir = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_Context_getExternalFilesDir")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public abstract java.io.File getExternalFilesDir(java.lang.String type)
  jni.JlObject getExternalFilesDir(jni.JlString type) =>
      jni.JlObject.fromRef(_getExternalFilesDir(reference, type.reference));

  static final _getExternalFilesDirs = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_Context_getExternalFilesDirs")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public abstract java.io.File[] getExternalFilesDirs(java.lang.String type)
  jni.JlObject getExternalFilesDirs(jni.JlString type) =>
      jni.JlObject.fromRef(_getExternalFilesDirs(reference, type.reference));

  static final _getObbDir = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
                  ffi.Pointer<ffi.Void>)>>("android_content_Context_getObbDir")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public abstract java.io.File getObbDir()
  jni.JlObject getObbDir() => jni.JlObject.fromRef(_getObbDir(reference));

  static final _getObbDirs = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
                  ffi.Pointer<ffi.Void>)>>("android_content_Context_getObbDirs")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public abstract java.io.File[] getObbDirs()
  jni.JlObject getObbDirs() => jni.JlObject.fromRef(_getObbDirs(reference));

  static final _getCacheDir = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_Context_getCacheDir")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public abstract java.io.File getCacheDir()
  jni.JlObject getCacheDir() => jni.JlObject.fromRef(_getCacheDir(reference));

  static final _getCodeCacheDir = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_Context_getCodeCacheDir")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public abstract java.io.File getCodeCacheDir()
  jni.JlObject getCodeCacheDir() =>
      jni.JlObject.fromRef(_getCodeCacheDir(reference));

  static final _getExternalCacheDir = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_Context_getExternalCacheDir")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public abstract java.io.File getExternalCacheDir()
  jni.JlObject getExternalCacheDir() =>
      jni.JlObject.fromRef(_getExternalCacheDir(reference));

  static final _getExternalCacheDirs = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_Context_getExternalCacheDirs")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public abstract java.io.File[] getExternalCacheDirs()
  jni.JlObject getExternalCacheDirs() =>
      jni.JlObject.fromRef(_getExternalCacheDirs(reference));

  static final _getExternalMediaDirs = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_Context_getExternalMediaDirs")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public abstract java.io.File[] getExternalMediaDirs()
  jni.JlObject getExternalMediaDirs() =>
      jni.JlObject.fromRef(_getExternalMediaDirs(reference));

  static final _fileList = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
                  ffi.Pointer<ffi.Void>)>>("android_content_Context_fileList")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public abstract java.lang.String[] fileList()
  jni.JlObject fileList() => jni.JlObject.fromRef(_fileList(reference));

  static final _getDir = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_content_Context_getDir")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public abstract java.io.File getDir(java.lang.String name, int mode)
  jni.JlObject getDir(jni.JlString name, int mode) =>
      jni.JlObject.fromRef(_getDir(reference, name.reference, mode));

  static final _openOrCreateDatabase = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Int32,
                      ffi.Pointer<ffi.Void>)>>(
          "android_content_Context_openOrCreateDatabase")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, int, ffi.Pointer<ffi.Void>)>();

  /// from: public abstract android.database.sqlite.SQLiteDatabase openOrCreateDatabase(java.lang.String name, int mode, android.database.sqlite.SQLiteDatabase.CursorFactory factory)
  jni.JlObject openOrCreateDatabase(
          jni.JlString name, int mode, jni.JlObject factory_) =>
      jni.JlObject.fromRef(_openOrCreateDatabase(
          reference, name.reference, mode, factory_.reference));

  static final _openOrCreateDatabase_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Int32,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>)>>(
          "android_content_Context_openOrCreateDatabase_1")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              int,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public abstract android.database.sqlite.SQLiteDatabase openOrCreateDatabase(java.lang.String name, int mode, android.database.sqlite.SQLiteDatabase.CursorFactory factory, android.database.DatabaseErrorHandler errorHandler)
  jni.JlObject openOrCreateDatabase_1(jni.JlString name, int mode,
          jni.JlObject factory_, jni.JlObject errorHandler) =>
      jni.JlObject.fromRef(_openOrCreateDatabase_1(reference, name.reference,
          mode, factory_.reference, errorHandler.reference));

  static final _moveDatabaseFrom = jlookup<
              ffi.NativeFunction<
                  ffi.Uint8 Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_Context_moveDatabaseFrom")
      .asFunction<
          int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public abstract boolean moveDatabaseFrom(android.content.Context sourceContext, java.lang.String name)
  bool moveDatabaseFrom(Context sourceContext, jni.JlString name) =>
      _moveDatabaseFrom(reference, sourceContext.reference, name.reference) !=
      0;

  static final _deleteDatabase = jlookup<
              ffi.NativeFunction<
                  ffi.Uint8 Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_Context_deleteDatabase")
      .asFunction<int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public abstract boolean deleteDatabase(java.lang.String name)
  bool deleteDatabase(jni.JlString name) =>
      _deleteDatabase(reference, name.reference) != 0;

  static final _getDatabasePath = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_Context_getDatabasePath")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public abstract java.io.File getDatabasePath(java.lang.String name)
  jni.JlObject getDatabasePath(jni.JlString name) =>
      jni.JlObject.fromRef(_getDatabasePath(reference, name.reference));

  static final _databaseList = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_Context_databaseList")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public abstract java.lang.String[] databaseList()
  jni.JlObject databaseList() => jni.JlObject.fromRef(_databaseList(reference));

  static final _getWallpaper = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_Context_getWallpaper")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public abstract android.graphics.drawable.Drawable getWallpaper()
  jni.JlObject getWallpaper() => jni.JlObject.fromRef(_getWallpaper(reference));

  static final _peekWallpaper = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_Context_peekWallpaper")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public abstract android.graphics.drawable.Drawable peekWallpaper()
  jni.JlObject peekWallpaper() =>
      jni.JlObject.fromRef(_peekWallpaper(reference));

  static final _getWallpaperDesiredMinimumWidth =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_Context_getWallpaperDesiredMinimumWidth")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public abstract int getWallpaperDesiredMinimumWidth()
  int getWallpaperDesiredMinimumWidth() =>
      _getWallpaperDesiredMinimumWidth(reference);

  static final _getWallpaperDesiredMinimumHeight =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_Context_getWallpaperDesiredMinimumHeight")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public abstract int getWallpaperDesiredMinimumHeight()
  int getWallpaperDesiredMinimumHeight() =>
      _getWallpaperDesiredMinimumHeight(reference);

  static final _setWallpaper = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_Context_setWallpaper")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public abstract void setWallpaper(android.graphics.Bitmap bitmap)
  void setWallpaper(jni.JlObject bitmap) =>
      _setWallpaper(reference, bitmap.reference);

  static final _setWallpaper_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_Context_setWallpaper_1")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public abstract void setWallpaper(java.io.InputStream data)
  void setWallpaper_1(jni.JlObject data) =>
      _setWallpaper_1(reference, data.reference);

  static final _clearWallpaper =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_Context_clearWallpaper")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: public abstract void clearWallpaper()
  void clearWallpaper() => _clearWallpaper(reference);

  static final _startActivity = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_Context_startActivity")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public abstract void startActivity(android.content.Intent intent)
  void startActivity(Intent intent) =>
      _startActivity(reference, intent.reference);

  static final _startActivity_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_Context_startActivity_1")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public abstract void startActivity(android.content.Intent intent, android.os.Bundle options)
  void startActivity_1(Intent intent, jni.JlObject options) =>
      _startActivity_1(reference, intent.reference, options.reference);

  static final _startActivities = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_Context_startActivities")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public abstract void startActivities(android.content.Intent[] intents)
  void startActivities(jni.JlObject intents) =>
      _startActivities(reference, intents.reference);

  static final _startActivities_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_Context_startActivities_1")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public abstract void startActivities(android.content.Intent[] intents, android.os.Bundle options)
  void startActivities_1(jni.JlObject intents, jni.JlObject options) =>
      _startActivities_1(reference, intents.reference, options.reference);

  static final _startIntentSender = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Int32,
                  ffi.Int32,
                  ffi.Int32)>>("android_content_Context_startIntentSender")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, int, int, int)>();

  /// from: public abstract void startIntentSender(android.content.IntentSender intent, android.content.Intent fillInIntent, int flagsMask, int flagsValues, int extraFlags)
  void startIntentSender(IntentSender intent, Intent fillInIntent,
          int flagsMask, int flagsValues, int extraFlags) =>
      _startIntentSender(reference, intent.reference, fillInIntent.reference,
          flagsMask, flagsValues, extraFlags);

  static final _startIntentSender_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Int32,
                      ffi.Int32,
                      ffi.Int32,
                      ffi.Pointer<ffi.Void>)>>(
          "android_content_Context_startIntentSender_1")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, int, int, int, ffi.Pointer<ffi.Void>)>();

  /// from: public abstract void startIntentSender(android.content.IntentSender intent, android.content.Intent fillInIntent, int flagsMask, int flagsValues, int extraFlags, android.os.Bundle options)
  void startIntentSender_1(
          IntentSender intent,
          Intent fillInIntent,
          int flagsMask,
          int flagsValues,
          int extraFlags,
          jni.JlObject options) =>
      _startIntentSender_1(reference, intent.reference, fillInIntent.reference,
          flagsMask, flagsValues, extraFlags, options.reference);

  static final _sendBroadcast = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_Context_sendBroadcast")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public abstract void sendBroadcast(android.content.Intent intent)
  void sendBroadcast(Intent intent) =>
      _sendBroadcast(reference, intent.reference);

  static final _sendBroadcast_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_Context_sendBroadcast_1")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public abstract void sendBroadcast(android.content.Intent intent, java.lang.String receiverPermission)
  void sendBroadcast_1(Intent intent, jni.JlString receiverPermission) =>
      _sendBroadcast_1(
          reference, intent.reference, receiverPermission.reference);

  static final _sendOrderedBroadcast = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_Context_sendOrderedBroadcast")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public abstract void sendOrderedBroadcast(android.content.Intent intent, java.lang.String receiverPermission)
  void sendOrderedBroadcast(Intent intent, jni.JlString receiverPermission) =>
      _sendOrderedBroadcast(
          reference, intent.reference, receiverPermission.reference);

  static final _sendOrderedBroadcast_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Int32,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>)>>(
          "android_content_Context_sendOrderedBroadcast_1")
      .asFunction<
          void Function(
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              int,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public abstract void sendOrderedBroadcast(android.content.Intent intent, java.lang.String receiverPermission, android.content.BroadcastReceiver resultReceiver, android.os.Handler scheduler, int initialCode, java.lang.String initialData, android.os.Bundle initialExtras)
  void sendOrderedBroadcast_1(
          Intent intent,
          jni.JlString receiverPermission,
          BroadcastReceiver resultReceiver,
          jni.JlObject scheduler,
          int initialCode,
          jni.JlString initialData,
          jni.JlObject initialExtras) =>
      _sendOrderedBroadcast_1(
          reference,
          intent.reference,
          receiverPermission.reference,
          resultReceiver.reference,
          scheduler.reference,
          initialCode,
          initialData.reference,
          initialExtras.reference);

  static final _sendBroadcastAsUser = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_Context_sendBroadcastAsUser")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public abstract void sendBroadcastAsUser(android.content.Intent intent, android.os.UserHandle user)
  void sendBroadcastAsUser(Intent intent, jni.JlObject user) =>
      _sendBroadcastAsUser(reference, intent.reference, user.reference);

  static final _sendBroadcastAsUser_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>)>>(
          "android_content_Context_sendBroadcastAsUser_1")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public abstract void sendBroadcastAsUser(android.content.Intent intent, android.os.UserHandle user, java.lang.String receiverPermission)
  void sendBroadcastAsUser_1(
          Intent intent, jni.JlObject user, jni.JlString receiverPermission) =>
      _sendBroadcastAsUser_1(reference, intent.reference, user.reference,
          receiverPermission.reference);

  static final _sendOrderedBroadcastAsUser = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Int32,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>)>>(
          "android_content_Context_sendOrderedBroadcastAsUser")
      .asFunction<
          void Function(
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              int,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public abstract void sendOrderedBroadcastAsUser(android.content.Intent intent, android.os.UserHandle user, java.lang.String receiverPermission, android.content.BroadcastReceiver resultReceiver, android.os.Handler scheduler, int initialCode, java.lang.String initialData, android.os.Bundle initialExtras)
  void sendOrderedBroadcastAsUser(
          Intent intent,
          jni.JlObject user,
          jni.JlString receiverPermission,
          BroadcastReceiver resultReceiver,
          jni.JlObject scheduler,
          int initialCode,
          jni.JlString initialData,
          jni.JlObject initialExtras) =>
      _sendOrderedBroadcastAsUser(
          reference,
          intent.reference,
          user.reference,
          receiverPermission.reference,
          resultReceiver.reference,
          scheduler.reference,
          initialCode,
          initialData.reference,
          initialExtras.reference);

  static final _sendStickyBroadcast = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_Context_sendStickyBroadcast")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public abstract void sendStickyBroadcast(android.content.Intent intent)
  void sendStickyBroadcast(Intent intent) =>
      _sendStickyBroadcast(reference, intent.reference);

  static final _sendStickyOrderedBroadcast = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Int32,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>)>>(
          "android_content_Context_sendStickyOrderedBroadcast")
      .asFunction<
          void Function(
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              int,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public abstract void sendStickyOrderedBroadcast(android.content.Intent intent, android.content.BroadcastReceiver resultReceiver, android.os.Handler scheduler, int initialCode, java.lang.String initialData, android.os.Bundle initialExtras)
  void sendStickyOrderedBroadcast(
          Intent intent,
          BroadcastReceiver resultReceiver,
          jni.JlObject scheduler,
          int initialCode,
          jni.JlString initialData,
          jni.JlObject initialExtras) =>
      _sendStickyOrderedBroadcast(
          reference,
          intent.reference,
          resultReceiver.reference,
          scheduler.reference,
          initialCode,
          initialData.reference,
          initialExtras.reference);

  static final _removeStickyBroadcast = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_Context_removeStickyBroadcast")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public abstract void removeStickyBroadcast(android.content.Intent intent)
  void removeStickyBroadcast(Intent intent) =>
      _removeStickyBroadcast(reference, intent.reference);

  static final _sendStickyBroadcastAsUser = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_Context_sendStickyBroadcastAsUser")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public abstract void sendStickyBroadcastAsUser(android.content.Intent intent, android.os.UserHandle user)
  void sendStickyBroadcastAsUser(Intent intent, jni.JlObject user) =>
      _sendStickyBroadcastAsUser(reference, intent.reference, user.reference);

  static final _sendStickyOrderedBroadcastAsUser = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Int32,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>)>>(
          "android_content_Context_sendStickyOrderedBroadcastAsUser")
      .asFunction<
          void Function(
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              int,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public abstract void sendStickyOrderedBroadcastAsUser(android.content.Intent intent, android.os.UserHandle user, android.content.BroadcastReceiver resultReceiver, android.os.Handler scheduler, int initialCode, java.lang.String initialData, android.os.Bundle initialExtras)
  void sendStickyOrderedBroadcastAsUser(
          Intent intent,
          jni.JlObject user,
          BroadcastReceiver resultReceiver,
          jni.JlObject scheduler,
          int initialCode,
          jni.JlString initialData,
          jni.JlObject initialExtras) =>
      _sendStickyOrderedBroadcastAsUser(
          reference,
          intent.reference,
          user.reference,
          resultReceiver.reference,
          scheduler.reference,
          initialCode,
          initialData.reference,
          initialExtras.reference);

  static final _removeStickyBroadcastAsUser = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_Context_removeStickyBroadcastAsUser")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public abstract void removeStickyBroadcastAsUser(android.content.Intent intent, android.os.UserHandle user)
  void removeStickyBroadcastAsUser(Intent intent, jni.JlObject user) =>
      _removeStickyBroadcastAsUser(reference, intent.reference, user.reference);

  static final _registerReceiver = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_Context_registerReceiver")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public abstract android.content.Intent registerReceiver(android.content.BroadcastReceiver receiver, android.content.IntentFilter filter)
  Intent registerReceiver(BroadcastReceiver receiver, IntentFilter filter) =>
      Intent.fromRef(
          _registerReceiver(reference, receiver.reference, filter.reference));

  static final _registerReceiver_1 = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_content_Context_registerReceiver_1")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public abstract android.content.Intent registerReceiver(android.content.BroadcastReceiver receiver, android.content.IntentFilter filter, int flags)
  Intent registerReceiver_1(
          BroadcastReceiver receiver, IntentFilter filter, int flags) =>
      Intent.fromRef(_registerReceiver_1(
          reference, receiver.reference, filter.reference, flags));

  static final _registerReceiver_2 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>)>>(
          "android_content_Context_registerReceiver_2")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public abstract android.content.Intent registerReceiver(android.content.BroadcastReceiver receiver, android.content.IntentFilter filter, java.lang.String broadcastPermission, android.os.Handler scheduler)
  Intent registerReceiver_2(BroadcastReceiver receiver, IntentFilter filter,
          jni.JlString broadcastPermission, jni.JlObject scheduler) =>
      Intent.fromRef(_registerReceiver_2(
          reference,
          receiver.reference,
          filter.reference,
          broadcastPermission.reference,
          scheduler.reference));

  static final _registerReceiver_3 = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_content_Context_registerReceiver_3")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              int)>();

  /// from: public abstract android.content.Intent registerReceiver(android.content.BroadcastReceiver receiver, android.content.IntentFilter filter, java.lang.String broadcastPermission, android.os.Handler scheduler, int flags)
  Intent registerReceiver_3(
          BroadcastReceiver receiver,
          IntentFilter filter,
          jni.JlString broadcastPermission,
          jni.JlObject scheduler,
          int flags) =>
      Intent.fromRef(_registerReceiver_3(
          reference,
          receiver.reference,
          filter.reference,
          broadcastPermission.reference,
          scheduler.reference,
          flags));

  static final _unregisterReceiver = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_Context_unregisterReceiver")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public abstract void unregisterReceiver(android.content.BroadcastReceiver receiver)
  void unregisterReceiver(BroadcastReceiver receiver) =>
      _unregisterReceiver(reference, receiver.reference);

  static final _startService = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_Context_startService")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public abstract android.content.ComponentName startService(android.content.Intent service)
  ComponentName startService(Intent service) =>
      ComponentName.fromRef(_startService(reference, service.reference));

  static final _startForegroundService = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_Context_startForegroundService")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public abstract android.content.ComponentName startForegroundService(android.content.Intent service)
  ComponentName startForegroundService(Intent service) => ComponentName.fromRef(
      _startForegroundService(reference, service.reference));

  static final _stopService = jlookup<
              ffi.NativeFunction<
                  ffi.Uint8 Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_Context_stopService")
      .asFunction<int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public abstract boolean stopService(android.content.Intent service)
  bool stopService(Intent service) =>
      _stopService(reference, service.reference) != 0;

  static final _bindService = jlookup<
          ffi.NativeFunction<
              ffi.Uint8 Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_content_Context_bindService")
      .asFunction<
          int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, int)>();

  /// from: public abstract boolean bindService(android.content.Intent service, android.content.ServiceConnection conn, int flags)
  bool bindService(Intent service, ServiceConnection conn, int flags) =>
      _bindService(reference, service.reference, conn.reference, flags) != 0;

  static final _unbindService = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_Context_unbindService")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public abstract void unbindService(android.content.ServiceConnection conn)
  void unbindService(ServiceConnection conn) =>
      _unbindService(reference, conn.reference);

  static final _startInstrumentation = jlookup<
              ffi.NativeFunction<
                  ffi.Uint8 Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>)>>(
          "android_content_Context_startInstrumentation")
      .asFunction<
          int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public abstract boolean startInstrumentation(android.content.ComponentName className, java.lang.String profileFile, android.os.Bundle arguments)
  bool startInstrumentation(ComponentName className, jni.JlString profileFile,
          jni.JlObject arguments) =>
      _startInstrumentation(reference, className.reference,
          profileFile.reference, arguments.reference) !=
      0;

  static final _getSystemService = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_Context_getSystemService")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public abstract java.lang.Object getSystemService(java.lang.String name)
  jni.JlObject getSystemService(jni.JlString name) =>
      jni.JlObject.fromRef(_getSystemService(reference, name.reference));

  static final _getSystemServiceName = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_Context_getSystemServiceName")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public abstract java.lang.String getSystemServiceName(java.lang.Class<?> serviceClass)
  jni.JlString getSystemServiceName(jni.JlObject serviceClass) =>
      jni.JlString.fromRef(
          _getSystemServiceName(reference, serviceClass.reference));

  static final _checkPermission = jlookup<
          ffi.NativeFunction<
              ffi.Int32 Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Int32,
                  ffi.Int32)>>("android_content_Context_checkPermission")
      .asFunction<
          int Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int, int)>();

  /// from: public abstract int checkPermission(java.lang.String permission, int pid, int uid)
  int checkPermission(jni.JlString permission, int pid, int uid) =>
      _checkPermission(reference, permission.reference, pid, uid);

  static final _checkCallingPermission = jlookup<
              ffi.NativeFunction<
                  ffi.Int32 Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_Context_checkCallingPermission")
      .asFunction<int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public abstract int checkCallingPermission(java.lang.String permission)
  int checkCallingPermission(jni.JlString permission) =>
      _checkCallingPermission(reference, permission.reference);

  static final _checkCallingOrSelfPermission = jlookup<
              ffi.NativeFunction<
                  ffi.Int32 Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_Context_checkCallingOrSelfPermission")
      .asFunction<int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public abstract int checkCallingOrSelfPermission(java.lang.String permission)
  int checkCallingOrSelfPermission(jni.JlString permission) =>
      _checkCallingOrSelfPermission(reference, permission.reference);

  static final _checkSelfPermission = jlookup<
              ffi.NativeFunction<
                  ffi.Int32 Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_Context_checkSelfPermission")
      .asFunction<int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public abstract int checkSelfPermission(java.lang.String permission)
  int checkSelfPermission(jni.JlString permission) =>
      _checkSelfPermission(reference, permission.reference);

  static final _enforcePermission = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Int32,
                      ffi.Int32,
                      ffi.Pointer<ffi.Void>)>>(
          "android_content_Context_enforcePermission")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int, int,
              ffi.Pointer<ffi.Void>)>();

  /// from: public abstract void enforcePermission(java.lang.String permission, int pid, int uid, java.lang.String message)
  void enforcePermission(
          jni.JlString permission, int pid, int uid, jni.JlString message) =>
      _enforcePermission(
          reference, permission.reference, pid, uid, message.reference);

  static final _enforceCallingPermission = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_Context_enforceCallingPermission")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public abstract void enforceCallingPermission(java.lang.String permission, java.lang.String message)
  void enforceCallingPermission(
          jni.JlString permission, jni.JlString message) =>
      _enforceCallingPermission(
          reference, permission.reference, message.reference);

  static final _enforceCallingOrSelfPermission = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_Context_enforceCallingOrSelfPermission")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public abstract void enforceCallingOrSelfPermission(java.lang.String permission, java.lang.String message)
  void enforceCallingOrSelfPermission(
          jni.JlString permission, jni.JlString message) =>
      _enforceCallingOrSelfPermission(
          reference, permission.reference, message.reference);

  static final _grantUriPermission = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_content_Context_grantUriPermission")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, int)>();

  /// from: public abstract void grantUriPermission(java.lang.String toPackage, android.net.Uri uri, int modeFlags)
  void grantUriPermission(
          jni.JlString toPackage, jni.JlObject uri, int modeFlags) =>
      _grantUriPermission(
          reference, toPackage.reference, uri.reference, modeFlags);

  static final _revokeUriPermission = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_content_Context_revokeUriPermission")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public abstract void revokeUriPermission(android.net.Uri uri, int modeFlags)
  void revokeUriPermission(jni.JlObject uri, int modeFlags) =>
      _revokeUriPermission(reference, uri.reference, modeFlags);

  static final _revokeUriPermission_1 = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_content_Context_revokeUriPermission_1")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, int)>();

  /// from: public abstract void revokeUriPermission(java.lang.String toPackage, android.net.Uri uri, int modeFlags)
  void revokeUriPermission_1(
          jni.JlString toPackage, jni.JlObject uri, int modeFlags) =>
      _revokeUriPermission_1(
          reference, toPackage.reference, uri.reference, modeFlags);

  static final _checkUriPermission = jlookup<
          ffi.NativeFunction<
              ffi.Int32 Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Int32,
                  ffi.Int32,
                  ffi.Int32)>>("android_content_Context_checkUriPermission")
      .asFunction<
          int Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int, int, int)>();

  /// from: public abstract int checkUriPermission(android.net.Uri uri, int pid, int uid, int modeFlags)
  int checkUriPermission(jni.JlObject uri, int pid, int uid, int modeFlags) =>
      _checkUriPermission(reference, uri.reference, pid, uid, modeFlags);

  static final _checkCallingUriPermission = jlookup<
              ffi.NativeFunction<
                  ffi.Int32 Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "android_content_Context_checkCallingUriPermission")
      .asFunction<
          int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public abstract int checkCallingUriPermission(android.net.Uri uri, int modeFlags)
  int checkCallingUriPermission(jni.JlObject uri, int modeFlags) =>
      _checkCallingUriPermission(reference, uri.reference, modeFlags);

  static final _checkCallingOrSelfUriPermission = jlookup<
              ffi.NativeFunction<
                  ffi.Int32 Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "android_content_Context_checkCallingOrSelfUriPermission")
      .asFunction<
          int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public abstract int checkCallingOrSelfUriPermission(android.net.Uri uri, int modeFlags)
  int checkCallingOrSelfUriPermission(jni.JlObject uri, int modeFlags) =>
      _checkCallingOrSelfUriPermission(reference, uri.reference, modeFlags);

  static final _checkUriPermission_1 = jlookup<
          ffi.NativeFunction<
              ffi.Int32 Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Int32,
                  ffi.Int32,
                  ffi.Int32)>>("android_content_Context_checkUriPermission_1")
      .asFunction<
          int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int, int, int)>();

  /// from: public abstract int checkUriPermission(android.net.Uri uri, java.lang.String readPermission, java.lang.String writePermission, int pid, int uid, int modeFlags)
  int checkUriPermission_1(jni.JlObject uri, jni.JlString readPermission,
          jni.JlString writePermission, int pid, int uid, int modeFlags) =>
      _checkUriPermission_1(reference, uri.reference, readPermission.reference,
          writePermission.reference, pid, uid, modeFlags);

  static final _enforceUriPermission = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Int32,
                      ffi.Int32,
                      ffi.Int32,
                      ffi.Pointer<ffi.Void>)>>(
          "android_content_Context_enforceUriPermission")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int, int,
              int, ffi.Pointer<ffi.Void>)>();

  /// from: public abstract void enforceUriPermission(android.net.Uri uri, int pid, int uid, int modeFlags, java.lang.String message)
  void enforceUriPermission(jni.JlObject uri, int pid, int uid, int modeFlags,
          jni.JlString message) =>
      _enforceUriPermission(
          reference, uri.reference, pid, uid, modeFlags, message.reference);

  static final _enforceCallingUriPermission = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Int32,
                      ffi.Pointer<ffi.Void>)>>(
          "android_content_Context_enforceCallingUriPermission")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int,
              ffi.Pointer<ffi.Void>)>();

  /// from: public abstract void enforceCallingUriPermission(android.net.Uri uri, int modeFlags, java.lang.String message)
  void enforceCallingUriPermission(
          jni.JlObject uri, int modeFlags, jni.JlString message) =>
      _enforceCallingUriPermission(
          reference, uri.reference, modeFlags, message.reference);

  static final _enforceCallingOrSelfUriPermission = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Int32,
                      ffi.Pointer<ffi.Void>)>>(
          "android_content_Context_enforceCallingOrSelfUriPermission")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int,
              ffi.Pointer<ffi.Void>)>();

  /// from: public abstract void enforceCallingOrSelfUriPermission(android.net.Uri uri, int modeFlags, java.lang.String message)
  void enforceCallingOrSelfUriPermission(
          jni.JlObject uri, int modeFlags, jni.JlString message) =>
      _enforceCallingOrSelfUriPermission(
          reference, uri.reference, modeFlags, message.reference);

  static final _enforceUriPermission_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Int32,
                      ffi.Int32,
                      ffi.Int32,
                      ffi.Pointer<ffi.Void>)>>(
          "android_content_Context_enforceUriPermission_1")
      .asFunction<
          void Function(
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              int,
              int,
              int,
              ffi.Pointer<ffi.Void>)>();

  /// from: public abstract void enforceUriPermission(android.net.Uri uri, java.lang.String readPermission, java.lang.String writePermission, int pid, int uid, int modeFlags, java.lang.String message)
  void enforceUriPermission_1(
          jni.JlObject uri,
          jni.JlString readPermission,
          jni.JlString writePermission,
          int pid,
          int uid,
          int modeFlags,
          jni.JlString message) =>
      _enforceUriPermission_1(
          reference,
          uri.reference,
          readPermission.reference,
          writePermission.reference,
          pid,
          uid,
          modeFlags,
          message.reference);

  static final _createPackageContext = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_content_Context_createPackageContext")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public abstract android.content.Context createPackageContext(java.lang.String packageName, int flags)
  Context createPackageContext(jni.JlString packageName, int flags) =>
      Context.fromRef(
          _createPackageContext(reference, packageName.reference, flags));

  static final _createContextForSplit = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_Context_createContextForSplit")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public abstract android.content.Context createContextForSplit(java.lang.String splitName)
  Context createContextForSplit(jni.JlString splitName) =>
      Context.fromRef(_createContextForSplit(reference, splitName.reference));

  static final _createConfigurationContext = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_Context_createConfigurationContext")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public abstract android.content.Context createConfigurationContext(android.content.res.Configuration overrideConfiguration)
  Context createConfigurationContext(res.Configuration overrideConfiguration) =>
      Context.fromRef(_createConfigurationContext(
          reference, overrideConfiguration.reference));

  static final _createDisplayContext = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_Context_createDisplayContext")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public abstract android.content.Context createDisplayContext(android.view.Display display)
  Context createDisplayContext(jni.JlObject display) =>
      Context.fromRef(_createDisplayContext(reference, display.reference));

  static final _createDeviceProtectedStorageContext = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_Context_createDeviceProtectedStorageContext")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public abstract android.content.Context createDeviceProtectedStorageContext()
  Context createDeviceProtectedStorageContext() =>
      Context.fromRef(_createDeviceProtectedStorageContext(reference));

  static final _isRestricted =
      jlookup<ffi.NativeFunction<ffi.Uint8 Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_Context_isRestricted")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public boolean isRestricted()
  bool isRestricted() => _isRestricted(reference) != 0;

  static final _isDeviceProtectedStorage =
      jlookup<ffi.NativeFunction<ffi.Uint8 Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_Context_isDeviceProtectedStorage")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public abstract boolean isDeviceProtectedStorage()
  bool isDeviceProtectedStorage() => _isDeviceProtectedStorage(reference) != 0;
}

class ContentUris extends jni.JlObject {
  ContentUris.fromRef(ffi.Pointer<ffi.Void> ref) : super.fromRef(ref);

  static final _ctor =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "android_content_ContentUris_new")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();

  /// from: public void <init>()
  ContentUris() : super.fromRef(_ctor());

  static final _parseId =
      jlookup<ffi.NativeFunction<ffi.Int64 Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_ContentUris_parseId")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: static public long parseId(android.net.Uri contentUri)
  static int parseId(jni.JlObject contentUri) => _parseId(contentUri.reference);

  static final _appendId = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                  ffi.Int64)>>("android_content_ContentUris_appendId")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: static public android.net.Uri.Builder appendId(android.net.Uri.Builder builder, long id)
  static jni.JlObject appendId(jni.JlObject builder, int id) =>
      jni.JlObject.fromRef(_appendId(builder.reference, id));

  static final _withAppendedId = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                  ffi.Int64)>>("android_content_ContentUris_withAppendedId")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: static public android.net.Uri withAppendedId(android.net.Uri contentUri, long id)
  static jni.JlObject withAppendedId(jni.JlObject contentUri, int id) =>
      jni.JlObject.fromRef(_withAppendedId(contentUri.reference, id));
}

class SyncStats extends jni.JlObject {
  SyncStats.fromRef(ffi.Pointer<ffi.Void> ref) : super.fromRef(ref);

  /// from: static public final android.os.Parcelable.Creator<android.content.SyncStats> CREATOR
  static final _getCREATOR =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "get_android_content_SyncStats_CREATOR")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();
  static jni.JlObject get CREATOR => jni.JlObject.fromRef(_getCREATOR());

  /// from: public long numAuthExceptions
  static final _getnumAuthExceptions = jlookup<
          ffi.NativeFunction<
              ffi.Int64 Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_content_SyncStats_numAuthExceptions")
      .asFunction<
          int Function(
    ffi.Pointer<ffi.Void>,
  )>();
  int get numAuthExceptions => _getnumAuthExceptions(reference);
  static final _setnumAuthExceptions = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Int64)>>(
          "set_android_content_SyncStats_numAuthExceptions")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();
  set numAuthExceptions(int value) => _setnumAuthExceptions(reference, value);

  /// from: public long numConflictDetectedExceptions
  static final _getnumConflictDetectedExceptions = jlookup<
          ffi.NativeFunction<
              ffi.Int64 Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_content_SyncStats_numConflictDetectedExceptions")
      .asFunction<
          int Function(
    ffi.Pointer<ffi.Void>,
  )>();
  int get numConflictDetectedExceptions =>
      _getnumConflictDetectedExceptions(reference);
  static final _setnumConflictDetectedExceptions = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Int64)>>(
          "set_android_content_SyncStats_numConflictDetectedExceptions")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();
  set numConflictDetectedExceptions(int value) =>
      _setnumConflictDetectedExceptions(reference, value);

  /// from: public long numDeletes
  static final _getnumDeletes = jlookup<
          ffi.NativeFunction<
              ffi.Int64 Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_content_SyncStats_numDeletes")
      .asFunction<
          int Function(
    ffi.Pointer<ffi.Void>,
  )>();
  int get numDeletes => _getnumDeletes(reference);
  static final _setnumDeletes = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  ffi.Int64)>>("set_android_content_SyncStats_numDeletes")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();
  set numDeletes(int value) => _setnumDeletes(reference, value);

  /// from: public long numEntries
  static final _getnumEntries = jlookup<
          ffi.NativeFunction<
              ffi.Int64 Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_content_SyncStats_numEntries")
      .asFunction<
          int Function(
    ffi.Pointer<ffi.Void>,
  )>();
  int get numEntries => _getnumEntries(reference);
  static final _setnumEntries = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  ffi.Int64)>>("set_android_content_SyncStats_numEntries")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();
  set numEntries(int value) => _setnumEntries(reference, value);

  /// from: public long numInserts
  static final _getnumInserts = jlookup<
          ffi.NativeFunction<
              ffi.Int64 Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_content_SyncStats_numInserts")
      .asFunction<
          int Function(
    ffi.Pointer<ffi.Void>,
  )>();
  int get numInserts => _getnumInserts(reference);
  static final _setnumInserts = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  ffi.Int64)>>("set_android_content_SyncStats_numInserts")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();
  set numInserts(int value) => _setnumInserts(reference, value);

  /// from: public long numIoExceptions
  static final _getnumIoExceptions = jlookup<
          ffi.NativeFunction<
              ffi.Int64 Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_content_SyncStats_numIoExceptions")
      .asFunction<
          int Function(
    ffi.Pointer<ffi.Void>,
  )>();
  int get numIoExceptions => _getnumIoExceptions(reference);
  static final _setnumIoExceptions = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  ffi.Int64)>>("set_android_content_SyncStats_numIoExceptions")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();
  set numIoExceptions(int value) => _setnumIoExceptions(reference, value);

  /// from: public long numParseExceptions
  static final _getnumParseExceptions = jlookup<
          ffi.NativeFunction<
              ffi.Int64 Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_content_SyncStats_numParseExceptions")
      .asFunction<
          int Function(
    ffi.Pointer<ffi.Void>,
  )>();
  int get numParseExceptions => _getnumParseExceptions(reference);
  static final _setnumParseExceptions = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Int64)>>(
          "set_android_content_SyncStats_numParseExceptions")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();
  set numParseExceptions(int value) => _setnumParseExceptions(reference, value);

  /// from: public long numSkippedEntries
  static final _getnumSkippedEntries = jlookup<
          ffi.NativeFunction<
              ffi.Int64 Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_content_SyncStats_numSkippedEntries")
      .asFunction<
          int Function(
    ffi.Pointer<ffi.Void>,
  )>();
  int get numSkippedEntries => _getnumSkippedEntries(reference);
  static final _setnumSkippedEntries = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Int64)>>(
          "set_android_content_SyncStats_numSkippedEntries")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();
  set numSkippedEntries(int value) => _setnumSkippedEntries(reference, value);

  /// from: public long numUpdates
  static final _getnumUpdates = jlookup<
          ffi.NativeFunction<
              ffi.Int64 Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_content_SyncStats_numUpdates")
      .asFunction<
          int Function(
    ffi.Pointer<ffi.Void>,
  )>();
  int get numUpdates => _getnumUpdates(reference);
  static final _setnumUpdates = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  ffi.Int64)>>("set_android_content_SyncStats_numUpdates")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();
  set numUpdates(int value) => _setnumUpdates(reference, value);

  static final _ctor =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "android_content_SyncStats_new")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();

  /// from: public void <init>()
  SyncStats() : super.fromRef(_ctor());

  static final _ctor_1 = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
                  ffi.Pointer<ffi.Void>)>>("android_content_SyncStats_new_1")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void <init>(android.os.Parcel in)
  SyncStats.ctor_1(jni.JlObject in_) : super.fromRef(_ctor_1(in_.reference));

  static final _toString_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_SyncStats_toString_1")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.String toString()
  jni.JlString toString_1() => jni.JlString.fromRef(_toString_1(reference));

  static final _clear =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_SyncStats_clear")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void clear()
  void clear() => _clear(reference);

  static final _describeContents =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_SyncStats_describeContents")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int describeContents()
  int describeContents() => _describeContents(reference);

  static final _writeToParcel = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_content_SyncStats_writeToParcel")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public void writeToParcel(android.os.Parcel dest, int flags)
  void writeToParcel(jni.JlObject dest, int flags) =>
      _writeToParcel(reference, dest.reference, flags);
}

class ServiceConnection extends jni.JlObject {
  ServiceConnection.fromRef(ffi.Pointer<ffi.Void> ref) : super.fromRef(ref);

  static final _onServiceConnected = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_ServiceConnection_onServiceConnected")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public abstract void onServiceConnected(android.content.ComponentName name, android.os.IBinder service)
  void onServiceConnected(ComponentName name, jni.JlObject service) =>
      _onServiceConnected(reference, name.reference, service.reference);

  static final _onServiceDisconnected = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_ServiceConnection_onServiceDisconnected")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public abstract void onServiceDisconnected(android.content.ComponentName name)
  void onServiceDisconnected(ComponentName name) =>
      _onServiceDisconnected(reference, name.reference);

  static final _onBindingDied = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_ServiceConnection_onBindingDied")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: default public void onBindingDied(android.content.ComponentName name)
  void onBindingDied(ComponentName name) =>
      _onBindingDied(reference, name.reference);

  static final _onNullBinding = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_ServiceConnection_onNullBinding")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: default public void onNullBinding(android.content.ComponentName name)
  void onNullBinding(ComponentName name) =>
      _onNullBinding(reference, name.reference);
}

class MutableContextWrapper extends ContextWrapper {
  MutableContextWrapper.fromRef(ffi.Pointer<ffi.Void> ref) : super.fromRef(ref);

  static final _ctor = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_MutableContextWrapper_new")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void <init>(android.content.Context base)
  MutableContextWrapper(Context base) : super.fromRef(_ctor(base.reference));

  static final _setBaseContext = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_MutableContextWrapper_setBaseContext")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void setBaseContext(android.content.Context base)
  void setBaseContext(Context base) =>
      _setBaseContext(reference, base.reference);
}

class IntentFilter extends jni.JlObject {
  IntentFilter.fromRef(ffi.Pointer<ffi.Void> ref) : super.fromRef(ref);

  /// from: static public final android.os.Parcelable.Creator<android.content.IntentFilter> CREATOR
  static final _getCREATOR =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "get_android_content_IntentFilter_CREATOR")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();
  static jni.JlObject get CREATOR => jni.JlObject.fromRef(_getCREATOR());

  /// from: static public final int MATCH_ADJUSTMENT_MASK
  static const MATCH_ADJUSTMENT_MASK = 65535;

  /// from: static public final int MATCH_ADJUSTMENT_NORMAL
  static const MATCH_ADJUSTMENT_NORMAL = 32768;

  /// from: static public final int MATCH_CATEGORY_EMPTY
  static const MATCH_CATEGORY_EMPTY = 1048576;

  /// from: static public final int MATCH_CATEGORY_HOST
  static const MATCH_CATEGORY_HOST = 3145728;

  /// from: static public final int MATCH_CATEGORY_MASK
  static const MATCH_CATEGORY_MASK = 268369920;

  /// from: static public final int MATCH_CATEGORY_PATH
  static const MATCH_CATEGORY_PATH = 5242880;

  /// from: static public final int MATCH_CATEGORY_PORT
  static const MATCH_CATEGORY_PORT = 4194304;

  /// from: static public final int MATCH_CATEGORY_SCHEME
  static const MATCH_CATEGORY_SCHEME = 2097152;

  /// from: static public final int MATCH_CATEGORY_SCHEME_SPECIFIC_PART
  static const MATCH_CATEGORY_SCHEME_SPECIFIC_PART = 5767168;

  /// from: static public final int MATCH_CATEGORY_TYPE
  static const MATCH_CATEGORY_TYPE = 6291456;

  /// from: static public final int NO_MATCH_ACTION
  static const NO_MATCH_ACTION = -3;

  /// from: static public final int NO_MATCH_CATEGORY
  static const NO_MATCH_CATEGORY = -4;

  /// from: static public final int NO_MATCH_DATA
  static const NO_MATCH_DATA = -2;

  /// from: static public final int NO_MATCH_TYPE
  static const NO_MATCH_TYPE = -1;

  /// from: static public final int SYSTEM_HIGH_PRIORITY
  static const SYSTEM_HIGH_PRIORITY = 1000;

  /// from: static public final int SYSTEM_LOW_PRIORITY
  static const SYSTEM_LOW_PRIORITY = -1000;

  static final _ctor =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "android_content_IntentFilter_new")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();

  /// from: public void <init>()
  IntentFilter() : super.fromRef(_ctor());

  static final _ctor_1 = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
                  ffi.Pointer<ffi.Void>)>>("android_content_IntentFilter_new_1")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void <init>(java.lang.String action)
  IntentFilter.ctor_1(jni.JlString action)
      : super.fromRef(_ctor_1(action.reference));

  static final _ctor_2 = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("android_content_IntentFilter_new_2")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void <init>(java.lang.String action, java.lang.String dataType)
  IntentFilter.ctor_2(jni.JlString action, jni.JlString dataType)
      : super.fromRef(_ctor_2(action.reference, dataType.reference));

  static final _ctor_3 = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
                  ffi.Pointer<ffi.Void>)>>("android_content_IntentFilter_new_3")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void <init>(android.content.IntentFilter o)
  IntentFilter.ctor_3(IntentFilter o) : super.fromRef(_ctor_3(o.reference));

  static final _create = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_IntentFilter_create")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: static public android.content.IntentFilter create(java.lang.String action, java.lang.String dataType)
  static IntentFilter create(jni.JlString action, jni.JlString dataType) =>
      IntentFilter.fromRef(_create(action.reference, dataType.reference));

  static final _setPriority = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_content_IntentFilter_setPriority")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public final void setPriority(int priority)
  void setPriority(int priority) => _setPriority(reference, priority);

  static final _getPriority =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_IntentFilter_getPriority")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public final int getPriority()
  int getPriority() => _getPriority(reference);

  static final _addAction = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_IntentFilter_addAction")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public final void addAction(java.lang.String action)
  void addAction(jni.JlString action) =>
      _addAction(reference, action.reference);

  static final _countActions =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_IntentFilter_countActions")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public final int countActions()
  int countActions() => _countActions(reference);

  static final _getAction = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_content_IntentFilter_getAction")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public final java.lang.String getAction(int index)
  jni.JlString getAction(int index) =>
      jni.JlString.fromRef(_getAction(reference, index));

  static final _hasAction = jlookup<
              ffi.NativeFunction<
                  ffi.Uint8 Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_IntentFilter_hasAction")
      .asFunction<int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public final boolean hasAction(java.lang.String action)
  bool hasAction(jni.JlString action) =>
      _hasAction(reference, action.reference) != 0;

  static final _matchAction = jlookup<
              ffi.NativeFunction<
                  ffi.Uint8 Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_IntentFilter_matchAction")
      .asFunction<int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public final boolean matchAction(java.lang.String action)
  bool matchAction(jni.JlString action) =>
      _matchAction(reference, action.reference) != 0;

  static final _actionsIterator = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_IntentFilter_actionsIterator")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public final java.util.Iterator<java.lang.String> actionsIterator()
  jni.JlObject actionsIterator() =>
      jni.JlObject.fromRef(_actionsIterator(reference));

  static final _addDataType = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_IntentFilter_addDataType")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public final void addDataType(java.lang.String type)
  void addDataType(jni.JlString type) =>
      _addDataType(reference, type.reference);

  static final _hasDataType = jlookup<
              ffi.NativeFunction<
                  ffi.Uint8 Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_IntentFilter_hasDataType")
      .asFunction<int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public final boolean hasDataType(java.lang.String type)
  bool hasDataType(jni.JlString type) =>
      _hasDataType(reference, type.reference) != 0;

  static final _countDataTypes =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_IntentFilter_countDataTypes")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public final int countDataTypes()
  int countDataTypes() => _countDataTypes(reference);

  static final _getDataType = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_content_IntentFilter_getDataType")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public final java.lang.String getDataType(int index)
  jni.JlString getDataType(int index) =>
      jni.JlString.fromRef(_getDataType(reference, index));

  static final _typesIterator = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_IntentFilter_typesIterator")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public final java.util.Iterator<java.lang.String> typesIterator()
  jni.JlObject typesIterator() =>
      jni.JlObject.fromRef(_typesIterator(reference));

  static final _addDataScheme = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_IntentFilter_addDataScheme")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public final void addDataScheme(java.lang.String scheme)
  void addDataScheme(jni.JlString scheme) =>
      _addDataScheme(reference, scheme.reference);

  static final _countDataSchemes =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_IntentFilter_countDataSchemes")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public final int countDataSchemes()
  int countDataSchemes() => _countDataSchemes(reference);

  static final _getDataScheme = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_content_IntentFilter_getDataScheme")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public final java.lang.String getDataScheme(int index)
  jni.JlString getDataScheme(int index) =>
      jni.JlString.fromRef(_getDataScheme(reference, index));

  static final _hasDataScheme = jlookup<
              ffi.NativeFunction<
                  ffi.Uint8 Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_IntentFilter_hasDataScheme")
      .asFunction<int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public final boolean hasDataScheme(java.lang.String scheme)
  bool hasDataScheme(jni.JlString scheme) =>
      _hasDataScheme(reference, scheme.reference) != 0;

  static final _schemesIterator = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_IntentFilter_schemesIterator")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public final java.util.Iterator<java.lang.String> schemesIterator()
  jni.JlObject schemesIterator() =>
      jni.JlObject.fromRef(_schemesIterator(reference));

  static final _addDataSchemeSpecificPart = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "android_content_IntentFilter_addDataSchemeSpecificPart")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public final void addDataSchemeSpecificPart(java.lang.String ssp, int type)
  void addDataSchemeSpecificPart(jni.JlString ssp, int type) =>
      _addDataSchemeSpecificPart(reference, ssp.reference, type);

  static final _countDataSchemeSpecificParts =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_IntentFilter_countDataSchemeSpecificParts")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public final int countDataSchemeSpecificParts()
  int countDataSchemeSpecificParts() =>
      _countDataSchemeSpecificParts(reference);

  static final _getDataSchemeSpecificPart = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "android_content_IntentFilter_getDataSchemeSpecificPart")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public final android.os.PatternMatcher getDataSchemeSpecificPart(int index)
  jni.JlObject getDataSchemeSpecificPart(int index) =>
      jni.JlObject.fromRef(_getDataSchemeSpecificPart(reference, index));

  static final _hasDataSchemeSpecificPart = jlookup<
              ffi.NativeFunction<
                  ffi.Uint8 Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_IntentFilter_hasDataSchemeSpecificPart")
      .asFunction<int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public final boolean hasDataSchemeSpecificPart(java.lang.String data)
  bool hasDataSchemeSpecificPart(jni.JlString data) =>
      _hasDataSchemeSpecificPart(reference, data.reference) != 0;

  static final _schemeSpecificPartsIterator = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_IntentFilter_schemeSpecificPartsIterator")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public final java.util.Iterator<android.os.PatternMatcher> schemeSpecificPartsIterator()
  jni.JlObject schemeSpecificPartsIterator() =>
      jni.JlObject.fromRef(_schemeSpecificPartsIterator(reference));

  static final _addDataAuthority = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_IntentFilter_addDataAuthority")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public final void addDataAuthority(java.lang.String host, java.lang.String port)
  void addDataAuthority(jni.JlString host, jni.JlString port) =>
      _addDataAuthority(reference, host.reference, port.reference);

  static final _countDataAuthorities =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_IntentFilter_countDataAuthorities")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public final int countDataAuthorities()
  int countDataAuthorities() => _countDataAuthorities(reference);

  static final _getDataAuthority = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_content_IntentFilter_getDataAuthority")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public final android.content.IntentFilter.AuthorityEntry getDataAuthority(int index)
  IntentFilter_AuthorityEntry getDataAuthority(int index) =>
      IntentFilter_AuthorityEntry.fromRef(_getDataAuthority(reference, index));

  static final _hasDataAuthority = jlookup<
              ffi.NativeFunction<
                  ffi.Uint8 Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_IntentFilter_hasDataAuthority")
      .asFunction<int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public final boolean hasDataAuthority(android.net.Uri data)
  bool hasDataAuthority(jni.JlObject data) =>
      _hasDataAuthority(reference, data.reference) != 0;

  static final _authoritiesIterator = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_IntentFilter_authoritiesIterator")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public final java.util.Iterator<android.content.IntentFilter.AuthorityEntry> authoritiesIterator()
  jni.JlObject authoritiesIterator() =>
      jni.JlObject.fromRef(_authoritiesIterator(reference));

  static final _addDataPath = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_content_IntentFilter_addDataPath")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public final void addDataPath(java.lang.String path, int type)
  void addDataPath(jni.JlString path, int type) =>
      _addDataPath(reference, path.reference, type);

  static final _countDataPaths =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_IntentFilter_countDataPaths")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public final int countDataPaths()
  int countDataPaths() => _countDataPaths(reference);

  static final _getDataPath = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_content_IntentFilter_getDataPath")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public final android.os.PatternMatcher getDataPath(int index)
  jni.JlObject getDataPath(int index) =>
      jni.JlObject.fromRef(_getDataPath(reference, index));

  static final _hasDataPath = jlookup<
              ffi.NativeFunction<
                  ffi.Uint8 Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_IntentFilter_hasDataPath")
      .asFunction<int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public final boolean hasDataPath(java.lang.String data)
  bool hasDataPath(jni.JlString data) =>
      _hasDataPath(reference, data.reference) != 0;

  static final _pathsIterator = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_IntentFilter_pathsIterator")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public final java.util.Iterator<android.os.PatternMatcher> pathsIterator()
  jni.JlObject pathsIterator() =>
      jni.JlObject.fromRef(_pathsIterator(reference));

  static final _matchDataAuthority = jlookup<
              ffi.NativeFunction<
                  ffi.Int32 Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_IntentFilter_matchDataAuthority")
      .asFunction<int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public final int matchDataAuthority(android.net.Uri data)
  int matchDataAuthority(jni.JlObject data) =>
      _matchDataAuthority(reference, data.reference);

  static final _matchData = jlookup<
              ffi.NativeFunction<
                  ffi.Int32 Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>)>>(
          "android_content_IntentFilter_matchData")
      .asFunction<
          int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public final int matchData(java.lang.String type, java.lang.String scheme, android.net.Uri data)
  int matchData(jni.JlString type, jni.JlString scheme, jni.JlObject data) =>
      _matchData(reference, type.reference, scheme.reference, data.reference);

  static final _addCategory = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_IntentFilter_addCategory")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public final void addCategory(java.lang.String category)
  void addCategory(jni.JlString category) =>
      _addCategory(reference, category.reference);

  static final _countCategories =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_IntentFilter_countCategories")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public final int countCategories()
  int countCategories() => _countCategories(reference);

  static final _getCategory = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_content_IntentFilter_getCategory")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public final java.lang.String getCategory(int index)
  jni.JlString getCategory(int index) =>
      jni.JlString.fromRef(_getCategory(reference, index));

  static final _hasCategory = jlookup<
              ffi.NativeFunction<
                  ffi.Uint8 Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_IntentFilter_hasCategory")
      .asFunction<int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public final boolean hasCategory(java.lang.String category)
  bool hasCategory(jni.JlString category) =>
      _hasCategory(reference, category.reference) != 0;

  static final _categoriesIterator = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_IntentFilter_categoriesIterator")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public final java.util.Iterator<java.lang.String> categoriesIterator()
  jni.JlObject categoriesIterator() =>
      jni.JlObject.fromRef(_categoriesIterator(reference));

  static final _matchCategories = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_IntentFilter_matchCategories")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public final java.lang.String matchCategories(java.util.Set<java.lang.String> categories)
  jni.JlString matchCategories(jni.JlObject categories) =>
      jni.JlString.fromRef(_matchCategories(reference, categories.reference));

  static final _match = jlookup<
          ffi.NativeFunction<
              ffi.Int32 Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Uint8,
                  ffi.Pointer<ffi.Void>)>>("android_content_IntentFilter_match")
      .asFunction<
          int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, int, ffi.Pointer<ffi.Void>)>();

  /// from: public final int match(android.content.ContentResolver resolver, android.content.Intent intent, boolean resolve, java.lang.String logTag)
  int match(ContentResolver resolver, Intent intent, bool resolve,
          jni.JlString logTag) =>
      _match(reference, resolver.reference, intent.reference, resolve ? 1 : 0,
          logTag.reference);

  static final _match_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Int32 Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>)>>(
          "android_content_IntentFilter_match_1")
      .asFunction<
          int Function(
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public final int match(java.lang.String action, java.lang.String type, java.lang.String scheme, android.net.Uri data, java.util.Set<java.lang.String> categories, java.lang.String logTag)
  int match_1(jni.JlString action, jni.JlString type, jni.JlString scheme,
          jni.JlObject data, jni.JlObject categories, jni.JlString logTag) =>
      _match_1(reference, action.reference, type.reference, scheme.reference,
          data.reference, categories.reference, logTag.reference);

  static final _writeToXml = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_IntentFilter_writeToXml")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void writeToXml(org.xmlpull.v1.XmlSerializer serializer)
  void writeToXml(jni.JlObject serializer) =>
      _writeToXml(reference, serializer.reference);

  static final _readFromXml = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_IntentFilter_readFromXml")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void readFromXml(org.xmlpull.v1.XmlPullParser parser)
  void readFromXml(jni.JlObject parser) =>
      _readFromXml(reference, parser.reference);

  static final _dump = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("android_content_IntentFilter_dump")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public void dump(android.util.Printer du, java.lang.String prefix)
  void dump(jni.JlObject du, jni.JlString prefix) =>
      _dump(reference, du.reference, prefix.reference);

  static final _describeContents =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_IntentFilter_describeContents")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public final int describeContents()
  int describeContents() => _describeContents(reference);

  static final _writeToParcel = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_content_IntentFilter_writeToParcel")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public final void writeToParcel(android.os.Parcel dest, int flags)
  void writeToParcel(jni.JlObject dest, int flags) =>
      _writeToParcel(reference, dest.reference, flags);
}

class IntentFilter_MalformedMimeTypeException extends jni.JlObject {
  IntentFilter_MalformedMimeTypeException.fromRef(ffi.Pointer<ffi.Void> ref)
      : super.fromRef(ref);

  static final _ctor =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "android_content_IntentFilter__MalformedMimeTypeException_new")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();

  /// from: public void <init>()
  IntentFilter_MalformedMimeTypeException() : super.fromRef(_ctor());

  static final _ctor_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_IntentFilter__MalformedMimeTypeException_new_1")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void <init>(java.lang.String name)
  IntentFilter_MalformedMimeTypeException.ctor_1(jni.JlString name)
      : super.fromRef(_ctor_1(name.reference));
}

class IntentFilter_AuthorityEntry extends jni.JlObject {
  IntentFilter_AuthorityEntry.fromRef(ffi.Pointer<ffi.Void> ref)
      : super.fromRef(ref);

  static final _ctor = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_IntentFilter__AuthorityEntry_new")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void <init>(java.lang.String host, java.lang.String port)
  IntentFilter_AuthorityEntry(jni.JlString host, jni.JlString port)
      : super.fromRef(_ctor(host.reference, port.reference));

  static final _getHost = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_IntentFilter__AuthorityEntry_getHost")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.String getHost()
  jni.JlString getHost() => jni.JlString.fromRef(_getHost(reference));

  static final _getPort =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_IntentFilter__AuthorityEntry_getPort")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int getPort()
  int getPort() => _getPort(reference);

  static final _equals_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Uint8 Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_IntentFilter__AuthorityEntry_equals_1")
      .asFunction<int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public boolean equals(java.lang.Object obj)
  bool equals_1(jni.JlObject obj) => _equals_1(reference, obj.reference) != 0;

  static final _match = jlookup<
              ffi.NativeFunction<
                  ffi.Int32 Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_IntentFilter__AuthorityEntry_match")
      .asFunction<int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public int match(android.net.Uri data)
  int match(jni.JlObject data) => _match(reference, data.reference);
}

class SyncRequest extends jni.JlObject {
  SyncRequest.fromRef(ffi.Pointer<ffi.Void> ref) : super.fromRef(ref);

  /// from: static public final android.os.Parcelable.Creator<android.content.SyncRequest> CREATOR
  static final _getCREATOR =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "get_android_content_SyncRequest_CREATOR")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();
  static jni.JlObject get CREATOR => jni.JlObject.fromRef(_getCREATOR());

  static final _ctor = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
                  ffi.Pointer<ffi.Void>)>>("android_content_SyncRequest_new")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: void <init>(android.os.Parcel in)
  SyncRequest(jni.JlObject in_) : super.fromRef(_ctor(in_.reference));

  static final _describeContents =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_SyncRequest_describeContents")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int describeContents()
  int describeContents() => _describeContents(reference);

  static final _writeToParcel = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_content_SyncRequest_writeToParcel")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public void writeToParcel(android.os.Parcel parcel, int flags)
  void writeToParcel(jni.JlObject parcel, int flags) =>
      _writeToParcel(reference, parcel.reference, flags);
}

class SyncRequest_Builder extends jni.JlObject {
  SyncRequest_Builder.fromRef(ffi.Pointer<ffi.Void> ref) : super.fromRef(ref);

  static final _ctor =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "android_content_SyncRequest__Builder_new")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();

  /// from: public void <init>()
  SyncRequest_Builder() : super.fromRef(_ctor());

  static final _syncOnce = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_SyncRequest__Builder_syncOnce")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.content.SyncRequest.Builder syncOnce()
  SyncRequest_Builder syncOnce() =>
      SyncRequest_Builder.fromRef(_syncOnce(reference));

  static final _syncPeriodic = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Int64, ffi.Int64)>>(
          "android_content_SyncRequest__Builder_syncPeriodic")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int, int)>();

  /// from: public android.content.SyncRequest.Builder syncPeriodic(long pollFrequency, long beforeSeconds)
  SyncRequest_Builder syncPeriodic(int pollFrequency, int beforeSeconds) =>
      SyncRequest_Builder.fromRef(
          _syncPeriodic(reference, pollFrequency, beforeSeconds));

  static final _setDisallowMetered = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Uint8)>>(
          "android_content_SyncRequest__Builder_setDisallowMetered")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public android.content.SyncRequest.Builder setDisallowMetered(boolean disallow)
  SyncRequest_Builder setDisallowMetered(bool disallow) =>
      SyncRequest_Builder.fromRef(
          _setDisallowMetered(reference, disallow ? 1 : 0));

  static final _setRequiresCharging = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Uint8)>>(
          "android_content_SyncRequest__Builder_setRequiresCharging")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public android.content.SyncRequest.Builder setRequiresCharging(boolean requiresCharging)
  SyncRequest_Builder setRequiresCharging(bool requiresCharging) =>
      SyncRequest_Builder.fromRef(
          _setRequiresCharging(reference, requiresCharging ? 1 : 0));

  static final _setSyncAdapter = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_SyncRequest__Builder_setSyncAdapter")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.content.SyncRequest.Builder setSyncAdapter(android.accounts.Account account, java.lang.String authority)
  SyncRequest_Builder setSyncAdapter(
          jni.JlObject account, jni.JlString authority) =>
      SyncRequest_Builder.fromRef(
          _setSyncAdapter(reference, account.reference, authority.reference));

  static final _setExtras = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_SyncRequest__Builder_setExtras")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.content.SyncRequest.Builder setExtras(android.os.Bundle bundle)
  SyncRequest_Builder setExtras(jni.JlObject bundle) =>
      SyncRequest_Builder.fromRef(_setExtras(reference, bundle.reference));

  static final _setNoRetry = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Uint8)>>(
          "android_content_SyncRequest__Builder_setNoRetry")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public android.content.SyncRequest.Builder setNoRetry(boolean noRetry)
  SyncRequest_Builder setNoRetry(bool noRetry) =>
      SyncRequest_Builder.fromRef(_setNoRetry(reference, noRetry ? 1 : 0));

  static final _setIgnoreSettings = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Uint8)>>(
          "android_content_SyncRequest__Builder_setIgnoreSettings")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public android.content.SyncRequest.Builder setIgnoreSettings(boolean ignoreSettings)
  SyncRequest_Builder setIgnoreSettings(bool ignoreSettings) =>
      SyncRequest_Builder.fromRef(
          _setIgnoreSettings(reference, ignoreSettings ? 1 : 0));

  static final _setIgnoreBackoff = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Uint8)>>(
          "android_content_SyncRequest__Builder_setIgnoreBackoff")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public android.content.SyncRequest.Builder setIgnoreBackoff(boolean ignoreBackoff)
  SyncRequest_Builder setIgnoreBackoff(bool ignoreBackoff) =>
      SyncRequest_Builder.fromRef(
          _setIgnoreBackoff(reference, ignoreBackoff ? 1 : 0));

  static final _setManual = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                  ffi.Uint8)>>("android_content_SyncRequest__Builder_setManual")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public android.content.SyncRequest.Builder setManual(boolean isManual)
  SyncRequest_Builder setManual(bool isManual) =>
      SyncRequest_Builder.fromRef(_setManual(reference, isManual ? 1 : 0));

  static final _setExpedited = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Uint8)>>(
          "android_content_SyncRequest__Builder_setExpedited")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public android.content.SyncRequest.Builder setExpedited(boolean expedited)
  SyncRequest_Builder setExpedited(bool expedited) =>
      SyncRequest_Builder.fromRef(_setExpedited(reference, expedited ? 1 : 0));

  static final _build = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_SyncRequest__Builder_build")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.content.SyncRequest build()
  SyncRequest build() => SyncRequest.fromRef(_build(reference));
}

class SharedPreferences extends jni.JlObject {
  SharedPreferences.fromRef(ffi.Pointer<ffi.Void> ref) : super.fromRef(ref);

  static final _getAll = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_SharedPreferences_getAll")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public abstract java.util.Map<java.lang.String,?> getAll()
  jni.JlObject getAll() => jni.JlObject.fromRef(_getAll(reference));

  static final _getString = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_SharedPreferences_getString")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public abstract java.lang.String getString(java.lang.String key, java.lang.String defValue)
  jni.JlString getString(jni.JlString key, jni.JlString defValue) =>
      jni.JlString.fromRef(
          _getString(reference, key.reference, defValue.reference));

  static final _getStringSet = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_SharedPreferences_getStringSet")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public abstract java.util.Set<java.lang.String> getStringSet(java.lang.String key, java.util.Set<java.lang.String> defValues)
  jni.JlObject getStringSet(jni.JlString key, jni.JlObject defValues) =>
      jni.JlObject.fromRef(
          _getStringSet(reference, key.reference, defValues.reference));

  static final _getInt = jlookup<
          ffi.NativeFunction<
              ffi.Int32 Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_content_SharedPreferences_getInt")
      .asFunction<
          int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public abstract int getInt(java.lang.String key, int defValue)
  int getInt(jni.JlString key, int defValue) =>
      _getInt(reference, key.reference, defValue);

  static final _getLong = jlookup<
          ffi.NativeFunction<
              ffi.Int64 Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
                  ffi.Int64)>>("android_content_SharedPreferences_getLong")
      .asFunction<
          int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public abstract long getLong(java.lang.String key, long defValue)
  int getLong(jni.JlString key, int defValue) =>
      _getLong(reference, key.reference, defValue);

  static final _getFloat = jlookup<
          ffi.NativeFunction<
              ffi.Float Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
                  ffi.Float)>>("android_content_SharedPreferences_getFloat")
      .asFunction<
          double Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, double)>();

  /// from: public abstract float getFloat(java.lang.String key, float defValue)
  double getFloat(jni.JlString key, double defValue) =>
      _getFloat(reference, key.reference, defValue);

  static final _getBoolean = jlookup<
          ffi.NativeFunction<
              ffi.Uint8 Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
                  ffi.Uint8)>>("android_content_SharedPreferences_getBoolean")
      .asFunction<
          int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public abstract boolean getBoolean(java.lang.String key, boolean defValue)
  bool getBoolean(jni.JlString key, bool defValue) =>
      _getBoolean(reference, key.reference, defValue ? 1 : 0) != 0;

  static final _contains = jlookup<
              ffi.NativeFunction<
                  ffi.Uint8 Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_SharedPreferences_contains")
      .asFunction<int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public abstract boolean contains(java.lang.String key)
  bool contains(jni.JlString key) => _contains(reference, key.reference) != 0;

  static final _edit = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_SharedPreferences_edit")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public abstract android.content.SharedPreferences.Editor edit()
  SharedPreferences_Editor edit() =>
      SharedPreferences_Editor.fromRef(_edit(reference));

  static final _registerOnSharedPreferenceChangeListener = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_SharedPreferences_registerOnSharedPreferenceChangeListener")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public abstract void registerOnSharedPreferenceChangeListener(android.content.SharedPreferences.OnSharedPreferenceChangeListener listener)
  void registerOnSharedPreferenceChangeListener(
          SharedPreferences_OnSharedPreferenceChangeListener listener) =>
      _registerOnSharedPreferenceChangeListener(reference, listener.reference);

  static final _unregisterOnSharedPreferenceChangeListener = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_SharedPreferences_unregisterOnSharedPreferenceChangeListener")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public abstract void unregisterOnSharedPreferenceChangeListener(android.content.SharedPreferences.OnSharedPreferenceChangeListener listener)
  void unregisterOnSharedPreferenceChangeListener(
          SharedPreferences_OnSharedPreferenceChangeListener listener) =>
      _unregisterOnSharedPreferenceChangeListener(
          reference, listener.reference);
}

class SharedPreferences_OnSharedPreferenceChangeListener extends jni.JlObject {
  SharedPreferences_OnSharedPreferenceChangeListener.fromRef(
      ffi.Pointer<ffi.Void> ref)
      : super.fromRef(ref);

  static final _onSharedPreferenceChanged = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_SharedPreferences__OnSharedPreferenceChangeListener_onSharedPreferenceChanged")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public abstract void onSharedPreferenceChanged(android.content.SharedPreferences sharedPreferences, java.lang.String key)
  void onSharedPreferenceChanged(
          SharedPreferences sharedPreferences, jni.JlString key) =>
      _onSharedPreferenceChanged(
          reference, sharedPreferences.reference, key.reference);
}

class SharedPreferences_Editor extends jni.JlObject {
  SharedPreferences_Editor.fromRef(ffi.Pointer<ffi.Void> ref)
      : super.fromRef(ref);

  static final _putString = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_SharedPreferences__Editor_putString")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public abstract android.content.SharedPreferences.Editor putString(java.lang.String key, java.lang.String value)
  SharedPreferences_Editor putString(jni.JlString key, jni.JlString value) =>
      SharedPreferences_Editor.fromRef(
          _putString(reference, key.reference, value.reference));

  static final _putStringSet = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_SharedPreferences__Editor_putStringSet")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public abstract android.content.SharedPreferences.Editor putStringSet(java.lang.String key, java.util.Set<java.lang.String> values)
  SharedPreferences_Editor putStringSet(
          jni.JlString key, jni.JlObject values) =>
      SharedPreferences_Editor.fromRef(
          _putStringSet(reference, key.reference, values.reference));

  static final _putInt = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "android_content_SharedPreferences__Editor_putInt")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public abstract android.content.SharedPreferences.Editor putInt(java.lang.String key, int value)
  SharedPreferences_Editor putInt(jni.JlString key, int value) =>
      SharedPreferences_Editor.fromRef(
          _putInt(reference, key.reference, value));

  static final _putLong = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Int64)>>(
          "android_content_SharedPreferences__Editor_putLong")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public abstract android.content.SharedPreferences.Editor putLong(java.lang.String key, long value)
  SharedPreferences_Editor putLong(jni.JlString key, int value) =>
      SharedPreferences_Editor.fromRef(
          _putLong(reference, key.reference, value));

  static final _putFloat = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Float)>>(
          "android_content_SharedPreferences__Editor_putFloat")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, double)>();

  /// from: public abstract android.content.SharedPreferences.Editor putFloat(java.lang.String key, float value)
  SharedPreferences_Editor putFloat(jni.JlString key, double value) =>
      SharedPreferences_Editor.fromRef(
          _putFloat(reference, key.reference, value));

  static final _putBoolean = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Uint8)>>(
          "android_content_SharedPreferences__Editor_putBoolean")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public abstract android.content.SharedPreferences.Editor putBoolean(java.lang.String key, boolean value)
  SharedPreferences_Editor putBoolean(jni.JlString key, bool value) =>
      SharedPreferences_Editor.fromRef(
          _putBoolean(reference, key.reference, value ? 1 : 0));

  static final _remove = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_SharedPreferences__Editor_remove")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public abstract android.content.SharedPreferences.Editor remove(java.lang.String key)
  SharedPreferences_Editor remove(jni.JlString key) =>
      SharedPreferences_Editor.fromRef(_remove(reference, key.reference));

  static final _clear = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_SharedPreferences__Editor_clear")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public abstract android.content.SharedPreferences.Editor clear()
  SharedPreferences_Editor clear() =>
      SharedPreferences_Editor.fromRef(_clear(reference));

  static final _commit =
      jlookup<ffi.NativeFunction<ffi.Uint8 Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_SharedPreferences__Editor_commit")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public abstract boolean commit()
  bool commit() => _commit(reference) != 0;

  static final _apply =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_SharedPreferences__Editor_apply")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: public abstract void apply()
  void apply() => _apply(reference);
}

class UriPermission extends jni.JlObject {
  UriPermission.fromRef(ffi.Pointer<ffi.Void> ref) : super.fromRef(ref);

  /// from: static public final android.os.Parcelable.Creator<android.content.UriPermission> CREATOR
  static final _getCREATOR =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "get_android_content_UriPermission_CREATOR")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();
  static jni.JlObject get CREATOR => jni.JlObject.fromRef(_getCREATOR());

  /// from: static public final long INVALID_TIME
  static const INVALID_TIME = -9223372036854775808;

  static final _ctor = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
                  ffi.Pointer<ffi.Void>)>>("android_content_UriPermission_new")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: void <init>(android.os.Parcel in)
  UriPermission(jni.JlObject in_) : super.fromRef(_ctor(in_.reference));

  static final _getUri = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_UriPermission_getUri")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.net.Uri getUri()
  jni.JlObject getUri() => jni.JlObject.fromRef(_getUri(reference));

  static final _isReadPermission =
      jlookup<ffi.NativeFunction<ffi.Uint8 Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_UriPermission_isReadPermission")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public boolean isReadPermission()
  bool isReadPermission() => _isReadPermission(reference) != 0;

  static final _isWritePermission =
      jlookup<ffi.NativeFunction<ffi.Uint8 Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_UriPermission_isWritePermission")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public boolean isWritePermission()
  bool isWritePermission() => _isWritePermission(reference) != 0;

  static final _getPersistedTime =
      jlookup<ffi.NativeFunction<ffi.Int64 Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_UriPermission_getPersistedTime")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public long getPersistedTime()
  int getPersistedTime() => _getPersistedTime(reference);

  static final _toString_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_UriPermission_toString_1")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.String toString()
  jni.JlString toString_1() => jni.JlString.fromRef(_toString_1(reference));

  static final _describeContents =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_UriPermission_describeContents")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int describeContents()
  int describeContents() => _describeContents(reference);

  static final _writeToParcel = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_content_UriPermission_writeToParcel")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public void writeToParcel(android.os.Parcel dest, int flags)
  void writeToParcel(jni.JlObject dest, int flags) =>
      _writeToParcel(reference, dest.reference, flags);
}

class RestrictionEntry extends jni.JlObject {
  RestrictionEntry.fromRef(ffi.Pointer<ffi.Void> ref) : super.fromRef(ref);

  /// from: static public final android.os.Parcelable.Creator<android.content.RestrictionEntry> CREATOR
  static final _getCREATOR =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "get_android_content_RestrictionEntry_CREATOR")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();
  static jni.JlObject get CREATOR => jni.JlObject.fromRef(_getCREATOR());

  /// from: static public final int TYPE_BOOLEAN
  static const TYPE_BOOLEAN = 1;

  /// from: static public final int TYPE_BUNDLE
  static const TYPE_BUNDLE = 7;

  /// from: static public final int TYPE_BUNDLE_ARRAY
  static const TYPE_BUNDLE_ARRAY = 8;

  /// from: static public final int TYPE_CHOICE
  static const TYPE_CHOICE = 2;

  /// from: static public final int TYPE_INTEGER
  static const TYPE_INTEGER = 5;

  /// from: static public final int TYPE_MULTI_SELECT
  static const TYPE_MULTI_SELECT = 4;

  /// from: static public final int TYPE_NULL
  static const TYPE_NULL = 0;

  /// from: static public final int TYPE_STRING
  static const TYPE_STRING = 6;

  static final _ctor = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Int32, ffi.Pointer<ffi.Void>)>>(
          "android_content_RestrictionEntry_new")
      .asFunction<ffi.Pointer<ffi.Void> Function(int, ffi.Pointer<ffi.Void>)>();

  /// from: public void <init>(int type, java.lang.String key)
  RestrictionEntry(int type, jni.JlString key)
      : super.fromRef(_ctor(type, key.reference));

  static final _ctor_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_RestrictionEntry_new_1")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void <init>(java.lang.String key, java.lang.String selectedString)
  RestrictionEntry.ctor_1(jni.JlString key, jni.JlString selectedString)
      : super.fromRef(_ctor_1(key.reference, selectedString.reference));

  static final _ctor_2 = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                  ffi.Uint8)>>("android_content_RestrictionEntry_new_2")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public void <init>(java.lang.String key, boolean selectedState)
  RestrictionEntry.ctor_2(jni.JlString key, bool selectedState)
      : super.fromRef(_ctor_2(key.reference, selectedState ? 1 : 0));

  static final _ctor_3 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_RestrictionEntry_new_3")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void <init>(java.lang.String key, java.lang.String[] selectedStrings)
  RestrictionEntry.ctor_3(jni.JlString key, jni.JlObject selectedStrings)
      : super.fromRef(_ctor_3(key.reference, selectedStrings.reference));

  static final _ctor_4 = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_content_RestrictionEntry_new_4")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public void <init>(java.lang.String key, int selectedInt)
  RestrictionEntry.ctor_4(jni.JlString key, int selectedInt)
      : super.fromRef(_ctor_4(key.reference, selectedInt));

  static final _ctor_5 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_RestrictionEntry_new_5")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void <init>(android.os.Parcel in)
  RestrictionEntry.ctor_5(jni.JlObject in_)
      : super.fromRef(_ctor_5(in_.reference));

  static final _createBundleEntry = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_RestrictionEntry_createBundleEntry")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: static public android.content.RestrictionEntry createBundleEntry(java.lang.String key, android.content.RestrictionEntry[] restrictionEntries)
  static RestrictionEntry createBundleEntry(
          jni.JlString key, jni.JlObject restrictionEntries) =>
      RestrictionEntry.fromRef(
          _createBundleEntry(key.reference, restrictionEntries.reference));

  static final _createBundleArrayEntry = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_RestrictionEntry_createBundleArrayEntry")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: static public android.content.RestrictionEntry createBundleArrayEntry(java.lang.String key, android.content.RestrictionEntry[] restrictionEntries)
  static RestrictionEntry createBundleArrayEntry(
          jni.JlString key, jni.JlObject restrictionEntries) =>
      RestrictionEntry.fromRef(
          _createBundleArrayEntry(key.reference, restrictionEntries.reference));

  static final _setType = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_content_RestrictionEntry_setType")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public void setType(int type)
  void setType(int type) => _setType(reference, type);

  static final _getType =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_RestrictionEntry_getType")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int getType()
  int getType() => _getType(reference);

  static final _getSelectedString = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_RestrictionEntry_getSelectedString")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.String getSelectedString()
  jni.JlString getSelectedString() =>
      jni.JlString.fromRef(_getSelectedString(reference));

  static final _getAllSelectedStrings = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_RestrictionEntry_getAllSelectedStrings")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.String[] getAllSelectedStrings()
  jni.JlObject getAllSelectedStrings() =>
      jni.JlObject.fromRef(_getAllSelectedStrings(reference));

  static final _getSelectedState =
      jlookup<ffi.NativeFunction<ffi.Uint8 Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_RestrictionEntry_getSelectedState")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public boolean getSelectedState()
  bool getSelectedState() => _getSelectedState(reference) != 0;

  static final _getIntValue =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_RestrictionEntry_getIntValue")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int getIntValue()
  int getIntValue() => _getIntValue(reference);

  static final _setIntValue = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_content_RestrictionEntry_setIntValue")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public void setIntValue(int value)
  void setIntValue(int value) => _setIntValue(reference, value);

  static final _setSelectedString = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_RestrictionEntry_setSelectedString")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void setSelectedString(java.lang.String selectedString)
  void setSelectedString(jni.JlString selectedString) =>
      _setSelectedString(reference, selectedString.reference);

  static final _setSelectedState = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Uint8)>>(
          "android_content_RestrictionEntry_setSelectedState")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public void setSelectedState(boolean state)
  void setSelectedState(bool state) =>
      _setSelectedState(reference, state ? 1 : 0);

  static final _setAllSelectedStrings = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_RestrictionEntry_setAllSelectedStrings")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void setAllSelectedStrings(java.lang.String[] allSelectedStrings)
  void setAllSelectedStrings(jni.JlObject allSelectedStrings) =>
      _setAllSelectedStrings(reference, allSelectedStrings.reference);

  static final _setChoiceValues = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_RestrictionEntry_setChoiceValues")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void setChoiceValues(java.lang.String[] choiceValues)
  void setChoiceValues(jni.JlObject choiceValues) =>
      _setChoiceValues(reference, choiceValues.reference);

  static final _setChoiceValues_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "android_content_RestrictionEntry_setChoiceValues_1")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public void setChoiceValues(android.content.Context context, int stringArrayResId)
  void setChoiceValues_1(Context context, int stringArrayResId) =>
      _setChoiceValues_1(reference, context.reference, stringArrayResId);

  static final _getRestrictions = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_RestrictionEntry_getRestrictions")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.content.RestrictionEntry[] getRestrictions()
  jni.JlObject getRestrictions() =>
      jni.JlObject.fromRef(_getRestrictions(reference));

  static final _setRestrictions = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_RestrictionEntry_setRestrictions")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void setRestrictions(android.content.RestrictionEntry[] restrictions)
  void setRestrictions(jni.JlObject restrictions) =>
      _setRestrictions(reference, restrictions.reference);

  static final _getChoiceValues = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_RestrictionEntry_getChoiceValues")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.String[] getChoiceValues()
  jni.JlObject getChoiceValues() =>
      jni.JlObject.fromRef(_getChoiceValues(reference));

  static final _setChoiceEntries = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_RestrictionEntry_setChoiceEntries")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void setChoiceEntries(java.lang.String[] choiceEntries)
  void setChoiceEntries(jni.JlObject choiceEntries) =>
      _setChoiceEntries(reference, choiceEntries.reference);

  static final _setChoiceEntries_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "android_content_RestrictionEntry_setChoiceEntries_1")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public void setChoiceEntries(android.content.Context context, int stringArrayResId)
  void setChoiceEntries_1(Context context, int stringArrayResId) =>
      _setChoiceEntries_1(reference, context.reference, stringArrayResId);

  static final _getChoiceEntries = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_RestrictionEntry_getChoiceEntries")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.String[] getChoiceEntries()
  jni.JlObject getChoiceEntries() =>
      jni.JlObject.fromRef(_getChoiceEntries(reference));

  static final _getDescription = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_RestrictionEntry_getDescription")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.String getDescription()
  jni.JlString getDescription() =>
      jni.JlString.fromRef(_getDescription(reference));

  static final _setDescription = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_RestrictionEntry_setDescription")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void setDescription(java.lang.String description)
  void setDescription(jni.JlString description) =>
      _setDescription(reference, description.reference);

  static final _getKey = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_RestrictionEntry_getKey")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.String getKey()
  jni.JlString getKey() => jni.JlString.fromRef(_getKey(reference));

  static final _getTitle = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_RestrictionEntry_getTitle")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.String getTitle()
  jni.JlString getTitle() => jni.JlString.fromRef(_getTitle(reference));

  static final _setTitle = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_RestrictionEntry_setTitle")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void setTitle(java.lang.String title)
  void setTitle(jni.JlString title) => _setTitle(reference, title.reference);

  static final _equals_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Uint8 Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_RestrictionEntry_equals_1")
      .asFunction<int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public boolean equals(java.lang.Object o)
  bool equals_1(jni.JlObject o) => _equals_1(reference, o.reference) != 0;

  static final _hashCode_1 =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_RestrictionEntry_hashCode_1")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int hashCode()
  int hashCode_1() => _hashCode_1(reference);

  static final _describeContents =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_RestrictionEntry_describeContents")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int describeContents()
  int describeContents() => _describeContents(reference);

  static final _writeToParcel = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_content_RestrictionEntry_writeToParcel")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public void writeToParcel(android.os.Parcel dest, int flags)
  void writeToParcel(jni.JlObject dest, int flags) =>
      _writeToParcel(reference, dest.reference, flags);

  static final _toString_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_RestrictionEntry_toString_1")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.String toString()
  jni.JlString toString_1() => jni.JlString.fromRef(_toString_1(reference));
}

class EntityIterator extends jni.JlObject {
  EntityIterator.fromRef(ffi.Pointer<ffi.Void> ref) : super.fromRef(ref);

  static final _reset =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_EntityIterator_reset")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: public abstract void reset()
  void reset() => _reset(reference);

  static final _close =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_EntityIterator_close")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: public abstract void close()
  void close() => _close(reference);
}

class SearchRecentSuggestionsProvider extends ContentProvider {
  SearchRecentSuggestionsProvider.fromRef(ffi.Pointer<ffi.Void> ref)
      : super.fromRef(ref);

  /// from: static public final int DATABASE_MODE_2LINES
  static const DATABASE_MODE_2LINES = 2;

  /// from: static public final int DATABASE_MODE_QUERIES
  static const DATABASE_MODE_QUERIES = 1;

  static final _ctor =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "android_content_SearchRecentSuggestionsProvider_new")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();

  /// from: public void <init>()
  SearchRecentSuggestionsProvider() : super.fromRef(_ctor());

  static final _setupSuggestions = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "android_content_SearchRecentSuggestionsProvider_setupSuggestions")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: protected void setupSuggestions(java.lang.String authority, int mode)
  void setupSuggestions(jni.JlString authority, int mode) =>
      _setupSuggestions(reference, authority.reference, mode);

  static final _delete_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Int32 Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>)>>(
          "android_content_SearchRecentSuggestionsProvider_delete_1")
      .asFunction<
          int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public int delete(android.net.Uri uri, java.lang.String selection, java.lang.String[] selectionArgs)
  int delete_1(jni.JlObject uri, jni.JlString selection,
          jni.JlObject selectionArgs) =>
      _delete_1(reference, uri.reference, selection.reference,
          selectionArgs.reference);

  static final _getType = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_SearchRecentSuggestionsProvider_getType")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.String getType(android.net.Uri uri)
  jni.JlString getType(jni.JlObject uri) =>
      jni.JlString.fromRef(_getType(reference, uri.reference));

  static final _insert = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_SearchRecentSuggestionsProvider_insert")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.net.Uri insert(android.net.Uri uri, android.content.ContentValues values)
  jni.JlObject insert(jni.JlObject uri, ContentValues values) =>
      jni.JlObject.fromRef(_insert(reference, uri.reference, values.reference));

  static final _onCreate =
      jlookup<ffi.NativeFunction<ffi.Uint8 Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_SearchRecentSuggestionsProvider_onCreate")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public boolean onCreate()
  bool onCreate() => _onCreate(reference) != 0;

  static final _query = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>)>>(
          "android_content_SearchRecentSuggestionsProvider_query")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public android.database.Cursor query(android.net.Uri uri, java.lang.String[] projection, java.lang.String selection, java.lang.String[] selectionArgs, java.lang.String sortOrder)
  jni.JlObject query(
          jni.JlObject uri,
          jni.JlObject projection,
          jni.JlString selection,
          jni.JlObject selectionArgs,
          jni.JlString sortOrder) =>
      jni.JlObject.fromRef(_query(
          reference,
          uri.reference,
          projection.reference,
          selection.reference,
          selectionArgs.reference,
          sortOrder.reference));

  static final _update = jlookup<
              ffi.NativeFunction<
                  ffi.Int32 Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>)>>(
          "android_content_SearchRecentSuggestionsProvider_update")
      .asFunction<
          int Function(
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public int update(android.net.Uri uri, android.content.ContentValues values, java.lang.String selection, java.lang.String[] selectionArgs)
  int update(jni.JlObject uri, ContentValues values, jni.JlString selection,
          jni.JlObject selectionArgs) =>
      _update(reference, uri.reference, values.reference, selection.reference,
          selectionArgs.reference);
}

class BroadcastReceiver extends jni.JlObject {
  BroadcastReceiver.fromRef(ffi.Pointer<ffi.Void> ref) : super.fromRef(ref);

  static final _ctor =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "android_content_BroadcastReceiver_new")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();

  /// from: public void <init>()
  BroadcastReceiver() : super.fromRef(_ctor());

  static final _onReceive = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_BroadcastReceiver_onReceive")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public abstract void onReceive(android.content.Context context, android.content.Intent intent)
  void onReceive(Context context, Intent intent) =>
      _onReceive(reference, context.reference, intent.reference);

  static final _goAsync = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_BroadcastReceiver_goAsync")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public final android.content.BroadcastReceiver.PendingResult goAsync()
  BroadcastReceiver_PendingResult goAsync() =>
      BroadcastReceiver_PendingResult.fromRef(_goAsync(reference));

  static final _peekService = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_BroadcastReceiver_peekService")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.os.IBinder peekService(android.content.Context myContext, android.content.Intent service)
  jni.JlObject peekService(Context myContext, Intent service) =>
      jni.JlObject.fromRef(
          _peekService(reference, myContext.reference, service.reference));

  static final _setResultCode = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "android_content_BroadcastReceiver_setResultCode")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public final void setResultCode(int code)
  void setResultCode(int code) => _setResultCode(reference, code);

  static final _getResultCode =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_BroadcastReceiver_getResultCode")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public final int getResultCode()
  int getResultCode() => _getResultCode(reference);

  static final _setResultData = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_BroadcastReceiver_setResultData")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public final void setResultData(java.lang.String data)
  void setResultData(jni.JlString data) =>
      _setResultData(reference, data.reference);

  static final _getResultData = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_BroadcastReceiver_getResultData")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public final java.lang.String getResultData()
  jni.JlString getResultData() =>
      jni.JlString.fromRef(_getResultData(reference));

  static final _setResultExtras = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_BroadcastReceiver_setResultExtras")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public final void setResultExtras(android.os.Bundle extras)
  void setResultExtras(jni.JlObject extras) =>
      _setResultExtras(reference, extras.reference);

  static final _getResultExtras = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Uint8)>>(
          "android_content_BroadcastReceiver_getResultExtras")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public final android.os.Bundle getResultExtras(boolean makeMap)
  jni.JlObject getResultExtras(bool makeMap) =>
      jni.JlObject.fromRef(_getResultExtras(reference, makeMap ? 1 : 0));

  static final _setResult = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Int32,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_BroadcastReceiver_setResult")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, int, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public final void setResult(int code, java.lang.String data, android.os.Bundle extras)
  void setResult(int code, jni.JlString data, jni.JlObject extras) =>
      _setResult(reference, code, data.reference, extras.reference);

  static final _getAbortBroadcast =
      jlookup<ffi.NativeFunction<ffi.Uint8 Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_BroadcastReceiver_getAbortBroadcast")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public final boolean getAbortBroadcast()
  bool getAbortBroadcast() => _getAbortBroadcast(reference) != 0;

  static final _abortBroadcast =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_BroadcastReceiver_abortBroadcast")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: public final void abortBroadcast()
  void abortBroadcast() => _abortBroadcast(reference);

  static final _clearAbortBroadcast =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_BroadcastReceiver_clearAbortBroadcast")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: public final void clearAbortBroadcast()
  void clearAbortBroadcast() => _clearAbortBroadcast(reference);

  static final _isOrderedBroadcast =
      jlookup<ffi.NativeFunction<ffi.Uint8 Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_BroadcastReceiver_isOrderedBroadcast")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public final boolean isOrderedBroadcast()
  bool isOrderedBroadcast() => _isOrderedBroadcast(reference) != 0;

  static final _isInitialStickyBroadcast =
      jlookup<ffi.NativeFunction<ffi.Uint8 Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_BroadcastReceiver_isInitialStickyBroadcast")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public final boolean isInitialStickyBroadcast()
  bool isInitialStickyBroadcast() => _isInitialStickyBroadcast(reference) != 0;

  static final _setOrderedHint = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Uint8)>>(
          "android_content_BroadcastReceiver_setOrderedHint")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public final void setOrderedHint(boolean isOrdered)
  void setOrderedHint(bool isOrdered) =>
      _setOrderedHint(reference, isOrdered ? 1 : 0);

  static final _setDebugUnregister = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Uint8)>>(
          "android_content_BroadcastReceiver_setDebugUnregister")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public final void setDebugUnregister(boolean debug)
  void setDebugUnregister(bool debug) =>
      _setDebugUnregister(reference, debug ? 1 : 0);

  static final _getDebugUnregister =
      jlookup<ffi.NativeFunction<ffi.Uint8 Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_BroadcastReceiver_getDebugUnregister")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public final boolean getDebugUnregister()
  bool getDebugUnregister() => _getDebugUnregister(reference) != 0;
}

class BroadcastReceiver_PendingResult extends jni.JlObject {
  BroadcastReceiver_PendingResult.fromRef(ffi.Pointer<ffi.Void> ref)
      : super.fromRef(ref);

  static final _ctor = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Int32,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Int32,
                      ffi.Uint8,
                      ffi.Uint8,
                      ffi.Pointer<ffi.Void>,
                      ffi.Int32,
                      ffi.Int32)>>(
          "android_content_BroadcastReceiver__PendingResult_new")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              int,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              int,
              int,
              int,
              ffi.Pointer<ffi.Void>,
              int,
              int)>();

  /// from: void <init>(int resultCode, java.lang.String resultData, android.os.Bundle resultExtras, int type, boolean ordered, boolean sticky, android.os.IBinder token, int userId, int flags)
  BroadcastReceiver_PendingResult(
      int resultCode,
      jni.JlString resultData,
      jni.JlObject resultExtras,
      int type,
      bool ordered,
      bool sticky,
      jni.JlObject token,
      int userId,
      int flags)
      : super.fromRef(_ctor(
            resultCode,
            resultData.reference,
            resultExtras.reference,
            type,
            ordered ? 1 : 0,
            sticky ? 1 : 0,
            token.reference,
            userId,
            flags));

  static final _setResultCode = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "android_content_BroadcastReceiver__PendingResult_setResultCode")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public final void setResultCode(int code)
  void setResultCode(int code) => _setResultCode(reference, code);

  static final _getResultCode =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_BroadcastReceiver__PendingResult_getResultCode")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public final int getResultCode()
  int getResultCode() => _getResultCode(reference);

  static final _setResultData = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_BroadcastReceiver__PendingResult_setResultData")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public final void setResultData(java.lang.String data)
  void setResultData(jni.JlString data) =>
      _setResultData(reference, data.reference);

  static final _getResultData = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_BroadcastReceiver__PendingResult_getResultData")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public final java.lang.String getResultData()
  jni.JlString getResultData() =>
      jni.JlString.fromRef(_getResultData(reference));

  static final _setResultExtras = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_BroadcastReceiver__PendingResult_setResultExtras")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public final void setResultExtras(android.os.Bundle extras)
  void setResultExtras(jni.JlObject extras) =>
      _setResultExtras(reference, extras.reference);

  static final _getResultExtras = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Uint8)>>(
          "android_content_BroadcastReceiver__PendingResult_getResultExtras")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public final android.os.Bundle getResultExtras(boolean makeMap)
  jni.JlObject getResultExtras(bool makeMap) =>
      jni.JlObject.fromRef(_getResultExtras(reference, makeMap ? 1 : 0));

  static final _setResult = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Int32,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_BroadcastReceiver__PendingResult_setResult")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, int, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public final void setResult(int code, java.lang.String data, android.os.Bundle extras)
  void setResult(int code, jni.JlString data, jni.JlObject extras) =>
      _setResult(reference, code, data.reference, extras.reference);

  static final _getAbortBroadcast = jlookup<
              ffi.NativeFunction<ffi.Uint8 Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_BroadcastReceiver__PendingResult_getAbortBroadcast")
      .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public final boolean getAbortBroadcast()
  bool getAbortBroadcast() => _getAbortBroadcast(reference) != 0;

  static final _abortBroadcast =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_BroadcastReceiver__PendingResult_abortBroadcast")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: public final void abortBroadcast()
  void abortBroadcast() => _abortBroadcast(reference);

  static final _clearAbortBroadcast = jlookup<
              ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_BroadcastReceiver__PendingResult_clearAbortBroadcast")
      .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: public final void clearAbortBroadcast()
  void clearAbortBroadcast() => _clearAbortBroadcast(reference);

  static final _finish =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_BroadcastReceiver__PendingResult_finish")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: public final void finish()
  void finish() => _finish(reference);
}

class CursorLoader extends AsyncTaskLoader {
  CursorLoader.fromRef(ffi.Pointer<ffi.Void> ref) : super.fromRef(ref);

  static final _ctor = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
                  ffi.Pointer<ffi.Void>)>>("android_content_CursorLoader_new")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void <init>(android.content.Context context)
  CursorLoader(Context context) : super.fromRef(_ctor(context.reference));

  static final _ctor_1 = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("android_content_CursorLoader_new_1")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public void <init>(android.content.Context context, android.net.Uri uri, java.lang.String[] projection, java.lang.String selection, java.lang.String[] selectionArgs, java.lang.String sortOrder)
  CursorLoader.ctor_1(
      Context context,
      jni.JlObject uri,
      jni.JlObject projection,
      jni.JlString selection,
      jni.JlObject selectionArgs,
      jni.JlString sortOrder)
      : super.fromRef(_ctor_1(
            context.reference,
            uri.reference,
            projection.reference,
            selection.reference,
            selectionArgs.reference,
            sortOrder.reference));

  static final _loadInBackground = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_CursorLoader_loadInBackground")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.database.Cursor loadInBackground()
  jni.JlObject loadInBackground() =>
      jni.JlObject.fromRef(_loadInBackground(reference));

  static final _cancelLoadInBackground =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_CursorLoader_cancelLoadInBackground")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void cancelLoadInBackground()
  void cancelLoadInBackground() => _cancelLoadInBackground(reference);

  static final _deliverResult = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_CursorLoader_deliverResult")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void deliverResult(android.database.Cursor cursor)
  void deliverResult(jni.JlObject cursor) =>
      _deliverResult(reference, cursor.reference);

  static final _onStartLoading =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_CursorLoader_onStartLoading")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: protected void onStartLoading()
  void onStartLoading() => _onStartLoading(reference);

  static final _onStopLoading =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_CursorLoader_onStopLoading")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: protected void onStopLoading()
  void onStopLoading() => _onStopLoading(reference);

  static final _onCanceled = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_CursorLoader_onCanceled")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void onCanceled(android.database.Cursor cursor)
  void onCanceled(jni.JlObject cursor) =>
      _onCanceled(reference, cursor.reference);

  static final _onReset =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_CursorLoader_onReset")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: protected void onReset()
  void onReset() => _onReset(reference);

  static final _getUri = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_CursorLoader_getUri")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.net.Uri getUri()
  jni.JlObject getUri() => jni.JlObject.fromRef(_getUri(reference));

  static final _setUri = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_CursorLoader_setUri")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void setUri(android.net.Uri uri)
  void setUri(jni.JlObject uri) => _setUri(reference, uri.reference);

  static final _getProjection = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_CursorLoader_getProjection")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.String[] getProjection()
  jni.JlObject getProjection() =>
      jni.JlObject.fromRef(_getProjection(reference));

  static final _setProjection = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_CursorLoader_setProjection")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void setProjection(java.lang.String[] projection)
  void setProjection(jni.JlObject projection) =>
      _setProjection(reference, projection.reference);

  static final _getSelection = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_CursorLoader_getSelection")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.String getSelection()
  jni.JlString getSelection() => jni.JlString.fromRef(_getSelection(reference));

  static final _setSelection = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_CursorLoader_setSelection")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void setSelection(java.lang.String selection)
  void setSelection(jni.JlString selection) =>
      _setSelection(reference, selection.reference);

  static final _getSelectionArgs = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_CursorLoader_getSelectionArgs")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.String[] getSelectionArgs()
  jni.JlObject getSelectionArgs() =>
      jni.JlObject.fromRef(_getSelectionArgs(reference));

  static final _setSelectionArgs = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_CursorLoader_setSelectionArgs")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void setSelectionArgs(java.lang.String[] selectionArgs)
  void setSelectionArgs(jni.JlObject selectionArgs) =>
      _setSelectionArgs(reference, selectionArgs.reference);

  static final _getSortOrder = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_CursorLoader_getSortOrder")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.String getSortOrder()
  jni.JlString getSortOrder() => jni.JlString.fromRef(_getSortOrder(reference));

  static final _setSortOrder = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_CursorLoader_setSortOrder")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void setSortOrder(java.lang.String sortOrder)
  void setSortOrder(jni.JlString sortOrder) =>
      _setSortOrder(reference, sortOrder.reference);

  static final _dump = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("android_content_CursorLoader_dump")
      .asFunction<
          void Function(
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public void dump(java.lang.String prefix, java.io.FileDescriptor fd, java.io.PrintWriter writer, java.lang.String[] args)
  void dump(jni.JlString prefix, jni.JlObject fd, jni.JlObject writer,
          jni.JlObject args) =>
      _dump(reference, prefix.reference, fd.reference, writer.reference,
          args.reference);
}

class QuickViewConstants extends jni.JlObject {
  QuickViewConstants.fromRef(ffi.Pointer<ffi.Void> ref) : super.fromRef(ref);

  /// from: static public final java.lang.String FEATURE_DELETE
  static const FEATURE_DELETE = "android:delete";

  /// from: static public final java.lang.String FEATURE_DOWNLOAD
  static const FEATURE_DOWNLOAD = "android:download";

  /// from: static public final java.lang.String FEATURE_EDIT
  static const FEATURE_EDIT = "android:edit";

  /// from: static public final java.lang.String FEATURE_PRINT
  static const FEATURE_PRINT = "android:print";

  /// from: static public final java.lang.String FEATURE_SEND
  static const FEATURE_SEND = "android:send";

  /// from: static public final java.lang.String FEATURE_VIEW
  static const FEATURE_VIEW = "android:view";

  static final _ctor =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "android_content_QuickViewConstants_new")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();

  /// from: void <init>()
  QuickViewConstants() : super.fromRef(_ctor());
}

class ReceiverCallNotAllowedException extends jni.JlObject {
  ReceiverCallNotAllowedException.fromRef(ffi.Pointer<ffi.Void> ref)
      : super.fromRef(ref);

  static final _ctor = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_ReceiverCallNotAllowedException_new")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void <init>(java.lang.String msg)
  ReceiverCallNotAllowedException(jni.JlString msg)
      : super.fromRef(_ctor(msg.reference));
}

class SyncInfo extends jni.JlObject {
  SyncInfo.fromRef(ffi.Pointer<ffi.Void> ref) : super.fromRef(ref);

  /// from: public final android.accounts.Account account
  static final _getaccount = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_content_SyncInfo_account")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>();
  jni.JlObject get account => jni.JlObject.fromRef(_getaccount(reference));

  /// from: public final java.lang.String authority
  static final _getauthority = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_content_SyncInfo_authority")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>();
  jni.JlString get authority => jni.JlString.fromRef(_getauthority(reference));

  /// from: public final long startTime
  static final _getstartTime = jlookup<
          ffi.NativeFunction<
              ffi.Int64 Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_content_SyncInfo_startTime")
      .asFunction<
          int Function(
    ffi.Pointer<ffi.Void>,
  )>();
  int get startTime => _getstartTime(reference);

  static final _ctor = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
                  ffi.Pointer<ffi.Void>)>>("android_content_SyncInfo_new")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: void <init>(android.content.SyncInfo other)
  SyncInfo(SyncInfo other) : super.fromRef(_ctor(other.reference));

  static final _describeContents =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_SyncInfo_describeContents")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int describeContents()
  int describeContents() => _describeContents(reference);

  static final _writeToParcel = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_content_SyncInfo_writeToParcel")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public void writeToParcel(android.os.Parcel parcel, int flags)
  void writeToParcel(jni.JlObject parcel, int flags) =>
      _writeToParcel(reference, parcel.reference, flags);
}

class SyncStatusObserver extends jni.JlObject {
  SyncStatusObserver.fromRef(ffi.Pointer<ffi.Void> ref) : super.fromRef(ref);

  static final _onStatusChanged = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "android_content_SyncStatusObserver_onStatusChanged")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public abstract void onStatusChanged(int which)
  void onStatusChanged(int which) => _onStatusChanged(reference, which);
}

class AsyncQueryHandler extends jni.JlObject {
  AsyncQueryHandler.fromRef(ffi.Pointer<ffi.Void> ref) : super.fromRef(ref);

  static final _ctor = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_AsyncQueryHandler_new")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void <init>(android.content.ContentResolver cr)
  AsyncQueryHandler(ContentResolver cr) : super.fromRef(_ctor(cr.reference));

  static final _createHandler = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_AsyncQueryHandler_createHandler")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: protected android.os.Handler createHandler(android.os.Looper looper)
  jni.JlObject createHandler(jni.JlObject looper) =>
      jni.JlObject.fromRef(_createHandler(reference, looper.reference));

  static final _startQuery = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Int32,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>)>>(
          "android_content_AsyncQueryHandler_startQuery")
      .asFunction<
          void Function(
              ffi.Pointer<ffi.Void>,
              int,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public void startQuery(int token, java.lang.Object cookie, android.net.Uri uri, java.lang.String[] projection, java.lang.String selection, java.lang.String[] selectionArgs, java.lang.String orderBy)
  void startQuery(
          int token,
          jni.JlObject cookie,
          jni.JlObject uri,
          jni.JlObject projection,
          jni.JlString selection,
          jni.JlObject selectionArgs,
          jni.JlString orderBy) =>
      _startQuery(
          reference,
          token,
          cookie.reference,
          uri.reference,
          projection.reference,
          selection.reference,
          selectionArgs.reference,
          orderBy.reference);

  static final _cancelOperation = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "android_content_AsyncQueryHandler_cancelOperation")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public final void cancelOperation(int token)
  void cancelOperation(int token) => _cancelOperation(reference, token);

  static final _startInsert = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Int32,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>)>>(
          "android_content_AsyncQueryHandler_startInsert")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, int, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public final void startInsert(int token, java.lang.Object cookie, android.net.Uri uri, android.content.ContentValues initialValues)
  void startInsert(int token, jni.JlObject cookie, jni.JlObject uri,
          ContentValues initialValues) =>
      _startInsert(reference, token, cookie.reference, uri.reference,
          initialValues.reference);

  static final _startUpdate = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Int32,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>)>>(
          "android_content_AsyncQueryHandler_startUpdate")
      .asFunction<
          void Function(
              ffi.Pointer<ffi.Void>,
              int,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public final void startUpdate(int token, java.lang.Object cookie, android.net.Uri uri, android.content.ContentValues values, java.lang.String selection, java.lang.String[] selectionArgs)
  void startUpdate(
          int token,
          jni.JlObject cookie,
          jni.JlObject uri,
          ContentValues values,
          jni.JlString selection,
          jni.JlObject selectionArgs) =>
      _startUpdate(reference, token, cookie.reference, uri.reference,
          values.reference, selection.reference, selectionArgs.reference);

  static final _startDelete = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Int32,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>)>>(
          "android_content_AsyncQueryHandler_startDelete")
      .asFunction<
          void Function(
              ffi.Pointer<ffi.Void>,
              int,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public final void startDelete(int token, java.lang.Object cookie, android.net.Uri uri, java.lang.String selection, java.lang.String[] selectionArgs)
  void startDelete(int token, jni.JlObject cookie, jni.JlObject uri,
          jni.JlString selection, jni.JlObject selectionArgs) =>
      _startDelete(reference, token, cookie.reference, uri.reference,
          selection.reference, selectionArgs.reference);

  static final _onQueryComplete = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Int32,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_AsyncQueryHandler_onQueryComplete")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, int, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: protected void onQueryComplete(int token, java.lang.Object cookie, android.database.Cursor cursor)
  void onQueryComplete(int token, jni.JlObject cookie, jni.JlObject cursor) =>
      _onQueryComplete(reference, token, cookie.reference, cursor.reference);

  static final _onInsertComplete = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Int32,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_AsyncQueryHandler_onInsertComplete")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, int, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: protected void onInsertComplete(int token, java.lang.Object cookie, android.net.Uri uri)
  void onInsertComplete(int token, jni.JlObject cookie, jni.JlObject uri) =>
      _onInsertComplete(reference, token, cookie.reference, uri.reference);

  static final _onUpdateComplete = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Int32,
                      ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "android_content_AsyncQueryHandler_onUpdateComplete")
      .asFunction<
          void Function(
              ffi.Pointer<ffi.Void>, int, ffi.Pointer<ffi.Void>, int)>();

  /// from: protected void onUpdateComplete(int token, java.lang.Object cookie, int result)
  void onUpdateComplete(int token, jni.JlObject cookie, int result) =>
      _onUpdateComplete(reference, token, cookie.reference, result);

  static final _onDeleteComplete = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Int32,
                      ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "android_content_AsyncQueryHandler_onDeleteComplete")
      .asFunction<
          void Function(
              ffi.Pointer<ffi.Void>, int, ffi.Pointer<ffi.Void>, int)>();

  /// from: protected void onDeleteComplete(int token, java.lang.Object cookie, int result)
  void onDeleteComplete(int token, jni.JlObject cookie, int result) =>
      _onDeleteComplete(reference, token, cookie.reference, result);

  static final _handleMessage = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_AsyncQueryHandler_handleMessage")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void handleMessage(android.os.Message msg)
  void handleMessage(jni.JlObject msg) =>
      _handleMessage(reference, msg.reference);
}

class AsyncQueryHandler_WorkerHandler extends jni.JlObject {
  AsyncQueryHandler_WorkerHandler.fromRef(ffi.Pointer<ffi.Void> ref)
      : super.fromRef(ref);

  static final _ctor = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_AsyncQueryHandler__WorkerHandler_new")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void <init>(android.os.Looper looper)
  AsyncQueryHandler_WorkerHandler(jni.JlObject looper)
      : super.fromRef(_ctor(looper.reference));

  static final _handleMessage = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_AsyncQueryHandler__WorkerHandler_handleMessage")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void handleMessage(android.os.Message msg)
  void handleMessage(jni.JlObject msg) =>
      _handleMessage(reference, msg.reference);
}

class AsyncQueryHandler_WorkerArgs extends jni.JlObject {
  AsyncQueryHandler_WorkerArgs.fromRef(ffi.Pointer<ffi.Void> ref)
      : super.fromRef(ref);

  /// from: public java.lang.Object cookie
  static final _getcookie = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_content_AsyncQueryHandler__WorkerArgs_cookie")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>();
  jni.JlObject get cookie => jni.JlObject.fromRef(_getcookie(reference));
  static final _setcookie = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "set_android_content_AsyncQueryHandler__WorkerArgs_cookie")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();
  set cookie(jni.JlObject value) => _setcookie(reference, value.reference);

  /// from: public android.os.Handler handler
  static final _gethandler = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_content_AsyncQueryHandler__WorkerArgs_handler")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>();
  jni.JlObject get handler => jni.JlObject.fromRef(_gethandler(reference));
  static final _sethandler = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "set_android_content_AsyncQueryHandler__WorkerArgs_handler")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();
  set handler(jni.JlObject value) => _sethandler(reference, value.reference);

  /// from: public java.lang.String orderBy
  static final _getorderBy = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_content_AsyncQueryHandler__WorkerArgs_orderBy")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>();
  jni.JlString get orderBy => jni.JlString.fromRef(_getorderBy(reference));
  static final _setorderBy = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "set_android_content_AsyncQueryHandler__WorkerArgs_orderBy")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();
  set orderBy(jni.JlString value) => _setorderBy(reference, value.reference);

  /// from: public java.lang.String[] projection
  static final _getprojection = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_content_AsyncQueryHandler__WorkerArgs_projection")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>();
  jni.JlObject get projection =>
      jni.JlObject.fromRef(_getprojection(reference));
  static final _setprojection = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "set_android_content_AsyncQueryHandler__WorkerArgs_projection")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();
  set projection(jni.JlObject value) =>
      _setprojection(reference, value.reference);

  /// from: public java.lang.Object result
  static final _getresult = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_content_AsyncQueryHandler__WorkerArgs_result")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>();
  jni.JlObject get result => jni.JlObject.fromRef(_getresult(reference));
  static final _setresult = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "set_android_content_AsyncQueryHandler__WorkerArgs_result")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();
  set result(jni.JlObject value) => _setresult(reference, value.reference);

  /// from: public java.lang.String selection
  static final _getselection = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_content_AsyncQueryHandler__WorkerArgs_selection")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>();
  jni.JlString get selection => jni.JlString.fromRef(_getselection(reference));
  static final _setselection = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "set_android_content_AsyncQueryHandler__WorkerArgs_selection")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();
  set selection(jni.JlString value) =>
      _setselection(reference, value.reference);

  /// from: public java.lang.String[] selectionArgs
  static final _getselectionArgs = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_content_AsyncQueryHandler__WorkerArgs_selectionArgs")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>();
  jni.JlObject get selectionArgs =>
      jni.JlObject.fromRef(_getselectionArgs(reference));
  static final _setselectionArgs = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "set_android_content_AsyncQueryHandler__WorkerArgs_selectionArgs")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();
  set selectionArgs(jni.JlObject value) =>
      _setselectionArgs(reference, value.reference);

  /// from: public android.net.Uri uri
  static final _geturi = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_content_AsyncQueryHandler__WorkerArgs_uri")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>();
  jni.JlObject get uri => jni.JlObject.fromRef(_geturi(reference));
  static final _seturi = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "set_android_content_AsyncQueryHandler__WorkerArgs_uri")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();
  set uri(jni.JlObject value) => _seturi(reference, value.reference);

  /// from: public android.content.ContentValues values
  static final _getvalues = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_content_AsyncQueryHandler__WorkerArgs_values")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>();
  ContentValues get values => ContentValues.fromRef(_getvalues(reference));
  static final _setvalues = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "set_android_content_AsyncQueryHandler__WorkerArgs_values")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();
  set values(ContentValues value) => _setvalues(reference, value.reference);

  static final _ctor =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "android_content_AsyncQueryHandler__WorkerArgs_new")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();

  /// from: protected void <init>()
  AsyncQueryHandler_WorkerArgs() : super.fromRef(_ctor());
}

class AbstractThreadedSyncAdapter extends jni.JlObject {
  AbstractThreadedSyncAdapter.fromRef(ffi.Pointer<ffi.Void> ref)
      : super.fromRef(ref);

  /// from: static public final int LOG_SYNC_DETAILS
  static const LOG_SYNC_DETAILS = 2743;

  static final _ctor = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Uint8)>>(
          "android_content_AbstractThreadedSyncAdapter_new")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public void <init>(android.content.Context context, boolean autoInitialize)
  AbstractThreadedSyncAdapter(Context context, bool autoInitialize)
      : super.fromRef(_ctor(context.reference, autoInitialize ? 1 : 0));

  static final _ctor_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Uint8, ffi.Uint8)>>(
          "android_content_AbstractThreadedSyncAdapter_new_1")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int, int)>();

  /// from: public void <init>(android.content.Context context, boolean autoInitialize, boolean allowParallelSyncs)
  AbstractThreadedSyncAdapter.ctor_1(
      Context context, bool autoInitialize, bool allowParallelSyncs)
      : super.fromRef(_ctor_1(context.reference, autoInitialize ? 1 : 0,
            allowParallelSyncs ? 1 : 0));

  static final _getContext = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_AbstractThreadedSyncAdapter_getContext")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.content.Context getContext()
  Context getContext() => Context.fromRef(_getContext(reference));

  static final _getSyncAdapterBinder = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_AbstractThreadedSyncAdapter_getSyncAdapterBinder")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public final android.os.IBinder getSyncAdapterBinder()
  jni.JlObject getSyncAdapterBinder() =>
      jni.JlObject.fromRef(_getSyncAdapterBinder(reference));

  static final _onUnsyncableAccount =
      jlookup<ffi.NativeFunction<ffi.Uint8 Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_AbstractThreadedSyncAdapter_onUnsyncableAccount")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public boolean onUnsyncableAccount()
  bool onUnsyncableAccount() => _onUnsyncableAccount(reference) != 0;

  static final _onPerformSync = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>)>>(
          "android_content_AbstractThreadedSyncAdapter_onPerformSync")
      .asFunction<
          void Function(
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public abstract void onPerformSync(android.accounts.Account account, android.os.Bundle extras, java.lang.String authority, android.content.ContentProviderClient provider, android.content.SyncResult syncResult)
  void onPerformSync(
          jni.JlObject account,
          jni.JlObject extras,
          jni.JlString authority,
          ContentProviderClient provider,
          SyncResult syncResult) =>
      _onPerformSync(reference, account.reference, extras.reference,
          authority.reference, provider.reference, syncResult.reference);

  static final _onSecurityException = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>)>>(
          "android_content_AbstractThreadedSyncAdapter_onSecurityException")
      .asFunction<
          void Function(
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public void onSecurityException(android.accounts.Account account, android.os.Bundle extras, java.lang.String authority, android.content.SyncResult syncResult)
  void onSecurityException(jni.JlObject account, jni.JlObject extras,
          jni.JlString authority, SyncResult syncResult) =>
      _onSecurityException(reference, account.reference, extras.reference,
          authority.reference, syncResult.reference);

  static final _onSyncCanceled =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_AbstractThreadedSyncAdapter_onSyncCanceled")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void onSyncCanceled()
  void onSyncCanceled() => _onSyncCanceled(reference);

  static final _onSyncCanceled_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_AbstractThreadedSyncAdapter_onSyncCanceled_1")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void onSyncCanceled(java.lang.Thread thread)
  void onSyncCanceled_1(jni.JlObject thread) =>
      _onSyncCanceled_1(reference, thread.reference);
}

class Entity extends jni.JlObject {
  Entity.fromRef(ffi.Pointer<ffi.Void> ref) : super.fromRef(ref);

  static final _ctor = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
                  ffi.Pointer<ffi.Void>)>>("android_content_Entity_new")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void <init>(android.content.ContentValues values)
  Entity(ContentValues values) : super.fromRef(_ctor(values.reference));

  static final _getEntityValues = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_Entity_getEntityValues")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.content.ContentValues getEntityValues()
  ContentValues getEntityValues() =>
      ContentValues.fromRef(_getEntityValues(reference));

  static final _getSubValues = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_Entity_getSubValues")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.util.ArrayList<android.content.Entity.NamedContentValues> getSubValues()
  jni.JlObject getSubValues() => jni.JlObject.fromRef(_getSubValues(reference));

  static final _addSubValue = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("android_content_Entity_addSubValue")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public void addSubValue(android.net.Uri uri, android.content.ContentValues values)
  void addSubValue(jni.JlObject uri, ContentValues values) =>
      _addSubValue(reference, uri.reference, values.reference);

  static final _toString_1 = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
                  ffi.Pointer<ffi.Void>)>>("android_content_Entity_toString_1")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.String toString()
  jni.JlString toString_1() => jni.JlString.fromRef(_toString_1(reference));
}

class Entity_NamedContentValues extends jni.JlObject {
  Entity_NamedContentValues.fromRef(ffi.Pointer<ffi.Void> ref)
      : super.fromRef(ref);

  /// from: public final android.net.Uri uri
  static final _geturi = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_content_Entity__NamedContentValues_uri")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>();
  jni.JlObject get uri => jni.JlObject.fromRef(_geturi(reference));

  /// from: public final android.content.ContentValues values
  static final _getvalues = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_content_Entity__NamedContentValues_values")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>();
  ContentValues get values => ContentValues.fromRef(_getvalues(reference));

  static final _ctor = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_Entity__NamedContentValues_new")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void <init>(android.net.Uri uri, android.content.ContentValues values)
  Entity_NamedContentValues(jni.JlObject uri, ContentValues values)
      : super.fromRef(_ctor(uri.reference, values.reference));
}

class ContextWrapper extends Context {
  ContextWrapper.fromRef(ffi.Pointer<ffi.Void> ref) : super.fromRef(ref);

  static final _ctor = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
                  ffi.Pointer<ffi.Void>)>>("android_content_ContextWrapper_new")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void <init>(android.content.Context base)
  ContextWrapper(Context base) : super.fromRef(_ctor(base.reference));

  static final _attachBaseContext = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_ContextWrapper_attachBaseContext")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: protected void attachBaseContext(android.content.Context base)
  void attachBaseContext(Context base) =>
      _attachBaseContext(reference, base.reference);

  static final _getBaseContext = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_ContextWrapper_getBaseContext")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.content.Context getBaseContext()
  Context getBaseContext() => Context.fromRef(_getBaseContext(reference));

  static final _getAssets = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_ContextWrapper_getAssets")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.content.res.AssetManager getAssets()
  res.AssetManager getAssets() =>
      res.AssetManager.fromRef(_getAssets(reference));

  static final _getResources = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_ContextWrapper_getResources")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.content.res.Resources getResources()
  res.Resources getResources() =>
      res.Resources.fromRef(_getResources(reference));

  static final _getPackageManager = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_ContextWrapper_getPackageManager")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.content.pm.PackageManager getPackageManager()
  pm.PackageManager getPackageManager() =>
      pm.PackageManager.fromRef(_getPackageManager(reference));

  static final _getContentResolver = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_ContextWrapper_getContentResolver")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.content.ContentResolver getContentResolver()
  ContentResolver getContentResolver() =>
      ContentResolver.fromRef(_getContentResolver(reference));

  static final _getMainLooper = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_ContextWrapper_getMainLooper")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.os.Looper getMainLooper()
  jni.JlObject getMainLooper() =>
      jni.JlObject.fromRef(_getMainLooper(reference));

  static final _getMainExecutor = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_ContextWrapper_getMainExecutor")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.util.concurrent.Executor getMainExecutor()
  jni.JlObject getMainExecutor() =>
      jni.JlObject.fromRef(_getMainExecutor(reference));

  static final _getApplicationContext = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_ContextWrapper_getApplicationContext")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.content.Context getApplicationContext()
  Context getApplicationContext() =>
      Context.fromRef(_getApplicationContext(reference));

  static final _setTheme = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_content_ContextWrapper_setTheme")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public void setTheme(int resid)
  void setTheme(int resid) => _setTheme(reference, resid);

  static final _getTheme = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_ContextWrapper_getTheme")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.content.res.Resources.Theme getTheme()
  res.Resources_Theme getTheme() =>
      res.Resources_Theme.fromRef(_getTheme(reference));

  static final _getClassLoader = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_ContextWrapper_getClassLoader")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.ClassLoader getClassLoader()
  jni.JlObject getClassLoader() =>
      jni.JlObject.fromRef(_getClassLoader(reference));

  static final _getPackageName = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_ContextWrapper_getPackageName")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.String getPackageName()
  jni.JlString getPackageName() =>
      jni.JlString.fromRef(_getPackageName(reference));

  static final _getApplicationInfo = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_ContextWrapper_getApplicationInfo")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.content.pm.ApplicationInfo getApplicationInfo()
  pm.ApplicationInfo getApplicationInfo() =>
      pm.ApplicationInfo.fromRef(_getApplicationInfo(reference));

  static final _getPackageResourcePath = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_ContextWrapper_getPackageResourcePath")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.String getPackageResourcePath()
  jni.JlString getPackageResourcePath() =>
      jni.JlString.fromRef(_getPackageResourcePath(reference));

  static final _getPackageCodePath = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_ContextWrapper_getPackageCodePath")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.String getPackageCodePath()
  jni.JlString getPackageCodePath() =>
      jni.JlString.fromRef(_getPackageCodePath(reference));

  static final _getSharedPreferences = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "android_content_ContextWrapper_getSharedPreferences")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public android.content.SharedPreferences getSharedPreferences(java.lang.String name, int mode)
  SharedPreferences getSharedPreferences(jni.JlString name, int mode) =>
      SharedPreferences.fromRef(
          _getSharedPreferences(reference, name.reference, mode));

  static final _moveSharedPreferencesFrom = jlookup<
              ffi.NativeFunction<
                  ffi.Uint8 Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_ContextWrapper_moveSharedPreferencesFrom")
      .asFunction<
          int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public boolean moveSharedPreferencesFrom(android.content.Context sourceContext, java.lang.String name)
  bool moveSharedPreferencesFrom(Context sourceContext, jni.JlString name) =>
      _moveSharedPreferencesFrom(
          reference, sourceContext.reference, name.reference) !=
      0;

  static final _deleteSharedPreferences = jlookup<
              ffi.NativeFunction<
                  ffi.Uint8 Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_ContextWrapper_deleteSharedPreferences")
      .asFunction<int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public boolean deleteSharedPreferences(java.lang.String name)
  bool deleteSharedPreferences(jni.JlString name) =>
      _deleteSharedPreferences(reference, name.reference) != 0;

  static final _openFileInput = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_ContextWrapper_openFileInput")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public java.io.FileInputStream openFileInput(java.lang.String name)
  jni.JlObject openFileInput(jni.JlString name) =>
      jni.JlObject.fromRef(_openFileInput(reference, name.reference));

  static final _openFileOutput = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_content_ContextWrapper_openFileOutput")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public java.io.FileOutputStream openFileOutput(java.lang.String name, int mode)
  jni.JlObject openFileOutput(jni.JlString name, int mode) =>
      jni.JlObject.fromRef(_openFileOutput(reference, name.reference, mode));

  static final _deleteFile = jlookup<
              ffi.NativeFunction<
                  ffi.Uint8 Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_ContextWrapper_deleteFile")
      .asFunction<int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public boolean deleteFile(java.lang.String name)
  bool deleteFile(jni.JlString name) =>
      _deleteFile(reference, name.reference) != 0;

  static final _getFileStreamPath = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_ContextWrapper_getFileStreamPath")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public java.io.File getFileStreamPath(java.lang.String name)
  jni.JlObject getFileStreamPath(jni.JlString name) =>
      jni.JlObject.fromRef(_getFileStreamPath(reference, name.reference));

  static final _fileList = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_ContextWrapper_fileList")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.String[] fileList()
  jni.JlObject fileList() => jni.JlObject.fromRef(_fileList(reference));

  static final _getDataDir = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_ContextWrapper_getDataDir")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.io.File getDataDir()
  jni.JlObject getDataDir() => jni.JlObject.fromRef(_getDataDir(reference));

  static final _getFilesDir = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_ContextWrapper_getFilesDir")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.io.File getFilesDir()
  jni.JlObject getFilesDir() => jni.JlObject.fromRef(_getFilesDir(reference));

  static final _getNoBackupFilesDir = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_ContextWrapper_getNoBackupFilesDir")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.io.File getNoBackupFilesDir()
  jni.JlObject getNoBackupFilesDir() =>
      jni.JlObject.fromRef(_getNoBackupFilesDir(reference));

  static final _getExternalFilesDir = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_ContextWrapper_getExternalFilesDir")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public java.io.File getExternalFilesDir(java.lang.String type)
  jni.JlObject getExternalFilesDir(jni.JlString type) =>
      jni.JlObject.fromRef(_getExternalFilesDir(reference, type.reference));

  static final _getExternalFilesDirs = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_ContextWrapper_getExternalFilesDirs")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public java.io.File[] getExternalFilesDirs(java.lang.String type)
  jni.JlObject getExternalFilesDirs(jni.JlString type) =>
      jni.JlObject.fromRef(_getExternalFilesDirs(reference, type.reference));

  static final _getObbDir = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_ContextWrapper_getObbDir")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.io.File getObbDir()
  jni.JlObject getObbDir() => jni.JlObject.fromRef(_getObbDir(reference));

  static final _getObbDirs = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_ContextWrapper_getObbDirs")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.io.File[] getObbDirs()
  jni.JlObject getObbDirs() => jni.JlObject.fromRef(_getObbDirs(reference));

  static final _getCacheDir = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_ContextWrapper_getCacheDir")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.io.File getCacheDir()
  jni.JlObject getCacheDir() => jni.JlObject.fromRef(_getCacheDir(reference));

  static final _getCodeCacheDir = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_ContextWrapper_getCodeCacheDir")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.io.File getCodeCacheDir()
  jni.JlObject getCodeCacheDir() =>
      jni.JlObject.fromRef(_getCodeCacheDir(reference));

  static final _getExternalCacheDir = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_ContextWrapper_getExternalCacheDir")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.io.File getExternalCacheDir()
  jni.JlObject getExternalCacheDir() =>
      jni.JlObject.fromRef(_getExternalCacheDir(reference));

  static final _getExternalCacheDirs = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_ContextWrapper_getExternalCacheDirs")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.io.File[] getExternalCacheDirs()
  jni.JlObject getExternalCacheDirs() =>
      jni.JlObject.fromRef(_getExternalCacheDirs(reference));

  static final _getExternalMediaDirs = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_ContextWrapper_getExternalMediaDirs")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.io.File[] getExternalMediaDirs()
  jni.JlObject getExternalMediaDirs() =>
      jni.JlObject.fromRef(_getExternalMediaDirs(reference));

  static final _getDir = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_content_ContextWrapper_getDir")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public java.io.File getDir(java.lang.String name, int mode)
  jni.JlObject getDir(jni.JlString name, int mode) =>
      jni.JlObject.fromRef(_getDir(reference, name.reference, mode));

  static final _openOrCreateDatabase = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Int32,
                      ffi.Pointer<ffi.Void>)>>(
          "android_content_ContextWrapper_openOrCreateDatabase")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, int, ffi.Pointer<ffi.Void>)>();

  /// from: public android.database.sqlite.SQLiteDatabase openOrCreateDatabase(java.lang.String name, int mode, android.database.sqlite.SQLiteDatabase.CursorFactory factory)
  jni.JlObject openOrCreateDatabase(
          jni.JlString name, int mode, jni.JlObject factory_) =>
      jni.JlObject.fromRef(_openOrCreateDatabase(
          reference, name.reference, mode, factory_.reference));

  static final _openOrCreateDatabase_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Int32,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>)>>(
          "android_content_ContextWrapper_openOrCreateDatabase_1")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              int,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public android.database.sqlite.SQLiteDatabase openOrCreateDatabase(java.lang.String name, int mode, android.database.sqlite.SQLiteDatabase.CursorFactory factory, android.database.DatabaseErrorHandler errorHandler)
  jni.JlObject openOrCreateDatabase_1(jni.JlString name, int mode,
          jni.JlObject factory_, jni.JlObject errorHandler) =>
      jni.JlObject.fromRef(_openOrCreateDatabase_1(reference, name.reference,
          mode, factory_.reference, errorHandler.reference));

  static final _moveDatabaseFrom = jlookup<
              ffi.NativeFunction<
                  ffi.Uint8 Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_ContextWrapper_moveDatabaseFrom")
      .asFunction<
          int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public boolean moveDatabaseFrom(android.content.Context sourceContext, java.lang.String name)
  bool moveDatabaseFrom(Context sourceContext, jni.JlString name) =>
      _moveDatabaseFrom(reference, sourceContext.reference, name.reference) !=
      0;

  static final _deleteDatabase = jlookup<
              ffi.NativeFunction<
                  ffi.Uint8 Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_ContextWrapper_deleteDatabase")
      .asFunction<int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public boolean deleteDatabase(java.lang.String name)
  bool deleteDatabase(jni.JlString name) =>
      _deleteDatabase(reference, name.reference) != 0;

  static final _getDatabasePath = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_ContextWrapper_getDatabasePath")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public java.io.File getDatabasePath(java.lang.String name)
  jni.JlObject getDatabasePath(jni.JlString name) =>
      jni.JlObject.fromRef(_getDatabasePath(reference, name.reference));

  static final _databaseList = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_ContextWrapper_databaseList")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.String[] databaseList()
  jni.JlObject databaseList() => jni.JlObject.fromRef(_databaseList(reference));

  static final _getWallpaper = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_ContextWrapper_getWallpaper")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.graphics.drawable.Drawable getWallpaper()
  jni.JlObject getWallpaper() => jni.JlObject.fromRef(_getWallpaper(reference));

  static final _peekWallpaper = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_ContextWrapper_peekWallpaper")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.graphics.drawable.Drawable peekWallpaper()
  jni.JlObject peekWallpaper() =>
      jni.JlObject.fromRef(_peekWallpaper(reference));

  static final _getWallpaperDesiredMinimumWidth =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_ContextWrapper_getWallpaperDesiredMinimumWidth")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int getWallpaperDesiredMinimumWidth()
  int getWallpaperDesiredMinimumWidth() =>
      _getWallpaperDesiredMinimumWidth(reference);

  static final _getWallpaperDesiredMinimumHeight =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_ContextWrapper_getWallpaperDesiredMinimumHeight")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int getWallpaperDesiredMinimumHeight()
  int getWallpaperDesiredMinimumHeight() =>
      _getWallpaperDesiredMinimumHeight(reference);

  static final _setWallpaper = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_ContextWrapper_setWallpaper")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void setWallpaper(android.graphics.Bitmap bitmap)
  void setWallpaper(jni.JlObject bitmap) =>
      _setWallpaper(reference, bitmap.reference);

  static final _setWallpaper_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_ContextWrapper_setWallpaper_1")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void setWallpaper(java.io.InputStream data)
  void setWallpaper_1(jni.JlObject data) =>
      _setWallpaper_1(reference, data.reference);

  static final _clearWallpaper =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_ContextWrapper_clearWallpaper")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void clearWallpaper()
  void clearWallpaper() => _clearWallpaper(reference);

  static final _startActivity = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_ContextWrapper_startActivity")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void startActivity(android.content.Intent intent)
  void startActivity(Intent intent) =>
      _startActivity(reference, intent.reference);

  static final _startActivity_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_ContextWrapper_startActivity_1")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public void startActivity(android.content.Intent intent, android.os.Bundle options)
  void startActivity_1(Intent intent, jni.JlObject options) =>
      _startActivity_1(reference, intent.reference, options.reference);

  static final _startActivities = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_ContextWrapper_startActivities")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void startActivities(android.content.Intent[] intents)
  void startActivities(jni.JlObject intents) =>
      _startActivities(reference, intents.reference);

  static final _startActivities_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_ContextWrapper_startActivities_1")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public void startActivities(android.content.Intent[] intents, android.os.Bundle options)
  void startActivities_1(jni.JlObject intents, jni.JlObject options) =>
      _startActivities_1(reference, intents.reference, options.reference);

  static final _startIntentSender = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Int32,
                      ffi.Int32,
                      ffi.Int32)>>(
          "android_content_ContextWrapper_startIntentSender")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, int, int, int)>();

  /// from: public void startIntentSender(android.content.IntentSender intent, android.content.Intent fillInIntent, int flagsMask, int flagsValues, int extraFlags)
  void startIntentSender(IntentSender intent, Intent fillInIntent,
          int flagsMask, int flagsValues, int extraFlags) =>
      _startIntentSender(reference, intent.reference, fillInIntent.reference,
          flagsMask, flagsValues, extraFlags);

  static final _startIntentSender_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Int32,
                      ffi.Int32,
                      ffi.Int32,
                      ffi.Pointer<ffi.Void>)>>(
          "android_content_ContextWrapper_startIntentSender_1")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, int, int, int, ffi.Pointer<ffi.Void>)>();

  /// from: public void startIntentSender(android.content.IntentSender intent, android.content.Intent fillInIntent, int flagsMask, int flagsValues, int extraFlags, android.os.Bundle options)
  void startIntentSender_1(
          IntentSender intent,
          Intent fillInIntent,
          int flagsMask,
          int flagsValues,
          int extraFlags,
          jni.JlObject options) =>
      _startIntentSender_1(reference, intent.reference, fillInIntent.reference,
          flagsMask, flagsValues, extraFlags, options.reference);

  static final _sendBroadcast = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_ContextWrapper_sendBroadcast")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void sendBroadcast(android.content.Intent intent)
  void sendBroadcast(Intent intent) =>
      _sendBroadcast(reference, intent.reference);

  static final _sendBroadcast_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_ContextWrapper_sendBroadcast_1")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public void sendBroadcast(android.content.Intent intent, java.lang.String receiverPermission)
  void sendBroadcast_1(Intent intent, jni.JlString receiverPermission) =>
      _sendBroadcast_1(
          reference, intent.reference, receiverPermission.reference);

  static final _sendOrderedBroadcast = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_ContextWrapper_sendOrderedBroadcast")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public void sendOrderedBroadcast(android.content.Intent intent, java.lang.String receiverPermission)
  void sendOrderedBroadcast(Intent intent, jni.JlString receiverPermission) =>
      _sendOrderedBroadcast(
          reference, intent.reference, receiverPermission.reference);

  static final _sendOrderedBroadcast_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Int32,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>)>>(
          "android_content_ContextWrapper_sendOrderedBroadcast_1")
      .asFunction<
          void Function(
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              int,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public void sendOrderedBroadcast(android.content.Intent intent, java.lang.String receiverPermission, android.content.BroadcastReceiver resultReceiver, android.os.Handler scheduler, int initialCode, java.lang.String initialData, android.os.Bundle initialExtras)
  void sendOrderedBroadcast_1(
          Intent intent,
          jni.JlString receiverPermission,
          BroadcastReceiver resultReceiver,
          jni.JlObject scheduler,
          int initialCode,
          jni.JlString initialData,
          jni.JlObject initialExtras) =>
      _sendOrderedBroadcast_1(
          reference,
          intent.reference,
          receiverPermission.reference,
          resultReceiver.reference,
          scheduler.reference,
          initialCode,
          initialData.reference,
          initialExtras.reference);

  static final _sendBroadcastAsUser = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_ContextWrapper_sendBroadcastAsUser")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public void sendBroadcastAsUser(android.content.Intent intent, android.os.UserHandle user)
  void sendBroadcastAsUser(Intent intent, jni.JlObject user) =>
      _sendBroadcastAsUser(reference, intent.reference, user.reference);

  static final _sendBroadcastAsUser_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>)>>(
          "android_content_ContextWrapper_sendBroadcastAsUser_1")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void sendBroadcastAsUser(android.content.Intent intent, android.os.UserHandle user, java.lang.String receiverPermission)
  void sendBroadcastAsUser_1(
          Intent intent, jni.JlObject user, jni.JlString receiverPermission) =>
      _sendBroadcastAsUser_1(reference, intent.reference, user.reference,
          receiverPermission.reference);

  static final _sendOrderedBroadcastAsUser = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Int32,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>)>>(
          "android_content_ContextWrapper_sendOrderedBroadcastAsUser")
      .asFunction<
          void Function(
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              int,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public void sendOrderedBroadcastAsUser(android.content.Intent intent, android.os.UserHandle user, java.lang.String receiverPermission, android.content.BroadcastReceiver resultReceiver, android.os.Handler scheduler, int initialCode, java.lang.String initialData, android.os.Bundle initialExtras)
  void sendOrderedBroadcastAsUser(
          Intent intent,
          jni.JlObject user,
          jni.JlString receiverPermission,
          BroadcastReceiver resultReceiver,
          jni.JlObject scheduler,
          int initialCode,
          jni.JlString initialData,
          jni.JlObject initialExtras) =>
      _sendOrderedBroadcastAsUser(
          reference,
          intent.reference,
          user.reference,
          receiverPermission.reference,
          resultReceiver.reference,
          scheduler.reference,
          initialCode,
          initialData.reference,
          initialExtras.reference);

  static final _sendStickyBroadcast = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_ContextWrapper_sendStickyBroadcast")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void sendStickyBroadcast(android.content.Intent intent)
  void sendStickyBroadcast(Intent intent) =>
      _sendStickyBroadcast(reference, intent.reference);

  static final _sendStickyOrderedBroadcast = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Int32,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>)>>(
          "android_content_ContextWrapper_sendStickyOrderedBroadcast")
      .asFunction<
          void Function(
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              int,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public void sendStickyOrderedBroadcast(android.content.Intent intent, android.content.BroadcastReceiver resultReceiver, android.os.Handler scheduler, int initialCode, java.lang.String initialData, android.os.Bundle initialExtras)
  void sendStickyOrderedBroadcast(
          Intent intent,
          BroadcastReceiver resultReceiver,
          jni.JlObject scheduler,
          int initialCode,
          jni.JlString initialData,
          jni.JlObject initialExtras) =>
      _sendStickyOrderedBroadcast(
          reference,
          intent.reference,
          resultReceiver.reference,
          scheduler.reference,
          initialCode,
          initialData.reference,
          initialExtras.reference);

  static final _removeStickyBroadcast = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_ContextWrapper_removeStickyBroadcast")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void removeStickyBroadcast(android.content.Intent intent)
  void removeStickyBroadcast(Intent intent) =>
      _removeStickyBroadcast(reference, intent.reference);

  static final _sendStickyBroadcastAsUser = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_ContextWrapper_sendStickyBroadcastAsUser")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public void sendStickyBroadcastAsUser(android.content.Intent intent, android.os.UserHandle user)
  void sendStickyBroadcastAsUser(Intent intent, jni.JlObject user) =>
      _sendStickyBroadcastAsUser(reference, intent.reference, user.reference);

  static final _sendStickyOrderedBroadcastAsUser = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Int32,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>)>>(
          "android_content_ContextWrapper_sendStickyOrderedBroadcastAsUser")
      .asFunction<
          void Function(
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              int,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public void sendStickyOrderedBroadcastAsUser(android.content.Intent intent, android.os.UserHandle user, android.content.BroadcastReceiver resultReceiver, android.os.Handler scheduler, int initialCode, java.lang.String initialData, android.os.Bundle initialExtras)
  void sendStickyOrderedBroadcastAsUser(
          Intent intent,
          jni.JlObject user,
          BroadcastReceiver resultReceiver,
          jni.JlObject scheduler,
          int initialCode,
          jni.JlString initialData,
          jni.JlObject initialExtras) =>
      _sendStickyOrderedBroadcastAsUser(
          reference,
          intent.reference,
          user.reference,
          resultReceiver.reference,
          scheduler.reference,
          initialCode,
          initialData.reference,
          initialExtras.reference);

  static final _removeStickyBroadcastAsUser = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_ContextWrapper_removeStickyBroadcastAsUser")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public void removeStickyBroadcastAsUser(android.content.Intent intent, android.os.UserHandle user)
  void removeStickyBroadcastAsUser(Intent intent, jni.JlObject user) =>
      _removeStickyBroadcastAsUser(reference, intent.reference, user.reference);

  static final _registerReceiver = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_ContextWrapper_registerReceiver")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.content.Intent registerReceiver(android.content.BroadcastReceiver receiver, android.content.IntentFilter filter)
  Intent registerReceiver(BroadcastReceiver receiver, IntentFilter filter) =>
      Intent.fromRef(
          _registerReceiver(reference, receiver.reference, filter.reference));

  static final _registerReceiver_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Int32)>>(
          "android_content_ContextWrapper_registerReceiver_1")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public android.content.Intent registerReceiver(android.content.BroadcastReceiver receiver, android.content.IntentFilter filter, int flags)
  Intent registerReceiver_1(
          BroadcastReceiver receiver, IntentFilter filter, int flags) =>
      Intent.fromRef(_registerReceiver_1(
          reference, receiver.reference, filter.reference, flags));

  static final _registerReceiver_2 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>)>>(
          "android_content_ContextWrapper_registerReceiver_2")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public android.content.Intent registerReceiver(android.content.BroadcastReceiver receiver, android.content.IntentFilter filter, java.lang.String broadcastPermission, android.os.Handler scheduler)
  Intent registerReceiver_2(BroadcastReceiver receiver, IntentFilter filter,
          jni.JlString broadcastPermission, jni.JlObject scheduler) =>
      Intent.fromRef(_registerReceiver_2(
          reference,
          receiver.reference,
          filter.reference,
          broadcastPermission.reference,
          scheduler.reference));

  static final _registerReceiver_3 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Int32)>>(
          "android_content_ContextWrapper_registerReceiver_3")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              int)>();

  /// from: public android.content.Intent registerReceiver(android.content.BroadcastReceiver receiver, android.content.IntentFilter filter, java.lang.String broadcastPermission, android.os.Handler scheduler, int flags)
  Intent registerReceiver_3(
          BroadcastReceiver receiver,
          IntentFilter filter,
          jni.JlString broadcastPermission,
          jni.JlObject scheduler,
          int flags) =>
      Intent.fromRef(_registerReceiver_3(
          reference,
          receiver.reference,
          filter.reference,
          broadcastPermission.reference,
          scheduler.reference,
          flags));

  static final _unregisterReceiver = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_ContextWrapper_unregisterReceiver")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void unregisterReceiver(android.content.BroadcastReceiver receiver)
  void unregisterReceiver(BroadcastReceiver receiver) =>
      _unregisterReceiver(reference, receiver.reference);

  static final _startService = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_ContextWrapper_startService")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.content.ComponentName startService(android.content.Intent service)
  ComponentName startService(Intent service) =>
      ComponentName.fromRef(_startService(reference, service.reference));

  static final _startForegroundService = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_ContextWrapper_startForegroundService")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.content.ComponentName startForegroundService(android.content.Intent service)
  ComponentName startForegroundService(Intent service) => ComponentName.fromRef(
      _startForegroundService(reference, service.reference));

  static final _stopService = jlookup<
              ffi.NativeFunction<
                  ffi.Uint8 Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_ContextWrapper_stopService")
      .asFunction<int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public boolean stopService(android.content.Intent name)
  bool stopService(Intent name) => _stopService(reference, name.reference) != 0;

  static final _bindService = jlookup<
          ffi.NativeFunction<
              ffi.Uint8 Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_content_ContextWrapper_bindService")
      .asFunction<
          int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, int)>();

  /// from: public boolean bindService(android.content.Intent service, android.content.ServiceConnection conn, int flags)
  bool bindService(Intent service, ServiceConnection conn, int flags) =>
      _bindService(reference, service.reference, conn.reference, flags) != 0;

  static final _unbindService = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_ContextWrapper_unbindService")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void unbindService(android.content.ServiceConnection conn)
  void unbindService(ServiceConnection conn) =>
      _unbindService(reference, conn.reference);

  static final _startInstrumentation = jlookup<
              ffi.NativeFunction<
                  ffi.Uint8 Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>)>>(
          "android_content_ContextWrapper_startInstrumentation")
      .asFunction<
          int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public boolean startInstrumentation(android.content.ComponentName className, java.lang.String profileFile, android.os.Bundle arguments)
  bool startInstrumentation(ComponentName className, jni.JlString profileFile,
          jni.JlObject arguments) =>
      _startInstrumentation(reference, className.reference,
          profileFile.reference, arguments.reference) !=
      0;

  static final _getSystemService = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_ContextWrapper_getSystemService")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.Object getSystemService(java.lang.String name)
  jni.JlObject getSystemService(jni.JlString name) =>
      jni.JlObject.fromRef(_getSystemService(reference, name.reference));

  static final _getSystemServiceName = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_ContextWrapper_getSystemServiceName")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.String getSystemServiceName(java.lang.Class<?> serviceClass)
  jni.JlString getSystemServiceName(jni.JlObject serviceClass) =>
      jni.JlString.fromRef(
          _getSystemServiceName(reference, serviceClass.reference));

  static final _checkPermission = jlookup<
          ffi.NativeFunction<
              ffi.Int32 Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Int32,
                  ffi.Int32)>>("android_content_ContextWrapper_checkPermission")
      .asFunction<
          int Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int, int)>();

  /// from: public int checkPermission(java.lang.String permission, int pid, int uid)
  int checkPermission(jni.JlString permission, int pid, int uid) =>
      _checkPermission(reference, permission.reference, pid, uid);

  static final _checkCallingPermission = jlookup<
              ffi.NativeFunction<
                  ffi.Int32 Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_ContextWrapper_checkCallingPermission")
      .asFunction<int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public int checkCallingPermission(java.lang.String permission)
  int checkCallingPermission(jni.JlString permission) =>
      _checkCallingPermission(reference, permission.reference);

  static final _checkCallingOrSelfPermission = jlookup<
              ffi.NativeFunction<
                  ffi.Int32 Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_ContextWrapper_checkCallingOrSelfPermission")
      .asFunction<int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public int checkCallingOrSelfPermission(java.lang.String permission)
  int checkCallingOrSelfPermission(jni.JlString permission) =>
      _checkCallingOrSelfPermission(reference, permission.reference);

  static final _checkSelfPermission = jlookup<
              ffi.NativeFunction<
                  ffi.Int32 Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_ContextWrapper_checkSelfPermission")
      .asFunction<int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public int checkSelfPermission(java.lang.String permission)
  int checkSelfPermission(jni.JlString permission) =>
      _checkSelfPermission(reference, permission.reference);

  static final _enforcePermission = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Int32,
                      ffi.Int32,
                      ffi.Pointer<ffi.Void>)>>(
          "android_content_ContextWrapper_enforcePermission")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int, int,
              ffi.Pointer<ffi.Void>)>();

  /// from: public void enforcePermission(java.lang.String permission, int pid, int uid, java.lang.String message)
  void enforcePermission(
          jni.JlString permission, int pid, int uid, jni.JlString message) =>
      _enforcePermission(
          reference, permission.reference, pid, uid, message.reference);

  static final _enforceCallingPermission = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_ContextWrapper_enforceCallingPermission")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public void enforceCallingPermission(java.lang.String permission, java.lang.String message)
  void enforceCallingPermission(
          jni.JlString permission, jni.JlString message) =>
      _enforceCallingPermission(
          reference, permission.reference, message.reference);

  static final _enforceCallingOrSelfPermission = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_ContextWrapper_enforceCallingOrSelfPermission")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public void enforceCallingOrSelfPermission(java.lang.String permission, java.lang.String message)
  void enforceCallingOrSelfPermission(
          jni.JlString permission, jni.JlString message) =>
      _enforceCallingOrSelfPermission(
          reference, permission.reference, message.reference);

  static final _grantUriPermission = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Int32)>>(
          "android_content_ContextWrapper_grantUriPermission")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, int)>();

  /// from: public void grantUriPermission(java.lang.String toPackage, android.net.Uri uri, int modeFlags)
  void grantUriPermission(
          jni.JlString toPackage, jni.JlObject uri, int modeFlags) =>
      _grantUriPermission(
          reference, toPackage.reference, uri.reference, modeFlags);

  static final _revokeUriPermission = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "android_content_ContextWrapper_revokeUriPermission")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public void revokeUriPermission(android.net.Uri uri, int modeFlags)
  void revokeUriPermission(jni.JlObject uri, int modeFlags) =>
      _revokeUriPermission(reference, uri.reference, modeFlags);

  static final _revokeUriPermission_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Int32)>>(
          "android_content_ContextWrapper_revokeUriPermission_1")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, int)>();

  /// from: public void revokeUriPermission(java.lang.String targetPackage, android.net.Uri uri, int modeFlags)
  void revokeUriPermission_1(
          jni.JlString targetPackage, jni.JlObject uri, int modeFlags) =>
      _revokeUriPermission_1(
          reference, targetPackage.reference, uri.reference, modeFlags);

  static final _checkUriPermission = jlookup<
              ffi.NativeFunction<
                  ffi.Int32 Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Int32, ffi.Int32, ffi.Int32)>>(
          "android_content_ContextWrapper_checkUriPermission")
      .asFunction<
          int Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int, int, int)>();

  /// from: public int checkUriPermission(android.net.Uri uri, int pid, int uid, int modeFlags)
  int checkUriPermission(jni.JlObject uri, int pid, int uid, int modeFlags) =>
      _checkUriPermission(reference, uri.reference, pid, uid, modeFlags);

  static final _checkCallingUriPermission = jlookup<
              ffi.NativeFunction<
                  ffi.Int32 Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "android_content_ContextWrapper_checkCallingUriPermission")
      .asFunction<
          int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public int checkCallingUriPermission(android.net.Uri uri, int modeFlags)
  int checkCallingUriPermission(jni.JlObject uri, int modeFlags) =>
      _checkCallingUriPermission(reference, uri.reference, modeFlags);

  static final _checkCallingOrSelfUriPermission = jlookup<
              ffi.NativeFunction<
                  ffi.Int32 Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "android_content_ContextWrapper_checkCallingOrSelfUriPermission")
      .asFunction<
          int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public int checkCallingOrSelfUriPermission(android.net.Uri uri, int modeFlags)
  int checkCallingOrSelfUriPermission(jni.JlObject uri, int modeFlags) =>
      _checkCallingOrSelfUriPermission(reference, uri.reference, modeFlags);

  static final _checkUriPermission_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Int32 Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Int32,
                      ffi.Int32,
                      ffi.Int32)>>(
          "android_content_ContextWrapper_checkUriPermission_1")
      .asFunction<
          int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int, int, int)>();

  /// from: public int checkUriPermission(android.net.Uri uri, java.lang.String readPermission, java.lang.String writePermission, int pid, int uid, int modeFlags)
  int checkUriPermission_1(jni.JlObject uri, jni.JlString readPermission,
          jni.JlString writePermission, int pid, int uid, int modeFlags) =>
      _checkUriPermission_1(reference, uri.reference, readPermission.reference,
          writePermission.reference, pid, uid, modeFlags);

  static final _enforceUriPermission = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Int32,
                      ffi.Int32,
                      ffi.Int32,
                      ffi.Pointer<ffi.Void>)>>(
          "android_content_ContextWrapper_enforceUriPermission")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int, int,
              int, ffi.Pointer<ffi.Void>)>();

  /// from: public void enforceUriPermission(android.net.Uri uri, int pid, int uid, int modeFlags, java.lang.String message)
  void enforceUriPermission(jni.JlObject uri, int pid, int uid, int modeFlags,
          jni.JlString message) =>
      _enforceUriPermission(
          reference, uri.reference, pid, uid, modeFlags, message.reference);

  static final _enforceCallingUriPermission = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Int32,
                      ffi.Pointer<ffi.Void>)>>(
          "android_content_ContextWrapper_enforceCallingUriPermission")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int,
              ffi.Pointer<ffi.Void>)>();

  /// from: public void enforceCallingUriPermission(android.net.Uri uri, int modeFlags, java.lang.String message)
  void enforceCallingUriPermission(
          jni.JlObject uri, int modeFlags, jni.JlString message) =>
      _enforceCallingUriPermission(
          reference, uri.reference, modeFlags, message.reference);

  static final _enforceCallingOrSelfUriPermission = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Int32,
                      ffi.Pointer<ffi.Void>)>>(
          "android_content_ContextWrapper_enforceCallingOrSelfUriPermission")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int,
              ffi.Pointer<ffi.Void>)>();

  /// from: public void enforceCallingOrSelfUriPermission(android.net.Uri uri, int modeFlags, java.lang.String message)
  void enforceCallingOrSelfUriPermission(
          jni.JlObject uri, int modeFlags, jni.JlString message) =>
      _enforceCallingOrSelfUriPermission(
          reference, uri.reference, modeFlags, message.reference);

  static final _enforceUriPermission_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Int32,
                      ffi.Int32,
                      ffi.Int32,
                      ffi.Pointer<ffi.Void>)>>(
          "android_content_ContextWrapper_enforceUriPermission_1")
      .asFunction<
          void Function(
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              int,
              int,
              int,
              ffi.Pointer<ffi.Void>)>();

  /// from: public void enforceUriPermission(android.net.Uri uri, java.lang.String readPermission, java.lang.String writePermission, int pid, int uid, int modeFlags, java.lang.String message)
  void enforceUriPermission_1(
          jni.JlObject uri,
          jni.JlString readPermission,
          jni.JlString writePermission,
          int pid,
          int uid,
          int modeFlags,
          jni.JlString message) =>
      _enforceUriPermission_1(
          reference,
          uri.reference,
          readPermission.reference,
          writePermission.reference,
          pid,
          uid,
          modeFlags,
          message.reference);

  static final _createPackageContext = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "android_content_ContextWrapper_createPackageContext")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public android.content.Context createPackageContext(java.lang.String packageName, int flags)
  Context createPackageContext(jni.JlString packageName, int flags) =>
      Context.fromRef(
          _createPackageContext(reference, packageName.reference, flags));

  static final _createContextForSplit = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_ContextWrapper_createContextForSplit")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.content.Context createContextForSplit(java.lang.String splitName)
  Context createContextForSplit(jni.JlString splitName) =>
      Context.fromRef(_createContextForSplit(reference, splitName.reference));

  static final _createConfigurationContext = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_ContextWrapper_createConfigurationContext")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.content.Context createConfigurationContext(android.content.res.Configuration overrideConfiguration)
  Context createConfigurationContext(res.Configuration overrideConfiguration) =>
      Context.fromRef(_createConfigurationContext(
          reference, overrideConfiguration.reference));

  static final _createDisplayContext = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_ContextWrapper_createDisplayContext")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.content.Context createDisplayContext(android.view.Display display)
  Context createDisplayContext(jni.JlObject display) =>
      Context.fromRef(_createDisplayContext(reference, display.reference));

  static final _isRestricted =
      jlookup<ffi.NativeFunction<ffi.Uint8 Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_ContextWrapper_isRestricted")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public boolean isRestricted()
  bool isRestricted() => _isRestricted(reference) != 0;

  static final _createDeviceProtectedStorageContext = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_ContextWrapper_createDeviceProtectedStorageContext")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.content.Context createDeviceProtectedStorageContext()
  Context createDeviceProtectedStorageContext() =>
      Context.fromRef(_createDeviceProtectedStorageContext(reference));

  static final _isDeviceProtectedStorage =
      jlookup<ffi.NativeFunction<ffi.Uint8 Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_ContextWrapper_isDeviceProtectedStorage")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public boolean isDeviceProtectedStorage()
  bool isDeviceProtectedStorage() => _isDeviceProtectedStorage(reference) != 0;
}

class AsyncTaskLoader extends Loader {
  AsyncTaskLoader.fromRef(ffi.Pointer<ffi.Void> ref) : super.fromRef(ref);

  static final _ctor = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_AsyncTaskLoader_new")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void <init>(android.content.Context context)
  AsyncTaskLoader(Context context) : super.fromRef(_ctor(context.reference));

  static final _setUpdateThrottle = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Int64)>>(
          "android_content_AsyncTaskLoader_setUpdateThrottle")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public void setUpdateThrottle(long delayMS)
  void setUpdateThrottle(int delayMS) => _setUpdateThrottle(reference, delayMS);

  static final _onForceLoad =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_AsyncTaskLoader_onForceLoad")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: protected void onForceLoad()
  void onForceLoad() => _onForceLoad(reference);

  static final _onCancelLoad =
      jlookup<ffi.NativeFunction<ffi.Uint8 Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_AsyncTaskLoader_onCancelLoad")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: protected boolean onCancelLoad()
  bool onCancelLoad() => _onCancelLoad(reference) != 0;

  static final _cancelLoadInBackground =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_AsyncTaskLoader_cancelLoadInBackground")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void cancelLoadInBackground()
  void cancelLoadInBackground() => _cancelLoadInBackground(reference);

  static final _isLoadInBackgroundCanceled =
      jlookup<ffi.NativeFunction<ffi.Uint8 Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_AsyncTaskLoader_isLoadInBackgroundCanceled")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public boolean isLoadInBackgroundCanceled()
  bool isLoadInBackgroundCanceled() =>
      _isLoadInBackgroundCanceled(reference) != 0;

  static final _dump = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>)>>(
          "android_content_AsyncTaskLoader_dump")
      .asFunction<
          void Function(
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public void dump(java.lang.String prefix, java.io.FileDescriptor fd, java.io.PrintWriter writer, java.lang.String[] args)
  void dump(jni.JlString prefix, jni.JlObject fd, jni.JlObject writer,
          jni.JlObject args) =>
      _dump(reference, prefix.reference, fd.reference, writer.reference,
          args.reference);
}

class UriMatcher extends jni.JlObject {
  UriMatcher.fromRef(ffi.Pointer<ffi.Void> ref) : super.fromRef(ref);

  /// from: static public final int NO_MATCH
  static const NO_MATCH = -1;

  static final _ctor =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function(ffi.Int32)>>(
              "android_content_UriMatcher_new")
          .asFunction<ffi.Pointer<ffi.Void> Function(int)>();

  /// from: public void <init>(int code)
  UriMatcher(int code) : super.fromRef(_ctor(code));

  static final _addURI = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_content_UriMatcher_addURI")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, int)>();

  /// from: public void addURI(java.lang.String authority, java.lang.String path, int code)
  void addURI(jni.JlString authority, jni.JlString path, int code) =>
      _addURI(reference, authority.reference, path.reference, code);

  static final _match = jlookup<
          ffi.NativeFunction<
              ffi.Int32 Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("android_content_UriMatcher_match")
      .asFunction<int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public int match(android.net.Uri uri)
  int match(jni.JlObject uri) => _match(reference, uri.reference);
}

class ComponentName extends jni.JlObject {
  ComponentName.fromRef(ffi.Pointer<ffi.Void> ref) : super.fromRef(ref);

  /// from: static public final android.os.Parcelable.Creator<android.content.ComponentName> CREATOR
  static final _getCREATOR =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "get_android_content_ComponentName_CREATOR")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();
  static jni.JlObject get CREATOR => jni.JlObject.fromRef(_getCREATOR());

  static final _ctor = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("android_content_ComponentName_new")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void <init>(java.lang.String pkg, java.lang.String cls)
  ComponentName(jni.JlString pkg, jni.JlString cls)
      : super.fromRef(_ctor(pkg.reference, cls.reference));

  static final _ctor_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_ComponentName_new_1")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void <init>(android.content.Context pkg, java.lang.String cls)
  ComponentName.ctor_1(Context pkg, jni.JlString cls)
      : super.fromRef(_ctor_1(pkg.reference, cls.reference));

  static final _ctor_2 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_ComponentName_new_2")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void <init>(android.content.Context pkg, java.lang.Class<?> cls)
  ComponentName.ctor_2(Context pkg, jni.JlObject cls)
      : super.fromRef(_ctor_2(pkg.reference, cls.reference));

  static final _ctor_3 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_ComponentName_new_3")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void <init>(android.os.Parcel in)
  ComponentName.ctor_3(jni.JlObject in_)
      : super.fromRef(_ctor_3(in_.reference));

  static final _createRelative = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_ComponentName_createRelative")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: static public android.content.ComponentName createRelative(java.lang.String pkg, java.lang.String cls)
  static ComponentName createRelative(jni.JlString pkg, jni.JlString cls) =>
      ComponentName.fromRef(_createRelative(pkg.reference, cls.reference));

  static final _createRelative_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_ComponentName_createRelative_1")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: static public android.content.ComponentName createRelative(android.content.Context pkg, java.lang.String cls)
  static ComponentName createRelative_1(Context pkg, jni.JlString cls) =>
      ComponentName.fromRef(_createRelative_1(pkg.reference, cls.reference));

  static final _clone = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_ComponentName_clone")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.content.ComponentName clone()
  ComponentName clone() => ComponentName.fromRef(_clone(reference));

  static final _getPackageName = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_ComponentName_getPackageName")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.String getPackageName()
  jni.JlString getPackageName() =>
      jni.JlString.fromRef(_getPackageName(reference));

  static final _getClassName = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_ComponentName_getClassName")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.String getClassName()
  jni.JlString getClassName() => jni.JlString.fromRef(_getClassName(reference));

  static final _getShortClassName = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_ComponentName_getShortClassName")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.String getShortClassName()
  jni.JlString getShortClassName() =>
      jni.JlString.fromRef(_getShortClassName(reference));

  static final _flattenToString = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_ComponentName_flattenToString")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.String flattenToString()
  jni.JlString flattenToString() =>
      jni.JlString.fromRef(_flattenToString(reference));

  static final _flattenToShortString = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_ComponentName_flattenToShortString")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.String flattenToShortString()
  jni.JlString flattenToShortString() =>
      jni.JlString.fromRef(_flattenToShortString(reference));

  static final _unflattenFromString = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_ComponentName_unflattenFromString")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: static public android.content.ComponentName unflattenFromString(java.lang.String str)
  static ComponentName unflattenFromString(jni.JlString str) =>
      ComponentName.fromRef(_unflattenFromString(str.reference));

  static final _toShortString = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_ComponentName_toShortString")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.String toShortString()
  jni.JlString toShortString() =>
      jni.JlString.fromRef(_toShortString(reference));

  static final _toString_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_ComponentName_toString_1")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.String toString()
  jni.JlString toString_1() => jni.JlString.fromRef(_toString_1(reference));

  static final _equals_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Uint8 Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_ComponentName_equals_1")
      .asFunction<int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public boolean equals(java.lang.Object obj)
  bool equals_1(jni.JlObject obj) => _equals_1(reference, obj.reference) != 0;

  static final _hashCode_1 =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_ComponentName_hashCode_1")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int hashCode()
  int hashCode_1() => _hashCode_1(reference);

  static final _compareTo = jlookup<
              ffi.NativeFunction<
                  ffi.Int32 Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_ComponentName_compareTo")
      .asFunction<int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public int compareTo(android.content.ComponentName that)
  int compareTo(ComponentName that) => _compareTo(reference, that.reference);

  static final _describeContents =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_ComponentName_describeContents")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int describeContents()
  int describeContents() => _describeContents(reference);

  static final _writeToParcel = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_content_ComponentName_writeToParcel")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public void writeToParcel(android.os.Parcel out, int flags)
  void writeToParcel(jni.JlObject out, int flags) =>
      _writeToParcel(reference, out.reference, flags);

  static final _writeToParcel_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_ComponentName_writeToParcel_1")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: static public void writeToParcel(android.content.ComponentName c, android.os.Parcel out)
  static void writeToParcel_1(ComponentName c, jni.JlObject out) =>
      _writeToParcel_1(c.reference, out.reference);

  static final _readFromParcel = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_ComponentName_readFromParcel")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: static public android.content.ComponentName readFromParcel(android.os.Parcel in)
  static ComponentName readFromParcel(jni.JlObject in_) =>
      ComponentName.fromRef(_readFromParcel(in_.reference));
}

class SyncAdapterType extends jni.JlObject {
  SyncAdapterType.fromRef(ffi.Pointer<ffi.Void> ref) : super.fromRef(ref);

  /// from: static public final android.os.Parcelable.Creator<android.content.SyncAdapterType> CREATOR
  static final _getCREATOR =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "get_android_content_SyncAdapterType_CREATOR")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();
  static jni.JlObject get CREATOR => jni.JlObject.fromRef(_getCREATOR());

  /// from: public final java.lang.String accountType
  static final _getaccountType = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_content_SyncAdapterType_accountType")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>();
  jni.JlString get accountType =>
      jni.JlString.fromRef(_getaccountType(reference));

  /// from: public final java.lang.String authority
  static final _getauthority = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_content_SyncAdapterType_authority")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>();
  jni.JlString get authority => jni.JlString.fromRef(_getauthority(reference));

  /// from: public final boolean isKey
  static final _getisKey = jlookup<
          ffi.NativeFunction<
              ffi.Uint8 Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_content_SyncAdapterType_isKey")
      .asFunction<
          int Function(
    ffi.Pointer<ffi.Void>,
  )>();
  bool get isKey => _getisKey(reference) != 0;

  static final _ctor = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Uint8,
                  ffi.Uint8)>>("android_content_SyncAdapterType_new")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int, int)>();

  /// from: public void <init>(java.lang.String authority, java.lang.String accountType, boolean userVisible, boolean supportsUploading)
  SyncAdapterType(jni.JlString authority, jni.JlString accountType,
      bool userVisible, bool supportsUploading)
      : super.fromRef(_ctor(authority.reference, accountType.reference,
            userVisible ? 1 : 0, supportsUploading ? 1 : 0));

  static final _ctor_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_SyncAdapterType_new_1")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void <init>(android.os.Parcel source)
  SyncAdapterType.ctor_1(jni.JlObject source)
      : super.fromRef(_ctor_1(source.reference));

  static final _supportsUploading =
      jlookup<ffi.NativeFunction<ffi.Uint8 Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_SyncAdapterType_supportsUploading")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public boolean supportsUploading()
  bool supportsUploading() => _supportsUploading(reference) != 0;

  static final _isUserVisible =
      jlookup<ffi.NativeFunction<ffi.Uint8 Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_SyncAdapterType_isUserVisible")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public boolean isUserVisible()
  bool isUserVisible() => _isUserVisible(reference) != 0;

  static final _allowParallelSyncs =
      jlookup<ffi.NativeFunction<ffi.Uint8 Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_SyncAdapterType_allowParallelSyncs")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public boolean allowParallelSyncs()
  bool allowParallelSyncs() => _allowParallelSyncs(reference) != 0;

  static final _isAlwaysSyncable =
      jlookup<ffi.NativeFunction<ffi.Uint8 Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_SyncAdapterType_isAlwaysSyncable")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public boolean isAlwaysSyncable()
  bool isAlwaysSyncable() => _isAlwaysSyncable(reference) != 0;

  static final _getSettingsActivity = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_SyncAdapterType_getSettingsActivity")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.String getSettingsActivity()
  jni.JlString getSettingsActivity() =>
      jni.JlString.fromRef(_getSettingsActivity(reference));

  static final _newKey = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_SyncAdapterType_newKey")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: static public android.content.SyncAdapterType newKey(java.lang.String authority, java.lang.String accountType)
  static SyncAdapterType newKey(
          jni.JlString authority, jni.JlString accountType) =>
      SyncAdapterType.fromRef(
          _newKey(authority.reference, accountType.reference));

  static final _equals_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Uint8 Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_SyncAdapterType_equals_1")
      .asFunction<int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public boolean equals(java.lang.Object o)
  bool equals_1(jni.JlObject o) => _equals_1(reference, o.reference) != 0;

  static final _hashCode_1 =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_SyncAdapterType_hashCode_1")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int hashCode()
  int hashCode_1() => _hashCode_1(reference);

  static final _toString_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_SyncAdapterType_toString_1")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.String toString()
  jni.JlString toString_1() => jni.JlString.fromRef(_toString_1(reference));

  static final _describeContents =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_SyncAdapterType_describeContents")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int describeContents()
  int describeContents() => _describeContents(reference);

  static final _writeToParcel = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_content_SyncAdapterType_writeToParcel")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public void writeToParcel(android.os.Parcel dest, int flags)
  void writeToParcel(jni.JlObject dest, int flags) =>
      _writeToParcel(reference, dest.reference, flags);
}

class PeriodicSync extends jni.JlObject {
  PeriodicSync.fromRef(ffi.Pointer<ffi.Void> ref) : super.fromRef(ref);

  /// from: static public final android.os.Parcelable.Creator<android.content.PeriodicSync> CREATOR
  static final _getCREATOR =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "get_android_content_PeriodicSync_CREATOR")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();
  static jni.JlObject get CREATOR => jni.JlObject.fromRef(_getCREATOR());

  /// from: public final android.accounts.Account account
  static final _getaccount = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_content_PeriodicSync_account")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>();
  jni.JlObject get account => jni.JlObject.fromRef(_getaccount(reference));

  /// from: public final java.lang.String authority
  static final _getauthority = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_content_PeriodicSync_authority")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>();
  jni.JlString get authority => jni.JlString.fromRef(_getauthority(reference));

  /// from: public final android.os.Bundle extras
  static final _getextras = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_content_PeriodicSync_extras")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>();
  jni.JlObject get extras => jni.JlObject.fromRef(_getextras(reference));

  /// from: public final long period
  static final _getperiod = jlookup<
          ffi.NativeFunction<
              ffi.Int64 Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_content_PeriodicSync_period")
      .asFunction<
          int Function(
    ffi.Pointer<ffi.Void>,
  )>();
  int get period => _getperiod(reference);

  static final _ctor = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Int64)>>("android_content_PeriodicSync_new")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public void <init>(android.accounts.Account account, java.lang.String authority, android.os.Bundle extras, long periodInSeconds)
  PeriodicSync(jni.JlObject account, jni.JlString authority,
      jni.JlObject extras, int periodInSeconds)
      : super.fromRef(_ctor(account.reference, authority.reference,
            extras.reference, periodInSeconds));

  static final _describeContents =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_PeriodicSync_describeContents")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int describeContents()
  int describeContents() => _describeContents(reference);

  static final _writeToParcel = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_content_PeriodicSync_writeToParcel")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public void writeToParcel(android.os.Parcel dest, int flags)
  void writeToParcel(jni.JlObject dest, int flags) =>
      _writeToParcel(reference, dest.reference, flags);

  static final _equals_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Uint8 Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_PeriodicSync_equals_1")
      .asFunction<int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public boolean equals(java.lang.Object o)
  bool equals_1(jni.JlObject o) => _equals_1(reference, o.reference) != 0;

  static final _toString_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_PeriodicSync_toString_1")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.String toString()
  jni.JlString toString_1() => jni.JlString.fromRef(_toString_1(reference));
}

class OperationApplicationException extends jni.JlObject {
  OperationApplicationException.fromRef(ffi.Pointer<ffi.Void> ref)
      : super.fromRef(ref);

  static final _ctor =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "android_content_OperationApplicationException_new")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();

  /// from: public void <init>()
  OperationApplicationException() : super.fromRef(_ctor());

  static final _ctor_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_OperationApplicationException_new_1")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void <init>(java.lang.String message)
  OperationApplicationException.ctor_1(jni.JlString message)
      : super.fromRef(_ctor_1(message.reference));

  static final _ctor_2 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_OperationApplicationException_new_2")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void <init>(java.lang.String message, java.lang.Throwable cause)
  OperationApplicationException.ctor_2(jni.JlString message, jni.JlObject cause)
      : super.fromRef(_ctor_2(message.reference, cause.reference));

  static final _ctor_3 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_OperationApplicationException_new_3")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void <init>(java.lang.Throwable cause)
  OperationApplicationException.ctor_3(jni.JlObject cause)
      : super.fromRef(_ctor_3(cause.reference));

  static final _ctor_4 =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function(ffi.Int32)>>(
              "android_content_OperationApplicationException_new_4")
          .asFunction<ffi.Pointer<ffi.Void> Function(int)>();

  /// from: public void <init>(int numSuccessfulYieldPoints)
  OperationApplicationException.ctor_4(int numSuccessfulYieldPoints)
      : super.fromRef(_ctor_4(numSuccessfulYieldPoints));

  static final _ctor_5 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "android_content_OperationApplicationException_new_5")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public void <init>(java.lang.String message, int numSuccessfulYieldPoints)
  OperationApplicationException.ctor_5(
      jni.JlString message, int numSuccessfulYieldPoints)
      : super.fromRef(_ctor_5(message.reference, numSuccessfulYieldPoints));

  static final _getNumSuccessfulYieldPoints = jlookup<
              ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_OperationApplicationException_getNumSuccessfulYieldPoints")
      .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int getNumSuccessfulYieldPoints()
  int getNumSuccessfulYieldPoints() => _getNumSuccessfulYieldPoints(reference);
}

class IntentSender extends jni.JlObject {
  IntentSender.fromRef(ffi.Pointer<ffi.Void> ref) : super.fromRef(ref);

  /// from: static public final android.os.Parcelable.Creator<android.content.IntentSender> CREATOR
  static final _getCREATOR =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "get_android_content_IntentSender_CREATOR")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();
  static jni.JlObject get CREATOR => jni.JlObject.fromRef(_getCREATOR());

  static final _ctor = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
                  ffi.Pointer<ffi.Void>)>>("android_content_IntentSender_new")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: void <init>(android.os.IBinder target)
  IntentSender(jni.JlObject target) : super.fromRef(_ctor(target.reference));

  static final _sendIntent = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Int32,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>)>>(
          "android_content_IntentSender_sendIntent")
      .asFunction<
          void Function(
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              int,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public void sendIntent(android.content.Context context, int code, android.content.Intent intent, android.content.IntentSender.OnFinished onFinished, android.os.Handler handler)
  void sendIntent(Context context, int code, Intent intent,
          IntentSender_OnFinished onFinished, jni.JlObject handler) =>
      _sendIntent(reference, context.reference, code, intent.reference,
          onFinished.reference, handler.reference);

  static final _sendIntent_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Int32,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>)>>(
          "android_content_IntentSender_sendIntent_1")
      .asFunction<
          void Function(
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              int,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public void sendIntent(android.content.Context context, int code, android.content.Intent intent, android.content.IntentSender.OnFinished onFinished, android.os.Handler handler, java.lang.String requiredPermission)
  void sendIntent_1(
          Context context,
          int code,
          Intent intent,
          IntentSender_OnFinished onFinished,
          jni.JlObject handler,
          jni.JlString requiredPermission) =>
      _sendIntent_1(
          reference,
          context.reference,
          code,
          intent.reference,
          onFinished.reference,
          handler.reference,
          requiredPermission.reference);

  static final _getTargetPackage = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_IntentSender_getTargetPackage")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.String getTargetPackage()
  jni.JlString getTargetPackage() =>
      jni.JlString.fromRef(_getTargetPackage(reference));

  static final _getCreatorPackage = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_IntentSender_getCreatorPackage")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.String getCreatorPackage()
  jni.JlString getCreatorPackage() =>
      jni.JlString.fromRef(_getCreatorPackage(reference));

  static final _getCreatorUid =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_IntentSender_getCreatorUid")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int getCreatorUid()
  int getCreatorUid() => _getCreatorUid(reference);

  static final _getCreatorUserHandle = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_IntentSender_getCreatorUserHandle")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.os.UserHandle getCreatorUserHandle()
  jni.JlObject getCreatorUserHandle() =>
      jni.JlObject.fromRef(_getCreatorUserHandle(reference));

  static final _equals_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Uint8 Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_IntentSender_equals_1")
      .asFunction<int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public boolean equals(java.lang.Object otherObj)
  bool equals_1(jni.JlObject otherObj) =>
      _equals_1(reference, otherObj.reference) != 0;

  static final _hashCode_1 =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_IntentSender_hashCode_1")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int hashCode()
  int hashCode_1() => _hashCode_1(reference);

  static final _toString_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_IntentSender_toString_1")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.String toString()
  jni.JlString toString_1() => jni.JlString.fromRef(_toString_1(reference));

  static final _describeContents =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_IntentSender_describeContents")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int describeContents()
  int describeContents() => _describeContents(reference);

  static final _writeToParcel = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_content_IntentSender_writeToParcel")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public void writeToParcel(android.os.Parcel out, int flags)
  void writeToParcel(jni.JlObject out, int flags) =>
      _writeToParcel(reference, out.reference, flags);

  static final _writeIntentSenderOrNullToParcel = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_IntentSender_writeIntentSenderOrNullToParcel")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: static public void writeIntentSenderOrNullToParcel(android.content.IntentSender sender, android.os.Parcel out)
  static void writeIntentSenderOrNullToParcel(
          IntentSender sender, jni.JlObject out) =>
      _writeIntentSenderOrNullToParcel(sender.reference, out.reference);

  static final _readIntentSenderOrNullFromParcel = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_IntentSender_readIntentSenderOrNullFromParcel")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: static public android.content.IntentSender readIntentSenderOrNullFromParcel(android.os.Parcel in)
  static IntentSender readIntentSenderOrNullFromParcel(jni.JlObject in_) =>
      IntentSender.fromRef(_readIntentSenderOrNullFromParcel(in_.reference));
}

class IntentSender_SendIntentException extends jni.JlObject {
  IntentSender_SendIntentException.fromRef(ffi.Pointer<ffi.Void> ref)
      : super.fromRef(ref);

  static final _ctor =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "android_content_IntentSender__SendIntentException_new")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();

  /// from: public void <init>()
  IntentSender_SendIntentException() : super.fromRef(_ctor());

  static final _ctor_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_IntentSender__SendIntentException_new_1")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void <init>(java.lang.String name)
  IntentSender_SendIntentException.ctor_1(jni.JlString name)
      : super.fromRef(_ctor_1(name.reference));

  static final _ctor_2 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_IntentSender__SendIntentException_new_2")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void <init>(java.lang.Exception cause)
  IntentSender_SendIntentException.ctor_2(jni.JlObject cause)
      : super.fromRef(_ctor_2(cause.reference));
}

class IntentSender_OnFinished extends jni.JlObject {
  IntentSender_OnFinished.fromRef(ffi.Pointer<ffi.Void> ref)
      : super.fromRef(ref);

  static final _onSendFinished = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Int32,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>)>>(
          "android_content_IntentSender__OnFinished_onSendFinished")
      .asFunction<
          void Function(
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              int,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public abstract void onSendFinished(android.content.IntentSender IntentSender, android.content.Intent intent, int resultCode, java.lang.String resultData, android.os.Bundle resultExtras)
  void onSendFinished(IntentSender IntentSender, Intent intent, int resultCode,
          jni.JlString resultData, jni.JlObject resultExtras) =>
      _onSendFinished(reference, IntentSender.reference, intent.reference,
          resultCode, resultData.reference, resultExtras.reference);
}

class SyncResult extends jni.JlObject {
  SyncResult.fromRef(ffi.Pointer<ffi.Void> ref) : super.fromRef(ref);

  /// from: static public final android.content.SyncResult ALREADY_IN_PROGRESS
  static final _getALREADY_IN_PROGRESS =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "get_android_content_SyncResult_ALREADY_IN_PROGRESS")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();
  static SyncResult get ALREADY_IN_PROGRESS =>
      SyncResult.fromRef(_getALREADY_IN_PROGRESS());

  /// from: static public final android.os.Parcelable.Creator<android.content.SyncResult> CREATOR
  static final _getCREATOR =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "get_android_content_SyncResult_CREATOR")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();
  static jni.JlObject get CREATOR => jni.JlObject.fromRef(_getCREATOR());

  /// from: public boolean databaseError
  static final _getdatabaseError = jlookup<
          ffi.NativeFunction<
              ffi.Uint8 Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_content_SyncResult_databaseError")
      .asFunction<
          int Function(
    ffi.Pointer<ffi.Void>,
  )>();
  bool get databaseError => _getdatabaseError(reference) != 0;
  static final _setdatabaseError = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  ffi.Uint8)>>("set_android_content_SyncResult_databaseError")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();
  set databaseError(bool value) => _setdatabaseError(reference, value ? 1 : 0);

  /// from: public long delayUntil
  static final _getdelayUntil = jlookup<
          ffi.NativeFunction<
              ffi.Int64 Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_content_SyncResult_delayUntil")
      .asFunction<
          int Function(
    ffi.Pointer<ffi.Void>,
  )>();
  int get delayUntil => _getdelayUntil(reference);
  static final _setdelayUntil = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  ffi.Int64)>>("set_android_content_SyncResult_delayUntil")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();
  set delayUntil(int value) => _setdelayUntil(reference, value);

  /// from: public boolean fullSyncRequested
  static final _getfullSyncRequested = jlookup<
          ffi.NativeFunction<
              ffi.Uint8 Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_content_SyncResult_fullSyncRequested")
      .asFunction<
          int Function(
    ffi.Pointer<ffi.Void>,
  )>();
  bool get fullSyncRequested => _getfullSyncRequested(reference) != 0;
  static final _setfullSyncRequested = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Uint8)>>(
          "set_android_content_SyncResult_fullSyncRequested")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();
  set fullSyncRequested(bool value) =>
      _setfullSyncRequested(reference, value ? 1 : 0);

  /// from: public boolean moreRecordsToGet
  static final _getmoreRecordsToGet = jlookup<
          ffi.NativeFunction<
              ffi.Uint8 Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_content_SyncResult_moreRecordsToGet")
      .asFunction<
          int Function(
    ffi.Pointer<ffi.Void>,
  )>();
  bool get moreRecordsToGet => _getmoreRecordsToGet(reference) != 0;
  static final _setmoreRecordsToGet = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Uint8)>>(
          "set_android_content_SyncResult_moreRecordsToGet")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();
  set moreRecordsToGet(bool value) =>
      _setmoreRecordsToGet(reference, value ? 1 : 0);

  /// from: public boolean partialSyncUnavailable
  static final _getpartialSyncUnavailable = jlookup<
          ffi.NativeFunction<
              ffi.Uint8 Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_content_SyncResult_partialSyncUnavailable")
      .asFunction<
          int Function(
    ffi.Pointer<ffi.Void>,
  )>();
  bool get partialSyncUnavailable => _getpartialSyncUnavailable(reference) != 0;
  static final _setpartialSyncUnavailable = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Uint8)>>(
          "set_android_content_SyncResult_partialSyncUnavailable")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();
  set partialSyncUnavailable(bool value) =>
      _setpartialSyncUnavailable(reference, value ? 1 : 0);

  /// from: public final android.content.SyncStats stats
  static final _getstats = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_content_SyncResult_stats")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>();
  SyncStats get stats => SyncStats.fromRef(_getstats(reference));

  /// from: public final boolean syncAlreadyInProgress
  static final _getsyncAlreadyInProgress = jlookup<
          ffi.NativeFunction<
              ffi.Uint8 Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_content_SyncResult_syncAlreadyInProgress")
      .asFunction<
          int Function(
    ffi.Pointer<ffi.Void>,
  )>();
  bool get syncAlreadyInProgress => _getsyncAlreadyInProgress(reference) != 0;

  /// from: public boolean tooManyDeletions
  static final _gettooManyDeletions = jlookup<
          ffi.NativeFunction<
              ffi.Uint8 Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_content_SyncResult_tooManyDeletions")
      .asFunction<
          int Function(
    ffi.Pointer<ffi.Void>,
  )>();
  bool get tooManyDeletions => _gettooManyDeletions(reference) != 0;
  static final _settooManyDeletions = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Uint8)>>(
          "set_android_content_SyncResult_tooManyDeletions")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();
  set tooManyDeletions(bool value) =>
      _settooManyDeletions(reference, value ? 1 : 0);

  /// from: public boolean tooManyRetries
  static final _gettooManyRetries = jlookup<
          ffi.NativeFunction<
              ffi.Uint8 Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_content_SyncResult_tooManyRetries")
      .asFunction<
          int Function(
    ffi.Pointer<ffi.Void>,
  )>();
  bool get tooManyRetries => _gettooManyRetries(reference) != 0;
  static final _settooManyRetries = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  ffi.Uint8)>>("set_android_content_SyncResult_tooManyRetries")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();
  set tooManyRetries(bool value) =>
      _settooManyRetries(reference, value ? 1 : 0);

  static final _ctor =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "android_content_SyncResult_new")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();

  /// from: public void <init>()
  SyncResult() : super.fromRef(_ctor());

  static final _hasHardError =
      jlookup<ffi.NativeFunction<ffi.Uint8 Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_SyncResult_hasHardError")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public boolean hasHardError()
  bool hasHardError() => _hasHardError(reference) != 0;

  static final _hasSoftError =
      jlookup<ffi.NativeFunction<ffi.Uint8 Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_SyncResult_hasSoftError")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public boolean hasSoftError()
  bool hasSoftError() => _hasSoftError(reference) != 0;

  static final _hasError =
      jlookup<ffi.NativeFunction<ffi.Uint8 Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_SyncResult_hasError")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public boolean hasError()
  bool hasError() => _hasError(reference) != 0;

  static final _madeSomeProgress =
      jlookup<ffi.NativeFunction<ffi.Uint8 Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_SyncResult_madeSomeProgress")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public boolean madeSomeProgress()
  bool madeSomeProgress() => _madeSomeProgress(reference) != 0;

  static final _clear =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_SyncResult_clear")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void clear()
  void clear() => _clear(reference);

  static final _describeContents =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_SyncResult_describeContents")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int describeContents()
  int describeContents() => _describeContents(reference);

  static final _writeToParcel = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_content_SyncResult_writeToParcel")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public void writeToParcel(android.os.Parcel parcel, int flags)
  void writeToParcel(jni.JlObject parcel, int flags) =>
      _writeToParcel(reference, parcel.reference, flags);

  static final _toString_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_SyncResult_toString_1")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.String toString()
  jni.JlString toString_1() => jni.JlString.fromRef(_toString_1(reference));

  static final _toDebugString = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_SyncResult_toDebugString")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.String toDebugString()
  jni.JlString toDebugString() =>
      jni.JlString.fromRef(_toDebugString(reference));
}

class ContentProviderClient extends jni.JlObject {
  ContentProviderClient.fromRef(ffi.Pointer<ffi.Void> ref) : super.fromRef(ref);

  static final _ctor =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "android_content_ContentProviderClient_new")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();

  /// from: void <init>()
  ContentProviderClient() : super.fromRef(_ctor());

  static final _query = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>)>>(
          "android_content_ContentProviderClient_query")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public android.database.Cursor query(android.net.Uri url, java.lang.String[] projection, java.lang.String selection, java.lang.String[] selectionArgs, java.lang.String sortOrder)
  jni.JlObject query(
          jni.JlObject url,
          jni.JlObject projection,
          jni.JlString selection,
          jni.JlObject selectionArgs,
          jni.JlString sortOrder) =>
      jni.JlObject.fromRef(_query(
          reference,
          url.reference,
          projection.reference,
          selection.reference,
          selectionArgs.reference,
          sortOrder.reference));

  static final _query_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>)>>(
          "android_content_ContentProviderClient_query_1")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public android.database.Cursor query(android.net.Uri uri, java.lang.String[] projection, java.lang.String selection, java.lang.String[] selectionArgs, java.lang.String sortOrder, android.os.CancellationSignal cancellationSignal)
  jni.JlObject query_1(
          jni.JlObject uri,
          jni.JlObject projection,
          jni.JlString selection,
          jni.JlObject selectionArgs,
          jni.JlString sortOrder,
          jni.JlObject cancellationSignal) =>
      jni.JlObject.fromRef(_query_1(
          reference,
          uri.reference,
          projection.reference,
          selection.reference,
          selectionArgs.reference,
          sortOrder.reference,
          cancellationSignal.reference));

  static final _query_2 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>)>>(
          "android_content_ContentProviderClient_query_2")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public android.database.Cursor query(android.net.Uri uri, java.lang.String[] projection, android.os.Bundle queryArgs, android.os.CancellationSignal cancellationSignal)
  jni.JlObject query_2(jni.JlObject uri, jni.JlObject projection,
          jni.JlObject queryArgs, jni.JlObject cancellationSignal) =>
      jni.JlObject.fromRef(_query_2(
          reference,
          uri.reference,
          projection.reference,
          queryArgs.reference,
          cancellationSignal.reference));

  static final _getType = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_ContentProviderClient_getType")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.String getType(android.net.Uri url)
  jni.JlString getType(jni.JlObject url) =>
      jni.JlString.fromRef(_getType(reference, url.reference));

  static final _getStreamTypes = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_ContentProviderClient_getStreamTypes")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.String[] getStreamTypes(android.net.Uri url, java.lang.String mimeTypeFilter)
  jni.JlObject getStreamTypes(jni.JlObject url, jni.JlString mimeTypeFilter) =>
      jni.JlObject.fromRef(
          _getStreamTypes(reference, url.reference, mimeTypeFilter.reference));

  static final _canonicalize = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_ContentProviderClient_canonicalize")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public final android.net.Uri canonicalize(android.net.Uri url)
  jni.JlObject canonicalize(jni.JlObject url) =>
      jni.JlObject.fromRef(_canonicalize(reference, url.reference));

  static final _uncanonicalize = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_ContentProviderClient_uncanonicalize")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public final android.net.Uri uncanonicalize(android.net.Uri url)
  jni.JlObject uncanonicalize(jni.JlObject url) =>
      jni.JlObject.fromRef(_uncanonicalize(reference, url.reference));

  static final _refresh = jlookup<
              ffi.NativeFunction<
                  ffi.Uint8 Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>)>>(
          "android_content_ContentProviderClient_refresh")
      .asFunction<
          int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public boolean refresh(android.net.Uri url, android.os.Bundle args, android.os.CancellationSignal cancellationSignal)
  bool refresh(jni.JlObject url, jni.JlObject args,
          jni.JlObject cancellationSignal) =>
      _refresh(reference, url.reference, args.reference,
          cancellationSignal.reference) !=
      0;

  static final _insert = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_ContentProviderClient_insert")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.net.Uri insert(android.net.Uri url, android.content.ContentValues initialValues)
  jni.JlObject insert(jni.JlObject url, ContentValues initialValues) =>
      jni.JlObject.fromRef(
          _insert(reference, url.reference, initialValues.reference));

  static final _bulkInsert = jlookup<
              ffi.NativeFunction<
                  ffi.Int32 Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_ContentProviderClient_bulkInsert")
      .asFunction<
          int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public int bulkInsert(android.net.Uri url, android.content.ContentValues[] initialValues)
  int bulkInsert(jni.JlObject url, jni.JlObject initialValues) =>
      _bulkInsert(reference, url.reference, initialValues.reference);

  static final _delete_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Int32 Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>)>>(
          "android_content_ContentProviderClient_delete_1")
      .asFunction<
          int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public int delete(android.net.Uri url, java.lang.String selection, java.lang.String[] selectionArgs)
  int delete_1(jni.JlObject url, jni.JlString selection,
          jni.JlObject selectionArgs) =>
      _delete_1(reference, url.reference, selection.reference,
          selectionArgs.reference);

  static final _update = jlookup<
              ffi.NativeFunction<
                  ffi.Int32 Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>)>>(
          "android_content_ContentProviderClient_update")
      .asFunction<
          int Function(
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public int update(android.net.Uri url, android.content.ContentValues values, java.lang.String selection, java.lang.String[] selectionArgs)
  int update(jni.JlObject url, ContentValues values, jni.JlString selection,
          jni.JlObject selectionArgs) =>
      _update(reference, url.reference, values.reference, selection.reference,
          selectionArgs.reference);

  static final _openFile = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_ContentProviderClient_openFile")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.os.ParcelFileDescriptor openFile(android.net.Uri url, java.lang.String mode)
  jni.JlObject openFile(jni.JlObject url, jni.JlString mode) =>
      jni.JlObject.fromRef(_openFile(reference, url.reference, mode.reference));

  static final _openFile_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>)>>(
          "android_content_ContentProviderClient_openFile_1")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public android.os.ParcelFileDescriptor openFile(android.net.Uri url, java.lang.String mode, android.os.CancellationSignal signal)
  jni.JlObject openFile_1(
          jni.JlObject url, jni.JlString mode, jni.JlObject signal) =>
      jni.JlObject.fromRef(_openFile_1(
          reference, url.reference, mode.reference, signal.reference));

  static final _openAssetFile = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_ContentProviderClient_openAssetFile")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.content.res.AssetFileDescriptor openAssetFile(android.net.Uri url, java.lang.String mode)
  res.AssetFileDescriptor openAssetFile(jni.JlObject url, jni.JlString mode) =>
      res.AssetFileDescriptor.fromRef(
          _openAssetFile(reference, url.reference, mode.reference));

  static final _openAssetFile_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>)>>(
          "android_content_ContentProviderClient_openAssetFile_1")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public android.content.res.AssetFileDescriptor openAssetFile(android.net.Uri url, java.lang.String mode, android.os.CancellationSignal signal)
  res.AssetFileDescriptor openAssetFile_1(
          jni.JlObject url, jni.JlString mode, jni.JlObject signal) =>
      res.AssetFileDescriptor.fromRef(_openAssetFile_1(
          reference, url.reference, mode.reference, signal.reference));

  static final _openTypedAssetFileDescriptor = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>)>>(
          "android_content_ContentProviderClient_openTypedAssetFileDescriptor")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public final android.content.res.AssetFileDescriptor openTypedAssetFileDescriptor(android.net.Uri uri, java.lang.String mimeType, android.os.Bundle opts)
  res.AssetFileDescriptor openTypedAssetFileDescriptor(
          jni.JlObject uri, jni.JlString mimeType, jni.JlObject opts) =>
      res.AssetFileDescriptor.fromRef(_openTypedAssetFileDescriptor(
          reference, uri.reference, mimeType.reference, opts.reference));

  static final _openTypedAssetFileDescriptor_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>)>>(
          "android_content_ContentProviderClient_openTypedAssetFileDescriptor_1")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public final android.content.res.AssetFileDescriptor openTypedAssetFileDescriptor(android.net.Uri uri, java.lang.String mimeType, android.os.Bundle opts, android.os.CancellationSignal signal)
  res.AssetFileDescriptor openTypedAssetFileDescriptor_1(jni.JlObject uri,
          jni.JlString mimeType, jni.JlObject opts, jni.JlObject signal) =>
      res.AssetFileDescriptor.fromRef(_openTypedAssetFileDescriptor_1(reference,
          uri.reference, mimeType.reference, opts.reference, signal.reference));

  static final _applyBatch = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_ContentProviderClient_applyBatch")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.content.ContentProviderResult[] applyBatch(java.util.ArrayList<android.content.ContentProviderOperation> operations)
  jni.JlObject applyBatch(jni.JlObject operations) =>
      jni.JlObject.fromRef(_applyBatch(reference, operations.reference));

  static final _call = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>)>>(
          "android_content_ContentProviderClient_call")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public android.os.Bundle call(java.lang.String method, java.lang.String arg, android.os.Bundle extras)
  jni.JlObject call(
          jni.JlString method, jni.JlString arg, jni.JlObject extras) =>
      jni.JlObject.fromRef(
          _call(reference, method.reference, arg.reference, extras.reference));

  static final _close =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_ContentProviderClient_close")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void close()
  void close() => _close(reference);

  static final _release =
      jlookup<ffi.NativeFunction<ffi.Uint8 Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_ContentProviderClient_release")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public boolean release()
  bool release() => _release(reference) != 0;

  static final _finalize =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_ContentProviderClient_finalize")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: protected void finalize()
  void finalize() => _finalize(reference);

  static final _getLocalContentProvider = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_ContentProviderClient_getLocalContentProvider")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.content.ContentProvider getLocalContentProvider()
  ContentProvider getLocalContentProvider() =>
      ContentProvider.fromRef(_getLocalContentProvider(reference));
}

class Intent extends jni.JlObject {
  Intent.fromRef(ffi.Pointer<ffi.Void> ref) : super.fromRef(ref);

  /// from: static public final java.lang.String ACTION_AIRPLANE_MODE_CHANGED
  static const ACTION_AIRPLANE_MODE_CHANGED =
      "android.intent.action.AIRPLANE_MODE";

  /// from: static public final java.lang.String ACTION_ALL_APPS
  static const ACTION_ALL_APPS = "android.intent.action.ALL_APPS";

  /// from: static public final java.lang.String ACTION_ANSWER
  static const ACTION_ANSWER = "android.intent.action.ANSWER";

  /// from: static public final java.lang.String ACTION_APPLICATION_PREFERENCES
  static const ACTION_APPLICATION_PREFERENCES =
      "android.intent.action.APPLICATION_PREFERENCES";

  /// from: static public final java.lang.String ACTION_APPLICATION_RESTRICTIONS_CHANGED
  static const ACTION_APPLICATION_RESTRICTIONS_CHANGED =
      "android.intent.action.APPLICATION_RESTRICTIONS_CHANGED";

  /// from: static public final java.lang.String ACTION_APP_ERROR
  static const ACTION_APP_ERROR = "android.intent.action.APP_ERROR";

  /// from: static public final java.lang.String ACTION_ASSIST
  static const ACTION_ASSIST = "android.intent.action.ASSIST";

  /// from: static public final java.lang.String ACTION_ATTACH_DATA
  static const ACTION_ATTACH_DATA = "android.intent.action.ATTACH_DATA";

  /// from: static public final java.lang.String ACTION_BATTERY_CHANGED
  static const ACTION_BATTERY_CHANGED = "android.intent.action.BATTERY_CHANGED";

  /// from: static public final java.lang.String ACTION_BATTERY_LOW
  static const ACTION_BATTERY_LOW = "android.intent.action.BATTERY_LOW";

  /// from: static public final java.lang.String ACTION_BATTERY_OKAY
  static const ACTION_BATTERY_OKAY = "android.intent.action.BATTERY_OKAY";

  /// from: static public final java.lang.String ACTION_BOOT_COMPLETED
  static const ACTION_BOOT_COMPLETED = "android.intent.action.BOOT_COMPLETED";

  /// from: static public final java.lang.String ACTION_BUG_REPORT
  static const ACTION_BUG_REPORT = "android.intent.action.BUG_REPORT";

  /// from: static public final java.lang.String ACTION_CALL
  static const ACTION_CALL = "android.intent.action.CALL";

  /// from: static public final java.lang.String ACTION_CALL_BUTTON
  static const ACTION_CALL_BUTTON = "android.intent.action.CALL_BUTTON";

  /// from: static public final java.lang.String ACTION_CAMERA_BUTTON
  static const ACTION_CAMERA_BUTTON = "android.intent.action.CAMERA_BUTTON";

  /// from: static public final java.lang.String ACTION_CARRIER_SETUP
  static const ACTION_CARRIER_SETUP = "android.intent.action.CARRIER_SETUP";

  /// from: static public final java.lang.String ACTION_CHOOSER
  static const ACTION_CHOOSER = "android.intent.action.CHOOSER";

  /// from: static public final java.lang.String ACTION_CLOSE_SYSTEM_DIALOGS
  static const ACTION_CLOSE_SYSTEM_DIALOGS =
      "android.intent.action.CLOSE_SYSTEM_DIALOGS";

  /// from: static public final java.lang.String ACTION_CONFIGURATION_CHANGED
  static const ACTION_CONFIGURATION_CHANGED =
      "android.intent.action.CONFIGURATION_CHANGED";

  /// from: static public final java.lang.String ACTION_CREATE_DOCUMENT
  static const ACTION_CREATE_DOCUMENT = "android.intent.action.CREATE_DOCUMENT";

  /// from: static public final java.lang.String ACTION_CREATE_SHORTCUT
  static const ACTION_CREATE_SHORTCUT = "android.intent.action.CREATE_SHORTCUT";

  /// from: static public final java.lang.String ACTION_DATE_CHANGED
  static const ACTION_DATE_CHANGED = "android.intent.action.DATE_CHANGED";

  /// from: static public final java.lang.String ACTION_DEFAULT
  static const ACTION_DEFAULT = "android.intent.action.VIEW";

  /// from: static public final java.lang.String ACTION_DELETE
  static const ACTION_DELETE = "android.intent.action.DELETE";

  /// from: static public final java.lang.String ACTION_DEVICE_STORAGE_LOW
  static const ACTION_DEVICE_STORAGE_LOW =
      "android.intent.action.DEVICE_STORAGE_LOW";

  /// from: static public final java.lang.String ACTION_DEVICE_STORAGE_OK
  static const ACTION_DEVICE_STORAGE_OK =
      "android.intent.action.DEVICE_STORAGE_OK";

  /// from: static public final java.lang.String ACTION_DIAL
  static const ACTION_DIAL = "android.intent.action.DIAL";

  /// from: static public final java.lang.String ACTION_DOCK_EVENT
  static const ACTION_DOCK_EVENT = "android.intent.action.DOCK_EVENT";

  /// from: static public final java.lang.String ACTION_DREAMING_STARTED
  static const ACTION_DREAMING_STARTED =
      "android.intent.action.DREAMING_STARTED";

  /// from: static public final java.lang.String ACTION_DREAMING_STOPPED
  static const ACTION_DREAMING_STOPPED =
      "android.intent.action.DREAMING_STOPPED";

  /// from: static public final java.lang.String ACTION_EDIT
  static const ACTION_EDIT = "android.intent.action.EDIT";

  /// from: static public final java.lang.String ACTION_EXTERNAL_APPLICATIONS_AVAILABLE
  static const ACTION_EXTERNAL_APPLICATIONS_AVAILABLE =
      "android.intent.action.EXTERNAL_APPLICATIONS_AVAILABLE";

  /// from: static public final java.lang.String ACTION_EXTERNAL_APPLICATIONS_UNAVAILABLE
  static const ACTION_EXTERNAL_APPLICATIONS_UNAVAILABLE =
      "android.intent.action.EXTERNAL_APPLICATIONS_UNAVAILABLE";

  /// from: static public final java.lang.String ACTION_FACTORY_TEST
  static const ACTION_FACTORY_TEST = "android.intent.action.FACTORY_TEST";

  /// from: static public final java.lang.String ACTION_GET_CONTENT
  static const ACTION_GET_CONTENT = "android.intent.action.GET_CONTENT";

  /// from: static public final java.lang.String ACTION_GET_RESTRICTION_ENTRIES
  static const ACTION_GET_RESTRICTION_ENTRIES =
      "android.intent.action.GET_RESTRICTION_ENTRIES";

  /// from: static public final java.lang.String ACTION_GTALK_SERVICE_CONNECTED
  static const ACTION_GTALK_SERVICE_CONNECTED =
      "android.intent.action.GTALK_CONNECTED";

  /// from: static public final java.lang.String ACTION_GTALK_SERVICE_DISCONNECTED
  static const ACTION_GTALK_SERVICE_DISCONNECTED =
      "android.intent.action.GTALK_DISCONNECTED";

  /// from: static public final java.lang.String ACTION_HEADSET_PLUG
  static const ACTION_HEADSET_PLUG = "android.intent.action.HEADSET_PLUG";

  /// from: static public final java.lang.String ACTION_INPUT_METHOD_CHANGED
  static const ACTION_INPUT_METHOD_CHANGED =
      "android.intent.action.INPUT_METHOD_CHANGED";

  /// from: static public final java.lang.String ACTION_INSERT
  static const ACTION_INSERT = "android.intent.action.INSERT";

  /// from: static public final java.lang.String ACTION_INSERT_OR_EDIT
  static const ACTION_INSERT_OR_EDIT = "android.intent.action.INSERT_OR_EDIT";

  /// from: static public final java.lang.String ACTION_INSTALL_FAILURE
  static const ACTION_INSTALL_FAILURE = "android.intent.action.INSTALL_FAILURE";

  /// from: static public final java.lang.String ACTION_INSTALL_PACKAGE
  static const ACTION_INSTALL_PACKAGE = "android.intent.action.INSTALL_PACKAGE";

  /// from: static public final java.lang.String ACTION_LOCALE_CHANGED
  static const ACTION_LOCALE_CHANGED = "android.intent.action.LOCALE_CHANGED";

  /// from: static public final java.lang.String ACTION_LOCKED_BOOT_COMPLETED
  static const ACTION_LOCKED_BOOT_COMPLETED =
      "android.intent.action.LOCKED_BOOT_COMPLETED";

  /// from: static public final java.lang.String ACTION_MAIN
  static const ACTION_MAIN = "android.intent.action.MAIN";

  /// from: static public final java.lang.String ACTION_MANAGED_PROFILE_ADDED
  static const ACTION_MANAGED_PROFILE_ADDED =
      "android.intent.action.MANAGED_PROFILE_ADDED";

  /// from: static public final java.lang.String ACTION_MANAGED_PROFILE_AVAILABLE
  static const ACTION_MANAGED_PROFILE_AVAILABLE =
      "android.intent.action.MANAGED_PROFILE_AVAILABLE";

  /// from: static public final java.lang.String ACTION_MANAGED_PROFILE_REMOVED
  static const ACTION_MANAGED_PROFILE_REMOVED =
      "android.intent.action.MANAGED_PROFILE_REMOVED";

  /// from: static public final java.lang.String ACTION_MANAGED_PROFILE_UNAVAILABLE
  static const ACTION_MANAGED_PROFILE_UNAVAILABLE =
      "android.intent.action.MANAGED_PROFILE_UNAVAILABLE";

  /// from: static public final java.lang.String ACTION_MANAGED_PROFILE_UNLOCKED
  static const ACTION_MANAGED_PROFILE_UNLOCKED =
      "android.intent.action.MANAGED_PROFILE_UNLOCKED";

  /// from: static public final java.lang.String ACTION_MANAGE_NETWORK_USAGE
  static const ACTION_MANAGE_NETWORK_USAGE =
      "android.intent.action.MANAGE_NETWORK_USAGE";

  /// from: static public final java.lang.String ACTION_MANAGE_PACKAGE_STORAGE
  static const ACTION_MANAGE_PACKAGE_STORAGE =
      "android.intent.action.MANAGE_PACKAGE_STORAGE";

  /// from: static public final java.lang.String ACTION_MEDIA_BAD_REMOVAL
  static const ACTION_MEDIA_BAD_REMOVAL =
      "android.intent.action.MEDIA_BAD_REMOVAL";

  /// from: static public final java.lang.String ACTION_MEDIA_BUTTON
  static const ACTION_MEDIA_BUTTON = "android.intent.action.MEDIA_BUTTON";

  /// from: static public final java.lang.String ACTION_MEDIA_CHECKING
  static const ACTION_MEDIA_CHECKING = "android.intent.action.MEDIA_CHECKING";

  /// from: static public final java.lang.String ACTION_MEDIA_EJECT
  static const ACTION_MEDIA_EJECT = "android.intent.action.MEDIA_EJECT";

  /// from: static public final java.lang.String ACTION_MEDIA_MOUNTED
  static const ACTION_MEDIA_MOUNTED = "android.intent.action.MEDIA_MOUNTED";

  /// from: static public final java.lang.String ACTION_MEDIA_NOFS
  static const ACTION_MEDIA_NOFS = "android.intent.action.MEDIA_NOFS";

  /// from: static public final java.lang.String ACTION_MEDIA_REMOVED
  static const ACTION_MEDIA_REMOVED = "android.intent.action.MEDIA_REMOVED";

  /// from: static public final java.lang.String ACTION_MEDIA_SCANNER_FINISHED
  static const ACTION_MEDIA_SCANNER_FINISHED =
      "android.intent.action.MEDIA_SCANNER_FINISHED";

  /// from: static public final java.lang.String ACTION_MEDIA_SCANNER_SCAN_FILE
  static const ACTION_MEDIA_SCANNER_SCAN_FILE =
      "android.intent.action.MEDIA_SCANNER_SCAN_FILE";

  /// from: static public final java.lang.String ACTION_MEDIA_SCANNER_STARTED
  static const ACTION_MEDIA_SCANNER_STARTED =
      "android.intent.action.MEDIA_SCANNER_STARTED";

  /// from: static public final java.lang.String ACTION_MEDIA_SHARED
  static const ACTION_MEDIA_SHARED = "android.intent.action.MEDIA_SHARED";

  /// from: static public final java.lang.String ACTION_MEDIA_UNMOUNTABLE
  static const ACTION_MEDIA_UNMOUNTABLE =
      "android.intent.action.MEDIA_UNMOUNTABLE";

  /// from: static public final java.lang.String ACTION_MEDIA_UNMOUNTED
  static const ACTION_MEDIA_UNMOUNTED = "android.intent.action.MEDIA_UNMOUNTED";

  /// from: static public final java.lang.String ACTION_MY_PACKAGE_REPLACED
  static const ACTION_MY_PACKAGE_REPLACED =
      "android.intent.action.MY_PACKAGE_REPLACED";

  /// from: static public final java.lang.String ACTION_MY_PACKAGE_SUSPENDED
  static const ACTION_MY_PACKAGE_SUSPENDED =
      "android.intent.action.MY_PACKAGE_SUSPENDED";

  /// from: static public final java.lang.String ACTION_MY_PACKAGE_UNSUSPENDED
  static const ACTION_MY_PACKAGE_UNSUSPENDED =
      "android.intent.action.MY_PACKAGE_UNSUSPENDED";

  /// from: static public final java.lang.String ACTION_NEW_OUTGOING_CALL
  static const ACTION_NEW_OUTGOING_CALL =
      "android.intent.action.NEW_OUTGOING_CALL";

  /// from: static public final java.lang.String ACTION_OPEN_DOCUMENT
  static const ACTION_OPEN_DOCUMENT = "android.intent.action.OPEN_DOCUMENT";

  /// from: static public final java.lang.String ACTION_OPEN_DOCUMENT_TREE
  static const ACTION_OPEN_DOCUMENT_TREE =
      "android.intent.action.OPEN_DOCUMENT_TREE";

  /// from: static public final java.lang.String ACTION_PACKAGES_SUSPENDED
  static const ACTION_PACKAGES_SUSPENDED =
      "android.intent.action.PACKAGES_SUSPENDED";

  /// from: static public final java.lang.String ACTION_PACKAGES_UNSUSPENDED
  static const ACTION_PACKAGES_UNSUSPENDED =
      "android.intent.action.PACKAGES_UNSUSPENDED";

  /// from: static public final java.lang.String ACTION_PACKAGE_ADDED
  static const ACTION_PACKAGE_ADDED = "android.intent.action.PACKAGE_ADDED";

  /// from: static public final java.lang.String ACTION_PACKAGE_CHANGED
  static const ACTION_PACKAGE_CHANGED = "android.intent.action.PACKAGE_CHANGED";

  /// from: static public final java.lang.String ACTION_PACKAGE_DATA_CLEARED
  static const ACTION_PACKAGE_DATA_CLEARED =
      "android.intent.action.PACKAGE_DATA_CLEARED";

  /// from: static public final java.lang.String ACTION_PACKAGE_FIRST_LAUNCH
  static const ACTION_PACKAGE_FIRST_LAUNCH =
      "android.intent.action.PACKAGE_FIRST_LAUNCH";

  /// from: static public final java.lang.String ACTION_PACKAGE_FULLY_REMOVED
  static const ACTION_PACKAGE_FULLY_REMOVED =
      "android.intent.action.PACKAGE_FULLY_REMOVED";

  /// from: static public final java.lang.String ACTION_PACKAGE_INSTALL
  static const ACTION_PACKAGE_INSTALL = "android.intent.action.PACKAGE_INSTALL";

  /// from: static public final java.lang.String ACTION_PACKAGE_NEEDS_VERIFICATION
  static const ACTION_PACKAGE_NEEDS_VERIFICATION =
      "android.intent.action.PACKAGE_NEEDS_VERIFICATION";

  /// from: static public final java.lang.String ACTION_PACKAGE_REMOVED
  static const ACTION_PACKAGE_REMOVED = "android.intent.action.PACKAGE_REMOVED";

  /// from: static public final java.lang.String ACTION_PACKAGE_REPLACED
  static const ACTION_PACKAGE_REPLACED =
      "android.intent.action.PACKAGE_REPLACED";

  /// from: static public final java.lang.String ACTION_PACKAGE_RESTARTED
  static const ACTION_PACKAGE_RESTARTED =
      "android.intent.action.PACKAGE_RESTARTED";

  /// from: static public final java.lang.String ACTION_PACKAGE_VERIFIED
  static const ACTION_PACKAGE_VERIFIED =
      "android.intent.action.PACKAGE_VERIFIED";

  /// from: static public final java.lang.String ACTION_PASTE
  static const ACTION_PASTE = "android.intent.action.PASTE";

  /// from: static public final java.lang.String ACTION_PICK
  static const ACTION_PICK = "android.intent.action.PICK";

  /// from: static public final java.lang.String ACTION_PICK_ACTIVITY
  static const ACTION_PICK_ACTIVITY = "android.intent.action.PICK_ACTIVITY";

  /// from: static public final java.lang.String ACTION_POWER_CONNECTED
  static const ACTION_POWER_CONNECTED =
      "android.intent.action.ACTION_POWER_CONNECTED";

  /// from: static public final java.lang.String ACTION_POWER_DISCONNECTED
  static const ACTION_POWER_DISCONNECTED =
      "android.intent.action.ACTION_POWER_DISCONNECTED";

  /// from: static public final java.lang.String ACTION_POWER_USAGE_SUMMARY
  static const ACTION_POWER_USAGE_SUMMARY =
      "android.intent.action.POWER_USAGE_SUMMARY";

  /// from: static public final java.lang.String ACTION_PROCESS_TEXT
  static const ACTION_PROCESS_TEXT = "android.intent.action.PROCESS_TEXT";

  /// from: static public final java.lang.String ACTION_PROVIDER_CHANGED
  static const ACTION_PROVIDER_CHANGED =
      "android.intent.action.PROVIDER_CHANGED";

  /// from: static public final java.lang.String ACTION_QUICK_CLOCK
  static const ACTION_QUICK_CLOCK = "android.intent.action.QUICK_CLOCK";

  /// from: static public final java.lang.String ACTION_QUICK_VIEW
  static const ACTION_QUICK_VIEW = "android.intent.action.QUICK_VIEW";

  /// from: static public final java.lang.String ACTION_REBOOT
  static const ACTION_REBOOT = "android.intent.action.REBOOT";

  /// from: static public final java.lang.String ACTION_RUN
  static const ACTION_RUN = "android.intent.action.RUN";

  /// from: static public final java.lang.String ACTION_SCREEN_OFF
  static const ACTION_SCREEN_OFF = "android.intent.action.SCREEN_OFF";

  /// from: static public final java.lang.String ACTION_SCREEN_ON
  static const ACTION_SCREEN_ON = "android.intent.action.SCREEN_ON";

  /// from: static public final java.lang.String ACTION_SEARCH
  static const ACTION_SEARCH = "android.intent.action.SEARCH";

  /// from: static public final java.lang.String ACTION_SEARCH_LONG_PRESS
  static const ACTION_SEARCH_LONG_PRESS =
      "android.intent.action.SEARCH_LONG_PRESS";

  /// from: static public final java.lang.String ACTION_SEND
  static const ACTION_SEND = "android.intent.action.SEND";

  /// from: static public final java.lang.String ACTION_SENDTO
  static const ACTION_SENDTO = "android.intent.action.SENDTO";

  /// from: static public final java.lang.String ACTION_SEND_MULTIPLE
  static const ACTION_SEND_MULTIPLE = "android.intent.action.SEND_MULTIPLE";

  /// from: static public final java.lang.String ACTION_SET_WALLPAPER
  static const ACTION_SET_WALLPAPER = "android.intent.action.SET_WALLPAPER";

  /// from: static public final java.lang.String ACTION_SHOW_APP_INFO
  static const ACTION_SHOW_APP_INFO = "android.intent.action.SHOW_APP_INFO";

  /// from: static public final java.lang.String ACTION_SHUTDOWN
  static const ACTION_SHUTDOWN = "android.intent.action.ACTION_SHUTDOWN";

  /// from: static public final java.lang.String ACTION_SYNC
  static const ACTION_SYNC = "android.intent.action.SYNC";

  /// from: static public final java.lang.String ACTION_SYSTEM_TUTORIAL
  static const ACTION_SYSTEM_TUTORIAL = "android.intent.action.SYSTEM_TUTORIAL";

  /// from: static public final java.lang.String ACTION_TIMEZONE_CHANGED
  static const ACTION_TIMEZONE_CHANGED =
      "android.intent.action.TIMEZONE_CHANGED";

  /// from: static public final java.lang.String ACTION_TIME_CHANGED
  static const ACTION_TIME_CHANGED = "android.intent.action.TIME_SET";

  /// from: static public final java.lang.String ACTION_TIME_TICK
  static const ACTION_TIME_TICK = "android.intent.action.TIME_TICK";

  /// from: static public final java.lang.String ACTION_UID_REMOVED
  static const ACTION_UID_REMOVED = "android.intent.action.UID_REMOVED";

  /// from: static public final java.lang.String ACTION_UMS_CONNECTED
  static const ACTION_UMS_CONNECTED = "android.intent.action.UMS_CONNECTED";

  /// from: static public final java.lang.String ACTION_UMS_DISCONNECTED
  static const ACTION_UMS_DISCONNECTED =
      "android.intent.action.UMS_DISCONNECTED";

  /// from: static public final java.lang.String ACTION_UNINSTALL_PACKAGE
  static const ACTION_UNINSTALL_PACKAGE =
      "android.intent.action.UNINSTALL_PACKAGE";

  /// from: static public final java.lang.String ACTION_USER_BACKGROUND
  static const ACTION_USER_BACKGROUND = "android.intent.action.USER_BACKGROUND";

  /// from: static public final java.lang.String ACTION_USER_FOREGROUND
  static const ACTION_USER_FOREGROUND = "android.intent.action.USER_FOREGROUND";

  /// from: static public final java.lang.String ACTION_USER_INITIALIZE
  static const ACTION_USER_INITIALIZE = "android.intent.action.USER_INITIALIZE";

  /// from: static public final java.lang.String ACTION_USER_PRESENT
  static const ACTION_USER_PRESENT = "android.intent.action.USER_PRESENT";

  /// from: static public final java.lang.String ACTION_USER_UNLOCKED
  static const ACTION_USER_UNLOCKED = "android.intent.action.USER_UNLOCKED";

  /// from: static public final java.lang.String ACTION_VIEW
  static const ACTION_VIEW = "android.intent.action.VIEW";

  /// from: static public final java.lang.String ACTION_VOICE_COMMAND
  static const ACTION_VOICE_COMMAND = "android.intent.action.VOICE_COMMAND";

  /// from: static public final java.lang.String ACTION_WALLPAPER_CHANGED
  static const ACTION_WALLPAPER_CHANGED =
      "android.intent.action.WALLPAPER_CHANGED";

  /// from: static public final java.lang.String ACTION_WEB_SEARCH
  static const ACTION_WEB_SEARCH = "android.intent.action.WEB_SEARCH";

  /// from: static public final java.lang.String CATEGORY_ALTERNATIVE
  static const CATEGORY_ALTERNATIVE = "android.intent.category.ALTERNATIVE";

  /// from: static public final java.lang.String CATEGORY_APP_BROWSER
  static const CATEGORY_APP_BROWSER = "android.intent.category.APP_BROWSER";

  /// from: static public final java.lang.String CATEGORY_APP_CALCULATOR
  static const CATEGORY_APP_CALCULATOR =
      "android.intent.category.APP_CALCULATOR";

  /// from: static public final java.lang.String CATEGORY_APP_CALENDAR
  static const CATEGORY_APP_CALENDAR = "android.intent.category.APP_CALENDAR";

  /// from: static public final java.lang.String CATEGORY_APP_CONTACTS
  static const CATEGORY_APP_CONTACTS = "android.intent.category.APP_CONTACTS";

  /// from: static public final java.lang.String CATEGORY_APP_EMAIL
  static const CATEGORY_APP_EMAIL = "android.intent.category.APP_EMAIL";

  /// from: static public final java.lang.String CATEGORY_APP_GALLERY
  static const CATEGORY_APP_GALLERY = "android.intent.category.APP_GALLERY";

  /// from: static public final java.lang.String CATEGORY_APP_MAPS
  static const CATEGORY_APP_MAPS = "android.intent.category.APP_MAPS";

  /// from: static public final java.lang.String CATEGORY_APP_MARKET
  static const CATEGORY_APP_MARKET = "android.intent.category.APP_MARKET";

  /// from: static public final java.lang.String CATEGORY_APP_MESSAGING
  static const CATEGORY_APP_MESSAGING = "android.intent.category.APP_MESSAGING";

  /// from: static public final java.lang.String CATEGORY_APP_MUSIC
  static const CATEGORY_APP_MUSIC = "android.intent.category.APP_MUSIC";

  /// from: static public final java.lang.String CATEGORY_BROWSABLE
  static const CATEGORY_BROWSABLE = "android.intent.category.BROWSABLE";

  /// from: static public final java.lang.String CATEGORY_CAR_DOCK
  static const CATEGORY_CAR_DOCK = "android.intent.category.CAR_DOCK";

  /// from: static public final java.lang.String CATEGORY_CAR_MODE
  static const CATEGORY_CAR_MODE = "android.intent.category.CAR_MODE";

  /// from: static public final java.lang.String CATEGORY_DEFAULT
  static const CATEGORY_DEFAULT = "android.intent.category.DEFAULT";

  /// from: static public final java.lang.String CATEGORY_DESK_DOCK
  static const CATEGORY_DESK_DOCK = "android.intent.category.DESK_DOCK";

  /// from: static public final java.lang.String CATEGORY_DEVELOPMENT_PREFERENCE
  static const CATEGORY_DEVELOPMENT_PREFERENCE =
      "android.intent.category.DEVELOPMENT_PREFERENCE";

  /// from: static public final java.lang.String CATEGORY_EMBED
  static const CATEGORY_EMBED = "android.intent.category.EMBED";

  /// from: static public final java.lang.String CATEGORY_FRAMEWORK_INSTRUMENTATION_TEST
  static const CATEGORY_FRAMEWORK_INSTRUMENTATION_TEST =
      "android.intent.category.FRAMEWORK_INSTRUMENTATION_TEST";

  /// from: static public final java.lang.String CATEGORY_HE_DESK_DOCK
  static const CATEGORY_HE_DESK_DOCK = "android.intent.category.HE_DESK_DOCK";

  /// from: static public final java.lang.String CATEGORY_HOME
  static const CATEGORY_HOME = "android.intent.category.HOME";

  /// from: static public final java.lang.String CATEGORY_INFO
  static const CATEGORY_INFO = "android.intent.category.INFO";

  /// from: static public final java.lang.String CATEGORY_LAUNCHER
  static const CATEGORY_LAUNCHER = "android.intent.category.LAUNCHER";

  /// from: static public final java.lang.String CATEGORY_LEANBACK_LAUNCHER
  static const CATEGORY_LEANBACK_LAUNCHER =
      "android.intent.category.LEANBACK_LAUNCHER";

  /// from: static public final java.lang.String CATEGORY_LE_DESK_DOCK
  static const CATEGORY_LE_DESK_DOCK = "android.intent.category.LE_DESK_DOCK";

  /// from: static public final java.lang.String CATEGORY_MONKEY
  static const CATEGORY_MONKEY = "android.intent.category.MONKEY";

  /// from: static public final java.lang.String CATEGORY_OPENABLE
  static const CATEGORY_OPENABLE = "android.intent.category.OPENABLE";

  /// from: static public final java.lang.String CATEGORY_PREFERENCE
  static const CATEGORY_PREFERENCE = "android.intent.category.PREFERENCE";

  /// from: static public final java.lang.String CATEGORY_SAMPLE_CODE
  static const CATEGORY_SAMPLE_CODE = "android.intent.category.SAMPLE_CODE";

  /// from: static public final java.lang.String CATEGORY_SELECTED_ALTERNATIVE
  static const CATEGORY_SELECTED_ALTERNATIVE =
      "android.intent.category.SELECTED_ALTERNATIVE";

  /// from: static public final java.lang.String CATEGORY_TAB
  static const CATEGORY_TAB = "android.intent.category.TAB";

  /// from: static public final java.lang.String CATEGORY_TEST
  static const CATEGORY_TEST = "android.intent.category.TEST";

  /// from: static public final java.lang.String CATEGORY_TYPED_OPENABLE
  static const CATEGORY_TYPED_OPENABLE =
      "android.intent.category.TYPED_OPENABLE";

  /// from: static public final java.lang.String CATEGORY_UNIT_TEST
  static const CATEGORY_UNIT_TEST = "android.intent.category.UNIT_TEST";

  /// from: static public final java.lang.String CATEGORY_VOICE
  static const CATEGORY_VOICE = "android.intent.category.VOICE";

  /// from: static public final java.lang.String CATEGORY_VR_HOME
  static const CATEGORY_VR_HOME = "android.intent.category.VR_HOME";

  /// from: static public final android.os.Parcelable.Creator<android.content.Intent> CREATOR
  static final _getCREATOR =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "get_android_content_Intent_CREATOR")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();
  static jni.JlObject get CREATOR => jni.JlObject.fromRef(_getCREATOR());

  /// from: static public final java.lang.String EXTRA_ALARM_COUNT
  static const EXTRA_ALARM_COUNT = "android.intent.extra.ALARM_COUNT";

  /// from: static public final java.lang.String EXTRA_ALLOW_MULTIPLE
  static const EXTRA_ALLOW_MULTIPLE = "android.intent.extra.ALLOW_MULTIPLE";

  /// from: static public final java.lang.String EXTRA_ALLOW_REPLACE
  static const EXTRA_ALLOW_REPLACE = "android.intent.extra.ALLOW_REPLACE";

  /// from: static public final java.lang.String EXTRA_ALTERNATE_INTENTS
  static const EXTRA_ALTERNATE_INTENTS =
      "android.intent.extra.ALTERNATE_INTENTS";

  /// from: static public final java.lang.String EXTRA_ASSIST_CONTEXT
  static const EXTRA_ASSIST_CONTEXT = "android.intent.extra.ASSIST_CONTEXT";

  /// from: static public final java.lang.String EXTRA_ASSIST_INPUT_DEVICE_ID
  static const EXTRA_ASSIST_INPUT_DEVICE_ID =
      "android.intent.extra.ASSIST_INPUT_DEVICE_ID";

  /// from: static public final java.lang.String EXTRA_ASSIST_INPUT_HINT_KEYBOARD
  static const EXTRA_ASSIST_INPUT_HINT_KEYBOARD =
      "android.intent.extra.ASSIST_INPUT_HINT_KEYBOARD";

  /// from: static public final java.lang.String EXTRA_ASSIST_PACKAGE
  static const EXTRA_ASSIST_PACKAGE = "android.intent.extra.ASSIST_PACKAGE";

  /// from: static public final java.lang.String EXTRA_ASSIST_UID
  static const EXTRA_ASSIST_UID = "android.intent.extra.ASSIST_UID";

  /// from: static public final java.lang.String EXTRA_BCC
  static const EXTRA_BCC = "android.intent.extra.BCC";

  /// from: static public final java.lang.String EXTRA_BUG_REPORT
  static const EXTRA_BUG_REPORT = "android.intent.extra.BUG_REPORT";

  /// from: static public final java.lang.String EXTRA_CC
  static const EXTRA_CC = "android.intent.extra.CC";

  /// from: static public final java.lang.String EXTRA_CHANGED_COMPONENT_NAME
  static const EXTRA_CHANGED_COMPONENT_NAME =
      "android.intent.extra.changed_component_name";

  /// from: static public final java.lang.String EXTRA_CHANGED_COMPONENT_NAME_LIST
  static const EXTRA_CHANGED_COMPONENT_NAME_LIST =
      "android.intent.extra.changed_component_name_list";

  /// from: static public final java.lang.String EXTRA_CHANGED_PACKAGE_LIST
  static const EXTRA_CHANGED_PACKAGE_LIST =
      "android.intent.extra.changed_package_list";

  /// from: static public final java.lang.String EXTRA_CHANGED_UID_LIST
  static const EXTRA_CHANGED_UID_LIST = "android.intent.extra.changed_uid_list";

  /// from: static public final java.lang.String EXTRA_CHOOSER_REFINEMENT_INTENT_SENDER
  static const EXTRA_CHOOSER_REFINEMENT_INTENT_SENDER =
      "android.intent.extra.CHOOSER_REFINEMENT_INTENT_SENDER";

  /// from: static public final java.lang.String EXTRA_CHOOSER_TARGETS
  static const EXTRA_CHOOSER_TARGETS = "android.intent.extra.CHOOSER_TARGETS";

  /// from: static public final java.lang.String EXTRA_CHOSEN_COMPONENT
  static const EXTRA_CHOSEN_COMPONENT = "android.intent.extra.CHOSEN_COMPONENT";

  /// from: static public final java.lang.String EXTRA_CHOSEN_COMPONENT_INTENT_SENDER
  static const EXTRA_CHOSEN_COMPONENT_INTENT_SENDER =
      "android.intent.extra.CHOSEN_COMPONENT_INTENT_SENDER";

  /// from: static public final java.lang.String EXTRA_COMPONENT_NAME
  static const EXTRA_COMPONENT_NAME = "android.intent.extra.COMPONENT_NAME";

  /// from: static public final java.lang.String EXTRA_CONTENT_ANNOTATIONS
  static const EXTRA_CONTENT_ANNOTATIONS =
      "android.intent.extra.CONTENT_ANNOTATIONS";

  /// from: static public final java.lang.String EXTRA_DATA_REMOVED
  static const EXTRA_DATA_REMOVED = "android.intent.extra.DATA_REMOVED";

  /// from: static public final java.lang.String EXTRA_DOCK_STATE
  static const EXTRA_DOCK_STATE = "android.intent.extra.DOCK_STATE";

  /// from: static public final int EXTRA_DOCK_STATE_CAR
  static const EXTRA_DOCK_STATE_CAR = 2;

  /// from: static public final int EXTRA_DOCK_STATE_DESK
  static const EXTRA_DOCK_STATE_DESK = 1;

  /// from: static public final int EXTRA_DOCK_STATE_HE_DESK
  static const EXTRA_DOCK_STATE_HE_DESK = 4;

  /// from: static public final int EXTRA_DOCK_STATE_LE_DESK
  static const EXTRA_DOCK_STATE_LE_DESK = 3;

  /// from: static public final int EXTRA_DOCK_STATE_UNDOCKED
  static const EXTRA_DOCK_STATE_UNDOCKED = 0;

  /// from: static public final java.lang.String EXTRA_DONT_KILL_APP
  static const EXTRA_DONT_KILL_APP = "android.intent.extra.DONT_KILL_APP";

  /// from: static public final java.lang.String EXTRA_EMAIL
  static const EXTRA_EMAIL = "android.intent.extra.EMAIL";

  /// from: static public final java.lang.String EXTRA_EXCLUDE_COMPONENTS
  static const EXTRA_EXCLUDE_COMPONENTS =
      "android.intent.extra.EXCLUDE_COMPONENTS";

  /// from: static public final java.lang.String EXTRA_FROM_STORAGE
  static const EXTRA_FROM_STORAGE = "android.intent.extra.FROM_STORAGE";

  /// from: static public final java.lang.String EXTRA_HTML_TEXT
  static const EXTRA_HTML_TEXT = "android.intent.extra.HTML_TEXT";

  /// from: static public final java.lang.String EXTRA_INDEX
  static const EXTRA_INDEX = "android.intent.extra.INDEX";

  /// from: static public final java.lang.String EXTRA_INITIAL_INTENTS
  static const EXTRA_INITIAL_INTENTS = "android.intent.extra.INITIAL_INTENTS";

  /// from: static public final java.lang.String EXTRA_INSTALLER_PACKAGE_NAME
  static const EXTRA_INSTALLER_PACKAGE_NAME =
      "android.intent.extra.INSTALLER_PACKAGE_NAME";

  /// from: static public final java.lang.String EXTRA_INTENT
  static const EXTRA_INTENT = "android.intent.extra.INTENT";

  /// from: static public final java.lang.String EXTRA_KEY_EVENT
  static const EXTRA_KEY_EVENT = "android.intent.extra.KEY_EVENT";

  /// from: static public final java.lang.String EXTRA_LOCAL_ONLY
  static const EXTRA_LOCAL_ONLY = "android.intent.extra.LOCAL_ONLY";

  /// from: static public final java.lang.String EXTRA_MIME_TYPES
  static const EXTRA_MIME_TYPES = "android.intent.extra.MIME_TYPES";

  /// from: static public final java.lang.String EXTRA_NOT_UNKNOWN_SOURCE
  static const EXTRA_NOT_UNKNOWN_SOURCE =
      "android.intent.extra.NOT_UNKNOWN_SOURCE";

  /// from: static public final java.lang.String EXTRA_ORIGINATING_URI
  static const EXTRA_ORIGINATING_URI = "android.intent.extra.ORIGINATING_URI";

  /// from: static public final java.lang.String EXTRA_PACKAGE_NAME
  static const EXTRA_PACKAGE_NAME = "android.intent.extra.PACKAGE_NAME";

  /// from: static public final java.lang.String EXTRA_PHONE_NUMBER
  static const EXTRA_PHONE_NUMBER = "android.intent.extra.PHONE_NUMBER";

  /// from: static public final java.lang.String EXTRA_PROCESS_TEXT
  static const EXTRA_PROCESS_TEXT = "android.intent.extra.PROCESS_TEXT";

  /// from: static public final java.lang.String EXTRA_PROCESS_TEXT_READONLY
  static const EXTRA_PROCESS_TEXT_READONLY =
      "android.intent.extra.PROCESS_TEXT_READONLY";

  /// from: static public final java.lang.String EXTRA_QUICK_VIEW_FEATURES
  static const EXTRA_QUICK_VIEW_FEATURES =
      "android.intent.extra.QUICK_VIEW_FEATURES";

  /// from: static public final java.lang.String EXTRA_QUIET_MODE
  static const EXTRA_QUIET_MODE = "android.intent.extra.QUIET_MODE";

  /// from: static public final java.lang.String EXTRA_REFERRER
  static const EXTRA_REFERRER = "android.intent.extra.REFERRER";

  /// from: static public final java.lang.String EXTRA_REFERRER_NAME
  static const EXTRA_REFERRER_NAME = "android.intent.extra.REFERRER_NAME";

  /// from: static public final java.lang.String EXTRA_REMOTE_INTENT_TOKEN
  static const EXTRA_REMOTE_INTENT_TOKEN =
      "android.intent.extra.remote_intent_token";

  /// from: static public final java.lang.String EXTRA_REPLACEMENT_EXTRAS
  static const EXTRA_REPLACEMENT_EXTRAS =
      "android.intent.extra.REPLACEMENT_EXTRAS";

  /// from: static public final java.lang.String EXTRA_REPLACING
  static const EXTRA_REPLACING = "android.intent.extra.REPLACING";

  /// from: static public final java.lang.String EXTRA_RESTRICTIONS_BUNDLE
  static const EXTRA_RESTRICTIONS_BUNDLE =
      "android.intent.extra.restrictions_bundle";

  /// from: static public final java.lang.String EXTRA_RESTRICTIONS_INTENT
  static const EXTRA_RESTRICTIONS_INTENT =
      "android.intent.extra.restrictions_intent";

  /// from: static public final java.lang.String EXTRA_RESTRICTIONS_LIST
  static const EXTRA_RESTRICTIONS_LIST =
      "android.intent.extra.restrictions_list";

  /// from: static public final java.lang.String EXTRA_RESULT_RECEIVER
  static const EXTRA_RESULT_RECEIVER = "android.intent.extra.RESULT_RECEIVER";

  /// from: static public final java.lang.String EXTRA_RETURN_RESULT
  static const EXTRA_RETURN_RESULT = "android.intent.extra.RETURN_RESULT";

  /// from: static public final java.lang.String EXTRA_SHORTCUT_ICON
  static const EXTRA_SHORTCUT_ICON = "android.intent.extra.shortcut.ICON";

  /// from: static public final java.lang.String EXTRA_SHORTCUT_ICON_RESOURCE
  static const EXTRA_SHORTCUT_ICON_RESOURCE =
      "android.intent.extra.shortcut.ICON_RESOURCE";

  /// from: static public final java.lang.String EXTRA_SHORTCUT_INTENT
  static const EXTRA_SHORTCUT_INTENT = "android.intent.extra.shortcut.INTENT";

  /// from: static public final java.lang.String EXTRA_SHORTCUT_NAME
  static const EXTRA_SHORTCUT_NAME = "android.intent.extra.shortcut.NAME";

  /// from: static public final java.lang.String EXTRA_SHUTDOWN_USERSPACE_ONLY
  static const EXTRA_SHUTDOWN_USERSPACE_ONLY =
      "android.intent.extra.SHUTDOWN_USERSPACE_ONLY";

  /// from: static public final java.lang.String EXTRA_SPLIT_NAME
  static const EXTRA_SPLIT_NAME = "android.intent.extra.SPLIT_NAME";

  /// from: static public final java.lang.String EXTRA_STREAM
  static const EXTRA_STREAM = "android.intent.extra.STREAM";

  /// from: static public final java.lang.String EXTRA_SUBJECT
  static const EXTRA_SUBJECT = "android.intent.extra.SUBJECT";

  /// from: static public final java.lang.String EXTRA_SUSPENDED_PACKAGE_EXTRAS
  static const EXTRA_SUSPENDED_PACKAGE_EXTRAS =
      "android.intent.extra.SUSPENDED_PACKAGE_EXTRAS";

  /// from: static public final java.lang.String EXTRA_TEMPLATE
  static const EXTRA_TEMPLATE = "android.intent.extra.TEMPLATE";

  /// from: static public final java.lang.String EXTRA_TEXT
  static const EXTRA_TEXT = "android.intent.extra.TEXT";

  /// from: static public final java.lang.String EXTRA_TITLE
  static const EXTRA_TITLE = "android.intent.extra.TITLE";

  /// from: static public final java.lang.String EXTRA_UID
  static const EXTRA_UID = "android.intent.extra.UID";

  /// from: static public final java.lang.String EXTRA_USER
  static const EXTRA_USER = "android.intent.extra.USER";

  /// from: static public final int FILL_IN_ACTION
  static const FILL_IN_ACTION = 1;

  /// from: static public final int FILL_IN_CATEGORIES
  static const FILL_IN_CATEGORIES = 4;

  /// from: static public final int FILL_IN_CLIP_DATA
  static const FILL_IN_CLIP_DATA = 128;

  /// from: static public final int FILL_IN_COMPONENT
  static const FILL_IN_COMPONENT = 8;

  /// from: static public final int FILL_IN_DATA
  static const FILL_IN_DATA = 2;

  /// from: static public final int FILL_IN_PACKAGE
  static const FILL_IN_PACKAGE = 16;

  /// from: static public final int FILL_IN_SELECTOR
  static const FILL_IN_SELECTOR = 64;

  /// from: static public final int FILL_IN_SOURCE_BOUNDS
  static const FILL_IN_SOURCE_BOUNDS = 32;

  /// from: static public final int FLAG_ACTIVITY_BROUGHT_TO_FRONT
  static const FLAG_ACTIVITY_BROUGHT_TO_FRONT = 4194304;

  /// from: static public final int FLAG_ACTIVITY_CLEAR_TASK
  static const FLAG_ACTIVITY_CLEAR_TASK = 32768;

  /// from: static public final int FLAG_ACTIVITY_CLEAR_TOP
  static const FLAG_ACTIVITY_CLEAR_TOP = 67108864;

  /// from: static public final int FLAG_ACTIVITY_CLEAR_WHEN_TASK_RESET
  static const FLAG_ACTIVITY_CLEAR_WHEN_TASK_RESET = 524288;

  /// from: static public final int FLAG_ACTIVITY_EXCLUDE_FROM_RECENTS
  static const FLAG_ACTIVITY_EXCLUDE_FROM_RECENTS = 8388608;

  /// from: static public final int FLAG_ACTIVITY_FORWARD_RESULT
  static const FLAG_ACTIVITY_FORWARD_RESULT = 33554432;

  /// from: static public final int FLAG_ACTIVITY_LAUNCHED_FROM_HISTORY
  static const FLAG_ACTIVITY_LAUNCHED_FROM_HISTORY = 1048576;

  /// from: static public final int FLAG_ACTIVITY_LAUNCH_ADJACENT
  static const FLAG_ACTIVITY_LAUNCH_ADJACENT = 4096;

  /// from: static public final int FLAG_ACTIVITY_MATCH_EXTERNAL
  static const FLAG_ACTIVITY_MATCH_EXTERNAL = 2048;

  /// from: static public final int FLAG_ACTIVITY_MULTIPLE_TASK
  static const FLAG_ACTIVITY_MULTIPLE_TASK = 134217728;

  /// from: static public final int FLAG_ACTIVITY_NEW_DOCUMENT
  static const FLAG_ACTIVITY_NEW_DOCUMENT = 524288;

  /// from: static public final int FLAG_ACTIVITY_NEW_TASK
  static const FLAG_ACTIVITY_NEW_TASK = 268435456;

  /// from: static public final int FLAG_ACTIVITY_NO_ANIMATION
  static const FLAG_ACTIVITY_NO_ANIMATION = 65536;

  /// from: static public final int FLAG_ACTIVITY_NO_HISTORY
  static const FLAG_ACTIVITY_NO_HISTORY = 1073741824;

  /// from: static public final int FLAG_ACTIVITY_NO_USER_ACTION
  static const FLAG_ACTIVITY_NO_USER_ACTION = 262144;

  /// from: static public final int FLAG_ACTIVITY_PREVIOUS_IS_TOP
  static const FLAG_ACTIVITY_PREVIOUS_IS_TOP = 16777216;

  /// from: static public final int FLAG_ACTIVITY_REORDER_TO_FRONT
  static const FLAG_ACTIVITY_REORDER_TO_FRONT = 131072;

  /// from: static public final int FLAG_ACTIVITY_RESET_TASK_IF_NEEDED
  static const FLAG_ACTIVITY_RESET_TASK_IF_NEEDED = 2097152;

  /// from: static public final int FLAG_ACTIVITY_RETAIN_IN_RECENTS
  static const FLAG_ACTIVITY_RETAIN_IN_RECENTS = 8192;

  /// from: static public final int FLAG_ACTIVITY_SINGLE_TOP
  static const FLAG_ACTIVITY_SINGLE_TOP = 536870912;

  /// from: static public final int FLAG_ACTIVITY_TASK_ON_HOME
  static const FLAG_ACTIVITY_TASK_ON_HOME = 16384;

  /// from: static public final int FLAG_DEBUG_LOG_RESOLUTION
  static const FLAG_DEBUG_LOG_RESOLUTION = 8;

  /// from: static public final int FLAG_EXCLUDE_STOPPED_PACKAGES
  static const FLAG_EXCLUDE_STOPPED_PACKAGES = 16;

  /// from: static public final int FLAG_FROM_BACKGROUND
  static const FLAG_FROM_BACKGROUND = 4;

  /// from: static public final int FLAG_GRANT_PERSISTABLE_URI_PERMISSION
  static const FLAG_GRANT_PERSISTABLE_URI_PERMISSION = 64;

  /// from: static public final int FLAG_GRANT_PREFIX_URI_PERMISSION
  static const FLAG_GRANT_PREFIX_URI_PERMISSION = 128;

  /// from: static public final int FLAG_GRANT_READ_URI_PERMISSION
  static const FLAG_GRANT_READ_URI_PERMISSION = 1;

  /// from: static public final int FLAG_GRANT_WRITE_URI_PERMISSION
  static const FLAG_GRANT_WRITE_URI_PERMISSION = 2;

  /// from: static public final int FLAG_INCLUDE_STOPPED_PACKAGES
  static const FLAG_INCLUDE_STOPPED_PACKAGES = 32;

  /// from: static public final int FLAG_RECEIVER_FOREGROUND
  static const FLAG_RECEIVER_FOREGROUND = 268435456;

  /// from: static public final int FLAG_RECEIVER_NO_ABORT
  static const FLAG_RECEIVER_NO_ABORT = 134217728;

  /// from: static public final int FLAG_RECEIVER_REGISTERED_ONLY
  static const FLAG_RECEIVER_REGISTERED_ONLY = 1073741824;

  /// from: static public final int FLAG_RECEIVER_REPLACE_PENDING
  static const FLAG_RECEIVER_REPLACE_PENDING = 536870912;

  /// from: static public final int FLAG_RECEIVER_VISIBLE_TO_INSTANT_APPS
  static const FLAG_RECEIVER_VISIBLE_TO_INSTANT_APPS = 2097152;

  /// from: static public final java.lang.String METADATA_DOCK_HOME
  static const METADATA_DOCK_HOME = "android.dock_home";

  /// from: static public final int URI_ALLOW_UNSAFE
  static const URI_ALLOW_UNSAFE = 4;

  /// from: static public final int URI_ANDROID_APP_SCHEME
  static const URI_ANDROID_APP_SCHEME = 2;

  /// from: static public final int URI_INTENT_SCHEME
  static const URI_INTENT_SCHEME = 1;

  static final _ctor =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "android_content_Intent_new")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();

  /// from: public void <init>()
  Intent() : super.fromRef(_ctor());

  static final _ctor_1 = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
                  ffi.Pointer<ffi.Void>)>>("android_content_Intent_new_1")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void <init>(android.content.Intent o)
  Intent.ctor_1(Intent o) : super.fromRef(_ctor_1(o.reference));

  static final _ctor_2 = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
                  ffi.Pointer<ffi.Void>)>>("android_content_Intent_new_2")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void <init>(java.lang.String action)
  Intent.ctor_2(jni.JlString action) : super.fromRef(_ctor_2(action.reference));

  static final _ctor_3 = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("android_content_Intent_new_3")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void <init>(java.lang.String action, android.net.Uri uri)
  Intent.ctor_3(jni.JlString action, jni.JlObject uri)
      : super.fromRef(_ctor_3(action.reference, uri.reference));

  static final _ctor_4 = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("android_content_Intent_new_4")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void <init>(android.content.Context packageContext, java.lang.Class<?> cls)
  Intent.ctor_4(Context packageContext, jni.JlObject cls)
      : super.fromRef(_ctor_4(packageContext.reference, cls.reference));

  static final _ctor_5 = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("android_content_Intent_new_5")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public void <init>(java.lang.String action, android.net.Uri uri, android.content.Context packageContext, java.lang.Class<?> cls)
  Intent.ctor_5(jni.JlString action, jni.JlObject uri, Context packageContext,
      jni.JlObject cls)
      : super.fromRef(_ctor_5(action.reference, uri.reference,
            packageContext.reference, cls.reference));

  static final _createChooser = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_Intent_createChooser")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: static public android.content.Intent createChooser(android.content.Intent target, java.lang.CharSequence title)
  static Intent createChooser(Intent target, jni.JlObject title) =>
      Intent.fromRef(_createChooser(target.reference, title.reference));

  static final _createChooser_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_Intent_createChooser_1")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: static public android.content.Intent createChooser(android.content.Intent target, java.lang.CharSequence title, android.content.IntentSender sender)
  static Intent createChooser_1(
          Intent target, jni.JlObject title, IntentSender sender) =>
      Intent.fromRef(_createChooser_1(
          target.reference, title.reference, sender.reference));

  static final _clone = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
                  ffi.Pointer<ffi.Void>)>>("android_content_Intent_clone")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.Object clone()
  jni.JlObject clone() => jni.JlObject.fromRef(_clone(reference));

  static final _cloneFilter = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
                  ffi.Pointer<ffi.Void>)>>("android_content_Intent_cloneFilter")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.content.Intent cloneFilter()
  Intent cloneFilter() => Intent.fromRef(_cloneFilter(reference));

  static final _makeMainActivity = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_Intent_makeMainActivity")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: static public android.content.Intent makeMainActivity(android.content.ComponentName mainActivity)
  static Intent makeMainActivity(ComponentName mainActivity) =>
      Intent.fromRef(_makeMainActivity(mainActivity.reference));

  static final _makeMainSelectorActivity = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_Intent_makeMainSelectorActivity")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: static public android.content.Intent makeMainSelectorActivity(java.lang.String selectorAction, java.lang.String selectorCategory)
  static Intent makeMainSelectorActivity(
          jni.JlString selectorAction, jni.JlString selectorCategory) =>
      Intent.fromRef(_makeMainSelectorActivity(
          selectorAction.reference, selectorCategory.reference));

  static final _makeRestartActivityTask = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_Intent_makeRestartActivityTask")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: static public android.content.Intent makeRestartActivityTask(android.content.ComponentName mainActivity)
  static Intent makeRestartActivityTask(ComponentName mainActivity) =>
      Intent.fromRef(_makeRestartActivityTask(mainActivity.reference));

  static final _getIntent = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
                  ffi.Pointer<ffi.Void>)>>("android_content_Intent_getIntent")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: static public android.content.Intent getIntent(java.lang.String uri)
  static Intent getIntent(jni.JlString uri) =>
      Intent.fromRef(_getIntent(uri.reference));

  static final _parseUri = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_content_Intent_parseUri")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: static public android.content.Intent parseUri(java.lang.String uri, int flags)
  static Intent parseUri(jni.JlString uri, int flags) =>
      Intent.fromRef(_parseUri(uri.reference, flags));

  static final _getIntentOld = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_Intent_getIntentOld")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: static public android.content.Intent getIntentOld(java.lang.String uri)
  static Intent getIntentOld(jni.JlString uri) =>
      Intent.fromRef(_getIntentOld(uri.reference));

  static final _getAction = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
                  ffi.Pointer<ffi.Void>)>>("android_content_Intent_getAction")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.String getAction()
  jni.JlString getAction() => jni.JlString.fromRef(_getAction(reference));

  static final _getData = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
                  ffi.Pointer<ffi.Void>)>>("android_content_Intent_getData")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.net.Uri getData()
  jni.JlObject getData() => jni.JlObject.fromRef(_getData(reference));

  static final _getDataString = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_Intent_getDataString")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.String getDataString()
  jni.JlString getDataString() =>
      jni.JlString.fromRef(_getDataString(reference));

  static final _getScheme = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
                  ffi.Pointer<ffi.Void>)>>("android_content_Intent_getScheme")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.String getScheme()
  jni.JlString getScheme() => jni.JlString.fromRef(_getScheme(reference));

  static final _getType = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
                  ffi.Pointer<ffi.Void>)>>("android_content_Intent_getType")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.String getType()
  jni.JlString getType() => jni.JlString.fromRef(_getType(reference));

  static final _resolveType = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("android_content_Intent_resolveType")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.String resolveType(android.content.Context context)
  jni.JlString resolveType(Context context) =>
      jni.JlString.fromRef(_resolveType(reference, context.reference));

  static final _resolveType_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_Intent_resolveType_1")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.String resolveType(android.content.ContentResolver resolver)
  jni.JlString resolveType_1(ContentResolver resolver) =>
      jni.JlString.fromRef(_resolveType_1(reference, resolver.reference));

  static final _resolveTypeIfNeeded = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_Intent_resolveTypeIfNeeded")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.String resolveTypeIfNeeded(android.content.ContentResolver resolver)
  jni.JlString resolveTypeIfNeeded(ContentResolver resolver) =>
      jni.JlString.fromRef(_resolveTypeIfNeeded(reference, resolver.reference));

  static final _hasCategory = jlookup<
          ffi.NativeFunction<
              ffi.Uint8 Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("android_content_Intent_hasCategory")
      .asFunction<int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public boolean hasCategory(java.lang.String category)
  bool hasCategory(jni.JlString category) =>
      _hasCategory(reference, category.reference) != 0;

  static final _getCategories = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_Intent_getCategories")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.util.Set<java.lang.String> getCategories()
  jni.JlObject getCategories() =>
      jni.JlObject.fromRef(_getCategories(reference));

  static final _getSelector = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
                  ffi.Pointer<ffi.Void>)>>("android_content_Intent_getSelector")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.content.Intent getSelector()
  Intent getSelector() => Intent.fromRef(_getSelector(reference));

  static final _getClipData = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
                  ffi.Pointer<ffi.Void>)>>("android_content_Intent_getClipData")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.content.ClipData getClipData()
  ClipData getClipData() => ClipData.fromRef(_getClipData(reference));

  static final _setExtrasClassLoader = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_Intent_setExtrasClassLoader")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void setExtrasClassLoader(java.lang.ClassLoader loader)
  void setExtrasClassLoader(jni.JlObject loader) =>
      _setExtrasClassLoader(reference, loader.reference);

  static final _hasExtra = jlookup<
          ffi.NativeFunction<
              ffi.Uint8 Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("android_content_Intent_hasExtra")
      .asFunction<int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public boolean hasExtra(java.lang.String name)
  bool hasExtra(jni.JlString name) => _hasExtra(reference, name.reference) != 0;

  static final _hasFileDescriptors =
      jlookup<ffi.NativeFunction<ffi.Uint8 Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_Intent_hasFileDescriptors")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public boolean hasFileDescriptors()
  bool hasFileDescriptors() => _hasFileDescriptors(reference) != 0;

  static final _getBooleanExtra = jlookup<
          ffi.NativeFunction<
              ffi.Uint8 Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
                  ffi.Uint8)>>("android_content_Intent_getBooleanExtra")
      .asFunction<
          int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public boolean getBooleanExtra(java.lang.String name, boolean defaultValue)
  bool getBooleanExtra(jni.JlString name, bool defaultValue) =>
      _getBooleanExtra(reference, name.reference, defaultValue ? 1 : 0) != 0;

  static final _getByteExtra = jlookup<
          ffi.NativeFunction<
              ffi.Int8 Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
                  ffi.Int8)>>("android_content_Intent_getByteExtra")
      .asFunction<
          int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public byte getByteExtra(java.lang.String name, byte defaultValue)
  int getByteExtra(jni.JlString name, int defaultValue) =>
      _getByteExtra(reference, name.reference, defaultValue);

  static final _getShortExtra = jlookup<
          ffi.NativeFunction<
              ffi.Int16 Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
                  ffi.Int16)>>("android_content_Intent_getShortExtra")
      .asFunction<
          int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public short getShortExtra(java.lang.String name, short defaultValue)
  int getShortExtra(jni.JlString name, int defaultValue) =>
      _getShortExtra(reference, name.reference, defaultValue);

  static final _getCharExtra = jlookup<
          ffi.NativeFunction<
              ffi.Int16 Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
                  ffi.Int16)>>("android_content_Intent_getCharExtra")
      .asFunction<
          int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public char getCharExtra(java.lang.String name, char defaultValue)
  int getCharExtra(jni.JlString name, int defaultValue) =>
      _getCharExtra(reference, name.reference, defaultValue);

  static final _getIntExtra = jlookup<
          ffi.NativeFunction<
              ffi.Int32 Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_content_Intent_getIntExtra")
      .asFunction<
          int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public int getIntExtra(java.lang.String name, int defaultValue)
  int getIntExtra(jni.JlString name, int defaultValue) =>
      _getIntExtra(reference, name.reference, defaultValue);

  static final _getLongExtra = jlookup<
          ffi.NativeFunction<
              ffi.Int64 Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
                  ffi.Int64)>>("android_content_Intent_getLongExtra")
      .asFunction<
          int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public long getLongExtra(java.lang.String name, long defaultValue)
  int getLongExtra(jni.JlString name, int defaultValue) =>
      _getLongExtra(reference, name.reference, defaultValue);

  static final _getFloatExtra = jlookup<
          ffi.NativeFunction<
              ffi.Float Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
                  ffi.Float)>>("android_content_Intent_getFloatExtra")
      .asFunction<
          double Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, double)>();

  /// from: public float getFloatExtra(java.lang.String name, float defaultValue)
  double getFloatExtra(jni.JlString name, double defaultValue) =>
      _getFloatExtra(reference, name.reference, defaultValue);

  static final _getDoubleExtra = jlookup<
          ffi.NativeFunction<
              ffi.Double Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
                  ffi.Double)>>("android_content_Intent_getDoubleExtra")
      .asFunction<
          double Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, double)>();

  /// from: public double getDoubleExtra(java.lang.String name, double defaultValue)
  double getDoubleExtra(jni.JlString name, double defaultValue) =>
      _getDoubleExtra(reference, name.reference, defaultValue);

  static final _getStringExtra = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_Intent_getStringExtra")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.String getStringExtra(java.lang.String name)
  jni.JlString getStringExtra(jni.JlString name) =>
      jni.JlString.fromRef(_getStringExtra(reference, name.reference));

  static final _getCharSequenceExtra = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_Intent_getCharSequenceExtra")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.CharSequence getCharSequenceExtra(java.lang.String name)
  jni.JlObject getCharSequenceExtra(jni.JlString name) =>
      jni.JlObject.fromRef(_getCharSequenceExtra(reference, name.reference));

  static final _getParcelableArrayExtra = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_Intent_getParcelableArrayExtra")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.os.Parcelable[] getParcelableArrayExtra(java.lang.String name)
  jni.JlObject getParcelableArrayExtra(jni.JlString name) =>
      jni.JlObject.fromRef(_getParcelableArrayExtra(reference, name.reference));

  static final _getParcelableArrayListExtra = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_Intent_getParcelableArrayListExtra")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public java.util.ArrayList<T> getParcelableArrayListExtra(java.lang.String name)
  jni.JlObject getParcelableArrayListExtra(jni.JlString name) =>
      jni.JlObject.fromRef(
          _getParcelableArrayListExtra(reference, name.reference));

  static final _getSerializableExtra = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_Intent_getSerializableExtra")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public java.io.Serializable getSerializableExtra(java.lang.String name)
  jni.JlObject getSerializableExtra(jni.JlString name) =>
      jni.JlObject.fromRef(_getSerializableExtra(reference, name.reference));

  static final _getIntegerArrayListExtra = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_Intent_getIntegerArrayListExtra")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public java.util.ArrayList<java.lang.Integer> getIntegerArrayListExtra(java.lang.String name)
  jni.JlObject getIntegerArrayListExtra(jni.JlString name) =>
      jni.JlObject.fromRef(
          _getIntegerArrayListExtra(reference, name.reference));

  static final _getStringArrayListExtra = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_Intent_getStringArrayListExtra")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public java.util.ArrayList<java.lang.String> getStringArrayListExtra(java.lang.String name)
  jni.JlObject getStringArrayListExtra(jni.JlString name) =>
      jni.JlObject.fromRef(_getStringArrayListExtra(reference, name.reference));

  static final _getCharSequenceArrayListExtra = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_Intent_getCharSequenceArrayListExtra")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public java.util.ArrayList<java.lang.CharSequence> getCharSequenceArrayListExtra(java.lang.String name)
  jni.JlObject getCharSequenceArrayListExtra(jni.JlString name) =>
      jni.JlObject.fromRef(
          _getCharSequenceArrayListExtra(reference, name.reference));

  static final _getBooleanArrayExtra = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_Intent_getBooleanArrayExtra")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public boolean[] getBooleanArrayExtra(java.lang.String name)
  jni.JlObject getBooleanArrayExtra(jni.JlString name) =>
      jni.JlObject.fromRef(_getBooleanArrayExtra(reference, name.reference));

  static final _getByteArrayExtra = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_Intent_getByteArrayExtra")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public byte[] getByteArrayExtra(java.lang.String name)
  jni.JlObject getByteArrayExtra(jni.JlString name) =>
      jni.JlObject.fromRef(_getByteArrayExtra(reference, name.reference));

  static final _getShortArrayExtra = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_Intent_getShortArrayExtra")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public short[] getShortArrayExtra(java.lang.String name)
  jni.JlObject getShortArrayExtra(jni.JlString name) =>
      jni.JlObject.fromRef(_getShortArrayExtra(reference, name.reference));

  static final _getCharArrayExtra = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_Intent_getCharArrayExtra")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public char[] getCharArrayExtra(java.lang.String name)
  jni.JlObject getCharArrayExtra(jni.JlString name) =>
      jni.JlObject.fromRef(_getCharArrayExtra(reference, name.reference));

  static final _getIntArrayExtra = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_Intent_getIntArrayExtra")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public int[] getIntArrayExtra(java.lang.String name)
  jni.JlObject getIntArrayExtra(jni.JlString name) =>
      jni.JlObject.fromRef(_getIntArrayExtra(reference, name.reference));

  static final _getLongArrayExtra = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_Intent_getLongArrayExtra")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public long[] getLongArrayExtra(java.lang.String name)
  jni.JlObject getLongArrayExtra(jni.JlString name) =>
      jni.JlObject.fromRef(_getLongArrayExtra(reference, name.reference));

  static final _getFloatArrayExtra = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_Intent_getFloatArrayExtra")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public float[] getFloatArrayExtra(java.lang.String name)
  jni.JlObject getFloatArrayExtra(jni.JlString name) =>
      jni.JlObject.fromRef(_getFloatArrayExtra(reference, name.reference));

  static final _getDoubleArrayExtra = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_Intent_getDoubleArrayExtra")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public double[] getDoubleArrayExtra(java.lang.String name)
  jni.JlObject getDoubleArrayExtra(jni.JlString name) =>
      jni.JlObject.fromRef(_getDoubleArrayExtra(reference, name.reference));

  static final _getStringArrayExtra = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_Intent_getStringArrayExtra")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.String[] getStringArrayExtra(java.lang.String name)
  jni.JlObject getStringArrayExtra(jni.JlString name) =>
      jni.JlObject.fromRef(_getStringArrayExtra(reference, name.reference));

  static final _getCharSequenceArrayExtra = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_Intent_getCharSequenceArrayExtra")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.CharSequence[] getCharSequenceArrayExtra(java.lang.String name)
  jni.JlObject getCharSequenceArrayExtra(jni.JlString name) =>
      jni.JlObject.fromRef(
          _getCharSequenceArrayExtra(reference, name.reference));

  static final _getBundleExtra = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_Intent_getBundleExtra")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.os.Bundle getBundleExtra(java.lang.String name)
  jni.JlObject getBundleExtra(jni.JlString name) =>
      jni.JlObject.fromRef(_getBundleExtra(reference, name.reference));

  static final _getExtras = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
                  ffi.Pointer<ffi.Void>)>>("android_content_Intent_getExtras")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.os.Bundle getExtras()
  jni.JlObject getExtras() => jni.JlObject.fromRef(_getExtras(reference));

  static final _getFlags =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_Intent_getFlags")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int getFlags()
  int getFlags() => _getFlags(reference);

  static final _getPackage = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
                  ffi.Pointer<ffi.Void>)>>("android_content_Intent_getPackage")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.String getPackage()
  jni.JlString getPackage() => jni.JlString.fromRef(_getPackage(reference));

  static final _getComponent = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_Intent_getComponent")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.content.ComponentName getComponent()
  ComponentName getComponent() =>
      ComponentName.fromRef(_getComponent(reference));

  static final _getSourceBounds = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_Intent_getSourceBounds")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.graphics.Rect getSourceBounds()
  jni.JlObject getSourceBounds() =>
      jni.JlObject.fromRef(_getSourceBounds(reference));

  static final _resolveActivity = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_Intent_resolveActivity")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.content.ComponentName resolveActivity(android.content.pm.PackageManager pm)
  ComponentName resolveActivity(pm.PackageManager pm_) =>
      ComponentName.fromRef(_resolveActivity(reference, pm_.reference));

  static final _resolveActivityInfo = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_content_Intent_resolveActivityInfo")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public android.content.pm.ActivityInfo resolveActivityInfo(android.content.pm.PackageManager pm, int flags)
  pm.ActivityInfo resolveActivityInfo(pm.PackageManager pm_, int flags) =>
      pm.ActivityInfo.fromRef(
          _resolveActivityInfo(reference, pm_.reference, flags));

  static final _setAction = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("android_content_Intent_setAction")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.content.Intent setAction(java.lang.String action)
  Intent setAction(jni.JlString action) =>
      Intent.fromRef(_setAction(reference, action.reference));

  static final _setData = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("android_content_Intent_setData")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.content.Intent setData(android.net.Uri data)
  Intent setData(jni.JlObject data) =>
      Intent.fromRef(_setData(reference, data.reference));

  static final _setDataAndNormalize = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_Intent_setDataAndNormalize")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.content.Intent setDataAndNormalize(android.net.Uri data)
  Intent setDataAndNormalize(jni.JlObject data) =>
      Intent.fromRef(_setDataAndNormalize(reference, data.reference));

  static final _setType = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("android_content_Intent_setType")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.content.Intent setType(java.lang.String type)
  Intent setType(jni.JlString type) =>
      Intent.fromRef(_setType(reference, type.reference));

  static final _setTypeAndNormalize = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_Intent_setTypeAndNormalize")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.content.Intent setTypeAndNormalize(java.lang.String type)
  Intent setTypeAndNormalize(jni.JlString type) =>
      Intent.fromRef(_setTypeAndNormalize(reference, type.reference));

  static final _setDataAndType = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_Intent_setDataAndType")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.content.Intent setDataAndType(android.net.Uri data, java.lang.String type)
  Intent setDataAndType(jni.JlObject data, jni.JlString type) => Intent.fromRef(
      _setDataAndType(reference, data.reference, type.reference));

  static final _setDataAndTypeAndNormalize = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_Intent_setDataAndTypeAndNormalize")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.content.Intent setDataAndTypeAndNormalize(android.net.Uri data, java.lang.String type)
  Intent setDataAndTypeAndNormalize(jni.JlObject data, jni.JlString type) =>
      Intent.fromRef(_setDataAndTypeAndNormalize(
          reference, data.reference, type.reference));

  static final _addCategory = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("android_content_Intent_addCategory")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.content.Intent addCategory(java.lang.String category)
  Intent addCategory(jni.JlString category) =>
      Intent.fromRef(_addCategory(reference, category.reference));

  static final _removeCategory = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_Intent_removeCategory")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void removeCategory(java.lang.String category)
  void removeCategory(jni.JlString category) =>
      _removeCategory(reference, category.reference);

  static final _setSelector = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("android_content_Intent_setSelector")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void setSelector(android.content.Intent selector)
  void setSelector(Intent selector) =>
      _setSelector(reference, selector.reference);

  static final _setClipData = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("android_content_Intent_setClipData")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void setClipData(android.content.ClipData clip)
  void setClipData(ClipData clip) => _setClipData(reference, clip.reference);

  static final _putExtra = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Uint8)>>("android_content_Intent_putExtra")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public android.content.Intent putExtra(java.lang.String name, boolean value)
  Intent putExtra(jni.JlString name, bool value) =>
      Intent.fromRef(_putExtra(reference, name.reference, value ? 1 : 0));

  static final _putExtra_1 = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Int8)>>("android_content_Intent_putExtra_1")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public android.content.Intent putExtra(java.lang.String name, byte value)
  Intent putExtra_1(jni.JlString name, int value) =>
      Intent.fromRef(_putExtra_1(reference, name.reference, value));

  static final _putExtra_2 = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Int16)>>("android_content_Intent_putExtra_2")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public android.content.Intent putExtra(java.lang.String name, char value)
  Intent putExtra_2(jni.JlString name, int value) =>
      Intent.fromRef(_putExtra_2(reference, name.reference, value));

  static final _putExtra_3 = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Int16)>>("android_content_Intent_putExtra_3")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public android.content.Intent putExtra(java.lang.String name, short value)
  Intent putExtra_3(jni.JlString name, int value) =>
      Intent.fromRef(_putExtra_3(reference, name.reference, value));

  static final _putExtra_4 = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_content_Intent_putExtra_4")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public android.content.Intent putExtra(java.lang.String name, int value)
  Intent putExtra_4(jni.JlString name, int value) =>
      Intent.fromRef(_putExtra_4(reference, name.reference, value));

  static final _putExtra_5 = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Int64)>>("android_content_Intent_putExtra_5")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public android.content.Intent putExtra(java.lang.String name, long value)
  Intent putExtra_5(jni.JlString name, int value) =>
      Intent.fromRef(_putExtra_5(reference, name.reference, value));

  static final _putExtra_6 = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Float)>>("android_content_Intent_putExtra_6")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, double)>();

  /// from: public android.content.Intent putExtra(java.lang.String name, float value)
  Intent putExtra_6(jni.JlString name, double value) =>
      Intent.fromRef(_putExtra_6(reference, name.reference, value));

  static final _putExtra_7 = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Double)>>("android_content_Intent_putExtra_7")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, double)>();

  /// from: public android.content.Intent putExtra(java.lang.String name, double value)
  Intent putExtra_7(jni.JlString name, double value) =>
      Intent.fromRef(_putExtra_7(reference, name.reference, value));

  static final _putExtra_8 = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("android_content_Intent_putExtra_8")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.content.Intent putExtra(java.lang.String name, java.lang.String value)
  Intent putExtra_8(jni.JlString name, jni.JlString value) =>
      Intent.fromRef(_putExtra_8(reference, name.reference, value.reference));

  static final _putExtra_9 = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("android_content_Intent_putExtra_9")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.content.Intent putExtra(java.lang.String name, java.lang.CharSequence value)
  Intent putExtra_9(jni.JlString name, jni.JlObject value) =>
      Intent.fromRef(_putExtra_9(reference, name.reference, value.reference));

  static final _putExtra_10 = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("android_content_Intent_putExtra_10")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.content.Intent putExtra(java.lang.String name, android.os.Parcelable value)
  Intent putExtra_10(jni.JlString name, jni.JlObject value) =>
      Intent.fromRef(_putExtra_10(reference, name.reference, value.reference));

  static final _putExtra_11 = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("android_content_Intent_putExtra_11")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.content.Intent putExtra(java.lang.String name, android.os.Parcelable[] value)
  Intent putExtra_11(jni.JlString name, jni.JlObject value) =>
      Intent.fromRef(_putExtra_11(reference, name.reference, value.reference));

  static final _putParcelableArrayListExtra = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_Intent_putParcelableArrayListExtra")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.content.Intent putParcelableArrayListExtra(java.lang.String name, java.util.ArrayList<? extends android.os.Parcelable> value)
  Intent putParcelableArrayListExtra(jni.JlString name, jni.JlObject value) =>
      Intent.fromRef(_putParcelableArrayListExtra(
          reference, name.reference, value.reference));

  static final _putIntegerArrayListExtra = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_Intent_putIntegerArrayListExtra")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.content.Intent putIntegerArrayListExtra(java.lang.String name, java.util.ArrayList<java.lang.Integer> value)
  Intent putIntegerArrayListExtra(jni.JlString name, jni.JlObject value) =>
      Intent.fromRef(_putIntegerArrayListExtra(
          reference, name.reference, value.reference));

  static final _putStringArrayListExtra = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_Intent_putStringArrayListExtra")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.content.Intent putStringArrayListExtra(java.lang.String name, java.util.ArrayList<java.lang.String> value)
  Intent putStringArrayListExtra(jni.JlString name, jni.JlObject value) =>
      Intent.fromRef(
          _putStringArrayListExtra(reference, name.reference, value.reference));

  static final _putCharSequenceArrayListExtra = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_Intent_putCharSequenceArrayListExtra")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.content.Intent putCharSequenceArrayListExtra(java.lang.String name, java.util.ArrayList<java.lang.CharSequence> value)
  Intent putCharSequenceArrayListExtra(jni.JlString name, jni.JlObject value) =>
      Intent.fromRef(_putCharSequenceArrayListExtra(
          reference, name.reference, value.reference));

  static final _putExtra_12 = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("android_content_Intent_putExtra_12")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.content.Intent putExtra(java.lang.String name, java.io.Serializable value)
  Intent putExtra_12(jni.JlString name, jni.JlObject value) =>
      Intent.fromRef(_putExtra_12(reference, name.reference, value.reference));

  static final _putExtra_13 = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("android_content_Intent_putExtra_13")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.content.Intent putExtra(java.lang.String name, boolean[] value)
  Intent putExtra_13(jni.JlString name, jni.JlObject value) =>
      Intent.fromRef(_putExtra_13(reference, name.reference, value.reference));

  static final _putExtra_14 = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("android_content_Intent_putExtra_14")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.content.Intent putExtra(java.lang.String name, byte[] value)
  Intent putExtra_14(jni.JlString name, jni.JlObject value) =>
      Intent.fromRef(_putExtra_14(reference, name.reference, value.reference));

  static final _putExtra_15 = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("android_content_Intent_putExtra_15")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.content.Intent putExtra(java.lang.String name, short[] value)
  Intent putExtra_15(jni.JlString name, jni.JlObject value) =>
      Intent.fromRef(_putExtra_15(reference, name.reference, value.reference));

  static final _putExtra_16 = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("android_content_Intent_putExtra_16")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.content.Intent putExtra(java.lang.String name, char[] value)
  Intent putExtra_16(jni.JlString name, jni.JlObject value) =>
      Intent.fromRef(_putExtra_16(reference, name.reference, value.reference));

  static final _putExtra_17 = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("android_content_Intent_putExtra_17")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.content.Intent putExtra(java.lang.String name, int[] value)
  Intent putExtra_17(jni.JlString name, jni.JlObject value) =>
      Intent.fromRef(_putExtra_17(reference, name.reference, value.reference));

  static final _putExtra_18 = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("android_content_Intent_putExtra_18")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.content.Intent putExtra(java.lang.String name, long[] value)
  Intent putExtra_18(jni.JlString name, jni.JlObject value) =>
      Intent.fromRef(_putExtra_18(reference, name.reference, value.reference));

  static final _putExtra_19 = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("android_content_Intent_putExtra_19")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.content.Intent putExtra(java.lang.String name, float[] value)
  Intent putExtra_19(jni.JlString name, jni.JlObject value) =>
      Intent.fromRef(_putExtra_19(reference, name.reference, value.reference));

  static final _putExtra_20 = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("android_content_Intent_putExtra_20")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.content.Intent putExtra(java.lang.String name, double[] value)
  Intent putExtra_20(jni.JlString name, jni.JlObject value) =>
      Intent.fromRef(_putExtra_20(reference, name.reference, value.reference));

  static final _putExtra_21 = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("android_content_Intent_putExtra_21")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.content.Intent putExtra(java.lang.String name, java.lang.String[] value)
  Intent putExtra_21(jni.JlString name, jni.JlObject value) =>
      Intent.fromRef(_putExtra_21(reference, name.reference, value.reference));

  static final _putExtra_22 = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("android_content_Intent_putExtra_22")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.content.Intent putExtra(java.lang.String name, java.lang.CharSequence[] value)
  Intent putExtra_22(jni.JlString name, jni.JlObject value) =>
      Intent.fromRef(_putExtra_22(reference, name.reference, value.reference));

  static final _putExtra_23 = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("android_content_Intent_putExtra_23")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.content.Intent putExtra(java.lang.String name, android.os.Bundle value)
  Intent putExtra_23(jni.JlString name, jni.JlObject value) =>
      Intent.fromRef(_putExtra_23(reference, name.reference, value.reference));

  static final _putExtras = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("android_content_Intent_putExtras")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.content.Intent putExtras(android.content.Intent src)
  Intent putExtras(Intent src) =>
      Intent.fromRef(_putExtras(reference, src.reference));

  static final _putExtras_1 = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("android_content_Intent_putExtras_1")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.content.Intent putExtras(android.os.Bundle extras)
  Intent putExtras_1(jni.JlObject extras) =>
      Intent.fromRef(_putExtras_1(reference, extras.reference));

  static final _replaceExtras = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_Intent_replaceExtras")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.content.Intent replaceExtras(android.content.Intent src)
  Intent replaceExtras(Intent src) =>
      Intent.fromRef(_replaceExtras(reference, src.reference));

  static final _replaceExtras_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_Intent_replaceExtras_1")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.content.Intent replaceExtras(android.os.Bundle extras)
  Intent replaceExtras_1(jni.JlObject extras) =>
      Intent.fromRef(_replaceExtras_1(reference, extras.reference));

  static final _removeExtra = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("android_content_Intent_removeExtra")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void removeExtra(java.lang.String name)
  void removeExtra(jni.JlString name) =>
      _removeExtra(reference, name.reference);

  static final _setFlags = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_content_Intent_setFlags")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public android.content.Intent setFlags(int flags)
  Intent setFlags(int flags) => Intent.fromRef(_setFlags(reference, flags));

  static final _addFlags = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_content_Intent_addFlags")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public android.content.Intent addFlags(int flags)
  Intent addFlags(int flags) => Intent.fromRef(_addFlags(reference, flags));

  static final _removeFlags = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_content_Intent_removeFlags")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public void removeFlags(int flags)
  void removeFlags(int flags) => _removeFlags(reference, flags);

  static final _setPackage = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("android_content_Intent_setPackage")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.content.Intent setPackage(java.lang.String packageName)
  Intent setPackage(jni.JlString packageName) =>
      Intent.fromRef(_setPackage(reference, packageName.reference));

  static final _setComponent = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_Intent_setComponent")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.content.Intent setComponent(android.content.ComponentName component)
  Intent setComponent(ComponentName component) =>
      Intent.fromRef(_setComponent(reference, component.reference));

  static final _setClassName = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_Intent_setClassName")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.content.Intent setClassName(android.content.Context packageContext, java.lang.String className)
  Intent setClassName(Context packageContext, jni.JlString className) =>
      Intent.fromRef(_setClassName(
          reference, packageContext.reference, className.reference));

  static final _setClassName_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_Intent_setClassName_1")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.content.Intent setClassName(java.lang.String packageName, java.lang.String className)
  Intent setClassName_1(jni.JlString packageName, jni.JlString className) =>
      Intent.fromRef(_setClassName_1(
          reference, packageName.reference, className.reference));

  static final _setClass = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("android_content_Intent_setClass")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.content.Intent setClass(android.content.Context packageContext, java.lang.Class<?> cls)
  Intent setClass(Context packageContext, jni.JlObject cls) => Intent.fromRef(
      _setClass(reference, packageContext.reference, cls.reference));

  static final _setSourceBounds = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_Intent_setSourceBounds")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void setSourceBounds(android.graphics.Rect r)
  void setSourceBounds(jni.JlObject r) =>
      _setSourceBounds(reference, r.reference);

  static final _fillIn = jlookup<
          ffi.NativeFunction<
              ffi.Int32 Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_content_Intent_fillIn")
      .asFunction<
          int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public int fillIn(android.content.Intent other, int flags)
  int fillIn(Intent other, int flags) =>
      _fillIn(reference, other.reference, flags);

  static final _filterEquals = jlookup<
              ffi.NativeFunction<
                  ffi.Uint8 Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_Intent_filterEquals")
      .asFunction<int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public boolean filterEquals(android.content.Intent other)
  bool filterEquals(Intent other) =>
      _filterEquals(reference, other.reference) != 0;

  static final _filterHashCode =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_Intent_filterHashCode")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int filterHashCode()
  int filterHashCode() => _filterHashCode(reference);

  static final _toString_1 = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
                  ffi.Pointer<ffi.Void>)>>("android_content_Intent_toString_1")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.String toString()
  jni.JlString toString_1() => jni.JlString.fromRef(_toString_1(reference));

  static final _toURI = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
                  ffi.Pointer<ffi.Void>)>>("android_content_Intent_toURI")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.String toURI()
  jni.JlString toURI() => jni.JlString.fromRef(_toURI(reference));

  static final _toUri = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_content_Intent_toUri")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public java.lang.String toUri(int flags)
  jni.JlString toUri(int flags) =>
      jni.JlString.fromRef(_toUri(reference, flags));

  static final _describeContents =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_Intent_describeContents")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int describeContents()
  int describeContents() => _describeContents(reference);

  static final _writeToParcel = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_content_Intent_writeToParcel")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public void writeToParcel(android.os.Parcel out, int flags)
  void writeToParcel(jni.JlObject out, int flags) =>
      _writeToParcel(reference, out.reference, flags);

  static final _readFromParcel = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_Intent_readFromParcel")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void readFromParcel(android.os.Parcel in)
  void readFromParcel(jni.JlObject in_) =>
      _readFromParcel(reference, in_.reference);

  static final _parseIntent = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("android_content_Intent_parseIntent")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: static public android.content.Intent parseIntent(android.content.res.Resources resources, org.xmlpull.v1.XmlPullParser parser, android.util.AttributeSet attrs)
  static Intent parseIntent(
          res.Resources resources, jni.JlObject parser, jni.JlObject attrs) =>
      Intent.fromRef(
          _parseIntent(resources.reference, parser.reference, attrs.reference));

  static final _normalizeMimeType = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_Intent_normalizeMimeType")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: static public java.lang.String normalizeMimeType(java.lang.String type)
  static jni.JlString normalizeMimeType(jni.JlString type) =>
      jni.JlString.fromRef(_normalizeMimeType(type.reference));
}

class Intent_ShortcutIconResource extends jni.JlObject {
  Intent_ShortcutIconResource.fromRef(ffi.Pointer<ffi.Void> ref)
      : super.fromRef(ref);

  /// from: static public final android.os.Parcelable.Creator<android.content.Intent.ShortcutIconResource> CREATOR
  static final _getCREATOR =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "get_android_content_Intent__ShortcutIconResource_CREATOR")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();
  static jni.JlObject get CREATOR => jni.JlObject.fromRef(_getCREATOR());

  /// from: public java.lang.String packageName
  static final _getpackageName = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_content_Intent__ShortcutIconResource_packageName")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>();
  jni.JlString get packageName =>
      jni.JlString.fromRef(_getpackageName(reference));
  static final _setpackageName = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "set_android_content_Intent__ShortcutIconResource_packageName")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();
  set packageName(jni.JlString value) =>
      _setpackageName(reference, value.reference);

  /// from: public java.lang.String resourceName
  static final _getresourceName = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_content_Intent__ShortcutIconResource_resourceName")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>();
  jni.JlString get resourceName =>
      jni.JlString.fromRef(_getresourceName(reference));
  static final _setresourceName = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "set_android_content_Intent__ShortcutIconResource_resourceName")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();
  set resourceName(jni.JlString value) =>
      _setresourceName(reference, value.reference);

  static final _ctor =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "android_content_Intent__ShortcutIconResource_new")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();

  /// from: public void <init>()
  Intent_ShortcutIconResource() : super.fromRef(_ctor());

  static final _fromContext = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "android_content_Intent__ShortcutIconResource_fromContext")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: static public android.content.Intent.ShortcutIconResource fromContext(android.content.Context context, int resourceId)
  static Intent_ShortcutIconResource fromContext(
          Context context, int resourceId) =>
      Intent_ShortcutIconResource.fromRef(
          _fromContext(context.reference, resourceId));

  static final _describeContents =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_Intent__ShortcutIconResource_describeContents")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int describeContents()
  int describeContents() => _describeContents(reference);

  static final _writeToParcel = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "android_content_Intent__ShortcutIconResource_writeToParcel")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public void writeToParcel(android.os.Parcel dest, int flags)
  void writeToParcel(jni.JlObject dest, int flags) =>
      _writeToParcel(reference, dest.reference, flags);

  static final _toString_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_Intent__ShortcutIconResource_toString_1")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.String toString()
  jni.JlString toString_1() => jni.JlString.fromRef(_toString_1(reference));
}

class Intent_FilterComparison extends jni.JlObject {
  Intent_FilterComparison.fromRef(ffi.Pointer<ffi.Void> ref)
      : super.fromRef(ref);

  static final _ctor = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_Intent__FilterComparison_new")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void <init>(android.content.Intent intent)
  Intent_FilterComparison(Intent intent)
      : super.fromRef(_ctor(intent.reference));

  static final _getIntent = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_Intent__FilterComparison_getIntent")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.content.Intent getIntent()
  Intent getIntent() => Intent.fromRef(_getIntent(reference));

  static final _equals_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Uint8 Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_Intent__FilterComparison_equals_1")
      .asFunction<int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public boolean equals(java.lang.Object obj)
  bool equals_1(jni.JlObject obj) => _equals_1(reference, obj.reference) != 0;

  static final _hashCode_1 =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_Intent__FilterComparison_hashCode_1")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int hashCode()
  int hashCode_1() => _hashCode_1(reference);
}

class ContentProvider extends jni.JlObject {
  ContentProvider.fromRef(ffi.Pointer<ffi.Void> ref) : super.fromRef(ref);

  static final _ctor =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "android_content_ContentProvider_new")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();

  /// from: public void <init>()
  ContentProvider() : super.fromRef(_ctor());

  static final _getContext = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_ContentProvider_getContext")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public final android.content.Context getContext()
  Context getContext() => Context.fromRef(_getContext(reference));

  static final _getCallingPackage = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_ContentProvider_getCallingPackage")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public final java.lang.String getCallingPackage()
  jni.JlString getCallingPackage() =>
      jni.JlString.fromRef(_getCallingPackage(reference));

  static final _setReadPermission = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_ContentProvider_setReadPermission")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: protected final void setReadPermission(java.lang.String permission)
  void setReadPermission(jni.JlString permission) =>
      _setReadPermission(reference, permission.reference);

  static final _getReadPermission = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_ContentProvider_getReadPermission")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public final java.lang.String getReadPermission()
  jni.JlString getReadPermission() =>
      jni.JlString.fromRef(_getReadPermission(reference));

  static final _setWritePermission = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_ContentProvider_setWritePermission")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: protected final void setWritePermission(java.lang.String permission)
  void setWritePermission(jni.JlString permission) =>
      _setWritePermission(reference, permission.reference);

  static final _getWritePermission = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_ContentProvider_getWritePermission")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public final java.lang.String getWritePermission()
  jni.JlString getWritePermission() =>
      jni.JlString.fromRef(_getWritePermission(reference));

  static final _setPathPermissions = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_ContentProvider_setPathPermissions")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: protected final void setPathPermissions(android.content.pm.PathPermission[] permissions)
  void setPathPermissions(jni.JlObject permissions) =>
      _setPathPermissions(reference, permissions.reference);

  static final _getPathPermissions = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_ContentProvider_getPathPermissions")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public final android.content.pm.PathPermission[] getPathPermissions()
  jni.JlObject getPathPermissions() =>
      jni.JlObject.fromRef(_getPathPermissions(reference));

  static final _onCreate =
      jlookup<ffi.NativeFunction<ffi.Uint8 Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_ContentProvider_onCreate")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public abstract boolean onCreate()
  bool onCreate() => _onCreate(reference) != 0;

  static final _onConfigurationChanged = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_ContentProvider_onConfigurationChanged")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void onConfigurationChanged(android.content.res.Configuration newConfig)
  void onConfigurationChanged(res.Configuration newConfig) =>
      _onConfigurationChanged(reference, newConfig.reference);

  static final _onLowMemory =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_ContentProvider_onLowMemory")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void onLowMemory()
  void onLowMemory() => _onLowMemory(reference);

  static final _onTrimMemory = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_content_ContentProvider_onTrimMemory")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public void onTrimMemory(int level)
  void onTrimMemory(int level) => _onTrimMemory(reference, level);

  static final _query = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>)>>(
          "android_content_ContentProvider_query")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public abstract android.database.Cursor query(android.net.Uri uri, java.lang.String[] projection, java.lang.String selection, java.lang.String[] selectionArgs, java.lang.String sortOrder)
  jni.JlObject query(
          jni.JlObject uri,
          jni.JlObject projection,
          jni.JlString selection,
          jni.JlObject selectionArgs,
          jni.JlString sortOrder) =>
      jni.JlObject.fromRef(_query(
          reference,
          uri.reference,
          projection.reference,
          selection.reference,
          selectionArgs.reference,
          sortOrder.reference));

  static final _query_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>)>>(
          "android_content_ContentProvider_query_1")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public android.database.Cursor query(android.net.Uri uri, java.lang.String[] projection, java.lang.String selection, java.lang.String[] selectionArgs, java.lang.String sortOrder, android.os.CancellationSignal cancellationSignal)
  jni.JlObject query_1(
          jni.JlObject uri,
          jni.JlObject projection,
          jni.JlString selection,
          jni.JlObject selectionArgs,
          jni.JlString sortOrder,
          jni.JlObject cancellationSignal) =>
      jni.JlObject.fromRef(_query_1(
          reference,
          uri.reference,
          projection.reference,
          selection.reference,
          selectionArgs.reference,
          sortOrder.reference,
          cancellationSignal.reference));

  static final _query_2 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>)>>(
          "android_content_ContentProvider_query_2")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public android.database.Cursor query(android.net.Uri uri, java.lang.String[] projection, android.os.Bundle queryArgs, android.os.CancellationSignal cancellationSignal)
  jni.JlObject query_2(jni.JlObject uri, jni.JlObject projection,
          jni.JlObject queryArgs, jni.JlObject cancellationSignal) =>
      jni.JlObject.fromRef(_query_2(
          reference,
          uri.reference,
          projection.reference,
          queryArgs.reference,
          cancellationSignal.reference));

  static final _getType = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_ContentProvider_getType")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public abstract java.lang.String getType(android.net.Uri uri)
  jni.JlString getType(jni.JlObject uri) =>
      jni.JlString.fromRef(_getType(reference, uri.reference));

  static final _canonicalize = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_ContentProvider_canonicalize")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.net.Uri canonicalize(android.net.Uri url)
  jni.JlObject canonicalize(jni.JlObject url) =>
      jni.JlObject.fromRef(_canonicalize(reference, url.reference));

  static final _uncanonicalize = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_ContentProvider_uncanonicalize")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.net.Uri uncanonicalize(android.net.Uri url)
  jni.JlObject uncanonicalize(jni.JlObject url) =>
      jni.JlObject.fromRef(_uncanonicalize(reference, url.reference));

  static final _refresh = jlookup<
              ffi.NativeFunction<
                  ffi.Uint8 Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>)>>(
          "android_content_ContentProvider_refresh")
      .asFunction<
          int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public boolean refresh(android.net.Uri uri, android.os.Bundle args, android.os.CancellationSignal cancellationSignal)
  bool refresh(jni.JlObject uri, jni.JlObject args,
          jni.JlObject cancellationSignal) =>
      _refresh(reference, uri.reference, args.reference,
          cancellationSignal.reference) !=
      0;

  static final _insert = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_ContentProvider_insert")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public abstract android.net.Uri insert(android.net.Uri uri, android.content.ContentValues values)
  jni.JlObject insert(jni.JlObject uri, ContentValues values) =>
      jni.JlObject.fromRef(_insert(reference, uri.reference, values.reference));

  static final _bulkInsert = jlookup<
              ffi.NativeFunction<
                  ffi.Int32 Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_ContentProvider_bulkInsert")
      .asFunction<
          int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public int bulkInsert(android.net.Uri uri, android.content.ContentValues[] values)
  int bulkInsert(jni.JlObject uri, jni.JlObject values) =>
      _bulkInsert(reference, uri.reference, values.reference);

  static final _delete_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Int32 Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>)>>(
          "android_content_ContentProvider_delete_1")
      .asFunction<
          int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public abstract int delete(android.net.Uri uri, java.lang.String selection, java.lang.String[] selectionArgs)
  int delete_1(jni.JlObject uri, jni.JlString selection,
          jni.JlObject selectionArgs) =>
      _delete_1(reference, uri.reference, selection.reference,
          selectionArgs.reference);

  static final _update = jlookup<
              ffi.NativeFunction<
                  ffi.Int32 Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>)>>(
          "android_content_ContentProvider_update")
      .asFunction<
          int Function(
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public abstract int update(android.net.Uri uri, android.content.ContentValues values, java.lang.String selection, java.lang.String[] selectionArgs)
  int update(jni.JlObject uri, ContentValues values, jni.JlString selection,
          jni.JlObject selectionArgs) =>
      _update(reference, uri.reference, values.reference, selection.reference,
          selectionArgs.reference);

  static final _openFile = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_ContentProvider_openFile")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.os.ParcelFileDescriptor openFile(android.net.Uri uri, java.lang.String mode)
  jni.JlObject openFile(jni.JlObject uri, jni.JlString mode) =>
      jni.JlObject.fromRef(_openFile(reference, uri.reference, mode.reference));

  static final _openFile_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>)>>(
          "android_content_ContentProvider_openFile_1")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public android.os.ParcelFileDescriptor openFile(android.net.Uri uri, java.lang.String mode, android.os.CancellationSignal signal)
  jni.JlObject openFile_1(
          jni.JlObject uri, jni.JlString mode, jni.JlObject signal) =>
      jni.JlObject.fromRef(_openFile_1(
          reference, uri.reference, mode.reference, signal.reference));

  static final _openAssetFile = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_ContentProvider_openAssetFile")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.content.res.AssetFileDescriptor openAssetFile(android.net.Uri uri, java.lang.String mode)
  res.AssetFileDescriptor openAssetFile(jni.JlObject uri, jni.JlString mode) =>
      res.AssetFileDescriptor.fromRef(
          _openAssetFile(reference, uri.reference, mode.reference));

  static final _openAssetFile_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>)>>(
          "android_content_ContentProvider_openAssetFile_1")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public android.content.res.AssetFileDescriptor openAssetFile(android.net.Uri uri, java.lang.String mode, android.os.CancellationSignal signal)
  res.AssetFileDescriptor openAssetFile_1(
          jni.JlObject uri, jni.JlString mode, jni.JlObject signal) =>
      res.AssetFileDescriptor.fromRef(_openAssetFile_1(
          reference, uri.reference, mode.reference, signal.reference));

  static final _openFileHelper = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_ContentProvider_openFileHelper")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: protected final android.os.ParcelFileDescriptor openFileHelper(android.net.Uri uri, java.lang.String mode)
  jni.JlObject openFileHelper(jni.JlObject uri, jni.JlString mode) =>
      jni.JlObject.fromRef(
          _openFileHelper(reference, uri.reference, mode.reference));

  static final _getStreamTypes = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_ContentProvider_getStreamTypes")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.String[] getStreamTypes(android.net.Uri uri, java.lang.String mimeTypeFilter)
  jni.JlObject getStreamTypes(jni.JlObject uri, jni.JlString mimeTypeFilter) =>
      jni.JlObject.fromRef(
          _getStreamTypes(reference, uri.reference, mimeTypeFilter.reference));

  static final _openTypedAssetFile = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>)>>(
          "android_content_ContentProvider_openTypedAssetFile")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public android.content.res.AssetFileDescriptor openTypedAssetFile(android.net.Uri uri, java.lang.String mimeTypeFilter, android.os.Bundle opts)
  res.AssetFileDescriptor openTypedAssetFile(
          jni.JlObject uri, jni.JlString mimeTypeFilter, jni.JlObject opts) =>
      res.AssetFileDescriptor.fromRef(_openTypedAssetFile(
          reference, uri.reference, mimeTypeFilter.reference, opts.reference));

  static final _openTypedAssetFile_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>)>>(
          "android_content_ContentProvider_openTypedAssetFile_1")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public android.content.res.AssetFileDescriptor openTypedAssetFile(android.net.Uri uri, java.lang.String mimeTypeFilter, android.os.Bundle opts, android.os.CancellationSignal signal)
  res.AssetFileDescriptor openTypedAssetFile_1(
          jni.JlObject uri,
          jni.JlString mimeTypeFilter,
          jni.JlObject opts,
          jni.JlObject signal) =>
      res.AssetFileDescriptor.fromRef(_openTypedAssetFile_1(
          reference,
          uri.reference,
          mimeTypeFilter.reference,
          opts.reference,
          signal.reference));

  static final _isTemporary =
      jlookup<ffi.NativeFunction<ffi.Uint8 Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_ContentProvider_isTemporary")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: protected boolean isTemporary()
  bool isTemporary() => _isTemporary(reference) != 0;

  static final _attachInfo = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_ContentProvider_attachInfo")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public void attachInfo(android.content.Context context, android.content.pm.ProviderInfo info)
  void attachInfo(Context context, pm.ProviderInfo info) =>
      _attachInfo(reference, context.reference, info.reference);

  static final _applyBatch = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_ContentProvider_applyBatch")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.content.ContentProviderResult[] applyBatch(java.util.ArrayList<android.content.ContentProviderOperation> operations)
  jni.JlObject applyBatch(jni.JlObject operations) =>
      jni.JlObject.fromRef(_applyBatch(reference, operations.reference));

  static final _call = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>)>>(
          "android_content_ContentProvider_call")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public android.os.Bundle call(java.lang.String method, java.lang.String arg, android.os.Bundle extras)
  jni.JlObject call(
          jni.JlString method, jni.JlString arg, jni.JlObject extras) =>
      jni.JlObject.fromRef(
          _call(reference, method.reference, arg.reference, extras.reference));

  static final _shutdown =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_ContentProvider_shutdown")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void shutdown()
  void shutdown() => _shutdown(reference);

  static final _dump = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>)>>(
          "android_content_ContentProvider_dump")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void dump(java.io.FileDescriptor fd, java.io.PrintWriter writer, java.lang.String[] args)
  void dump(jni.JlObject fd, jni.JlObject writer, jni.JlObject args) =>
      _dump(reference, fd.reference, writer.reference, args.reference);
}

class ContentProvider_PipeDataWriter extends jni.JlObject {
  ContentProvider_PipeDataWriter.fromRef(ffi.Pointer<ffi.Void> ref)
      : super.fromRef(ref);
}

class ContentValues extends jni.JlObject {
  ContentValues.fromRef(ffi.Pointer<ffi.Void> ref) : super.fromRef(ref);

  /// from: static public final android.os.Parcelable.Creator<android.content.ContentValues> CREATOR
  static final _getCREATOR =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "get_android_content_ContentValues_CREATOR")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();
  static jni.JlObject get CREATOR => jni.JlObject.fromRef(_getCREATOR());

  /// from: static public final java.lang.String TAG
  static const TAG = "ContentValues";

  static final _ctor =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "android_content_ContentValues_new")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();

  /// from: public void <init>()
  ContentValues() : super.fromRef(_ctor());

  static final _ctor_1 =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function(ffi.Int32)>>(
              "android_content_ContentValues_new_1")
          .asFunction<ffi.Pointer<ffi.Void> Function(int)>();

  /// from: public void <init>(int size)
  ContentValues.ctor_1(int size) : super.fromRef(_ctor_1(size));

  static final _ctor_2 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_ContentValues_new_2")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void <init>(android.content.ContentValues from)
  ContentValues.ctor_2(ContentValues from)
      : super.fromRef(_ctor_2(from.reference));

  static final _equals_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Uint8 Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_ContentValues_equals_1")
      .asFunction<int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public boolean equals(java.lang.Object object)
  bool equals_1(jni.JlObject object) =>
      _equals_1(reference, object.reference) != 0;

  static final _hashCode_1 =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_ContentValues_hashCode_1")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int hashCode()
  int hashCode_1() => _hashCode_1(reference);

  static final _put = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("android_content_ContentValues_put")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public void put(java.lang.String key, java.lang.String value)
  void put(jni.JlString key, jni.JlString value) =>
      _put(reference, key.reference, value.reference);

  static final _putAll = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_ContentValues_putAll")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void putAll(android.content.ContentValues other)
  void putAll(ContentValues other) => _putAll(reference, other.reference);

  static final _put_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_ContentValues_put_1")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public void put(java.lang.String key, java.lang.Byte value)
  void put_1(jni.JlString key, jni.JlObject value) =>
      _put_1(reference, key.reference, value.reference);

  static final _put_2 = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_ContentValues_put_2")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public void put(java.lang.String key, java.lang.Short value)
  void put_2(jni.JlString key, jni.JlObject value) =>
      _put_2(reference, key.reference, value.reference);

  static final _put_3 = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_ContentValues_put_3")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public void put(java.lang.String key, java.lang.Integer value)
  void put_3(jni.JlString key, jni.JlObject value) =>
      _put_3(reference, key.reference, value.reference);

  static final _put_4 = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_ContentValues_put_4")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public void put(java.lang.String key, java.lang.Long value)
  void put_4(jni.JlString key, jni.JlObject value) =>
      _put_4(reference, key.reference, value.reference);

  static final _put_5 = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_ContentValues_put_5")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public void put(java.lang.String key, java.lang.Float value)
  void put_5(jni.JlString key, jni.JlObject value) =>
      _put_5(reference, key.reference, value.reference);

  static final _put_6 = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_ContentValues_put_6")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public void put(java.lang.String key, java.lang.Double value)
  void put_6(jni.JlString key, jni.JlObject value) =>
      _put_6(reference, key.reference, value.reference);

  static final _put_7 = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_ContentValues_put_7")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public void put(java.lang.String key, java.lang.Boolean value)
  void put_7(jni.JlString key, jni.JlObject value) =>
      _put_7(reference, key.reference, value.reference);

  static final _put_8 = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_ContentValues_put_8")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public void put(java.lang.String key, byte[] value)
  void put_8(jni.JlString key, jni.JlObject value) =>
      _put_8(reference, key.reference, value.reference);

  static final _putNull = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_ContentValues_putNull")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void putNull(java.lang.String key)
  void putNull(jni.JlString key) => _putNull(reference, key.reference);

  static final _size =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_ContentValues_size")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int size()
  int size() => _size(reference);

  static final _remove = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_ContentValues_remove")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void remove(java.lang.String key)
  void remove(jni.JlString key) => _remove(reference, key.reference);

  static final _clear =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_ContentValues_clear")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void clear()
  void clear() => _clear(reference);

  static final _containsKey = jlookup<
              ffi.NativeFunction<
                  ffi.Uint8 Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_ContentValues_containsKey")
      .asFunction<int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public boolean containsKey(java.lang.String key)
  bool containsKey(jni.JlString key) =>
      _containsKey(reference, key.reference) != 0;

  static final _get_ = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("android_content_ContentValues_get_")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.Object get(java.lang.String key)
  jni.JlObject get_(jni.JlString key) =>
      jni.JlObject.fromRef(_get_(reference, key.reference));

  static final _getAsString = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_ContentValues_getAsString")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.String getAsString(java.lang.String key)
  jni.JlString getAsString(jni.JlString key) =>
      jni.JlString.fromRef(_getAsString(reference, key.reference));

  static final _getAsLong = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_ContentValues_getAsLong")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.Long getAsLong(java.lang.String key)
  jni.JlObject getAsLong(jni.JlString key) =>
      jni.JlObject.fromRef(_getAsLong(reference, key.reference));

  static final _getAsInteger = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_ContentValues_getAsInteger")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.Integer getAsInteger(java.lang.String key)
  jni.JlObject getAsInteger(jni.JlString key) =>
      jni.JlObject.fromRef(_getAsInteger(reference, key.reference));

  static final _getAsShort = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_ContentValues_getAsShort")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.Short getAsShort(java.lang.String key)
  jni.JlObject getAsShort(jni.JlString key) =>
      jni.JlObject.fromRef(_getAsShort(reference, key.reference));

  static final _getAsByte = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_ContentValues_getAsByte")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.Byte getAsByte(java.lang.String key)
  jni.JlObject getAsByte(jni.JlString key) =>
      jni.JlObject.fromRef(_getAsByte(reference, key.reference));

  static final _getAsDouble = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_ContentValues_getAsDouble")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.Double getAsDouble(java.lang.String key)
  jni.JlObject getAsDouble(jni.JlString key) =>
      jni.JlObject.fromRef(_getAsDouble(reference, key.reference));

  static final _getAsFloat = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_ContentValues_getAsFloat")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.Float getAsFloat(java.lang.String key)
  jni.JlObject getAsFloat(jni.JlString key) =>
      jni.JlObject.fromRef(_getAsFloat(reference, key.reference));

  static final _getAsBoolean = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_ContentValues_getAsBoolean")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.Boolean getAsBoolean(java.lang.String key)
  jni.JlObject getAsBoolean(jni.JlString key) =>
      jni.JlObject.fromRef(_getAsBoolean(reference, key.reference));

  static final _getAsByteArray = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_ContentValues_getAsByteArray")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public byte[] getAsByteArray(java.lang.String key)
  jni.JlObject getAsByteArray(jni.JlString key) =>
      jni.JlObject.fromRef(_getAsByteArray(reference, key.reference));

  static final _valueSet = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_ContentValues_valueSet")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.util.Set<java.util.Map.Entry<java.lang.String,java.lang.Object>> valueSet()
  jni.JlObject valueSet() => jni.JlObject.fromRef(_valueSet(reference));

  static final _keySet = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_ContentValues_keySet")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.util.Set<java.lang.String> keySet()
  jni.JlObject keySet() => jni.JlObject.fromRef(_keySet(reference));

  static final _describeContents =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_ContentValues_describeContents")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int describeContents()
  int describeContents() => _describeContents(reference);

  static final _writeToParcel = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_content_ContentValues_writeToParcel")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public void writeToParcel(android.os.Parcel parcel, int flags)
  void writeToParcel(jni.JlObject parcel, int flags) =>
      _writeToParcel(reference, parcel.reference, flags);

  static final _toString_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_ContentValues_toString_1")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.String toString()
  jni.JlString toString_1() => jni.JlString.fromRef(_toString_1(reference));
}

class Loader extends jni.JlObject {
  Loader.fromRef(ffi.Pointer<ffi.Void> ref) : super.fromRef(ref);

  static final _ctor = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
                  ffi.Pointer<ffi.Void>)>>("android_content_Loader_new")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void <init>(android.content.Context context)
  Loader(Context context) : super.fromRef(_ctor(context.reference));

  static final _deliverCancellation =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_Loader_deliverCancellation")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void deliverCancellation()
  void deliverCancellation() => _deliverCancellation(reference);

  static final _getContext = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
                  ffi.Pointer<ffi.Void>)>>("android_content_Loader_getContext")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.content.Context getContext()
  Context getContext() => Context.fromRef(_getContext(reference));

  static final _getId =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_Loader_getId")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int getId()
  int getId() => _getId(reference);

  static final _registerListener = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Int32,
                      ffi.Pointer<ffi.Void>)>>(
          "android_content_Loader_registerListener")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, int, ffi.Pointer<ffi.Void>)>();

  /// from: public void registerListener(int id, android.content.Loader.OnLoadCompleteListener<D> listener)
  void registerListener(int id, Loader_OnLoadCompleteListener listener) =>
      _registerListener(reference, id, listener.reference);

  static final _unregisterListener = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_Loader_unregisterListener")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void unregisterListener(android.content.Loader.OnLoadCompleteListener<D> listener)
  void unregisterListener(Loader_OnLoadCompleteListener listener) =>
      _unregisterListener(reference, listener.reference);

  static final _registerOnLoadCanceledListener = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_Loader_registerOnLoadCanceledListener")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void registerOnLoadCanceledListener(android.content.Loader.OnLoadCanceledListener<D> listener)
  void registerOnLoadCanceledListener(Loader_OnLoadCanceledListener listener) =>
      _registerOnLoadCanceledListener(reference, listener.reference);

  static final _unregisterOnLoadCanceledListener = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_Loader_unregisterOnLoadCanceledListener")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void unregisterOnLoadCanceledListener(android.content.Loader.OnLoadCanceledListener<D> listener)
  void unregisterOnLoadCanceledListener(
          Loader_OnLoadCanceledListener listener) =>
      _unregisterOnLoadCanceledListener(reference, listener.reference);

  static final _isStarted =
      jlookup<ffi.NativeFunction<ffi.Uint8 Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_Loader_isStarted")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public boolean isStarted()
  bool isStarted() => _isStarted(reference) != 0;

  static final _isAbandoned =
      jlookup<ffi.NativeFunction<ffi.Uint8 Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_Loader_isAbandoned")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public boolean isAbandoned()
  bool isAbandoned() => _isAbandoned(reference) != 0;

  static final _isReset =
      jlookup<ffi.NativeFunction<ffi.Uint8 Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_Loader_isReset")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public boolean isReset()
  bool isReset() => _isReset(reference) != 0;

  static final _startLoading =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_Loader_startLoading")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: public final void startLoading()
  void startLoading() => _startLoading(reference);

  static final _onStartLoading =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_Loader_onStartLoading")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: protected void onStartLoading()
  void onStartLoading() => _onStartLoading(reference);

  static final _cancelLoad =
      jlookup<ffi.NativeFunction<ffi.Uint8 Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_Loader_cancelLoad")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public boolean cancelLoad()
  bool cancelLoad() => _cancelLoad(reference) != 0;

  static final _onCancelLoad =
      jlookup<ffi.NativeFunction<ffi.Uint8 Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_Loader_onCancelLoad")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: protected boolean onCancelLoad()
  bool onCancelLoad() => _onCancelLoad(reference) != 0;

  static final _forceLoad =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_Loader_forceLoad")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void forceLoad()
  void forceLoad() => _forceLoad(reference);

  static final _onForceLoad =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_Loader_onForceLoad")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: protected void onForceLoad()
  void onForceLoad() => _onForceLoad(reference);

  static final _stopLoading =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_Loader_stopLoading")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void stopLoading()
  void stopLoading() => _stopLoading(reference);

  static final _onStopLoading =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_Loader_onStopLoading")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: protected void onStopLoading()
  void onStopLoading() => _onStopLoading(reference);

  static final _abandon =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_Loader_abandon")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void abandon()
  void abandon() => _abandon(reference);

  static final _onAbandon =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_Loader_onAbandon")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: protected void onAbandon()
  void onAbandon() => _onAbandon(reference);

  static final _reset =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_Loader_reset")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void reset()
  void reset() => _reset(reference);

  static final _onReset =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_Loader_onReset")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: protected void onReset()
  void onReset() => _onReset(reference);

  static final _takeContentChanged =
      jlookup<ffi.NativeFunction<ffi.Uint8 Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_Loader_takeContentChanged")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public boolean takeContentChanged()
  bool takeContentChanged() => _takeContentChanged(reference) != 0;

  static final _commitContentChanged =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_Loader_commitContentChanged")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void commitContentChanged()
  void commitContentChanged() => _commitContentChanged(reference);

  static final _rollbackContentChanged =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_Loader_rollbackContentChanged")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void rollbackContentChanged()
  void rollbackContentChanged() => _rollbackContentChanged(reference);

  static final _onContentChanged =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_Loader_onContentChanged")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void onContentChanged()
  void onContentChanged() => _onContentChanged(reference);

  static final _toString_1 = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
                  ffi.Pointer<ffi.Void>)>>("android_content_Loader_toString_1")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.String toString()
  jni.JlString toString_1() => jni.JlString.fromRef(_toString_1(reference));

  static final _dump = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("android_content_Loader_dump")
      .asFunction<
          void Function(
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public void dump(java.lang.String prefix, java.io.FileDescriptor fd, java.io.PrintWriter writer, java.lang.String[] args)
  void dump(jni.JlString prefix, jni.JlObject fd, jni.JlObject writer,
          jni.JlObject args) =>
      _dump(reference, prefix.reference, fd.reference, writer.reference,
          args.reference);
}

class Loader_OnLoadCompleteListener extends jni.JlObject {
  Loader_OnLoadCompleteListener.fromRef(ffi.Pointer<ffi.Void> ref)
      : super.fromRef(ref);
}

class Loader_OnLoadCanceledListener extends jni.JlObject {
  Loader_OnLoadCanceledListener.fromRef(ffi.Pointer<ffi.Void> ref)
      : super.fromRef(ref);

  static final _onLoadCanceled = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_Loader__OnLoadCanceledListener_onLoadCanceled")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public abstract void onLoadCanceled(android.content.Loader<D> loader)
  void onLoadCanceled(Loader loader) =>
      _onLoadCanceled(reference, loader.reference);
}

class Loader_ForceLoadContentObserver extends jni.JlObject {
  Loader_ForceLoadContentObserver.fromRef(ffi.Pointer<ffi.Void> ref)
      : super.fromRef(ref);

  static final _ctor =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "android_content_Loader__ForceLoadContentObserver_new")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();

  /// from: public void <init>()
  Loader_ForceLoadContentObserver() : super.fromRef(_ctor());

  static final _deliverSelfNotifications = jlookup<
              ffi.NativeFunction<ffi.Uint8 Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_Loader__ForceLoadContentObserver_deliverSelfNotifications")
      .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public boolean deliverSelfNotifications()
  bool deliverSelfNotifications() => _deliverSelfNotifications(reference) != 0;

  static final _onChange = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Uint8)>>(
          "android_content_Loader__ForceLoadContentObserver_onChange")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public void onChange(boolean selfChange)
  void onChange(bool selfChange) => _onChange(reference, selfChange ? 1 : 0);
}

class SyncContext extends jni.JlObject {
  SyncContext.fromRef(ffi.Pointer<ffi.Void> ref) : super.fromRef(ref);

  static final _ctor =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "android_content_SyncContext_new")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();

  /// from: void <init>()
  SyncContext() : super.fromRef(_ctor());

  static final _onFinished = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_SyncContext_onFinished")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void onFinished(android.content.SyncResult result)
  void onFinished(SyncResult result) =>
      _onFinished(reference, result.reference);

  static final _getSyncContextBinder = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_SyncContext_getSyncContextBinder")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.os.IBinder getSyncContextBinder()
  jni.JlObject getSyncContextBinder() =>
      jni.JlObject.fromRef(_getSyncContextBinder(reference));
}

class ContentProviderOperation extends jni.JlObject {
  ContentProviderOperation.fromRef(ffi.Pointer<ffi.Void> ref)
      : super.fromRef(ref);

  /// from: static public final android.os.Parcelable.Creator<android.content.ContentProviderOperation> CREATOR
  static final _getCREATOR =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "get_android_content_ContentProviderOperation_CREATOR")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();
  static jni.JlObject get CREATOR => jni.JlObject.fromRef(_getCREATOR());

  static final _ctor = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_ContentProviderOperation_new")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: void <init>(android.content.ContentProviderOperation.Builder builder)
  ContentProviderOperation(ContentProviderOperation_Builder builder)
      : super.fromRef(_ctor(builder.reference));

  static final _writeToParcel = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "android_content_ContentProviderOperation_writeToParcel")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public void writeToParcel(android.os.Parcel dest, int flags)
  void writeToParcel(jni.JlObject dest, int flags) =>
      _writeToParcel(reference, dest.reference, flags);

  static final _newInsert = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_ContentProviderOperation_newInsert")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: static public android.content.ContentProviderOperation.Builder newInsert(android.net.Uri uri)
  static ContentProviderOperation_Builder newInsert(jni.JlObject uri) =>
      ContentProviderOperation_Builder.fromRef(_newInsert(uri.reference));

  static final _newUpdate = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_ContentProviderOperation_newUpdate")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: static public android.content.ContentProviderOperation.Builder newUpdate(android.net.Uri uri)
  static ContentProviderOperation_Builder newUpdate(jni.JlObject uri) =>
      ContentProviderOperation_Builder.fromRef(_newUpdate(uri.reference));

  static final _newDelete = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_ContentProviderOperation_newDelete")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: static public android.content.ContentProviderOperation.Builder newDelete(android.net.Uri uri)
  static ContentProviderOperation_Builder newDelete(jni.JlObject uri) =>
      ContentProviderOperation_Builder.fromRef(_newDelete(uri.reference));

  static final _newAssertQuery = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_ContentProviderOperation_newAssertQuery")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: static public android.content.ContentProviderOperation.Builder newAssertQuery(android.net.Uri uri)
  static ContentProviderOperation_Builder newAssertQuery(jni.JlObject uri) =>
      ContentProviderOperation_Builder.fromRef(_newAssertQuery(uri.reference));

  static final _getUri = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_ContentProviderOperation_getUri")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.net.Uri getUri()
  jni.JlObject getUri() => jni.JlObject.fromRef(_getUri(reference));

  static final _isYieldAllowed =
      jlookup<ffi.NativeFunction<ffi.Uint8 Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_ContentProviderOperation_isYieldAllowed")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public boolean isYieldAllowed()
  bool isYieldAllowed() => _isYieldAllowed(reference) != 0;

  static final _isInsert =
      jlookup<ffi.NativeFunction<ffi.Uint8 Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_ContentProviderOperation_isInsert")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public boolean isInsert()
  bool isInsert() => _isInsert(reference) != 0;

  static final _isDelete =
      jlookup<ffi.NativeFunction<ffi.Uint8 Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_ContentProviderOperation_isDelete")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public boolean isDelete()
  bool isDelete() => _isDelete(reference) != 0;

  static final _isUpdate =
      jlookup<ffi.NativeFunction<ffi.Uint8 Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_ContentProviderOperation_isUpdate")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public boolean isUpdate()
  bool isUpdate() => _isUpdate(reference) != 0;

  static final _isAssertQuery =
      jlookup<ffi.NativeFunction<ffi.Uint8 Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_ContentProviderOperation_isAssertQuery")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public boolean isAssertQuery()
  bool isAssertQuery() => _isAssertQuery(reference) != 0;

  static final _isWriteOperation =
      jlookup<ffi.NativeFunction<ffi.Uint8 Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_ContentProviderOperation_isWriteOperation")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public boolean isWriteOperation()
  bool isWriteOperation() => _isWriteOperation(reference) != 0;

  static final _isReadOperation =
      jlookup<ffi.NativeFunction<ffi.Uint8 Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_ContentProviderOperation_isReadOperation")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public boolean isReadOperation()
  bool isReadOperation() => _isReadOperation(reference) != 0;

  static final _apply = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_content_ContentProviderOperation_apply")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public android.content.ContentProviderResult apply(android.content.ContentProvider provider, android.content.ContentProviderResult[] backRefs, int numBackRefs)
  ContentProviderResult apply(
          ContentProvider provider, jni.JlObject backRefs, int numBackRefs) =>
      ContentProviderResult.fromRef(_apply(
          reference, provider.reference, backRefs.reference, numBackRefs));

  static final _resolveValueBackReferences = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "android_content_ContentProviderOperation_resolveValueBackReferences")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public android.content.ContentValues resolveValueBackReferences(android.content.ContentProviderResult[] backRefs, int numBackRefs)
  ContentValues resolveValueBackReferences(
          jni.JlObject backRefs, int numBackRefs) =>
      ContentValues.fromRef(_resolveValueBackReferences(
          reference, backRefs.reference, numBackRefs));

  static final _resolveSelectionArgsBackReferences = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "android_content_ContentProviderOperation_resolveSelectionArgsBackReferences")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public java.lang.String[] resolveSelectionArgsBackReferences(android.content.ContentProviderResult[] backRefs, int numBackRefs)
  jni.JlObject resolveSelectionArgsBackReferences(
          jni.JlObject backRefs, int numBackRefs) =>
      jni.JlObject.fromRef(_resolveSelectionArgsBackReferences(
          reference, backRefs.reference, numBackRefs));

  static final _toString_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_ContentProviderOperation_toString_1")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.String toString()
  jni.JlString toString_1() => jni.JlString.fromRef(_toString_1(reference));

  static final _describeContents =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_ContentProviderOperation_describeContents")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int describeContents()
  int describeContents() => _describeContents(reference);
}

class ContentProviderOperation_Builder extends jni.JlObject {
  ContentProviderOperation_Builder.fromRef(ffi.Pointer<ffi.Void> ref)
      : super.fromRef(ref);

  static final _ctor = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Int32, ffi.Pointer<ffi.Void>)>>(
          "android_content_ContentProviderOperation__Builder_new")
      .asFunction<ffi.Pointer<ffi.Void> Function(int, ffi.Pointer<ffi.Void>)>();

  /// from: void <init>(int type, android.net.Uri uri)
  ContentProviderOperation_Builder(int type, jni.JlObject uri)
      : super.fromRef(_ctor(type, uri.reference));

  static final _build = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_ContentProviderOperation__Builder_build")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.content.ContentProviderOperation build()
  ContentProviderOperation build() =>
      ContentProviderOperation.fromRef(_build(reference));

  static final _withValueBackReferences = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_ContentProviderOperation__Builder_withValueBackReferences")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.content.ContentProviderOperation.Builder withValueBackReferences(android.content.ContentValues backReferences)
  ContentProviderOperation_Builder withValueBackReferences(
          ContentValues backReferences) =>
      ContentProviderOperation_Builder.fromRef(
          _withValueBackReferences(reference, backReferences.reference));

  static final _withValueBackReference = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "android_content_ContentProviderOperation__Builder_withValueBackReference")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public android.content.ContentProviderOperation.Builder withValueBackReference(java.lang.String key, int previousResult)
  ContentProviderOperation_Builder withValueBackReference(
          jni.JlString key, int previousResult) =>
      ContentProviderOperation_Builder.fromRef(
          _withValueBackReference(reference, key.reference, previousResult));

  static final _withSelectionBackReference = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Int32, ffi.Int32)>>(
          "android_content_ContentProviderOperation__Builder_withSelectionBackReference")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int, int)>();

  /// from: public android.content.ContentProviderOperation.Builder withSelectionBackReference(int selectionArgIndex, int previousResult)
  ContentProviderOperation_Builder withSelectionBackReference(
          int selectionArgIndex, int previousResult) =>
      ContentProviderOperation_Builder.fromRef(_withSelectionBackReference(
          reference, selectionArgIndex, previousResult));

  static final _withValues = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_ContentProviderOperation__Builder_withValues")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.content.ContentProviderOperation.Builder withValues(android.content.ContentValues values)
  ContentProviderOperation_Builder withValues(ContentValues values) =>
      ContentProviderOperation_Builder.fromRef(
          _withValues(reference, values.reference));

  static final _withValue = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_ContentProviderOperation__Builder_withValue")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.content.ContentProviderOperation.Builder withValue(java.lang.String key, java.lang.Object value)
  ContentProviderOperation_Builder withValue(
          jni.JlString key, jni.JlObject value) =>
      ContentProviderOperation_Builder.fromRef(
          _withValue(reference, key.reference, value.reference));

  static final _withSelection = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_ContentProviderOperation__Builder_withSelection")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.content.ContentProviderOperation.Builder withSelection(java.lang.String selection, java.lang.String[] selectionArgs)
  ContentProviderOperation_Builder withSelection(
          jni.JlString selection, jni.JlObject selectionArgs) =>
      ContentProviderOperation_Builder.fromRef(_withSelection(
          reference, selection.reference, selectionArgs.reference));

  static final _withExpectedCount = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "android_content_ContentProviderOperation__Builder_withExpectedCount")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public android.content.ContentProviderOperation.Builder withExpectedCount(int count)
  ContentProviderOperation_Builder withExpectedCount(int count) =>
      ContentProviderOperation_Builder.fromRef(
          _withExpectedCount(reference, count));

  static final _withYieldAllowed = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Uint8)>>(
          "android_content_ContentProviderOperation__Builder_withYieldAllowed")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public android.content.ContentProviderOperation.Builder withYieldAllowed(boolean yieldAllowed)
  ContentProviderOperation_Builder withYieldAllowed(bool yieldAllowed) =>
      ContentProviderOperation_Builder.fromRef(
          _withYieldAllowed(reference, yieldAllowed ? 1 : 0));
}

class ContentQueryMap extends jni.JlObject {
  ContentQueryMap.fromRef(ffi.Pointer<ffi.Void> ref) : super.fromRef(ref);

  static final _ctor = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Uint8,
                      ffi.Pointer<ffi.Void>)>>(
          "android_content_ContentQueryMap_new")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, int, ffi.Pointer<ffi.Void>)>();

  /// from: public void <init>(android.database.Cursor cursor, java.lang.String columnNameOfKey, boolean keepUpdated, android.os.Handler handlerForUpdateNotifications)
  ContentQueryMap(jni.JlObject cursor, jni.JlString columnNameOfKey,
      bool keepUpdated, jni.JlObject handlerForUpdateNotifications)
      : super.fromRef(_ctor(cursor.reference, columnNameOfKey.reference,
            keepUpdated ? 1 : 0, handlerForUpdateNotifications.reference));

  static final _setKeepUpdated = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  ffi.Uint8)>>("android_content_ContentQueryMap_setKeepUpdated")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public void setKeepUpdated(boolean keepUpdated)
  void setKeepUpdated(bool keepUpdated) =>
      _setKeepUpdated(reference, keepUpdated ? 1 : 0);

  static final _getValues = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_ContentQueryMap_getValues")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: synchronized public android.content.ContentValues getValues(java.lang.String rowName)
  ContentValues getValues(jni.JlString rowName) =>
      ContentValues.fromRef(_getValues(reference, rowName.reference));

  static final _requery =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_ContentQueryMap_requery")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void requery()
  void requery() => _requery(reference);

  static final _getRows = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_ContentQueryMap_getRows")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: synchronized public java.util.Map<java.lang.String,android.content.ContentValues> getRows()
  jni.JlObject getRows() => jni.JlObject.fromRef(_getRows(reference));

  static final _close =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_ContentQueryMap_close")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: synchronized public void close()
  void close() => _close(reference);

  static final _finalize =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_ContentQueryMap_finalize")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: protected void finalize()
  void finalize() => _finalize(reference);
}

class ClipData extends jni.JlObject {
  ClipData.fromRef(ffi.Pointer<ffi.Void> ref) : super.fromRef(ref);

  /// from: static public final android.os.Parcelable.Creator<android.content.ClipData> CREATOR
  static final _getCREATOR =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "get_android_content_ClipData_CREATOR")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();
  static jni.JlObject get CREATOR => jni.JlObject.fromRef(_getCREATOR());

  static final _ctor = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("android_content_ClipData_new")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void <init>(java.lang.CharSequence label, java.lang.String[] mimeTypes, android.content.ClipData.Item item)
  ClipData(jni.JlObject label, jni.JlObject mimeTypes, ClipData_Item item)
      : super.fromRef(
            _ctor(label.reference, mimeTypes.reference, item.reference));

  static final _ctor_1 = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("android_content_ClipData_new_1")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void <init>(android.content.ClipDescription description, android.content.ClipData.Item item)
  ClipData.ctor_1(ClipDescription description, ClipData_Item item)
      : super.fromRef(_ctor_1(description.reference, item.reference));

  static final _ctor_2 = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
                  ffi.Pointer<ffi.Void>)>>("android_content_ClipData_new_2")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void <init>(android.content.ClipData other)
  ClipData.ctor_2(ClipData other) : super.fromRef(_ctor_2(other.reference));

  static final _newPlainText = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_ClipData_newPlainText")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: static public android.content.ClipData newPlainText(java.lang.CharSequence label, java.lang.CharSequence text)
  static ClipData newPlainText(jni.JlObject label, jni.JlObject text) =>
      ClipData.fromRef(_newPlainText(label.reference, text.reference));

  static final _newHtmlText = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_ClipData_newHtmlText")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: static public android.content.ClipData newHtmlText(java.lang.CharSequence label, java.lang.CharSequence text, java.lang.String htmlText)
  static ClipData newHtmlText(
          jni.JlObject label, jni.JlObject text, jni.JlString htmlText) =>
      ClipData.fromRef(
          _newHtmlText(label.reference, text.reference, htmlText.reference));

  static final _newIntent = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("android_content_ClipData_newIntent")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: static public android.content.ClipData newIntent(java.lang.CharSequence label, android.content.Intent intent)
  static ClipData newIntent(jni.JlObject label, Intent intent) =>
      ClipData.fromRef(_newIntent(label.reference, intent.reference));

  static final _newUri = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("android_content_ClipData_newUri")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: static public android.content.ClipData newUri(android.content.ContentResolver resolver, java.lang.CharSequence label, android.net.Uri uri)
  static ClipData newUri(
          ContentResolver resolver, jni.JlObject label, jni.JlObject uri) =>
      ClipData.fromRef(
          _newUri(resolver.reference, label.reference, uri.reference));

  static final _newRawUri = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("android_content_ClipData_newRawUri")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: static public android.content.ClipData newRawUri(java.lang.CharSequence label, android.net.Uri uri)
  static ClipData newRawUri(jni.JlObject label, jni.JlObject uri) =>
      ClipData.fromRef(_newRawUri(label.reference, uri.reference));

  static final _getDescription = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_ClipData_getDescription")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.content.ClipDescription getDescription()
  ClipDescription getDescription() =>
      ClipDescription.fromRef(_getDescription(reference));

  static final _addItem = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("android_content_ClipData_addItem")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void addItem(android.content.ClipData.Item item)
  void addItem(ClipData_Item item) => _addItem(reference, item.reference);

  static final _addItem_1 = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>)>>("android_content_ClipData_addItem_1")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public void addItem(android.content.ContentResolver resolver, android.content.ClipData.Item item)
  void addItem_1(ContentResolver resolver, ClipData_Item item) =>
      _addItem_1(reference, resolver.reference, item.reference);

  static final _getItemCount =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_ClipData_getItemCount")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int getItemCount()
  int getItemCount() => _getItemCount(reference);

  static final _getItemAt = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_content_ClipData_getItemAt")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public android.content.ClipData.Item getItemAt(int index)
  ClipData_Item getItemAt(int index) =>
      ClipData_Item.fromRef(_getItemAt(reference, index));

  static final _toString_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_ClipData_toString_1")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.String toString()
  jni.JlString toString_1() => jni.JlString.fromRef(_toString_1(reference));

  static final _describeContents =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_ClipData_describeContents")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int describeContents()
  int describeContents() => _describeContents(reference);

  static final _writeToParcel = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_content_ClipData_writeToParcel")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public void writeToParcel(android.os.Parcel dest, int flags)
  void writeToParcel(jni.JlObject dest, int flags) =>
      _writeToParcel(reference, dest.reference, flags);
}

class ClipData_Item extends jni.JlObject {
  ClipData_Item.fromRef(ffi.Pointer<ffi.Void> ref) : super.fromRef(ref);

  static final _ctor = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
                  ffi.Pointer<ffi.Void>)>>("android_content_ClipData__Item_new")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void <init>(java.lang.CharSequence text)
  ClipData_Item(jni.JlObject text) : super.fromRef(_ctor(text.reference));

  static final _ctor_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_ClipData__Item_new_1")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void <init>(java.lang.CharSequence text, java.lang.String htmlText)
  ClipData_Item.ctor_1(jni.JlObject text, jni.JlString htmlText)
      : super.fromRef(_ctor_1(text.reference, htmlText.reference));

  static final _ctor_2 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_ClipData__Item_new_2")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void <init>(android.content.Intent intent)
  ClipData_Item.ctor_2(Intent intent)
      : super.fromRef(_ctor_2(intent.reference));

  static final _ctor_3 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_ClipData__Item_new_3")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void <init>(android.net.Uri uri)
  ClipData_Item.ctor_3(jni.JlObject uri)
      : super.fromRef(_ctor_3(uri.reference));

  static final _ctor_4 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_ClipData__Item_new_4")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void <init>(java.lang.CharSequence text, android.content.Intent intent, android.net.Uri uri)
  ClipData_Item.ctor_4(jni.JlObject text, Intent intent, jni.JlObject uri)
      : super.fromRef(_ctor_4(text.reference, intent.reference, uri.reference));

  static final _ctor_5 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>)>>(
          "android_content_ClipData__Item_new_5")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public void <init>(java.lang.CharSequence text, java.lang.String htmlText, android.content.Intent intent, android.net.Uri uri)
  ClipData_Item.ctor_5(
      jni.JlObject text, jni.JlString htmlText, Intent intent, jni.JlObject uri)
      : super.fromRef(_ctor_5(text.reference, htmlText.reference,
            intent.reference, uri.reference));

  static final _getText = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_ClipData__Item_getText")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.CharSequence getText()
  jni.JlObject getText() => jni.JlObject.fromRef(_getText(reference));

  static final _getHtmlText = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_ClipData__Item_getHtmlText")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.String getHtmlText()
  jni.JlString getHtmlText() => jni.JlString.fromRef(_getHtmlText(reference));

  static final _getIntent = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_ClipData__Item_getIntent")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.content.Intent getIntent()
  Intent getIntent() => Intent.fromRef(_getIntent(reference));

  static final _getUri = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_ClipData__Item_getUri")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.net.Uri getUri()
  jni.JlObject getUri() => jni.JlObject.fromRef(_getUri(reference));

  static final _coerceToText = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_ClipData__Item_coerceToText")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.CharSequence coerceToText(android.content.Context context)
  jni.JlObject coerceToText(Context context) =>
      jni.JlObject.fromRef(_coerceToText(reference, context.reference));

  static final _coerceToStyledText = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_ClipData__Item_coerceToStyledText")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.CharSequence coerceToStyledText(android.content.Context context)
  jni.JlObject coerceToStyledText(Context context) =>
      jni.JlObject.fromRef(_coerceToStyledText(reference, context.reference));

  static final _coerceToHtmlText = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_ClipData__Item_coerceToHtmlText")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.String coerceToHtmlText(android.content.Context context)
  jni.JlString coerceToHtmlText(Context context) =>
      jni.JlString.fromRef(_coerceToHtmlText(reference, context.reference));

  static final _toString_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_ClipData__Item_toString_1")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.String toString()
  jni.JlString toString_1() => jni.JlString.fromRef(_toString_1(reference));
}
