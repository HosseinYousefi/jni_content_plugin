// AutoGenerated by jni_gen. Do not edit.
// ignore_for_file: camel_case_types
// ignore_for_file: non_constant_identifier_names
// ignore_for_file: constant_identifier_names
// ignore_for_file: annotate_overrides
// ignore_for_file: no_leading_underscores_for_local_identifiers
// ignore_for_file: unused_element

import "dart:ffi" as ffi;

import "package:jni/jni.dart" as jni;
import "package:content_plugin/android/os.dart" as os;

import "package:content_plugin/android/content.dart" as content;

import "package:content_plugin/android/content/res.dart" as res;
import "../../init.dart" show jlookup;

class VersionedPackage extends jni.JlObject {
  VersionedPackage.fromRef(ffi.Pointer<ffi.Void> ref) : super.fromRef(ref);

  /// from: static public final android.os.Parcelable.Creator<android.content.pm.VersionedPackage> CREATOR
  static final _getCREATOR =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "get_android_content_pm_VersionedPackage_CREATOR")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();
  static os.Parcelable_Creator get CREATOR =>
      os.Parcelable_Creator.fromRef(_getCREATOR());

  static final _ctor = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_content_pm_VersionedPackage_new")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public void <init>(java.lang.String packageName, int versionCode)
  VersionedPackage(jni.JlString packageName, int versionCode)
      : super.fromRef(_ctor(packageName.reference, versionCode));

  static final _ctor_1 = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                  ffi.Int64)>>("android_content_pm_VersionedPackage_new_1")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public void <init>(java.lang.String packageName, long versionCode)
  VersionedPackage.ctor_1(jni.JlString packageName, int versionCode)
      : super.fromRef(_ctor_1(packageName.reference, versionCode));

  static final _getPackageName = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_VersionedPackage_getPackageName")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.String getPackageName()
  jni.JlString getPackageName() =>
      jni.JlString.fromRef(_getPackageName(reference));

  static final _getVersionCode =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_pm_VersionedPackage_getVersionCode")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int getVersionCode()
  int getVersionCode() => _getVersionCode(reference);

  static final _getLongVersionCode =
      jlookup<ffi.NativeFunction<ffi.Int64 Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_pm_VersionedPackage_getLongVersionCode")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public long getLongVersionCode()
  int getLongVersionCode() => _getLongVersionCode(reference);

  static final _toString_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_VersionedPackage_toString_1")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.String toString()
  jni.JlString toString_1() => jni.JlString.fromRef(_toString_1(reference));

  static final _describeContents =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_pm_VersionedPackage_describeContents")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int describeContents()
  int describeContents() => _describeContents(reference);

  static final _writeToParcel = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "android_content_pm_VersionedPackage_writeToParcel")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public void writeToParcel(android.os.Parcel parcel, int flags)
  void writeToParcel(os.Parcel parcel, int flags) =>
      _writeToParcel(reference, parcel.reference, flags);
}

class ConfigurationInfo extends jni.JlObject {
  ConfigurationInfo.fromRef(ffi.Pointer<ffi.Void> ref) : super.fromRef(ref);

  /// from: static public final android.os.Parcelable.Creator<android.content.pm.ConfigurationInfo> CREATOR
  static final _getCREATOR =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "get_android_content_pm_ConfigurationInfo_CREATOR")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();
  static os.Parcelable_Creator get CREATOR =>
      os.Parcelable_Creator.fromRef(_getCREATOR());

  /// from: static public final int GL_ES_VERSION_UNDEFINED
  static const GL_ES_VERSION_UNDEFINED = 0;

  /// from: static public final int INPUT_FEATURE_FIVE_WAY_NAV
  static const INPUT_FEATURE_FIVE_WAY_NAV = 2;

  /// from: static public final int INPUT_FEATURE_HARD_KEYBOARD
  static const INPUT_FEATURE_HARD_KEYBOARD = 1;

  /// from: public int reqGlEsVersion
  static final _getreqGlEsVersion = jlookup<
          ffi.NativeFunction<
              ffi.Int32 Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_content_pm_ConfigurationInfo_reqGlEsVersion")
      .asFunction<
          int Function(
    ffi.Pointer<ffi.Void>,
  )>();
  int get reqGlEsVersion => _getreqGlEsVersion(reference);
  static final _setreqGlEsVersion = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "set_android_content_pm_ConfigurationInfo_reqGlEsVersion")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();
  set reqGlEsVersion(int value) => _setreqGlEsVersion(reference, value);

  /// from: public int reqInputFeatures
  static final _getreqInputFeatures = jlookup<
          ffi.NativeFunction<
              ffi.Int32 Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_content_pm_ConfigurationInfo_reqInputFeatures")
      .asFunction<
          int Function(
    ffi.Pointer<ffi.Void>,
  )>();
  int get reqInputFeatures => _getreqInputFeatures(reference);
  static final _setreqInputFeatures = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "set_android_content_pm_ConfigurationInfo_reqInputFeatures")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();
  set reqInputFeatures(int value) => _setreqInputFeatures(reference, value);

  /// from: public int reqKeyboardType
  static final _getreqKeyboardType = jlookup<
          ffi.NativeFunction<
              ffi.Int32 Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_content_pm_ConfigurationInfo_reqKeyboardType")
      .asFunction<
          int Function(
    ffi.Pointer<ffi.Void>,
  )>();
  int get reqKeyboardType => _getreqKeyboardType(reference);
  static final _setreqKeyboardType = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "set_android_content_pm_ConfigurationInfo_reqKeyboardType")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();
  set reqKeyboardType(int value) => _setreqKeyboardType(reference, value);

  /// from: public int reqNavigation
  static final _getreqNavigation = jlookup<
          ffi.NativeFunction<
              ffi.Int32 Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_content_pm_ConfigurationInfo_reqNavigation")
      .asFunction<
          int Function(
    ffi.Pointer<ffi.Void>,
  )>();
  int get reqNavigation => _getreqNavigation(reference);
  static final _setreqNavigation = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "set_android_content_pm_ConfigurationInfo_reqNavigation")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();
  set reqNavigation(int value) => _setreqNavigation(reference, value);

  /// from: public int reqTouchScreen
  static final _getreqTouchScreen = jlookup<
          ffi.NativeFunction<
              ffi.Int32 Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_content_pm_ConfigurationInfo_reqTouchScreen")
      .asFunction<
          int Function(
    ffi.Pointer<ffi.Void>,
  )>();
  int get reqTouchScreen => _getreqTouchScreen(reference);
  static final _setreqTouchScreen = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "set_android_content_pm_ConfigurationInfo_reqTouchScreen")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();
  set reqTouchScreen(int value) => _setreqTouchScreen(reference, value);

  static final _ctor =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "android_content_pm_ConfigurationInfo_new")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();

  /// from: public void <init>()
  ConfigurationInfo() : super.fromRef(_ctor());

  static final _ctor_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_ConfigurationInfo_new_1")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void <init>(android.content.pm.ConfigurationInfo orig)
  ConfigurationInfo.ctor_1(ConfigurationInfo orig)
      : super.fromRef(_ctor_1(orig.reference));

  static final _toString_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_ConfigurationInfo_toString_1")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.String toString()
  jni.JlString toString_1() => jni.JlString.fromRef(_toString_1(reference));

  static final _describeContents =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_pm_ConfigurationInfo_describeContents")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int describeContents()
  int describeContents() => _describeContents(reference);

  static final _writeToParcel = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "android_content_pm_ConfigurationInfo_writeToParcel")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public void writeToParcel(android.os.Parcel dest, int parcelableFlags)
  void writeToParcel(os.Parcel dest, int parcelableFlags) =>
      _writeToParcel(reference, dest.reference, parcelableFlags);

  static final _getGlEsVersion = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_ConfigurationInfo_getGlEsVersion")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.String getGlEsVersion()
  jni.JlString getGlEsVersion() =>
      jni.JlString.fromRef(_getGlEsVersion(reference));
}

class ActivityInfo extends ComponentInfo {
  ActivityInfo.fromRef(ffi.Pointer<ffi.Void> ref) : super.fromRef(ref);

  /// from: static public final int COLOR_MODE_DEFAULT
  static const COLOR_MODE_DEFAULT = 0;

  /// from: static public final int COLOR_MODE_HDR
  static const COLOR_MODE_HDR = 2;

  /// from: static public final int COLOR_MODE_WIDE_COLOR_GAMUT
  static const COLOR_MODE_WIDE_COLOR_GAMUT = 1;

  /// from: static public final int CONFIG_COLOR_MODE
  static const CONFIG_COLOR_MODE = 16384;

  /// from: static public final int CONFIG_DENSITY
  static const CONFIG_DENSITY = 4096;

  /// from: static public final int CONFIG_FONT_SCALE
  static const CONFIG_FONT_SCALE = 1073741824;

  /// from: static public final int CONFIG_KEYBOARD
  static const CONFIG_KEYBOARD = 16;

  /// from: static public final int CONFIG_KEYBOARD_HIDDEN
  static const CONFIG_KEYBOARD_HIDDEN = 32;

  /// from: static public final int CONFIG_LAYOUT_DIRECTION
  static const CONFIG_LAYOUT_DIRECTION = 8192;

  /// from: static public final int CONFIG_LOCALE
  static const CONFIG_LOCALE = 4;

  /// from: static public final int CONFIG_MCC
  static const CONFIG_MCC = 1;

  /// from: static public final int CONFIG_MNC
  static const CONFIG_MNC = 2;

  /// from: static public final int CONFIG_NAVIGATION
  static const CONFIG_NAVIGATION = 64;

  /// from: static public final int CONFIG_ORIENTATION
  static const CONFIG_ORIENTATION = 128;

  /// from: static public final int CONFIG_SCREEN_LAYOUT
  static const CONFIG_SCREEN_LAYOUT = 256;

  /// from: static public final int CONFIG_SCREEN_SIZE
  static const CONFIG_SCREEN_SIZE = 1024;

  /// from: static public final int CONFIG_SMALLEST_SCREEN_SIZE
  static const CONFIG_SMALLEST_SCREEN_SIZE = 2048;

  /// from: static public final int CONFIG_TOUCHSCREEN
  static const CONFIG_TOUCHSCREEN = 8;

  /// from: static public final int CONFIG_UI_MODE
  static const CONFIG_UI_MODE = 512;

  /// from: static public final android.os.Parcelable.Creator<android.content.pm.ActivityInfo> CREATOR
  static final _getCREATOR =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "get_android_content_pm_ActivityInfo_CREATOR")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();
  static os.Parcelable_Creator get CREATOR =>
      os.Parcelable_Creator.fromRef(_getCREATOR());

  /// from: static public final int DOCUMENT_LAUNCH_ALWAYS
  static const DOCUMENT_LAUNCH_ALWAYS = 2;

  /// from: static public final int DOCUMENT_LAUNCH_INTO_EXISTING
  static const DOCUMENT_LAUNCH_INTO_EXISTING = 1;

  /// from: static public final int DOCUMENT_LAUNCH_NEVER
  static const DOCUMENT_LAUNCH_NEVER = 3;

  /// from: static public final int DOCUMENT_LAUNCH_NONE
  static const DOCUMENT_LAUNCH_NONE = 0;

  /// from: static public final int FLAG_ALLOW_TASK_REPARENTING
  static const FLAG_ALLOW_TASK_REPARENTING = 64;

  /// from: static public final int FLAG_ALWAYS_RETAIN_TASK_STATE
  static const FLAG_ALWAYS_RETAIN_TASK_STATE = 8;

  /// from: static public final int FLAG_AUTO_REMOVE_FROM_RECENTS
  static const FLAG_AUTO_REMOVE_FROM_RECENTS = 8192;

  /// from: static public final int FLAG_CLEAR_TASK_ON_LAUNCH
  static const FLAG_CLEAR_TASK_ON_LAUNCH = 4;

  /// from: static public final int FLAG_ENABLE_VR_MODE
  static const FLAG_ENABLE_VR_MODE = 32768;

  /// from: static public final int FLAG_EXCLUDE_FROM_RECENTS
  static const FLAG_EXCLUDE_FROM_RECENTS = 32;

  /// from: static public final int FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS
  static const FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS = 256;

  /// from: static public final int FLAG_FINISH_ON_TASK_LAUNCH
  static const FLAG_FINISH_ON_TASK_LAUNCH = 2;

  /// from: static public final int FLAG_HARDWARE_ACCELERATED
  static const FLAG_HARDWARE_ACCELERATED = 512;

  /// from: static public final int FLAG_IMMERSIVE
  static const FLAG_IMMERSIVE = 2048;

  /// from: static public final int FLAG_MULTIPROCESS
  static const FLAG_MULTIPROCESS = 1;

  /// from: static public final int FLAG_NO_HISTORY
  static const FLAG_NO_HISTORY = 128;

  /// from: static public final int FLAG_RELINQUISH_TASK_IDENTITY
  static const FLAG_RELINQUISH_TASK_IDENTITY = 4096;

  /// from: static public final int FLAG_RESUME_WHILE_PAUSING
  static const FLAG_RESUME_WHILE_PAUSING = 16384;

  /// from: static public final int FLAG_SINGLE_USER
  static const FLAG_SINGLE_USER = 1073741824;

  /// from: static public final int FLAG_STATE_NOT_NEEDED
  static const FLAG_STATE_NOT_NEEDED = 16;

  /// from: static public final int LAUNCH_MULTIPLE
  static const LAUNCH_MULTIPLE = 0;

  /// from: static public final int LAUNCH_SINGLE_INSTANCE
  static const LAUNCH_SINGLE_INSTANCE = 3;

  /// from: static public final int LAUNCH_SINGLE_TASK
  static const LAUNCH_SINGLE_TASK = 2;

  /// from: static public final int LAUNCH_SINGLE_TOP
  static const LAUNCH_SINGLE_TOP = 1;

  /// from: static public final int PERSIST_ACROSS_REBOOTS
  static const PERSIST_ACROSS_REBOOTS = 2;

  /// from: static public final int PERSIST_NEVER
  static const PERSIST_NEVER = 1;

  /// from: static public final int PERSIST_ROOT_ONLY
  static const PERSIST_ROOT_ONLY = 0;

  /// from: static public final int SCREEN_ORIENTATION_BEHIND
  static const SCREEN_ORIENTATION_BEHIND = 3;

  /// from: static public final int SCREEN_ORIENTATION_FULL_SENSOR
  static const SCREEN_ORIENTATION_FULL_SENSOR = 10;

  /// from: static public final int SCREEN_ORIENTATION_FULL_USER
  static const SCREEN_ORIENTATION_FULL_USER = 13;

  /// from: static public final int SCREEN_ORIENTATION_LANDSCAPE
  static const SCREEN_ORIENTATION_LANDSCAPE = 0;

  /// from: static public final int SCREEN_ORIENTATION_LOCKED
  static const SCREEN_ORIENTATION_LOCKED = 14;

  /// from: static public final int SCREEN_ORIENTATION_NOSENSOR
  static const SCREEN_ORIENTATION_NOSENSOR = 5;

  /// from: static public final int SCREEN_ORIENTATION_PORTRAIT
  static const SCREEN_ORIENTATION_PORTRAIT = 1;

  /// from: static public final int SCREEN_ORIENTATION_REVERSE_LANDSCAPE
  static const SCREEN_ORIENTATION_REVERSE_LANDSCAPE = 8;

  /// from: static public final int SCREEN_ORIENTATION_REVERSE_PORTRAIT
  static const SCREEN_ORIENTATION_REVERSE_PORTRAIT = 9;

  /// from: static public final int SCREEN_ORIENTATION_SENSOR
  static const SCREEN_ORIENTATION_SENSOR = 4;

  /// from: static public final int SCREEN_ORIENTATION_SENSOR_LANDSCAPE
  static const SCREEN_ORIENTATION_SENSOR_LANDSCAPE = 6;

  /// from: static public final int SCREEN_ORIENTATION_SENSOR_PORTRAIT
  static const SCREEN_ORIENTATION_SENSOR_PORTRAIT = 7;

  /// from: static public final int SCREEN_ORIENTATION_UNSPECIFIED
  static const SCREEN_ORIENTATION_UNSPECIFIED = -1;

  /// from: static public final int SCREEN_ORIENTATION_USER
  static const SCREEN_ORIENTATION_USER = 2;

  /// from: static public final int SCREEN_ORIENTATION_USER_LANDSCAPE
  static const SCREEN_ORIENTATION_USER_LANDSCAPE = 11;

  /// from: static public final int SCREEN_ORIENTATION_USER_PORTRAIT
  static const SCREEN_ORIENTATION_USER_PORTRAIT = 12;

  /// from: static public final int UIOPTION_SPLIT_ACTION_BAR_WHEN_NARROW
  static const UIOPTION_SPLIT_ACTION_BAR_WHEN_NARROW = 1;

  /// from: public int colorMode
  static final _getcolorMode = jlookup<
          ffi.NativeFunction<
              ffi.Int32 Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_content_pm_ActivityInfo_colorMode")
      .asFunction<
          int Function(
    ffi.Pointer<ffi.Void>,
  )>();
  int get colorMode => _getcolorMode(reference);
  static final _setcolorMode = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("set_android_content_pm_ActivityInfo_colorMode")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();
  set colorMode(int value) => _setcolorMode(reference, value);

  /// from: public int configChanges
  static final _getconfigChanges = jlookup<
          ffi.NativeFunction<
              ffi.Int32 Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_content_pm_ActivityInfo_configChanges")
      .asFunction<
          int Function(
    ffi.Pointer<ffi.Void>,
  )>();
  int get configChanges => _getconfigChanges(reference);
  static final _setconfigChanges = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "set_android_content_pm_ActivityInfo_configChanges")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();
  set configChanges(int value) => _setconfigChanges(reference, value);

  /// from: public int documentLaunchMode
  static final _getdocumentLaunchMode = jlookup<
          ffi.NativeFunction<
              ffi.Int32 Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_content_pm_ActivityInfo_documentLaunchMode")
      .asFunction<
          int Function(
    ffi.Pointer<ffi.Void>,
  )>();
  int get documentLaunchMode => _getdocumentLaunchMode(reference);
  static final _setdocumentLaunchMode = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "set_android_content_pm_ActivityInfo_documentLaunchMode")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();
  set documentLaunchMode(int value) => _setdocumentLaunchMode(reference, value);

  /// from: public int flags
  static final _getflags = jlookup<
          ffi.NativeFunction<
              ffi.Int32 Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_content_pm_ActivityInfo_flags")
      .asFunction<
          int Function(
    ffi.Pointer<ffi.Void>,
  )>();
  int get flags => _getflags(reference);
  static final _setflags = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("set_android_content_pm_ActivityInfo_flags")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();
  set flags(int value) => _setflags(reference, value);

  /// from: public int launchMode
  static final _getlaunchMode = jlookup<
          ffi.NativeFunction<
              ffi.Int32 Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_content_pm_ActivityInfo_launchMode")
      .asFunction<
          int Function(
    ffi.Pointer<ffi.Void>,
  )>();
  int get launchMode => _getlaunchMode(reference);
  static final _setlaunchMode = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("set_android_content_pm_ActivityInfo_launchMode")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();
  set launchMode(int value) => _setlaunchMode(reference, value);

  /// from: public int maxRecents
  static final _getmaxRecents = jlookup<
          ffi.NativeFunction<
              ffi.Int32 Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_content_pm_ActivityInfo_maxRecents")
      .asFunction<
          int Function(
    ffi.Pointer<ffi.Void>,
  )>();
  int get maxRecents => _getmaxRecents(reference);
  static final _setmaxRecents = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("set_android_content_pm_ActivityInfo_maxRecents")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();
  set maxRecents(int value) => _setmaxRecents(reference, value);

  /// from: public java.lang.String parentActivityName
  static final _getparentActivityName = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_content_pm_ActivityInfo_parentActivityName")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>();
  jni.JlString get parentActivityName =>
      jni.JlString.fromRef(_getparentActivityName(reference));
  static final _setparentActivityName = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "set_android_content_pm_ActivityInfo_parentActivityName")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();
  set parentActivityName(jni.JlString value) =>
      _setparentActivityName(reference, value.reference);

  /// from: public java.lang.String permission
  static final _getpermission = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_content_pm_ActivityInfo_permission")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>();
  jni.JlString get permission =>
      jni.JlString.fromRef(_getpermission(reference));
  static final _setpermission = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "set_android_content_pm_ActivityInfo_permission")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();
  set permission(jni.JlString value) =>
      _setpermission(reference, value.reference);

  /// from: public int persistableMode
  static final _getpersistableMode = jlookup<
          ffi.NativeFunction<
              ffi.Int32 Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_content_pm_ActivityInfo_persistableMode")
      .asFunction<
          int Function(
    ffi.Pointer<ffi.Void>,
  )>();
  int get persistableMode => _getpersistableMode(reference);
  static final _setpersistableMode = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "set_android_content_pm_ActivityInfo_persistableMode")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();
  set persistableMode(int value) => _setpersistableMode(reference, value);

  /// from: public int screenOrientation
  static final _getscreenOrientation = jlookup<
          ffi.NativeFunction<
              ffi.Int32 Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_content_pm_ActivityInfo_screenOrientation")
      .asFunction<
          int Function(
    ffi.Pointer<ffi.Void>,
  )>();
  int get screenOrientation => _getscreenOrientation(reference);
  static final _setscreenOrientation = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "set_android_content_pm_ActivityInfo_screenOrientation")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();
  set screenOrientation(int value) => _setscreenOrientation(reference, value);

  /// from: public int softInputMode
  static final _getsoftInputMode = jlookup<
          ffi.NativeFunction<
              ffi.Int32 Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_content_pm_ActivityInfo_softInputMode")
      .asFunction<
          int Function(
    ffi.Pointer<ffi.Void>,
  )>();
  int get softInputMode => _getsoftInputMode(reference);
  static final _setsoftInputMode = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "set_android_content_pm_ActivityInfo_softInputMode")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();
  set softInputMode(int value) => _setsoftInputMode(reference, value);

  /// from: public java.lang.String targetActivity
  static final _gettargetActivity = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_content_pm_ActivityInfo_targetActivity")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>();
  jni.JlString get targetActivity =>
      jni.JlString.fromRef(_gettargetActivity(reference));
  static final _settargetActivity = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "set_android_content_pm_ActivityInfo_targetActivity")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();
  set targetActivity(jni.JlString value) =>
      _settargetActivity(reference, value.reference);

  /// from: public java.lang.String taskAffinity
  static final _gettaskAffinity = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_content_pm_ActivityInfo_taskAffinity")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>();
  jni.JlString get taskAffinity =>
      jni.JlString.fromRef(_gettaskAffinity(reference));
  static final _settaskAffinity = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "set_android_content_pm_ActivityInfo_taskAffinity")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();
  set taskAffinity(jni.JlString value) =>
      _settaskAffinity(reference, value.reference);

  /// from: public int theme
  static final _gettheme = jlookup<
          ffi.NativeFunction<
              ffi.Int32 Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_content_pm_ActivityInfo_theme")
      .asFunction<
          int Function(
    ffi.Pointer<ffi.Void>,
  )>();
  int get theme => _gettheme(reference);
  static final _settheme = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("set_android_content_pm_ActivityInfo_theme")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();
  set theme(int value) => _settheme(reference, value);

  /// from: public int uiOptions
  static final _getuiOptions = jlookup<
          ffi.NativeFunction<
              ffi.Int32 Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_content_pm_ActivityInfo_uiOptions")
      .asFunction<
          int Function(
    ffi.Pointer<ffi.Void>,
  )>();
  int get uiOptions => _getuiOptions(reference);
  static final _setuiOptions = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("set_android_content_pm_ActivityInfo_uiOptions")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();
  set uiOptions(int value) => _setuiOptions(reference, value);

  /// from: public android.content.pm.ActivityInfo.WindowLayout windowLayout
  static final _getwindowLayout = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_content_pm_ActivityInfo_windowLayout")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>();
  ActivityInfo_WindowLayout get windowLayout =>
      ActivityInfo_WindowLayout.fromRef(_getwindowLayout(reference));
  static final _setwindowLayout = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "set_android_content_pm_ActivityInfo_windowLayout")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();
  set windowLayout(ActivityInfo_WindowLayout value) =>
      _setwindowLayout(reference, value.reference);

  static final _ctor =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "android_content_pm_ActivityInfo_new")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();

  /// from: public void <init>()
  ActivityInfo() : super.fromRef(_ctor());

  static final _ctor_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_ActivityInfo_new_1")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void <init>(android.content.pm.ActivityInfo orig)
  ActivityInfo.ctor_1(ActivityInfo orig)
      : super.fromRef(_ctor_1(orig.reference));

  static final _getThemeResource =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_pm_ActivityInfo_getThemeResource")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public final int getThemeResource()
  int getThemeResource() => _getThemeResource(reference);

  static final _dump = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_ActivityInfo_dump")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public void dump(android.util.Printer pw, java.lang.String prefix)
  void dump(jni.JlObject pw, jni.JlString prefix) =>
      _dump(reference, pw.reference, prefix.reference);

  static final _toString_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_ActivityInfo_toString_1")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.String toString()
  jni.JlString toString_1() => jni.JlString.fromRef(_toString_1(reference));

  static final _describeContents =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_pm_ActivityInfo_describeContents")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int describeContents()
  int describeContents() => _describeContents(reference);

  static final _writeToParcel = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_content_pm_ActivityInfo_writeToParcel")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public void writeToParcel(android.os.Parcel dest, int parcelableFlags)
  void writeToParcel(os.Parcel dest, int parcelableFlags) =>
      _writeToParcel(reference, dest.reference, parcelableFlags);
}

class ActivityInfo_WindowLayout extends jni.JlObject {
  ActivityInfo_WindowLayout.fromRef(ffi.Pointer<ffi.Void> ref)
      : super.fromRef(ref);

  /// from: public final int gravity
  static final _getgravity = jlookup<
          ffi.NativeFunction<
              ffi.Int32 Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_content_pm_ActivityInfo__WindowLayout_gravity")
      .asFunction<
          int Function(
    ffi.Pointer<ffi.Void>,
  )>();
  int get gravity => _getgravity(reference);

  /// from: public final int height
  static final _getheight = jlookup<
          ffi.NativeFunction<
              ffi.Int32 Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_content_pm_ActivityInfo__WindowLayout_height")
      .asFunction<
          int Function(
    ffi.Pointer<ffi.Void>,
  )>();
  int get height => _getheight(reference);

  /// from: public final float heightFraction
  static final _getheightFraction = jlookup<
          ffi.NativeFunction<
              ffi.Float Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_content_pm_ActivityInfo__WindowLayout_heightFraction")
      .asFunction<
          double Function(
    ffi.Pointer<ffi.Void>,
  )>();
  double get heightFraction => _getheightFraction(reference);

  /// from: public final int minHeight
  static final _getminHeight = jlookup<
          ffi.NativeFunction<
              ffi.Int32 Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_content_pm_ActivityInfo__WindowLayout_minHeight")
      .asFunction<
          int Function(
    ffi.Pointer<ffi.Void>,
  )>();
  int get minHeight => _getminHeight(reference);

  /// from: public final int minWidth
  static final _getminWidth = jlookup<
          ffi.NativeFunction<
              ffi.Int32 Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_content_pm_ActivityInfo__WindowLayout_minWidth")
      .asFunction<
          int Function(
    ffi.Pointer<ffi.Void>,
  )>();
  int get minWidth => _getminWidth(reference);

  /// from: public final int width
  static final _getwidth = jlookup<
          ffi.NativeFunction<
              ffi.Int32 Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_content_pm_ActivityInfo__WindowLayout_width")
      .asFunction<
          int Function(
    ffi.Pointer<ffi.Void>,
  )>();
  int get width => _getwidth(reference);

  /// from: public final float widthFraction
  static final _getwidthFraction = jlookup<
          ffi.NativeFunction<
              ffi.Float Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_content_pm_ActivityInfo__WindowLayout_widthFraction")
      .asFunction<
          double Function(
    ffi.Pointer<ffi.Void>,
  )>();
  double get widthFraction => _getwidthFraction(reference);

  static final _ctor = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Int32, ffi.Float,
                      ffi.Int32, ffi.Float, ffi.Int32, ffi.Int32, ffi.Int32)>>(
          "android_content_pm_ActivityInfo__WindowLayout_new")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              int, double, int, double, int, int, int)>();

  /// from: public void <init>(int width, float widthFraction, int height, float heightFraction, int gravity, int minWidth, int minHeight)
  ActivityInfo_WindowLayout(int width, double widthFraction, int height,
      double heightFraction, int gravity, int minWidth, int minHeight)
      : super.fromRef(_ctor(width, widthFraction, height, heightFraction,
            gravity, minWidth, minHeight));
}

class LauncherApps extends jni.JlObject {
  LauncherApps.fromRef(ffi.Pointer<ffi.Void> ref) : super.fromRef(ref);

  /// from: static public final java.lang.String ACTION_CONFIRM_PIN_APPWIDGET
  static const ACTION_CONFIRM_PIN_APPWIDGET =
      "android.content.pm.action.CONFIRM_PIN_APPWIDGET";

  /// from: static public final java.lang.String ACTION_CONFIRM_PIN_SHORTCUT
  static const ACTION_CONFIRM_PIN_SHORTCUT =
      "android.content.pm.action.CONFIRM_PIN_SHORTCUT";

  /// from: static public final java.lang.String EXTRA_PIN_ITEM_REQUEST
  static const EXTRA_PIN_ITEM_REQUEST =
      "android.content.pm.extra.PIN_ITEM_REQUEST";

  static final _ctor = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_LauncherApps_new")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: void <init>(android.content.Context context)
  LauncherApps(content.Context context)
      : super.fromRef(_ctor(context.reference));

  static final _getProfiles = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_LauncherApps_getProfiles")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.util.List<android.os.UserHandle> getProfiles()
  jni.JlObject getProfiles() => jni.JlObject.fromRef(_getProfiles(reference));

  static final _getActivityList = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_LauncherApps_getActivityList")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public java.util.List<android.content.pm.LauncherActivityInfo> getActivityList(java.lang.String packageName, android.os.UserHandle user)
  jni.JlObject getActivityList(jni.JlString packageName, os.UserHandle user) =>
      jni.JlObject.fromRef(
          _getActivityList(reference, packageName.reference, user.reference));

  static final _resolveActivity = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_LauncherApps_resolveActivity")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.content.pm.LauncherActivityInfo resolveActivity(android.content.Intent intent, android.os.UserHandle user)
  LauncherActivityInfo resolveActivity(
          content.Intent intent, os.UserHandle user) =>
      LauncherActivityInfo.fromRef(
          _resolveActivity(reference, intent.reference, user.reference));

  static final _startMainActivity = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_LauncherApps_startMainActivity")
      .asFunction<
          void Function(
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public void startMainActivity(android.content.ComponentName component, android.os.UserHandle user, android.graphics.Rect sourceBounds, android.os.Bundle opts)
  void startMainActivity(content.ComponentName component, os.UserHandle user,
          jni.JlObject sourceBounds, os.Bundle opts) =>
      _startMainActivity(reference, component.reference, user.reference,
          sourceBounds.reference, opts.reference);

  static final _startAppDetailsActivity = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_LauncherApps_startAppDetailsActivity")
      .asFunction<
          void Function(
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public void startAppDetailsActivity(android.content.ComponentName component, android.os.UserHandle user, android.graphics.Rect sourceBounds, android.os.Bundle opts)
  void startAppDetailsActivity(content.ComponentName component,
          os.UserHandle user, jni.JlObject sourceBounds, os.Bundle opts) =>
      _startAppDetailsActivity(reference, component.reference, user.reference,
          sourceBounds.reference, opts.reference);

  static final _getShortcutConfigActivityList = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_LauncherApps_getShortcutConfigActivityList")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public java.util.List<android.content.pm.LauncherActivityInfo> getShortcutConfigActivityList(java.lang.String packageName, android.os.UserHandle user)
  jni.JlObject getShortcutConfigActivityList(
          jni.JlString packageName, os.UserHandle user) =>
      jni.JlObject.fromRef(_getShortcutConfigActivityList(
          reference, packageName.reference, user.reference));

  static final _getShortcutConfigActivityIntent = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_LauncherApps_getShortcutConfigActivityIntent")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.content.IntentSender getShortcutConfigActivityIntent(android.content.pm.LauncherActivityInfo info)
  content.IntentSender getShortcutConfigActivityIntent(
          LauncherActivityInfo info) =>
      content.IntentSender.fromRef(
          _getShortcutConfigActivityIntent(reference, info.reference));

  static final _isPackageEnabled = jlookup<
              ffi.NativeFunction<
                  ffi.Uint8 Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_LauncherApps_isPackageEnabled")
      .asFunction<
          int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public boolean isPackageEnabled(java.lang.String packageName, android.os.UserHandle user)
  bool isPackageEnabled(jni.JlString packageName, os.UserHandle user) =>
      _isPackageEnabled(reference, packageName.reference, user.reference) != 0;

  static final _getSuspendedPackageLauncherExtras = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_LauncherApps_getSuspendedPackageLauncherExtras")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.os.Bundle getSuspendedPackageLauncherExtras(java.lang.String packageName, android.os.UserHandle user)
  os.Bundle getSuspendedPackageLauncherExtras(
          jni.JlString packageName, os.UserHandle user) =>
      os.Bundle.fromRef(_getSuspendedPackageLauncherExtras(
          reference, packageName.reference, user.reference));

  static final _getApplicationInfo = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Int32,
                      ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_LauncherApps_getApplicationInfo")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, int, ffi.Pointer<ffi.Void>)>();

  /// from: public android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String packageName, int flags, android.os.UserHandle user)
  ApplicationInfo getApplicationInfo(
          jni.JlString packageName, int flags, os.UserHandle user) =>
      ApplicationInfo.fromRef(_getApplicationInfo(
          reference, packageName.reference, flags, user.reference));

  static final _isActivityEnabled = jlookup<
              ffi.NativeFunction<
                  ffi.Uint8 Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_LauncherApps_isActivityEnabled")
      .asFunction<
          int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public boolean isActivityEnabled(android.content.ComponentName component, android.os.UserHandle user)
  bool isActivityEnabled(content.ComponentName component, os.UserHandle user) =>
      _isActivityEnabled(reference, component.reference, user.reference) != 0;

  static final _hasShortcutHostPermission =
      jlookup<ffi.NativeFunction<ffi.Uint8 Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_pm_LauncherApps_hasShortcutHostPermission")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public boolean hasShortcutHostPermission()
  bool hasShortcutHostPermission() =>
      _hasShortcutHostPermission(reference) != 0;

  static final _getShortcuts = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_LauncherApps_getShortcuts")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public java.util.List<android.content.pm.ShortcutInfo> getShortcuts(android.content.pm.LauncherApps.ShortcutQuery query, android.os.UserHandle user)
  jni.JlObject getShortcuts(
          LauncherApps_ShortcutQuery query, os.UserHandle user) =>
      jni.JlObject.fromRef(
          _getShortcuts(reference, query.reference, user.reference));

  static final _pinShortcuts = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_LauncherApps_pinShortcuts")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void pinShortcuts(java.lang.String packageName, java.util.List<java.lang.String> shortcutIds, android.os.UserHandle user)
  void pinShortcuts(jni.JlString packageName, jni.JlObject shortcutIds,
          os.UserHandle user) =>
      _pinShortcuts(reference, packageName.reference, shortcutIds.reference,
          user.reference);

  static final _getShortcutIconDrawable = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "android_content_pm_LauncherApps_getShortcutIconDrawable")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public android.graphics.drawable.Drawable getShortcutIconDrawable(android.content.pm.ShortcutInfo shortcut, int density)
  jni.JlObject getShortcutIconDrawable(ShortcutInfo shortcut, int density) =>
      jni.JlObject.fromRef(
          _getShortcutIconDrawable(reference, shortcut.reference, density));

  static final _getShortcutBadgedIconDrawable = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "android_content_pm_LauncherApps_getShortcutBadgedIconDrawable")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public android.graphics.drawable.Drawable getShortcutBadgedIconDrawable(android.content.pm.ShortcutInfo shortcut, int density)
  jni.JlObject getShortcutBadgedIconDrawable(
          ShortcutInfo shortcut, int density) =>
      jni.JlObject.fromRef(_getShortcutBadgedIconDrawable(
          reference, shortcut.reference, density));

  static final _startShortcut = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_LauncherApps_startShortcut")
      .asFunction<
          void Function(
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public void startShortcut(java.lang.String packageName, java.lang.String shortcutId, android.graphics.Rect sourceBounds, android.os.Bundle startActivityOptions, android.os.UserHandle user)
  void startShortcut(
          jni.JlString packageName,
          jni.JlString shortcutId,
          jni.JlObject sourceBounds,
          os.Bundle startActivityOptions,
          os.UserHandle user) =>
      _startShortcut(
          reference,
          packageName.reference,
          shortcutId.reference,
          sourceBounds.reference,
          startActivityOptions.reference,
          user.reference);

  static final _startShortcut_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_LauncherApps_startShortcut_1")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void startShortcut(android.content.pm.ShortcutInfo shortcut, android.graphics.Rect sourceBounds, android.os.Bundle startActivityOptions)
  void startShortcut_1(ShortcutInfo shortcut, jni.JlObject sourceBounds,
          os.Bundle startActivityOptions) =>
      _startShortcut_1(reference, shortcut.reference, sourceBounds.reference,
          startActivityOptions.reference);

  static final _registerCallback = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_LauncherApps_registerCallback")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void registerCallback(android.content.pm.LauncherApps.Callback callback)
  void registerCallback(LauncherApps_Callback callback) =>
      _registerCallback(reference, callback.reference);

  static final _registerCallback_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_LauncherApps_registerCallback_1")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public void registerCallback(android.content.pm.LauncherApps.Callback callback, android.os.Handler handler)
  void registerCallback_1(LauncherApps_Callback callback, os.Handler handler) =>
      _registerCallback_1(reference, callback.reference, handler.reference);

  static final _unregisterCallback = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_LauncherApps_unregisterCallback")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void unregisterCallback(android.content.pm.LauncherApps.Callback callback)
  void unregisterCallback(LauncherApps_Callback callback) =>
      _unregisterCallback(reference, callback.reference);

  static final _getPinItemRequest = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_LauncherApps_getPinItemRequest")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.content.pm.LauncherApps.PinItemRequest getPinItemRequest(android.content.Intent intent)
  LauncherApps_PinItemRequest getPinItemRequest(content.Intent intent) =>
      LauncherApps_PinItemRequest.fromRef(
          _getPinItemRequest(reference, intent.reference));
}

class LauncherApps_ShortcutQuery extends jni.JlObject {
  LauncherApps_ShortcutQuery.fromRef(ffi.Pointer<ffi.Void> ref)
      : super.fromRef(ref);

  /// from: static public final int FLAG_GET_KEY_FIELDS_ONLY
  static const FLAG_GET_KEY_FIELDS_ONLY = 4;

  /// from: static public final int FLAG_MATCH_DYNAMIC
  static const FLAG_MATCH_DYNAMIC = 1;

  /// from: static public final int FLAG_MATCH_MANIFEST
  static const FLAG_MATCH_MANIFEST = 8;

  /// from: static public final int FLAG_MATCH_PINNED
  static const FLAG_MATCH_PINNED = 2;

  /// from: static public final int FLAG_MATCH_PINNED_BY_ANY_LAUNCHER
  static const FLAG_MATCH_PINNED_BY_ANY_LAUNCHER = 1024;

  static final _ctor =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "android_content_pm_LauncherApps__ShortcutQuery_new")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();

  /// from: public void <init>()
  LauncherApps_ShortcutQuery() : super.fromRef(_ctor());

  static final _setChangedSince = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Int64)>>(
          "android_content_pm_LauncherApps__ShortcutQuery_setChangedSince")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public android.content.pm.LauncherApps.ShortcutQuery setChangedSince(long changedSince)
  LauncherApps_ShortcutQuery setChangedSince(int changedSince) =>
      LauncherApps_ShortcutQuery.fromRef(
          _setChangedSince(reference, changedSince));

  static final _setPackage = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_LauncherApps__ShortcutQuery_setPackage")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.content.pm.LauncherApps.ShortcutQuery setPackage(java.lang.String packageName)
  LauncherApps_ShortcutQuery setPackage(jni.JlString packageName) =>
      LauncherApps_ShortcutQuery.fromRef(
          _setPackage(reference, packageName.reference));

  static final _setShortcutIds = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_LauncherApps__ShortcutQuery_setShortcutIds")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.content.pm.LauncherApps.ShortcutQuery setShortcutIds(java.util.List<java.lang.String> shortcutIds)
  LauncherApps_ShortcutQuery setShortcutIds(jni.JlObject shortcutIds) =>
      LauncherApps_ShortcutQuery.fromRef(
          _setShortcutIds(reference, shortcutIds.reference));

  static final _setActivity = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_LauncherApps__ShortcutQuery_setActivity")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.content.pm.LauncherApps.ShortcutQuery setActivity(android.content.ComponentName activity)
  LauncherApps_ShortcutQuery setActivity(content.ComponentName activity) =>
      LauncherApps_ShortcutQuery.fromRef(
          _setActivity(reference, activity.reference));

  static final _setQueryFlags = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "android_content_pm_LauncherApps__ShortcutQuery_setQueryFlags")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public android.content.pm.LauncherApps.ShortcutQuery setQueryFlags(int queryFlags)
  LauncherApps_ShortcutQuery setQueryFlags(int queryFlags) =>
      LauncherApps_ShortcutQuery.fromRef(_setQueryFlags(reference, queryFlags));
}

class LauncherApps_PinItemRequest extends jni.JlObject {
  LauncherApps_PinItemRequest.fromRef(ffi.Pointer<ffi.Void> ref)
      : super.fromRef(ref);

  /// from: static public final android.os.Parcelable.Creator<android.content.pm.LauncherApps.PinItemRequest> CREATOR
  static final _getCREATOR =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "get_android_content_pm_LauncherApps__PinItemRequest_CREATOR")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();
  static os.Parcelable_Creator get CREATOR =>
      os.Parcelable_Creator.fromRef(_getCREATOR());

  /// from: static public final int REQUEST_TYPE_APPWIDGET
  static const REQUEST_TYPE_APPWIDGET = 2;

  /// from: static public final int REQUEST_TYPE_SHORTCUT
  static const REQUEST_TYPE_SHORTCUT = 1;

  static final _ctor = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_LauncherApps__PinItemRequest_new")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: void <init>(android.os.Parcel source)
  LauncherApps_PinItemRequest(os.Parcel source)
      : super.fromRef(_ctor(source.reference));

  static final _getRequestType =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_pm_LauncherApps__PinItemRequest_getRequestType")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int getRequestType()
  int getRequestType() => _getRequestType(reference);

  static final _getShortcutInfo = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_LauncherApps__PinItemRequest_getShortcutInfo")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.content.pm.ShortcutInfo getShortcutInfo()
  ShortcutInfo getShortcutInfo() =>
      ShortcutInfo.fromRef(_getShortcutInfo(reference));

  static final _getAppWidgetProviderInfo = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_LauncherApps__PinItemRequest_getAppWidgetProviderInfo")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.appwidget.AppWidgetProviderInfo getAppWidgetProviderInfo(android.content.Context context)
  jni.JlObject getAppWidgetProviderInfo(content.Context context) =>
      jni.JlObject.fromRef(
          _getAppWidgetProviderInfo(reference, context.reference));

  static final _getExtras = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_LauncherApps__PinItemRequest_getExtras")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.os.Bundle getExtras()
  os.Bundle getExtras() => os.Bundle.fromRef(_getExtras(reference));

  static final _isValid =
      jlookup<ffi.NativeFunction<ffi.Uint8 Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_pm_LauncherApps__PinItemRequest_isValid")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public boolean isValid()
  bool isValid() => _isValid(reference) != 0;

  static final _accept = jlookup<
              ffi.NativeFunction<
                  ffi.Uint8 Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_LauncherApps__PinItemRequest_accept")
      .asFunction<int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public boolean accept(android.os.Bundle options)
  bool accept(os.Bundle options) => _accept(reference, options.reference) != 0;

  static final _accept_1 =
      jlookup<ffi.NativeFunction<ffi.Uint8 Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_pm_LauncherApps__PinItemRequest_accept_1")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public boolean accept()
  bool accept_1() => _accept_1(reference) != 0;

  static final _writeToParcel = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "android_content_pm_LauncherApps__PinItemRequest_writeToParcel")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public void writeToParcel(android.os.Parcel dest, int flags)
  void writeToParcel(os.Parcel dest, int flags) =>
      _writeToParcel(reference, dest.reference, flags);

  static final _describeContents = jlookup<
              ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_LauncherApps__PinItemRequest_describeContents")
      .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int describeContents()
  int describeContents() => _describeContents(reference);
}

class LauncherApps_Callback extends jni.JlObject {
  LauncherApps_Callback.fromRef(ffi.Pointer<ffi.Void> ref) : super.fromRef(ref);

  static final _ctor =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "android_content_pm_LauncherApps__Callback_new")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();

  /// from: public void <init>()
  LauncherApps_Callback() : super.fromRef(_ctor());

  static final _onPackageRemoved = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_LauncherApps__Callback_onPackageRemoved")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public abstract void onPackageRemoved(java.lang.String packageName, android.os.UserHandle user)
  void onPackageRemoved(jni.JlString packageName, os.UserHandle user) =>
      _onPackageRemoved(reference, packageName.reference, user.reference);

  static final _onPackageAdded = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_LauncherApps__Callback_onPackageAdded")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public abstract void onPackageAdded(java.lang.String packageName, android.os.UserHandle user)
  void onPackageAdded(jni.JlString packageName, os.UserHandle user) =>
      _onPackageAdded(reference, packageName.reference, user.reference);

  static final _onPackageChanged = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_LauncherApps__Callback_onPackageChanged")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public abstract void onPackageChanged(java.lang.String packageName, android.os.UserHandle user)
  void onPackageChanged(jni.JlString packageName, os.UserHandle user) =>
      _onPackageChanged(reference, packageName.reference, user.reference);

  static final _onPackagesAvailable = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Uint8)>>(
          "android_content_pm_LauncherApps__Callback_onPackagesAvailable")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, int)>();

  /// from: public abstract void onPackagesAvailable(java.lang.String[] packageNames, android.os.UserHandle user, boolean replacing)
  void onPackagesAvailable(
          jni.JlObject packageNames, os.UserHandle user, bool replacing) =>
      _onPackagesAvailable(
          reference, packageNames.reference, user.reference, replacing ? 1 : 0);

  static final _onPackagesUnavailable = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Uint8)>>(
          "android_content_pm_LauncherApps__Callback_onPackagesUnavailable")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, int)>();

  /// from: public abstract void onPackagesUnavailable(java.lang.String[] packageNames, android.os.UserHandle user, boolean replacing)
  void onPackagesUnavailable(
          jni.JlObject packageNames, os.UserHandle user, bool replacing) =>
      _onPackagesUnavailable(
          reference, packageNames.reference, user.reference, replacing ? 1 : 0);

  static final _onPackagesSuspended = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_LauncherApps__Callback_onPackagesSuspended")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public void onPackagesSuspended(java.lang.String[] packageNames, android.os.UserHandle user)
  void onPackagesSuspended(jni.JlObject packageNames, os.UserHandle user) =>
      _onPackagesSuspended(reference, packageNames.reference, user.reference);

  static final _onPackagesSuspended_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_LauncherApps__Callback_onPackagesSuspended_1")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void onPackagesSuspended(java.lang.String[] packageNames, android.os.UserHandle user, android.os.Bundle launcherExtras)
  void onPackagesSuspended_1(jni.JlObject packageNames, os.UserHandle user,
          os.Bundle launcherExtras) =>
      _onPackagesSuspended_1(reference, packageNames.reference, user.reference,
          launcherExtras.reference);

  static final _onPackagesUnsuspended = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_LauncherApps__Callback_onPackagesUnsuspended")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public void onPackagesUnsuspended(java.lang.String[] packageNames, android.os.UserHandle user)
  void onPackagesUnsuspended(jni.JlObject packageNames, os.UserHandle user) =>
      _onPackagesUnsuspended(reference, packageNames.reference, user.reference);

  static final _onShortcutsChanged = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_LauncherApps__Callback_onShortcutsChanged")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void onShortcutsChanged(java.lang.String packageName, java.util.List<android.content.pm.ShortcutInfo> shortcuts, android.os.UserHandle user)
  void onShortcutsChanged(jni.JlString packageName, jni.JlObject shortcuts,
          os.UserHandle user) =>
      _onShortcutsChanged(reference, packageName.reference, shortcuts.reference,
          user.reference);
}

class FeatureGroupInfo extends jni.JlObject {
  FeatureGroupInfo.fromRef(ffi.Pointer<ffi.Void> ref) : super.fromRef(ref);

  /// from: static public final android.os.Parcelable.Creator<android.content.pm.FeatureGroupInfo> CREATOR
  static final _getCREATOR =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "get_android_content_pm_FeatureGroupInfo_CREATOR")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();
  static os.Parcelable_Creator get CREATOR =>
      os.Parcelable_Creator.fromRef(_getCREATOR());

  /// from: public android.content.pm.FeatureInfo[] features
  static final _getfeatures = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_content_pm_FeatureGroupInfo_features")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>();
  jni.JlObject get features => jni.JlObject.fromRef(_getfeatures(reference));
  static final _setfeatures = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "set_android_content_pm_FeatureGroupInfo_features")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();
  set features(jni.JlObject value) => _setfeatures(reference, value.reference);

  static final _ctor =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "android_content_pm_FeatureGroupInfo_new")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();

  /// from: public void <init>()
  FeatureGroupInfo() : super.fromRef(_ctor());

  static final _ctor_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_FeatureGroupInfo_new_1")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void <init>(android.content.pm.FeatureGroupInfo other)
  FeatureGroupInfo.ctor_1(FeatureGroupInfo other)
      : super.fromRef(_ctor_1(other.reference));

  static final _describeContents =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_pm_FeatureGroupInfo_describeContents")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int describeContents()
  int describeContents() => _describeContents(reference);

  static final _writeToParcel = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "android_content_pm_FeatureGroupInfo_writeToParcel")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public void writeToParcel(android.os.Parcel dest, int flags)
  void writeToParcel(os.Parcel dest, int flags) =>
      _writeToParcel(reference, dest.reference, flags);
}

class SigningInfo extends jni.JlObject {
  SigningInfo.fromRef(ffi.Pointer<ffi.Void> ref) : super.fromRef(ref);

  /// from: static public final android.os.Parcelable.Creator<android.content.pm.SigningInfo> CREATOR
  static final _getCREATOR =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "get_android_content_pm_SigningInfo_CREATOR")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();
  static os.Parcelable_Creator get CREATOR =>
      os.Parcelable_Creator.fromRef(_getCREATOR());

  static final _ctor =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "android_content_pm_SigningInfo_new")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();

  /// from: public void <init>()
  SigningInfo() : super.fromRef(_ctor());

  static final _ctor_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_SigningInfo_new_1")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void <init>(android.content.pm.SigningInfo orig)
  SigningInfo.ctor_1(SigningInfo orig) : super.fromRef(_ctor_1(orig.reference));

  static final _hasMultipleSigners =
      jlookup<ffi.NativeFunction<ffi.Uint8 Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_pm_SigningInfo_hasMultipleSigners")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public boolean hasMultipleSigners()
  bool hasMultipleSigners() => _hasMultipleSigners(reference) != 0;

  static final _hasPastSigningCertificates =
      jlookup<ffi.NativeFunction<ffi.Uint8 Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_pm_SigningInfo_hasPastSigningCertificates")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public boolean hasPastSigningCertificates()
  bool hasPastSigningCertificates() =>
      _hasPastSigningCertificates(reference) != 0;

  static final _getSigningCertificateHistory = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_SigningInfo_getSigningCertificateHistory")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.content.pm.Signature[] getSigningCertificateHistory()
  jni.JlObject getSigningCertificateHistory() =>
      jni.JlObject.fromRef(_getSigningCertificateHistory(reference));

  static final _getApkContentsSigners = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_SigningInfo_getApkContentsSigners")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.content.pm.Signature[] getApkContentsSigners()
  jni.JlObject getApkContentsSigners() =>
      jni.JlObject.fromRef(_getApkContentsSigners(reference));

  static final _describeContents =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_pm_SigningInfo_describeContents")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int describeContents()
  int describeContents() => _describeContents(reference);

  static final _writeToParcel = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_content_pm_SigningInfo_writeToParcel")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public void writeToParcel(android.os.Parcel dest, int parcelableFlags)
  void writeToParcel(os.Parcel dest, int parcelableFlags) =>
      _writeToParcel(reference, dest.reference, parcelableFlags);
}

class PermissionInfo extends PackageItemInfo {
  PermissionInfo.fromRef(ffi.Pointer<ffi.Void> ref) : super.fromRef(ref);

  /// from: static public final android.os.Parcelable.Creator<android.content.pm.PermissionInfo> CREATOR
  static final _getCREATOR =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "get_android_content_pm_PermissionInfo_CREATOR")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();
  static os.Parcelable_Creator get CREATOR =>
      os.Parcelable_Creator.fromRef(_getCREATOR());

  /// from: static public final int FLAG_COSTS_MONEY
  static const FLAG_COSTS_MONEY = 1;

  /// from: static public final int FLAG_INSTALLED
  static const FLAG_INSTALLED = 1073741824;

  /// from: static public final int PROTECTION_DANGEROUS
  static const PROTECTION_DANGEROUS = 1;

  /// from: static public final int PROTECTION_FLAG_APPOP
  static const PROTECTION_FLAG_APPOP = 64;

  /// from: static public final int PROTECTION_FLAG_DEVELOPMENT
  static const PROTECTION_FLAG_DEVELOPMENT = 32;

  /// from: static public final int PROTECTION_FLAG_INSTALLER
  static const PROTECTION_FLAG_INSTALLER = 256;

  /// from: static public final int PROTECTION_FLAG_INSTANT
  static const PROTECTION_FLAG_INSTANT = 4096;

  /// from: static public final int PROTECTION_FLAG_PRE23
  static const PROTECTION_FLAG_PRE23 = 128;

  /// from: static public final int PROTECTION_FLAG_PREINSTALLED
  static const PROTECTION_FLAG_PREINSTALLED = 1024;

  /// from: static public final int PROTECTION_FLAG_PRIVILEGED
  static const PROTECTION_FLAG_PRIVILEGED = 16;

  /// from: static public final int PROTECTION_FLAG_RUNTIME_ONLY
  static const PROTECTION_FLAG_RUNTIME_ONLY = 8192;

  /// from: static public final int PROTECTION_FLAG_SETUP
  static const PROTECTION_FLAG_SETUP = 2048;

  /// from: static public final int PROTECTION_FLAG_SYSTEM
  static const PROTECTION_FLAG_SYSTEM = 16;

  /// from: static public final int PROTECTION_FLAG_VERIFIER
  static const PROTECTION_FLAG_VERIFIER = 512;

  /// from: static public final int PROTECTION_MASK_BASE
  static const PROTECTION_MASK_BASE = 15;

  /// from: static public final int PROTECTION_MASK_FLAGS
  static const PROTECTION_MASK_FLAGS = 65520;

  /// from: static public final int PROTECTION_NORMAL
  static const PROTECTION_NORMAL = 0;

  /// from: static public final int PROTECTION_SIGNATURE
  static const PROTECTION_SIGNATURE = 2;

  /// from: static public final int PROTECTION_SIGNATURE_OR_SYSTEM
  static const PROTECTION_SIGNATURE_OR_SYSTEM = 3;

  /// from: public int descriptionRes
  static final _getdescriptionRes = jlookup<
          ffi.NativeFunction<
              ffi.Int32 Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_content_pm_PermissionInfo_descriptionRes")
      .asFunction<
          int Function(
    ffi.Pointer<ffi.Void>,
  )>();
  int get descriptionRes => _getdescriptionRes(reference);
  static final _setdescriptionRes = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "set_android_content_pm_PermissionInfo_descriptionRes")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();
  set descriptionRes(int value) => _setdescriptionRes(reference, value);

  /// from: public int flags
  static final _getflags = jlookup<
          ffi.NativeFunction<
              ffi.Int32 Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_content_pm_PermissionInfo_flags")
      .asFunction<
          int Function(
    ffi.Pointer<ffi.Void>,
  )>();
  int get flags => _getflags(reference);
  static final _setflags = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("set_android_content_pm_PermissionInfo_flags")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();
  set flags(int value) => _setflags(reference, value);

  /// from: public java.lang.String group
  static final _getgroup = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_content_pm_PermissionInfo_group")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>();
  jni.JlString get group => jni.JlString.fromRef(_getgroup(reference));
  static final _setgroup = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "set_android_content_pm_PermissionInfo_group")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();
  set group(jni.JlString value) => _setgroup(reference, value.reference);

  /// from: public java.lang.CharSequence nonLocalizedDescription
  static final _getnonLocalizedDescription = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_content_pm_PermissionInfo_nonLocalizedDescription")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>();
  jni.JlObject get nonLocalizedDescription =>
      jni.JlObject.fromRef(_getnonLocalizedDescription(reference));
  static final _setnonLocalizedDescription = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "set_android_content_pm_PermissionInfo_nonLocalizedDescription")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();
  set nonLocalizedDescription(jni.JlObject value) =>
      _setnonLocalizedDescription(reference, value.reference);

  /// from: public int protectionLevel
  static final _getprotectionLevel = jlookup<
          ffi.NativeFunction<
              ffi.Int32 Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_content_pm_PermissionInfo_protectionLevel")
      .asFunction<
          int Function(
    ffi.Pointer<ffi.Void>,
  )>();
  int get protectionLevel => _getprotectionLevel(reference);
  static final _setprotectionLevel = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "set_android_content_pm_PermissionInfo_protectionLevel")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();
  set protectionLevel(int value) => _setprotectionLevel(reference, value);

  static final _ctor =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "android_content_pm_PermissionInfo_new")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();

  /// from: public void <init>()
  PermissionInfo() : super.fromRef(_ctor());

  static final _ctor_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_PermissionInfo_new_1")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void <init>(android.content.pm.PermissionInfo orig)
  PermissionInfo.ctor_1(PermissionInfo orig)
      : super.fromRef(_ctor_1(orig.reference));

  static final _loadDescription = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_PermissionInfo_loadDescription")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.CharSequence loadDescription(android.content.pm.PackageManager pm)
  jni.JlObject loadDescription(PackageManager pm) =>
      jni.JlObject.fromRef(_loadDescription(reference, pm.reference));

  static final _getProtection =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_pm_PermissionInfo_getProtection")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int getProtection()
  int getProtection() => _getProtection(reference);

  static final _getProtectionFlags =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_pm_PermissionInfo_getProtectionFlags")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int getProtectionFlags()
  int getProtectionFlags() => _getProtectionFlags(reference);

  static final _toString_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_PermissionInfo_toString_1")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.String toString()
  jni.JlString toString_1() => jni.JlString.fromRef(_toString_1(reference));

  static final _describeContents =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_pm_PermissionInfo_describeContents")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int describeContents()
  int describeContents() => _describeContents(reference);

  static final _writeToParcel = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "android_content_pm_PermissionInfo_writeToParcel")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public void writeToParcel(android.os.Parcel dest, int parcelableFlags)
  void writeToParcel(os.Parcel dest, int parcelableFlags) =>
      _writeToParcel(reference, dest.reference, parcelableFlags);
}

class ServiceInfo extends ComponentInfo {
  ServiceInfo.fromRef(ffi.Pointer<ffi.Void> ref) : super.fromRef(ref);

  /// from: static public final android.os.Parcelable.Creator<android.content.pm.ServiceInfo> CREATOR
  static final _getCREATOR =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "get_android_content_pm_ServiceInfo_CREATOR")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();
  static os.Parcelable_Creator get CREATOR =>
      os.Parcelable_Creator.fromRef(_getCREATOR());

  /// from: static public final int FLAG_EXTERNAL_SERVICE
  static const FLAG_EXTERNAL_SERVICE = 4;

  /// from: static public final int FLAG_ISOLATED_PROCESS
  static const FLAG_ISOLATED_PROCESS = 2;

  /// from: static public final int FLAG_SINGLE_USER
  static const FLAG_SINGLE_USER = 1073741824;

  /// from: static public final int FLAG_STOP_WITH_TASK
  static const FLAG_STOP_WITH_TASK = 1;

  /// from: public int flags
  static final _getflags = jlookup<
          ffi.NativeFunction<
              ffi.Int32 Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_content_pm_ServiceInfo_flags")
      .asFunction<
          int Function(
    ffi.Pointer<ffi.Void>,
  )>();
  int get flags => _getflags(reference);
  static final _setflags = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("set_android_content_pm_ServiceInfo_flags")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();
  set flags(int value) => _setflags(reference, value);

  /// from: public java.lang.String permission
  static final _getpermission = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_content_pm_ServiceInfo_permission")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>();
  jni.JlString get permission =>
      jni.JlString.fromRef(_getpermission(reference));
  static final _setpermission = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "set_android_content_pm_ServiceInfo_permission")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();
  set permission(jni.JlString value) =>
      _setpermission(reference, value.reference);

  static final _ctor =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "android_content_pm_ServiceInfo_new")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();

  /// from: public void <init>()
  ServiceInfo() : super.fromRef(_ctor());

  static final _ctor_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_ServiceInfo_new_1")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void <init>(android.content.pm.ServiceInfo orig)
  ServiceInfo.ctor_1(ServiceInfo orig) : super.fromRef(_ctor_1(orig.reference));

  static final _dump = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_ServiceInfo_dump")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public void dump(android.util.Printer pw, java.lang.String prefix)
  void dump(jni.JlObject pw, jni.JlString prefix) =>
      _dump(reference, pw.reference, prefix.reference);

  static final _toString_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_ServiceInfo_toString_1")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.String toString()
  jni.JlString toString_1() => jni.JlString.fromRef(_toString_1(reference));

  static final _describeContents =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_pm_ServiceInfo_describeContents")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int describeContents()
  int describeContents() => _describeContents(reference);

  static final _writeToParcel = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_content_pm_ServiceInfo_writeToParcel")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public void writeToParcel(android.os.Parcel dest, int parcelableFlags)
  void writeToParcel(os.Parcel dest, int parcelableFlags) =>
      _writeToParcel(reference, dest.reference, parcelableFlags);
}

class SharedLibraryInfo extends jni.JlObject {
  SharedLibraryInfo.fromRef(ffi.Pointer<ffi.Void> ref) : super.fromRef(ref);

  /// from: static public final android.os.Parcelable.Creator<android.content.pm.SharedLibraryInfo> CREATOR
  static final _getCREATOR =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "get_android_content_pm_SharedLibraryInfo_CREATOR")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();
  static os.Parcelable_Creator get CREATOR =>
      os.Parcelable_Creator.fromRef(_getCREATOR());

  /// from: static public final int TYPE_BUILTIN
  static const TYPE_BUILTIN = 0;

  /// from: static public final int TYPE_DYNAMIC
  static const TYPE_DYNAMIC = 1;

  /// from: static public final int TYPE_STATIC
  static const TYPE_STATIC = 2;

  /// from: static public final int VERSION_UNDEFINED
  static const VERSION_UNDEFINED = -1;

  static final _ctor = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_SharedLibraryInfo_new")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: void <init>(android.os.Parcel parcel)
  SharedLibraryInfo(os.Parcel parcel) : super.fromRef(_ctor(parcel.reference));

  static final _getType =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_pm_SharedLibraryInfo_getType")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int getType()
  int getType() => _getType(reference);

  static final _getName = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_SharedLibraryInfo_getName")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.String getName()
  jni.JlString getName() => jni.JlString.fromRef(_getName(reference));

  static final _getVersion =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_pm_SharedLibraryInfo_getVersion")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int getVersion()
  int getVersion() => _getVersion(reference);

  static final _getLongVersion =
      jlookup<ffi.NativeFunction<ffi.Int64 Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_pm_SharedLibraryInfo_getLongVersion")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public long getLongVersion()
  int getLongVersion() => _getLongVersion(reference);

  static final _getDeclaringPackage = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_SharedLibraryInfo_getDeclaringPackage")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.content.pm.VersionedPackage getDeclaringPackage()
  VersionedPackage getDeclaringPackage() =>
      VersionedPackage.fromRef(_getDeclaringPackage(reference));

  static final _getDependentPackages = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_SharedLibraryInfo_getDependentPackages")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.util.List<android.content.pm.VersionedPackage> getDependentPackages()
  jni.JlObject getDependentPackages() =>
      jni.JlObject.fromRef(_getDependentPackages(reference));

  static final _describeContents =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_pm_SharedLibraryInfo_describeContents")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int describeContents()
  int describeContents() => _describeContents(reference);

  static final _toString_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_SharedLibraryInfo_toString_1")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.String toString()
  jni.JlString toString_1() => jni.JlString.fromRef(_toString_1(reference));

  static final _writeToParcel = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "android_content_pm_SharedLibraryInfo_writeToParcel")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public void writeToParcel(android.os.Parcel parcel, int flags)
  void writeToParcel(os.Parcel parcel, int flags) =>
      _writeToParcel(reference, parcel.reference, flags);
}

class CrossProfileApps extends jni.JlObject {
  CrossProfileApps.fromRef(ffi.Pointer<ffi.Void> ref) : super.fromRef(ref);

  static final _ctor =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "android_content_pm_CrossProfileApps_new")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();

  /// from: void <init>()
  CrossProfileApps() : super.fromRef(_ctor());

  static final _startMainActivity = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_CrossProfileApps_startMainActivity")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public void startMainActivity(android.content.ComponentName component, android.os.UserHandle targetUser)
  void startMainActivity(
          content.ComponentName component, os.UserHandle targetUser) =>
      _startMainActivity(reference, component.reference, targetUser.reference);

  static final _getTargetUserProfiles = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_CrossProfileApps_getTargetUserProfiles")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.util.List<android.os.UserHandle> getTargetUserProfiles()
  jni.JlObject getTargetUserProfiles() =>
      jni.JlObject.fromRef(_getTargetUserProfiles(reference));

  static final _getProfileSwitchingLabel = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_CrossProfileApps_getProfileSwitchingLabel")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.CharSequence getProfileSwitchingLabel(android.os.UserHandle userHandle)
  jni.JlObject getProfileSwitchingLabel(os.UserHandle userHandle) =>
      jni.JlObject.fromRef(
          _getProfileSwitchingLabel(reference, userHandle.reference));

  static final _getProfileSwitchingIconDrawable = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_CrossProfileApps_getProfileSwitchingIconDrawable")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.graphics.drawable.Drawable getProfileSwitchingIconDrawable(android.os.UserHandle userHandle)
  jni.JlObject getProfileSwitchingIconDrawable(os.UserHandle userHandle) =>
      jni.JlObject.fromRef(
          _getProfileSwitchingIconDrawable(reference, userHandle.reference));
}

class ShortcutInfo extends jni.JlObject {
  ShortcutInfo.fromRef(ffi.Pointer<ffi.Void> ref) : super.fromRef(ref);

  /// from: static public final android.os.Parcelable.Creator<android.content.pm.ShortcutInfo> CREATOR
  static final _getCREATOR =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "get_android_content_pm_ShortcutInfo_CREATOR")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();
  static os.Parcelable_Creator get CREATOR =>
      os.Parcelable_Creator.fromRef(_getCREATOR());

  /// from: static public final int DISABLED_REASON_APP_CHANGED
  static const DISABLED_REASON_APP_CHANGED = 2;

  /// from: static public final int DISABLED_REASON_BACKUP_NOT_SUPPORTED
  static const DISABLED_REASON_BACKUP_NOT_SUPPORTED = 101;

  /// from: static public final int DISABLED_REASON_BY_APP
  static const DISABLED_REASON_BY_APP = 1;

  /// from: static public final int DISABLED_REASON_NOT_DISABLED
  static const DISABLED_REASON_NOT_DISABLED = 0;

  /// from: static public final int DISABLED_REASON_OTHER_RESTORE_ISSUE
  static const DISABLED_REASON_OTHER_RESTORE_ISSUE = 103;

  /// from: static public final int DISABLED_REASON_SIGNATURE_MISMATCH
  static const DISABLED_REASON_SIGNATURE_MISMATCH = 102;

  /// from: static public final int DISABLED_REASON_UNKNOWN
  static const DISABLED_REASON_UNKNOWN = 3;

  /// from: static public final int DISABLED_REASON_VERSION_LOWER
  static const DISABLED_REASON_VERSION_LOWER = 100;

  /// from: static public final java.lang.String SHORTCUT_CATEGORY_CONVERSATION
  static const SHORTCUT_CATEGORY_CONVERSATION = "android.shortcut.conversation";

  static final _ctor = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_ShortcutInfo_new")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: void <init>(android.content.pm.ShortcutInfo.Builder b)
  ShortcutInfo(ShortcutInfo_Builder b) : super.fromRef(_ctor(b.reference));

  static final _getId = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_ShortcutInfo_getId")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.String getId()
  jni.JlString getId() => jni.JlString.fromRef(_getId(reference));

  static final _getPackage = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_ShortcutInfo_getPackage")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.String getPackage()
  jni.JlString getPackage() => jni.JlString.fromRef(_getPackage(reference));

  static final _getActivity = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_ShortcutInfo_getActivity")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.content.ComponentName getActivity()
  content.ComponentName getActivity() =>
      content.ComponentName.fromRef(_getActivity(reference));

  static final _getShortLabel = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_ShortcutInfo_getShortLabel")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.CharSequence getShortLabel()
  jni.JlObject getShortLabel() =>
      jni.JlObject.fromRef(_getShortLabel(reference));

  static final _getLongLabel = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_ShortcutInfo_getLongLabel")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.CharSequence getLongLabel()
  jni.JlObject getLongLabel() => jni.JlObject.fromRef(_getLongLabel(reference));

  static final _getDisabledMessage = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_ShortcutInfo_getDisabledMessage")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.CharSequence getDisabledMessage()
  jni.JlObject getDisabledMessage() =>
      jni.JlObject.fromRef(_getDisabledMessage(reference));

  static final _getDisabledReason =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_pm_ShortcutInfo_getDisabledReason")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int getDisabledReason()
  int getDisabledReason() => _getDisabledReason(reference);

  static final _getCategories = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_ShortcutInfo_getCategories")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.util.Set<java.lang.String> getCategories()
  jni.JlObject getCategories() =>
      jni.JlObject.fromRef(_getCategories(reference));

  static final _getIntent = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_ShortcutInfo_getIntent")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.content.Intent getIntent()
  content.Intent getIntent() => content.Intent.fromRef(_getIntent(reference));

  static final _getIntents = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_ShortcutInfo_getIntents")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.content.Intent[] getIntents()
  jni.JlObject getIntents() => jni.JlObject.fromRef(_getIntents(reference));

  static final _getRank =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_pm_ShortcutInfo_getRank")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int getRank()
  int getRank() => _getRank(reference);

  static final _getExtras = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_ShortcutInfo_getExtras")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.os.PersistableBundle getExtras()
  os.PersistableBundle getExtras() =>
      os.PersistableBundle.fromRef(_getExtras(reference));

  static final _getUserHandle = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_ShortcutInfo_getUserHandle")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.os.UserHandle getUserHandle()
  os.UserHandle getUserHandle() =>
      os.UserHandle.fromRef(_getUserHandle(reference));

  static final _getLastChangedTimestamp =
      jlookup<ffi.NativeFunction<ffi.Int64 Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_pm_ShortcutInfo_getLastChangedTimestamp")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public long getLastChangedTimestamp()
  int getLastChangedTimestamp() => _getLastChangedTimestamp(reference);

  static final _isDynamic =
      jlookup<ffi.NativeFunction<ffi.Uint8 Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_pm_ShortcutInfo_isDynamic")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public boolean isDynamic()
  bool isDynamic() => _isDynamic(reference) != 0;

  static final _isPinned =
      jlookup<ffi.NativeFunction<ffi.Uint8 Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_pm_ShortcutInfo_isPinned")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public boolean isPinned()
  bool isPinned() => _isPinned(reference) != 0;

  static final _isDeclaredInManifest =
      jlookup<ffi.NativeFunction<ffi.Uint8 Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_pm_ShortcutInfo_isDeclaredInManifest")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public boolean isDeclaredInManifest()
  bool isDeclaredInManifest() => _isDeclaredInManifest(reference) != 0;

  static final _isImmutable =
      jlookup<ffi.NativeFunction<ffi.Uint8 Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_pm_ShortcutInfo_isImmutable")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public boolean isImmutable()
  bool isImmutable() => _isImmutable(reference) != 0;

  static final _isEnabled =
      jlookup<ffi.NativeFunction<ffi.Uint8 Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_pm_ShortcutInfo_isEnabled")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public boolean isEnabled()
  bool isEnabled() => _isEnabled(reference) != 0;

  static final _hasKeyFieldsOnly =
      jlookup<ffi.NativeFunction<ffi.Uint8 Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_pm_ShortcutInfo_hasKeyFieldsOnly")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public boolean hasKeyFieldsOnly()
  bool hasKeyFieldsOnly() => _hasKeyFieldsOnly(reference) != 0;

  static final _writeToParcel = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_content_pm_ShortcutInfo_writeToParcel")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public void writeToParcel(android.os.Parcel dest, int flags)
  void writeToParcel(os.Parcel dest, int flags) =>
      _writeToParcel(reference, dest.reference, flags);

  static final _describeContents =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_pm_ShortcutInfo_describeContents")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int describeContents()
  int describeContents() => _describeContents(reference);

  static final _toString_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_ShortcutInfo_toString_1")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.String toString()
  jni.JlString toString_1() => jni.JlString.fromRef(_toString_1(reference));
}

class ShortcutInfo_Builder extends jni.JlObject {
  ShortcutInfo_Builder.fromRef(ffi.Pointer<ffi.Void> ref) : super.fromRef(ref);

  static final _ctor = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_ShortcutInfo__Builder_new")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void <init>(android.content.Context context, java.lang.String id)
  ShortcutInfo_Builder(content.Context context, jni.JlString id)
      : super.fromRef(_ctor(context.reference, id.reference));

  static final _setActivity = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_ShortcutInfo__Builder_setActivity")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.content.pm.ShortcutInfo.Builder setActivity(android.content.ComponentName activity)
  ShortcutInfo_Builder setActivity(content.ComponentName activity) =>
      ShortcutInfo_Builder.fromRef(_setActivity(reference, activity.reference));

  static final _setIcon = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_ShortcutInfo__Builder_setIcon")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.content.pm.ShortcutInfo.Builder setIcon(android.graphics.drawable.Icon icon)
  ShortcutInfo_Builder setIcon(jni.JlObject icon) =>
      ShortcutInfo_Builder.fromRef(_setIcon(reference, icon.reference));

  static final _setShortLabel = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_ShortcutInfo__Builder_setShortLabel")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.content.pm.ShortcutInfo.Builder setShortLabel(java.lang.CharSequence shortLabel)
  ShortcutInfo_Builder setShortLabel(jni.JlObject shortLabel) =>
      ShortcutInfo_Builder.fromRef(
          _setShortLabel(reference, shortLabel.reference));

  static final _setLongLabel = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_ShortcutInfo__Builder_setLongLabel")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.content.pm.ShortcutInfo.Builder setLongLabel(java.lang.CharSequence longLabel)
  ShortcutInfo_Builder setLongLabel(jni.JlObject longLabel) =>
      ShortcutInfo_Builder.fromRef(
          _setLongLabel(reference, longLabel.reference));

  static final _setDisabledMessage = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_ShortcutInfo__Builder_setDisabledMessage")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.content.pm.ShortcutInfo.Builder setDisabledMessage(java.lang.CharSequence disabledMessage)
  ShortcutInfo_Builder setDisabledMessage(jni.JlObject disabledMessage) =>
      ShortcutInfo_Builder.fromRef(
          _setDisabledMessage(reference, disabledMessage.reference));

  static final _setCategories = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_ShortcutInfo__Builder_setCategories")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.content.pm.ShortcutInfo.Builder setCategories(java.util.Set<java.lang.String> categories)
  ShortcutInfo_Builder setCategories(jni.JlObject categories) =>
      ShortcutInfo_Builder.fromRef(
          _setCategories(reference, categories.reference));

  static final _setIntent = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_ShortcutInfo__Builder_setIntent")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.content.pm.ShortcutInfo.Builder setIntent(android.content.Intent intent)
  ShortcutInfo_Builder setIntent(content.Intent intent) =>
      ShortcutInfo_Builder.fromRef(_setIntent(reference, intent.reference));

  static final _setIntents = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_ShortcutInfo__Builder_setIntents")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.content.pm.ShortcutInfo.Builder setIntents(android.content.Intent[] intents)
  ShortcutInfo_Builder setIntents(jni.JlObject intents) =>
      ShortcutInfo_Builder.fromRef(_setIntents(reference, intents.reference));

  static final _setRank = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "android_content_pm_ShortcutInfo__Builder_setRank")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public android.content.pm.ShortcutInfo.Builder setRank(int rank)
  ShortcutInfo_Builder setRank(int rank) =>
      ShortcutInfo_Builder.fromRef(_setRank(reference, rank));

  static final _setExtras = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_ShortcutInfo__Builder_setExtras")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.content.pm.ShortcutInfo.Builder setExtras(android.os.PersistableBundle extras)
  ShortcutInfo_Builder setExtras(os.PersistableBundle extras) =>
      ShortcutInfo_Builder.fromRef(_setExtras(reference, extras.reference));

  static final _build = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_ShortcutInfo__Builder_build")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.content.pm.ShortcutInfo build()
  ShortcutInfo build() => ShortcutInfo.fromRef(_build(reference));
}

class PackageItemInfo extends jni.JlObject {
  PackageItemInfo.fromRef(ffi.Pointer<ffi.Void> ref) : super.fromRef(ref);

  /// from: public int banner
  static final _getbanner = jlookup<
          ffi.NativeFunction<
              ffi.Int32 Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_content_pm_PackageItemInfo_banner")
      .asFunction<
          int Function(
    ffi.Pointer<ffi.Void>,
  )>();
  int get banner => _getbanner(reference);
  static final _setbanner = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("set_android_content_pm_PackageItemInfo_banner")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();
  set banner(int value) => _setbanner(reference, value);

  /// from: public int icon
  static final _geticon = jlookup<
          ffi.NativeFunction<
              ffi.Int32 Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_content_pm_PackageItemInfo_icon")
      .asFunction<
          int Function(
    ffi.Pointer<ffi.Void>,
  )>();
  int get icon => _geticon(reference);
  static final _seticon = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("set_android_content_pm_PackageItemInfo_icon")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();
  set icon(int value) => _seticon(reference, value);

  /// from: public int labelRes
  static final _getlabelRes = jlookup<
          ffi.NativeFunction<
              ffi.Int32 Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_content_pm_PackageItemInfo_labelRes")
      .asFunction<
          int Function(
    ffi.Pointer<ffi.Void>,
  )>();
  int get labelRes => _getlabelRes(reference);
  static final _setlabelRes = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "set_android_content_pm_PackageItemInfo_labelRes")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();
  set labelRes(int value) => _setlabelRes(reference, value);

  /// from: public int logo
  static final _getlogo = jlookup<
          ffi.NativeFunction<
              ffi.Int32 Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_content_pm_PackageItemInfo_logo")
      .asFunction<
          int Function(
    ffi.Pointer<ffi.Void>,
  )>();
  int get logo => _getlogo(reference);
  static final _setlogo = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("set_android_content_pm_PackageItemInfo_logo")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();
  set logo(int value) => _setlogo(reference, value);

  /// from: public android.os.Bundle metaData
  static final _getmetaData = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_content_pm_PackageItemInfo_metaData")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>();
  os.Bundle get metaData => os.Bundle.fromRef(_getmetaData(reference));
  static final _setmetaData = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "set_android_content_pm_PackageItemInfo_metaData")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();
  set metaData(os.Bundle value) => _setmetaData(reference, value.reference);

  /// from: public java.lang.String name
  static final _getname = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_content_pm_PackageItemInfo_name")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>();
  jni.JlString get name => jni.JlString.fromRef(_getname(reference));
  static final _setname = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "set_android_content_pm_PackageItemInfo_name")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();
  set name(jni.JlString value) => _setname(reference, value.reference);

  /// from: public java.lang.CharSequence nonLocalizedLabel
  static final _getnonLocalizedLabel = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_content_pm_PackageItemInfo_nonLocalizedLabel")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>();
  jni.JlObject get nonLocalizedLabel =>
      jni.JlObject.fromRef(_getnonLocalizedLabel(reference));
  static final _setnonLocalizedLabel = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "set_android_content_pm_PackageItemInfo_nonLocalizedLabel")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();
  set nonLocalizedLabel(jni.JlObject value) =>
      _setnonLocalizedLabel(reference, value.reference);

  /// from: public java.lang.String packageName
  static final _getpackageName = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_content_pm_PackageItemInfo_packageName")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>();
  jni.JlString get packageName =>
      jni.JlString.fromRef(_getpackageName(reference));
  static final _setpackageName = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "set_android_content_pm_PackageItemInfo_packageName")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();
  set packageName(jni.JlString value) =>
      _setpackageName(reference, value.reference);

  static final _ctor =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "android_content_pm_PackageItemInfo_new")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();

  /// from: public void <init>()
  PackageItemInfo() : super.fromRef(_ctor());

  static final _ctor_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_PackageItemInfo_new_1")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void <init>(android.content.pm.PackageItemInfo orig)
  PackageItemInfo.ctor_1(PackageItemInfo orig)
      : super.fromRef(_ctor_1(orig.reference));

  static final _ctor_2 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_PackageItemInfo_new_2")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: protected void <init>(android.os.Parcel source)
  PackageItemInfo.ctor_2(os.Parcel source)
      : super.fromRef(_ctor_2(source.reference));

  static final _loadLabel = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_PackageItemInfo_loadLabel")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.CharSequence loadLabel(android.content.pm.PackageManager pm)
  jni.JlObject loadLabel(PackageManager pm) =>
      jni.JlObject.fromRef(_loadLabel(reference, pm.reference));

  static final _loadIcon = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_PackageItemInfo_loadIcon")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.graphics.drawable.Drawable loadIcon(android.content.pm.PackageManager pm)
  jni.JlObject loadIcon(PackageManager pm) =>
      jni.JlObject.fromRef(_loadIcon(reference, pm.reference));

  static final _loadUnbadgedIcon = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_PackageItemInfo_loadUnbadgedIcon")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.graphics.drawable.Drawable loadUnbadgedIcon(android.content.pm.PackageManager pm)
  jni.JlObject loadUnbadgedIcon(PackageManager pm) =>
      jni.JlObject.fromRef(_loadUnbadgedIcon(reference, pm.reference));

  static final _loadBanner = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_PackageItemInfo_loadBanner")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.graphics.drawable.Drawable loadBanner(android.content.pm.PackageManager pm)
  jni.JlObject loadBanner(PackageManager pm) =>
      jni.JlObject.fromRef(_loadBanner(reference, pm.reference));

  static final _loadLogo = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_PackageItemInfo_loadLogo")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.graphics.drawable.Drawable loadLogo(android.content.pm.PackageManager pm)
  jni.JlObject loadLogo(PackageManager pm) =>
      jni.JlObject.fromRef(_loadLogo(reference, pm.reference));

  static final _loadXmlMetaData = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_PackageItemInfo_loadXmlMetaData")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.content.res.XmlResourceParser loadXmlMetaData(android.content.pm.PackageManager pm, java.lang.String name)
  res.XmlResourceParser loadXmlMetaData(PackageManager pm, jni.JlString name) =>
      res.XmlResourceParser.fromRef(
          _loadXmlMetaData(reference, pm.reference, name.reference));

  static final _dumpFront = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_PackageItemInfo_dumpFront")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: protected void dumpFront(android.util.Printer pw, java.lang.String prefix)
  void dumpFront(jni.JlObject pw, jni.JlString prefix) =>
      _dumpFront(reference, pw.reference, prefix.reference);

  static final _dumpBack = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_PackageItemInfo_dumpBack")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: protected void dumpBack(android.util.Printer pw, java.lang.String prefix)
  void dumpBack(jni.JlObject pw, jni.JlString prefix) =>
      _dumpBack(reference, pw.reference, prefix.reference);

  static final _writeToParcel = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "android_content_pm_PackageItemInfo_writeToParcel")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public void writeToParcel(android.os.Parcel dest, int parcelableFlags)
  void writeToParcel(os.Parcel dest, int parcelableFlags) =>
      _writeToParcel(reference, dest.reference, parcelableFlags);
}

class PackageItemInfo_DisplayNameComparator extends jni.JlObject {
  PackageItemInfo_DisplayNameComparator.fromRef(ffi.Pointer<ffi.Void> ref)
      : super.fromRef(ref);

  static final _ctor = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_PackageItemInfo__DisplayNameComparator_new")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void <init>(android.content.pm.PackageManager pm)
  PackageItemInfo_DisplayNameComparator(PackageManager pm)
      : super.fromRef(_ctor(pm.reference));

  static final _compare = jlookup<
              ffi.NativeFunction<
                  ffi.Int32 Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_PackageItemInfo__DisplayNameComparator_compare")
      .asFunction<
          int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public final int compare(android.content.pm.PackageItemInfo aa, android.content.pm.PackageItemInfo ab)
  int compare(PackageItemInfo aa, PackageItemInfo ab) =>
      _compare(reference, aa.reference, ab.reference);
}

class ResolveInfo extends jni.JlObject {
  ResolveInfo.fromRef(ffi.Pointer<ffi.Void> ref) : super.fromRef(ref);

  /// from: static public final android.os.Parcelable.Creator<android.content.pm.ResolveInfo> CREATOR
  static final _getCREATOR =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "get_android_content_pm_ResolveInfo_CREATOR")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();
  static os.Parcelable_Creator get CREATOR =>
      os.Parcelable_Creator.fromRef(_getCREATOR());

  /// from: public android.content.pm.ActivityInfo activityInfo
  static final _getactivityInfo = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_content_pm_ResolveInfo_activityInfo")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>();
  ActivityInfo get activityInfo =>
      ActivityInfo.fromRef(_getactivityInfo(reference));
  static final _setactivityInfo = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "set_android_content_pm_ResolveInfo_activityInfo")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();
  set activityInfo(ActivityInfo value) =>
      _setactivityInfo(reference, value.reference);

  /// from: public android.content.IntentFilter filter
  static final _getfilter = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_content_pm_ResolveInfo_filter")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>();
  content.IntentFilter get filter =>
      content.IntentFilter.fromRef(_getfilter(reference));
  static final _setfilter = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "set_android_content_pm_ResolveInfo_filter")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();
  set filter(content.IntentFilter value) =>
      _setfilter(reference, value.reference);

  /// from: public int icon
  static final _geticon = jlookup<
          ffi.NativeFunction<
              ffi.Int32 Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_content_pm_ResolveInfo_icon")
      .asFunction<
          int Function(
    ffi.Pointer<ffi.Void>,
  )>();
  int get icon => _geticon(reference);
  static final _seticon = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("set_android_content_pm_ResolveInfo_icon")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();
  set icon(int value) => _seticon(reference, value);

  /// from: public boolean isDefault
  static final _getisDefault = jlookup<
          ffi.NativeFunction<
              ffi.Uint8 Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_content_pm_ResolveInfo_isDefault")
      .asFunction<
          int Function(
    ffi.Pointer<ffi.Void>,
  )>();
  bool get isDefault => _getisDefault(reference) != 0;
  static final _setisDefault = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  ffi.Uint8)>>("set_android_content_pm_ResolveInfo_isDefault")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();
  set isDefault(bool value) => _setisDefault(reference, value ? 1 : 0);

  /// from: public boolean isInstantAppAvailable
  static final _getisInstantAppAvailable = jlookup<
          ffi.NativeFunction<
              ffi.Uint8 Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_content_pm_ResolveInfo_isInstantAppAvailable")
      .asFunction<
          int Function(
    ffi.Pointer<ffi.Void>,
  )>();
  bool get isInstantAppAvailable => _getisInstantAppAvailable(reference) != 0;
  static final _setisInstantAppAvailable = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Uint8)>>(
          "set_android_content_pm_ResolveInfo_isInstantAppAvailable")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();
  set isInstantAppAvailable(bool value) =>
      _setisInstantAppAvailable(reference, value ? 1 : 0);

  /// from: public int labelRes
  static final _getlabelRes = jlookup<
          ffi.NativeFunction<
              ffi.Int32 Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_content_pm_ResolveInfo_labelRes")
      .asFunction<
          int Function(
    ffi.Pointer<ffi.Void>,
  )>();
  int get labelRes => _getlabelRes(reference);
  static final _setlabelRes = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("set_android_content_pm_ResolveInfo_labelRes")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();
  set labelRes(int value) => _setlabelRes(reference, value);

  /// from: public int match
  static final _getmatch = jlookup<
          ffi.NativeFunction<
              ffi.Int32 Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_content_pm_ResolveInfo_match")
      .asFunction<
          int Function(
    ffi.Pointer<ffi.Void>,
  )>();
  int get match => _getmatch(reference);
  static final _setmatch = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("set_android_content_pm_ResolveInfo_match")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();
  set match(int value) => _setmatch(reference, value);

  /// from: public java.lang.CharSequence nonLocalizedLabel
  static final _getnonLocalizedLabel = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_content_pm_ResolveInfo_nonLocalizedLabel")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>();
  jni.JlObject get nonLocalizedLabel =>
      jni.JlObject.fromRef(_getnonLocalizedLabel(reference));
  static final _setnonLocalizedLabel = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "set_android_content_pm_ResolveInfo_nonLocalizedLabel")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();
  set nonLocalizedLabel(jni.JlObject value) =>
      _setnonLocalizedLabel(reference, value.reference);

  /// from: public int preferredOrder
  static final _getpreferredOrder = jlookup<
          ffi.NativeFunction<
              ffi.Int32 Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_content_pm_ResolveInfo_preferredOrder")
      .asFunction<
          int Function(
    ffi.Pointer<ffi.Void>,
  )>();
  int get preferredOrder => _getpreferredOrder(reference);
  static final _setpreferredOrder = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "set_android_content_pm_ResolveInfo_preferredOrder")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();
  set preferredOrder(int value) => _setpreferredOrder(reference, value);

  /// from: public int priority
  static final _getpriority = jlookup<
          ffi.NativeFunction<
              ffi.Int32 Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_content_pm_ResolveInfo_priority")
      .asFunction<
          int Function(
    ffi.Pointer<ffi.Void>,
  )>();
  int get priority => _getpriority(reference);
  static final _setpriority = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("set_android_content_pm_ResolveInfo_priority")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();
  set priority(int value) => _setpriority(reference, value);

  /// from: public android.content.pm.ProviderInfo providerInfo
  static final _getproviderInfo = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_content_pm_ResolveInfo_providerInfo")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>();
  ProviderInfo get providerInfo =>
      ProviderInfo.fromRef(_getproviderInfo(reference));
  static final _setproviderInfo = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "set_android_content_pm_ResolveInfo_providerInfo")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();
  set providerInfo(ProviderInfo value) =>
      _setproviderInfo(reference, value.reference);

  /// from: public java.lang.String resolvePackageName
  static final _getresolvePackageName = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_content_pm_ResolveInfo_resolvePackageName")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>();
  jni.JlString get resolvePackageName =>
      jni.JlString.fromRef(_getresolvePackageName(reference));
  static final _setresolvePackageName = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "set_android_content_pm_ResolveInfo_resolvePackageName")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();
  set resolvePackageName(jni.JlString value) =>
      _setresolvePackageName(reference, value.reference);

  /// from: public android.content.pm.ServiceInfo serviceInfo
  static final _getserviceInfo = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_content_pm_ResolveInfo_serviceInfo")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>();
  ServiceInfo get serviceInfo =>
      ServiceInfo.fromRef(_getserviceInfo(reference));
  static final _setserviceInfo = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "set_android_content_pm_ResolveInfo_serviceInfo")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();
  set serviceInfo(ServiceInfo value) =>
      _setserviceInfo(reference, value.reference);

  /// from: public int specificIndex
  static final _getspecificIndex = jlookup<
          ffi.NativeFunction<
              ffi.Int32 Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_content_pm_ResolveInfo_specificIndex")
      .asFunction<
          int Function(
    ffi.Pointer<ffi.Void>,
  )>();
  int get specificIndex => _getspecificIndex(reference);
  static final _setspecificIndex = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "set_android_content_pm_ResolveInfo_specificIndex")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();
  set specificIndex(int value) => _setspecificIndex(reference, value);

  static final _ctor =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "android_content_pm_ResolveInfo_new")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();

  /// from: public void <init>()
  ResolveInfo() : super.fromRef(_ctor());

  static final _ctor_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_ResolveInfo_new_1")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void <init>(android.content.pm.ResolveInfo orig)
  ResolveInfo.ctor_1(ResolveInfo orig) : super.fromRef(_ctor_1(orig.reference));

  static final _loadLabel = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_ResolveInfo_loadLabel")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.CharSequence loadLabel(android.content.pm.PackageManager pm)
  jni.JlObject loadLabel(PackageManager pm) =>
      jni.JlObject.fromRef(_loadLabel(reference, pm.reference));

  static final _loadIcon = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_ResolveInfo_loadIcon")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.graphics.drawable.Drawable loadIcon(android.content.pm.PackageManager pm)
  jni.JlObject loadIcon(PackageManager pm) =>
      jni.JlObject.fromRef(_loadIcon(reference, pm.reference));

  static final _getIconResource =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_pm_ResolveInfo_getIconResource")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public final int getIconResource()
  int getIconResource() => _getIconResource(reference);

  static final _dump = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_ResolveInfo_dump")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public void dump(android.util.Printer pw, java.lang.String prefix)
  void dump(jni.JlObject pw, jni.JlString prefix) =>
      _dump(reference, pw.reference, prefix.reference);

  static final _toString_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_ResolveInfo_toString_1")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.String toString()
  jni.JlString toString_1() => jni.JlString.fromRef(_toString_1(reference));

  static final _describeContents =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_pm_ResolveInfo_describeContents")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int describeContents()
  int describeContents() => _describeContents(reference);

  static final _writeToParcel = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_content_pm_ResolveInfo_writeToParcel")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public void writeToParcel(android.os.Parcel dest, int parcelableFlags)
  void writeToParcel(os.Parcel dest, int parcelableFlags) =>
      _writeToParcel(reference, dest.reference, parcelableFlags);
}

class ResolveInfo_DisplayNameComparator extends jni.JlObject {
  ResolveInfo_DisplayNameComparator.fromRef(ffi.Pointer<ffi.Void> ref)
      : super.fromRef(ref);

  static final _ctor = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_ResolveInfo__DisplayNameComparator_new")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void <init>(android.content.pm.PackageManager pm)
  ResolveInfo_DisplayNameComparator(PackageManager pm)
      : super.fromRef(_ctor(pm.reference));

  static final _compare = jlookup<
              ffi.NativeFunction<
                  ffi.Int32 Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_ResolveInfo__DisplayNameComparator_compare")
      .asFunction<
          int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public final int compare(android.content.pm.ResolveInfo a, android.content.pm.ResolveInfo b)
  int compare(ResolveInfo a, ResolveInfo b) =>
      _compare(reference, a.reference, b.reference);
}

class PermissionGroupInfo extends PackageItemInfo {
  PermissionGroupInfo.fromRef(ffi.Pointer<ffi.Void> ref) : super.fromRef(ref);

  /// from: static public final android.os.Parcelable.Creator<android.content.pm.PermissionGroupInfo> CREATOR
  static final _getCREATOR =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "get_android_content_pm_PermissionGroupInfo_CREATOR")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();
  static os.Parcelable_Creator get CREATOR =>
      os.Parcelable_Creator.fromRef(_getCREATOR());

  /// from: static public final int FLAG_PERSONAL_INFO
  static const FLAG_PERSONAL_INFO = 1;

  /// from: public int descriptionRes
  static final _getdescriptionRes = jlookup<
          ffi.NativeFunction<
              ffi.Int32 Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_content_pm_PermissionGroupInfo_descriptionRes")
      .asFunction<
          int Function(
    ffi.Pointer<ffi.Void>,
  )>();
  int get descriptionRes => _getdescriptionRes(reference);
  static final _setdescriptionRes = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "set_android_content_pm_PermissionGroupInfo_descriptionRes")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();
  set descriptionRes(int value) => _setdescriptionRes(reference, value);

  /// from: public int flags
  static final _getflags = jlookup<
          ffi.NativeFunction<
              ffi.Int32 Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_content_pm_PermissionGroupInfo_flags")
      .asFunction<
          int Function(
    ffi.Pointer<ffi.Void>,
  )>();
  int get flags => _getflags(reference);
  static final _setflags = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "set_android_content_pm_PermissionGroupInfo_flags")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();
  set flags(int value) => _setflags(reference, value);

  /// from: public java.lang.CharSequence nonLocalizedDescription
  static final _getnonLocalizedDescription = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_content_pm_PermissionGroupInfo_nonLocalizedDescription")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>();
  jni.JlObject get nonLocalizedDescription =>
      jni.JlObject.fromRef(_getnonLocalizedDescription(reference));
  static final _setnonLocalizedDescription = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "set_android_content_pm_PermissionGroupInfo_nonLocalizedDescription")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();
  set nonLocalizedDescription(jni.JlObject value) =>
      _setnonLocalizedDescription(reference, value.reference);

  /// from: public int priority
  static final _getpriority = jlookup<
          ffi.NativeFunction<
              ffi.Int32 Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_content_pm_PermissionGroupInfo_priority")
      .asFunction<
          int Function(
    ffi.Pointer<ffi.Void>,
  )>();
  int get priority => _getpriority(reference);
  static final _setpriority = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "set_android_content_pm_PermissionGroupInfo_priority")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();
  set priority(int value) => _setpriority(reference, value);

  static final _ctor =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "android_content_pm_PermissionGroupInfo_new")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();

  /// from: public void <init>()
  PermissionGroupInfo() : super.fromRef(_ctor());

  static final _ctor_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_PermissionGroupInfo_new_1")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void <init>(android.content.pm.PermissionGroupInfo orig)
  PermissionGroupInfo.ctor_1(PermissionGroupInfo orig)
      : super.fromRef(_ctor_1(orig.reference));

  static final _loadDescription = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_PermissionGroupInfo_loadDescription")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.CharSequence loadDescription(android.content.pm.PackageManager pm)
  jni.JlObject loadDescription(PackageManager pm) =>
      jni.JlObject.fromRef(_loadDescription(reference, pm.reference));

  static final _toString_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_PermissionGroupInfo_toString_1")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.String toString()
  jni.JlString toString_1() => jni.JlString.fromRef(_toString_1(reference));

  static final _describeContents =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_pm_PermissionGroupInfo_describeContents")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int describeContents()
  int describeContents() => _describeContents(reference);

  static final _writeToParcel = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "android_content_pm_PermissionGroupInfo_writeToParcel")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public void writeToParcel(android.os.Parcel dest, int parcelableFlags)
  void writeToParcel(os.Parcel dest, int parcelableFlags) =>
      _writeToParcel(reference, dest.reference, parcelableFlags);
}

class LabeledIntent extends content.Intent {
  LabeledIntent.fromRef(ffi.Pointer<ffi.Void> ref) : super.fromRef(ref);

  /// from: static public final android.os.Parcelable.Creator<android.content.pm.LabeledIntent> CREATOR
  static final _getCREATOR =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "get_android_content_pm_LabeledIntent_CREATOR")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();
  static os.Parcelable_Creator get CREATOR =>
      os.Parcelable_Creator.fromRef(_getCREATOR());

  static final _ctor = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Int32,
                  ffi.Int32)>>("android_content_pm_LabeledIntent_new")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int, int)>();

  /// from: public void <init>(android.content.Intent origIntent, java.lang.String sourcePackage, int labelRes, int icon)
  LabeledIntent(content.Intent origIntent, jni.JlString sourcePackage,
      int labelRes, int icon)
      : super.fromRef(_ctor(
            origIntent.reference, sourcePackage.reference, labelRes, icon));

  static final _ctor_1 = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_content_pm_LabeledIntent_new_1")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public void <init>(android.content.Intent origIntent, java.lang.String sourcePackage, java.lang.CharSequence nonLocalizedLabel, int icon)
  LabeledIntent.ctor_1(content.Intent origIntent, jni.JlString sourcePackage,
      jni.JlObject nonLocalizedLabel, int icon)
      : super.fromRef(_ctor_1(origIntent.reference, sourcePackage.reference,
            nonLocalizedLabel.reference, icon));

  static final _ctor_2 = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, ffi.Int32,
                  ffi.Int32)>>("android_content_pm_LabeledIntent_new_2")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int, int)>();

  /// from: public void <init>(java.lang.String sourcePackage, int labelRes, int icon)
  LabeledIntent.ctor_2(jni.JlString sourcePackage, int labelRes, int icon)
      : super.fromRef(_ctor_2(sourcePackage.reference, labelRes, icon));

  static final _ctor_3 = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_content_pm_LabeledIntent_new_3")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public void <init>(java.lang.String sourcePackage, java.lang.CharSequence nonLocalizedLabel, int icon)
  LabeledIntent.ctor_3(
      jni.JlString sourcePackage, jni.JlObject nonLocalizedLabel, int icon)
      : super.fromRef(_ctor_3(
            sourcePackage.reference, nonLocalizedLabel.reference, icon));

  static final _getSourcePackage = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_LabeledIntent_getSourcePackage")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.String getSourcePackage()
  jni.JlString getSourcePackage() =>
      jni.JlString.fromRef(_getSourcePackage(reference));

  static final _getLabelResource =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_pm_LabeledIntent_getLabelResource")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int getLabelResource()
  int getLabelResource() => _getLabelResource(reference);

  static final _getNonLocalizedLabel = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_LabeledIntent_getNonLocalizedLabel")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.CharSequence getNonLocalizedLabel()
  jni.JlObject getNonLocalizedLabel() =>
      jni.JlObject.fromRef(_getNonLocalizedLabel(reference));

  static final _getIconResource =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_pm_LabeledIntent_getIconResource")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int getIconResource()
  int getIconResource() => _getIconResource(reference);

  static final _loadLabel = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_LabeledIntent_loadLabel")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.CharSequence loadLabel(android.content.pm.PackageManager pm)
  jni.JlObject loadLabel(PackageManager pm) =>
      jni.JlObject.fromRef(_loadLabel(reference, pm.reference));

  static final _loadIcon = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_LabeledIntent_loadIcon")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.graphics.drawable.Drawable loadIcon(android.content.pm.PackageManager pm)
  jni.JlObject loadIcon(PackageManager pm) =>
      jni.JlObject.fromRef(_loadIcon(reference, pm.reference));

  static final _writeToParcel = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_content_pm_LabeledIntent_writeToParcel")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public void writeToParcel(android.os.Parcel dest, int parcelableFlags)
  void writeToParcel(os.Parcel dest, int parcelableFlags) =>
      _writeToParcel(reference, dest.reference, parcelableFlags);

  static final _readFromParcel = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_LabeledIntent_readFromParcel")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void readFromParcel(android.os.Parcel in)
  void readFromParcel(os.Parcel in_) =>
      _readFromParcel(reference, in_.reference);
}

class ProviderInfo extends ComponentInfo {
  ProviderInfo.fromRef(ffi.Pointer<ffi.Void> ref) : super.fromRef(ref);

  /// from: static public final android.os.Parcelable.Creator<android.content.pm.ProviderInfo> CREATOR
  static final _getCREATOR =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "get_android_content_pm_ProviderInfo_CREATOR")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();
  static os.Parcelable_Creator get CREATOR =>
      os.Parcelable_Creator.fromRef(_getCREATOR());

  /// from: static public final int FLAG_SINGLE_USER
  static const FLAG_SINGLE_USER = 1073741824;

  /// from: public java.lang.String authority
  static final _getauthority = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_content_pm_ProviderInfo_authority")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>();
  jni.JlString get authority => jni.JlString.fromRef(_getauthority(reference));
  static final _setauthority = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "set_android_content_pm_ProviderInfo_authority")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();
  set authority(jni.JlString value) =>
      _setauthority(reference, value.reference);

  /// from: public int flags
  static final _getflags = jlookup<
          ffi.NativeFunction<
              ffi.Int32 Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_content_pm_ProviderInfo_flags")
      .asFunction<
          int Function(
    ffi.Pointer<ffi.Void>,
  )>();
  int get flags => _getflags(reference);
  static final _setflags = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("set_android_content_pm_ProviderInfo_flags")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();
  set flags(int value) => _setflags(reference, value);

  /// from: public boolean grantUriPermissions
  static final _getgrantUriPermissions = jlookup<
          ffi.NativeFunction<
              ffi.Uint8 Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_content_pm_ProviderInfo_grantUriPermissions")
      .asFunction<
          int Function(
    ffi.Pointer<ffi.Void>,
  )>();
  bool get grantUriPermissions => _getgrantUriPermissions(reference) != 0;
  static final _setgrantUriPermissions = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Uint8)>>(
          "set_android_content_pm_ProviderInfo_grantUriPermissions")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();
  set grantUriPermissions(bool value) =>
      _setgrantUriPermissions(reference, value ? 1 : 0);

  /// from: public int initOrder
  static final _getinitOrder = jlookup<
          ffi.NativeFunction<
              ffi.Int32 Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_content_pm_ProviderInfo_initOrder")
      .asFunction<
          int Function(
    ffi.Pointer<ffi.Void>,
  )>();
  int get initOrder => _getinitOrder(reference);
  static final _setinitOrder = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("set_android_content_pm_ProviderInfo_initOrder")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();
  set initOrder(int value) => _setinitOrder(reference, value);

  /// from: public boolean isSyncable
  static final _getisSyncable = jlookup<
          ffi.NativeFunction<
              ffi.Uint8 Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_content_pm_ProviderInfo_isSyncable")
      .asFunction<
          int Function(
    ffi.Pointer<ffi.Void>,
  )>();
  bool get isSyncable => _getisSyncable(reference) != 0;
  static final _setisSyncable = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  ffi.Uint8)>>("set_android_content_pm_ProviderInfo_isSyncable")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();
  set isSyncable(bool value) => _setisSyncable(reference, value ? 1 : 0);

  /// from: public boolean multiprocess
  static final _getmultiprocess = jlookup<
          ffi.NativeFunction<
              ffi.Uint8 Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_content_pm_ProviderInfo_multiprocess")
      .asFunction<
          int Function(
    ffi.Pointer<ffi.Void>,
  )>();
  bool get multiprocess => _getmultiprocess(reference) != 0;
  static final _setmultiprocess = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Uint8)>>(
          "set_android_content_pm_ProviderInfo_multiprocess")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();
  set multiprocess(bool value) => _setmultiprocess(reference, value ? 1 : 0);

  /// from: public android.content.pm.PathPermission[] pathPermissions
  static final _getpathPermissions = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_content_pm_ProviderInfo_pathPermissions")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>();
  jni.JlObject get pathPermissions =>
      jni.JlObject.fromRef(_getpathPermissions(reference));
  static final _setpathPermissions = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "set_android_content_pm_ProviderInfo_pathPermissions")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();
  set pathPermissions(jni.JlObject value) =>
      _setpathPermissions(reference, value.reference);

  /// from: public java.lang.String readPermission
  static final _getreadPermission = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_content_pm_ProviderInfo_readPermission")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>();
  jni.JlString get readPermission =>
      jni.JlString.fromRef(_getreadPermission(reference));
  static final _setreadPermission = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "set_android_content_pm_ProviderInfo_readPermission")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();
  set readPermission(jni.JlString value) =>
      _setreadPermission(reference, value.reference);

  /// from: public android.os.PatternMatcher[] uriPermissionPatterns
  static final _geturiPermissionPatterns = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_content_pm_ProviderInfo_uriPermissionPatterns")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>();
  jni.JlObject get uriPermissionPatterns =>
      jni.JlObject.fromRef(_geturiPermissionPatterns(reference));
  static final _seturiPermissionPatterns = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "set_android_content_pm_ProviderInfo_uriPermissionPatterns")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();
  set uriPermissionPatterns(jni.JlObject value) =>
      _seturiPermissionPatterns(reference, value.reference);

  /// from: public java.lang.String writePermission
  static final _getwritePermission = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_content_pm_ProviderInfo_writePermission")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>();
  jni.JlString get writePermission =>
      jni.JlString.fromRef(_getwritePermission(reference));
  static final _setwritePermission = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "set_android_content_pm_ProviderInfo_writePermission")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();
  set writePermission(jni.JlString value) =>
      _setwritePermission(reference, value.reference);

  static final _ctor =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "android_content_pm_ProviderInfo_new")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();

  /// from: public void <init>()
  ProviderInfo() : super.fromRef(_ctor());

  static final _ctor_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_ProviderInfo_new_1")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void <init>(android.content.pm.ProviderInfo orig)
  ProviderInfo.ctor_1(ProviderInfo orig)
      : super.fromRef(_ctor_1(orig.reference));

  static final _dump = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_ProviderInfo_dump")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public void dump(android.util.Printer pw, java.lang.String prefix)
  void dump(jni.JlObject pw, jni.JlString prefix) =>
      _dump(reference, pw.reference, prefix.reference);

  static final _describeContents =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_pm_ProviderInfo_describeContents")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int describeContents()
  int describeContents() => _describeContents(reference);

  static final _writeToParcel = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_content_pm_ProviderInfo_writeToParcel")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public void writeToParcel(android.os.Parcel out, int parcelableFlags)
  void writeToParcel(os.Parcel out, int parcelableFlags) =>
      _writeToParcel(reference, out.reference, parcelableFlags);

  static final _toString_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_ProviderInfo_toString_1")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.String toString()
  jni.JlString toString_1() => jni.JlString.fromRef(_toString_1(reference));
}

class PathPermission extends os.PatternMatcher {
  PathPermission.fromRef(ffi.Pointer<ffi.Void> ref) : super.fromRef(ref);

  /// from: static public final android.os.Parcelable.Creator<android.content.pm.PathPermission> CREATOR
  static final _getCREATOR =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "get_android_content_pm_PathPermission_CREATOR")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();
  static os.Parcelable_Creator get CREATOR =>
      os.Parcelable_Creator.fromRef(_getCREATOR());

  static final _ctor = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Int32,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_PathPermission_new")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void <init>(java.lang.String pattern, int type, java.lang.String readPermission, java.lang.String writePermission)
  PathPermission(jni.JlString pattern, int type, jni.JlString readPermission,
      jni.JlString writePermission)
      : super.fromRef(_ctor(pattern.reference, type, readPermission.reference,
            writePermission.reference));

  static final _ctor_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_PathPermission_new_1")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void <init>(android.os.Parcel src)
  PathPermission.ctor_1(os.Parcel src) : super.fromRef(_ctor_1(src.reference));

  static final _getReadPermission = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_PathPermission_getReadPermission")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.String getReadPermission()
  jni.JlString getReadPermission() =>
      jni.JlString.fromRef(_getReadPermission(reference));

  static final _getWritePermission = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_PathPermission_getWritePermission")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.String getWritePermission()
  jni.JlString getWritePermission() =>
      jni.JlString.fromRef(_getWritePermission(reference));

  static final _writeToParcel = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "android_content_pm_PathPermission_writeToParcel")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public void writeToParcel(android.os.Parcel dest, int flags)
  void writeToParcel(os.Parcel dest, int flags) =>
      _writeToParcel(reference, dest.reference, flags);
}

class FeatureInfo extends jni.JlObject {
  FeatureInfo.fromRef(ffi.Pointer<ffi.Void> ref) : super.fromRef(ref);

  /// from: static public final android.os.Parcelable.Creator<android.content.pm.FeatureInfo> CREATOR
  static final _getCREATOR =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "get_android_content_pm_FeatureInfo_CREATOR")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();
  static os.Parcelable_Creator get CREATOR =>
      os.Parcelable_Creator.fromRef(_getCREATOR());

  /// from: static public final int FLAG_REQUIRED
  static const FLAG_REQUIRED = 1;

  /// from: static public final int GL_ES_VERSION_UNDEFINED
  static const GL_ES_VERSION_UNDEFINED = 0;

  /// from: public int flags
  static final _getflags = jlookup<
          ffi.NativeFunction<
              ffi.Int32 Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_content_pm_FeatureInfo_flags")
      .asFunction<
          int Function(
    ffi.Pointer<ffi.Void>,
  )>();
  int get flags => _getflags(reference);
  static final _setflags = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("set_android_content_pm_FeatureInfo_flags")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();
  set flags(int value) => _setflags(reference, value);

  /// from: public java.lang.String name
  static final _getname = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_content_pm_FeatureInfo_name")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>();
  jni.JlString get name => jni.JlString.fromRef(_getname(reference));
  static final _setname = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "set_android_content_pm_FeatureInfo_name")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();
  set name(jni.JlString value) => _setname(reference, value.reference);

  /// from: public int reqGlEsVersion
  static final _getreqGlEsVersion = jlookup<
          ffi.NativeFunction<
              ffi.Int32 Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_content_pm_FeatureInfo_reqGlEsVersion")
      .asFunction<
          int Function(
    ffi.Pointer<ffi.Void>,
  )>();
  int get reqGlEsVersion => _getreqGlEsVersion(reference);
  static final _setreqGlEsVersion = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "set_android_content_pm_FeatureInfo_reqGlEsVersion")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();
  set reqGlEsVersion(int value) => _setreqGlEsVersion(reference, value);

  /// from: public int version
  static final _getversion = jlookup<
          ffi.NativeFunction<
              ffi.Int32 Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_content_pm_FeatureInfo_version")
      .asFunction<
          int Function(
    ffi.Pointer<ffi.Void>,
  )>();
  int get version => _getversion(reference);
  static final _setversion = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("set_android_content_pm_FeatureInfo_version")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();
  set version(int value) => _setversion(reference, value);

  static final _ctor =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "android_content_pm_FeatureInfo_new")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();

  /// from: public void <init>()
  FeatureInfo() : super.fromRef(_ctor());

  static final _ctor_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_FeatureInfo_new_1")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void <init>(android.content.pm.FeatureInfo orig)
  FeatureInfo.ctor_1(FeatureInfo orig) : super.fromRef(_ctor_1(orig.reference));

  static final _toString_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_FeatureInfo_toString_1")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.String toString()
  jni.JlString toString_1() => jni.JlString.fromRef(_toString_1(reference));

  static final _describeContents =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_pm_FeatureInfo_describeContents")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int describeContents()
  int describeContents() => _describeContents(reference);

  static final _writeToParcel = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_content_pm_FeatureInfo_writeToParcel")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public void writeToParcel(android.os.Parcel dest, int parcelableFlags)
  void writeToParcel(os.Parcel dest, int parcelableFlags) =>
      _writeToParcel(reference, dest.reference, parcelableFlags);

  static final _getGlEsVersion = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_FeatureInfo_getGlEsVersion")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.String getGlEsVersion()
  jni.JlString getGlEsVersion() =>
      jni.JlString.fromRef(_getGlEsVersion(reference));
}

class ComponentInfo extends PackageItemInfo {
  ComponentInfo.fromRef(ffi.Pointer<ffi.Void> ref) : super.fromRef(ref);

  /// from: public android.content.pm.ApplicationInfo applicationInfo
  static final _getapplicationInfo = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_content_pm_ComponentInfo_applicationInfo")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>();
  ApplicationInfo get applicationInfo =>
      ApplicationInfo.fromRef(_getapplicationInfo(reference));
  static final _setapplicationInfo = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "set_android_content_pm_ComponentInfo_applicationInfo")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();
  set applicationInfo(ApplicationInfo value) =>
      _setapplicationInfo(reference, value.reference);

  /// from: public int descriptionRes
  static final _getdescriptionRes = jlookup<
          ffi.NativeFunction<
              ffi.Int32 Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_content_pm_ComponentInfo_descriptionRes")
      .asFunction<
          int Function(
    ffi.Pointer<ffi.Void>,
  )>();
  int get descriptionRes => _getdescriptionRes(reference);
  static final _setdescriptionRes = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "set_android_content_pm_ComponentInfo_descriptionRes")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();
  set descriptionRes(int value) => _setdescriptionRes(reference, value);

  /// from: public boolean directBootAware
  static final _getdirectBootAware = jlookup<
          ffi.NativeFunction<
              ffi.Uint8 Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_content_pm_ComponentInfo_directBootAware")
      .asFunction<
          int Function(
    ffi.Pointer<ffi.Void>,
  )>();
  bool get directBootAware => _getdirectBootAware(reference) != 0;
  static final _setdirectBootAware = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Uint8)>>(
          "set_android_content_pm_ComponentInfo_directBootAware")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();
  set directBootAware(bool value) =>
      _setdirectBootAware(reference, value ? 1 : 0);

  /// from: public boolean enabled
  static final _getenabled = jlookup<
          ffi.NativeFunction<
              ffi.Uint8 Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_content_pm_ComponentInfo_enabled")
      .asFunction<
          int Function(
    ffi.Pointer<ffi.Void>,
  )>();
  bool get enabled => _getenabled(reference) != 0;
  static final _setenabled = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  ffi.Uint8)>>("set_android_content_pm_ComponentInfo_enabled")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();
  set enabled(bool value) => _setenabled(reference, value ? 1 : 0);

  /// from: public boolean exported
  static final _getexported = jlookup<
          ffi.NativeFunction<
              ffi.Uint8 Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_content_pm_ComponentInfo_exported")
      .asFunction<
          int Function(
    ffi.Pointer<ffi.Void>,
  )>();
  bool get exported => _getexported(reference) != 0;
  static final _setexported = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  ffi.Uint8)>>("set_android_content_pm_ComponentInfo_exported")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();
  set exported(bool value) => _setexported(reference, value ? 1 : 0);

  /// from: public java.lang.String processName
  static final _getprocessName = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_content_pm_ComponentInfo_processName")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>();
  jni.JlString get processName =>
      jni.JlString.fromRef(_getprocessName(reference));
  static final _setprocessName = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "set_android_content_pm_ComponentInfo_processName")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();
  set processName(jni.JlString value) =>
      _setprocessName(reference, value.reference);

  /// from: public java.lang.String splitName
  static final _getsplitName = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_content_pm_ComponentInfo_splitName")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>();
  jni.JlString get splitName => jni.JlString.fromRef(_getsplitName(reference));
  static final _setsplitName = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "set_android_content_pm_ComponentInfo_splitName")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();
  set splitName(jni.JlString value) =>
      _setsplitName(reference, value.reference);

  static final _ctor =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "android_content_pm_ComponentInfo_new")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();

  /// from: public void <init>()
  ComponentInfo() : super.fromRef(_ctor());

  static final _ctor_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_ComponentInfo_new_1")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void <init>(android.content.pm.ComponentInfo orig)
  ComponentInfo.ctor_1(ComponentInfo orig)
      : super.fromRef(_ctor_1(orig.reference));

  static final _ctor_2 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_ComponentInfo_new_2")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: protected void <init>(android.os.Parcel source)
  ComponentInfo.ctor_2(os.Parcel source)
      : super.fromRef(_ctor_2(source.reference));

  static final _isEnabled =
      jlookup<ffi.NativeFunction<ffi.Uint8 Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_pm_ComponentInfo_isEnabled")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public boolean isEnabled()
  bool isEnabled() => _isEnabled(reference) != 0;

  static final _getIconResource =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_pm_ComponentInfo_getIconResource")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public final int getIconResource()
  int getIconResource() => _getIconResource(reference);

  static final _getLogoResource =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_pm_ComponentInfo_getLogoResource")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public final int getLogoResource()
  int getLogoResource() => _getLogoResource(reference);

  static final _getBannerResource =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_pm_ComponentInfo_getBannerResource")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public final int getBannerResource()
  int getBannerResource() => _getBannerResource(reference);

  static final _dumpFront = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_ComponentInfo_dumpFront")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: protected void dumpFront(android.util.Printer pw, java.lang.String prefix)
  void dumpFront(jni.JlObject pw, jni.JlString prefix) =>
      _dumpFront(reference, pw.reference, prefix.reference);

  static final _dumpBack = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_ComponentInfo_dumpBack")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: protected void dumpBack(android.util.Printer pw, java.lang.String prefix)
  void dumpBack(jni.JlObject pw, jni.JlString prefix) =>
      _dumpBack(reference, pw.reference, prefix.reference);

  static final _writeToParcel = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_content_pm_ComponentInfo_writeToParcel")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public void writeToParcel(android.os.Parcel dest, int parcelableFlags)
  void writeToParcel(os.Parcel dest, int parcelableFlags) =>
      _writeToParcel(reference, dest.reference, parcelableFlags);
}

class PackageManager extends jni.JlObject {
  PackageManager.fromRef(ffi.Pointer<ffi.Void> ref) : super.fromRef(ref);

  /// from: static public final int CERT_INPUT_RAW_X509
  static const CERT_INPUT_RAW_X509 = 0;

  /// from: static public final int CERT_INPUT_SHA256
  static const CERT_INPUT_SHA256 = 1;

  /// from: static public final int COMPONENT_ENABLED_STATE_DEFAULT
  static const COMPONENT_ENABLED_STATE_DEFAULT = 0;

  /// from: static public final int COMPONENT_ENABLED_STATE_DISABLED
  static const COMPONENT_ENABLED_STATE_DISABLED = 2;

  /// from: static public final int COMPONENT_ENABLED_STATE_DISABLED_UNTIL_USED
  static const COMPONENT_ENABLED_STATE_DISABLED_UNTIL_USED = 4;

  /// from: static public final int COMPONENT_ENABLED_STATE_DISABLED_USER
  static const COMPONENT_ENABLED_STATE_DISABLED_USER = 3;

  /// from: static public final int COMPONENT_ENABLED_STATE_ENABLED
  static const COMPONENT_ENABLED_STATE_ENABLED = 1;

  /// from: static public final int DONT_KILL_APP
  static const DONT_KILL_APP = 1;

  /// from: static public final java.lang.String EXTRA_VERIFICATION_ID
  static const EXTRA_VERIFICATION_ID =
      "android.content.pm.extra.VERIFICATION_ID";

  /// from: static public final java.lang.String EXTRA_VERIFICATION_RESULT
  static const EXTRA_VERIFICATION_RESULT =
      "android.content.pm.extra.VERIFICATION_RESULT";

  /// from: static public final java.lang.String FEATURE_ACTIVITIES_ON_SECONDARY_DISPLAYS
  static const FEATURE_ACTIVITIES_ON_SECONDARY_DISPLAYS =
      "android.software.activities_on_secondary_displays";

  /// from: static public final java.lang.String FEATURE_APP_WIDGETS
  static const FEATURE_APP_WIDGETS = "android.software.app_widgets";

  /// from: static public final java.lang.String FEATURE_AUDIO_LOW_LATENCY
  static const FEATURE_AUDIO_LOW_LATENCY = "android.hardware.audio.low_latency";

  /// from: static public final java.lang.String FEATURE_AUDIO_OUTPUT
  static const FEATURE_AUDIO_OUTPUT = "android.hardware.audio.output";

  /// from: static public final java.lang.String FEATURE_AUDIO_PRO
  static const FEATURE_AUDIO_PRO = "android.hardware.audio.pro";

  /// from: static public final java.lang.String FEATURE_AUTOFILL
  static const FEATURE_AUTOFILL = "android.software.autofill";

  /// from: static public final java.lang.String FEATURE_AUTOMOTIVE
  static const FEATURE_AUTOMOTIVE = "android.hardware.type.automotive";

  /// from: static public final java.lang.String FEATURE_BACKUP
  static const FEATURE_BACKUP = "android.software.backup";

  /// from: static public final java.lang.String FEATURE_BLUETOOTH
  static const FEATURE_BLUETOOTH = "android.hardware.bluetooth";

  /// from: static public final java.lang.String FEATURE_BLUETOOTH_LE
  static const FEATURE_BLUETOOTH_LE = "android.hardware.bluetooth_le";

  /// from: static public final java.lang.String FEATURE_CAMERA
  static const FEATURE_CAMERA = "android.hardware.camera";

  /// from: static public final java.lang.String FEATURE_CAMERA_ANY
  static const FEATURE_CAMERA_ANY = "android.hardware.camera.any";

  /// from: static public final java.lang.String FEATURE_CAMERA_AR
  static const FEATURE_CAMERA_AR = "android.hardware.camera.ar";

  /// from: static public final java.lang.String FEATURE_CAMERA_AUTOFOCUS
  static const FEATURE_CAMERA_AUTOFOCUS = "android.hardware.camera.autofocus";

  /// from: static public final java.lang.String FEATURE_CAMERA_CAPABILITY_MANUAL_POST_PROCESSING
  static const FEATURE_CAMERA_CAPABILITY_MANUAL_POST_PROCESSING =
      "android.hardware.camera.capability.manual_post_processing";

  /// from: static public final java.lang.String FEATURE_CAMERA_CAPABILITY_MANUAL_SENSOR
  static const FEATURE_CAMERA_CAPABILITY_MANUAL_SENSOR =
      "android.hardware.camera.capability.manual_sensor";

  /// from: static public final java.lang.String FEATURE_CAMERA_CAPABILITY_RAW
  static const FEATURE_CAMERA_CAPABILITY_RAW =
      "android.hardware.camera.capability.raw";

  /// from: static public final java.lang.String FEATURE_CAMERA_EXTERNAL
  static const FEATURE_CAMERA_EXTERNAL = "android.hardware.camera.external";

  /// from: static public final java.lang.String FEATURE_CAMERA_FLASH
  static const FEATURE_CAMERA_FLASH = "android.hardware.camera.flash";

  /// from: static public final java.lang.String FEATURE_CAMERA_FRONT
  static const FEATURE_CAMERA_FRONT = "android.hardware.camera.front";

  /// from: static public final java.lang.String FEATURE_CAMERA_LEVEL_FULL
  static const FEATURE_CAMERA_LEVEL_FULL = "android.hardware.camera.level.full";

  /// from: static public final java.lang.String FEATURE_CANT_SAVE_STATE
  static const FEATURE_CANT_SAVE_STATE = "android.software.cant_save_state";

  /// from: static public final java.lang.String FEATURE_COMPANION_DEVICE_SETUP
  static const FEATURE_COMPANION_DEVICE_SETUP =
      "android.software.companion_device_setup";

  /// from: static public final java.lang.String FEATURE_CONNECTION_SERVICE
  static const FEATURE_CONNECTION_SERVICE =
      "android.software.connectionservice";

  /// from: static public final java.lang.String FEATURE_CONSUMER_IR
  static const FEATURE_CONSUMER_IR = "android.hardware.consumerir";

  /// from: static public final java.lang.String FEATURE_DEVICE_ADMIN
  static const FEATURE_DEVICE_ADMIN = "android.software.device_admin";

  /// from: static public final java.lang.String FEATURE_EMBEDDED
  static const FEATURE_EMBEDDED = "android.hardware.type.embedded";

  /// from: static public final java.lang.String FEATURE_ETHERNET
  static const FEATURE_ETHERNET = "android.hardware.ethernet";

  /// from: static public final java.lang.String FEATURE_FAKETOUCH
  static const FEATURE_FAKETOUCH = "android.hardware.faketouch";

  /// from: static public final java.lang.String FEATURE_FAKETOUCH_MULTITOUCH_DISTINCT
  static const FEATURE_FAKETOUCH_MULTITOUCH_DISTINCT =
      "android.hardware.faketouch.multitouch.distinct";

  /// from: static public final java.lang.String FEATURE_FAKETOUCH_MULTITOUCH_JAZZHAND
  static const FEATURE_FAKETOUCH_MULTITOUCH_JAZZHAND =
      "android.hardware.faketouch.multitouch.jazzhand";

  /// from: static public final java.lang.String FEATURE_FINGERPRINT
  static const FEATURE_FINGERPRINT = "android.hardware.fingerprint";

  /// from: static public final java.lang.String FEATURE_FREEFORM_WINDOW_MANAGEMENT
  static const FEATURE_FREEFORM_WINDOW_MANAGEMENT =
      "android.software.freeform_window_management";

  /// from: static public final java.lang.String FEATURE_GAMEPAD
  static const FEATURE_GAMEPAD = "android.hardware.gamepad";

  /// from: static public final java.lang.String FEATURE_HIFI_SENSORS
  static const FEATURE_HIFI_SENSORS = "android.hardware.sensor.hifi_sensors";

  /// from: static public final java.lang.String FEATURE_HOME_SCREEN
  static const FEATURE_HOME_SCREEN = "android.software.home_screen";

  /// from: static public final java.lang.String FEATURE_INPUT_METHODS
  static const FEATURE_INPUT_METHODS = "android.software.input_methods";

  /// from: static public final java.lang.String FEATURE_LEANBACK
  static const FEATURE_LEANBACK = "android.software.leanback";

  /// from: static public final java.lang.String FEATURE_LEANBACK_ONLY
  static const FEATURE_LEANBACK_ONLY = "android.software.leanback_only";

  /// from: static public final java.lang.String FEATURE_LIVE_TV
  static const FEATURE_LIVE_TV = "android.software.live_tv";

  /// from: static public final java.lang.String FEATURE_LIVE_WALLPAPER
  static const FEATURE_LIVE_WALLPAPER = "android.software.live_wallpaper";

  /// from: static public final java.lang.String FEATURE_LOCATION
  static const FEATURE_LOCATION = "android.hardware.location";

  /// from: static public final java.lang.String FEATURE_LOCATION_GPS
  static const FEATURE_LOCATION_GPS = "android.hardware.location.gps";

  /// from: static public final java.lang.String FEATURE_LOCATION_NETWORK
  static const FEATURE_LOCATION_NETWORK = "android.hardware.location.network";

  /// from: static public final java.lang.String FEATURE_MANAGED_USERS
  static const FEATURE_MANAGED_USERS = "android.software.managed_users";

  /// from: static public final java.lang.String FEATURE_MICROPHONE
  static const FEATURE_MICROPHONE = "android.hardware.microphone";

  /// from: static public final java.lang.String FEATURE_MIDI
  static const FEATURE_MIDI = "android.software.midi";

  /// from: static public final java.lang.String FEATURE_NFC
  static const FEATURE_NFC = "android.hardware.nfc";

  /// from: static public final java.lang.String FEATURE_NFC_HOST_CARD_EMULATION
  static const FEATURE_NFC_HOST_CARD_EMULATION = "android.hardware.nfc.hce";

  /// from: static public final java.lang.String FEATURE_NFC_HOST_CARD_EMULATION_NFCF
  static const FEATURE_NFC_HOST_CARD_EMULATION_NFCF =
      "android.hardware.nfc.hcef";

  /// from: static public final java.lang.String FEATURE_OPENGLES_EXTENSION_PACK
  static const FEATURE_OPENGLES_EXTENSION_PACK =
      "android.hardware.opengles.aep";

  /// from: static public final java.lang.String FEATURE_PC
  static const FEATURE_PC = "android.hardware.type.pc";

  /// from: static public final java.lang.String FEATURE_PICTURE_IN_PICTURE
  static const FEATURE_PICTURE_IN_PICTURE =
      "android.software.picture_in_picture";

  /// from: static public final java.lang.String FEATURE_PRINTING
  static const FEATURE_PRINTING = "android.software.print";

  /// from: static public final java.lang.String FEATURE_RAM_LOW
  static const FEATURE_RAM_LOW = "android.hardware.ram.low";

  /// from: static public final java.lang.String FEATURE_RAM_NORMAL
  static const FEATURE_RAM_NORMAL = "android.hardware.ram.normal";

  /// from: static public final java.lang.String FEATURE_SCREEN_LANDSCAPE
  static const FEATURE_SCREEN_LANDSCAPE = "android.hardware.screen.landscape";

  /// from: static public final java.lang.String FEATURE_SCREEN_PORTRAIT
  static const FEATURE_SCREEN_PORTRAIT = "android.hardware.screen.portrait";

  /// from: static public final java.lang.String FEATURE_SECURELY_REMOVES_USERS
  static const FEATURE_SECURELY_REMOVES_USERS =
      "android.software.securely_removes_users";

  /// from: static public final java.lang.String FEATURE_SENSOR_ACCELEROMETER
  static const FEATURE_SENSOR_ACCELEROMETER =
      "android.hardware.sensor.accelerometer";

  /// from: static public final java.lang.String FEATURE_SENSOR_AMBIENT_TEMPERATURE
  static const FEATURE_SENSOR_AMBIENT_TEMPERATURE =
      "android.hardware.sensor.ambient_temperature";

  /// from: static public final java.lang.String FEATURE_SENSOR_BAROMETER
  static const FEATURE_SENSOR_BAROMETER = "android.hardware.sensor.barometer";

  /// from: static public final java.lang.String FEATURE_SENSOR_COMPASS
  static const FEATURE_SENSOR_COMPASS = "android.hardware.sensor.compass";

  /// from: static public final java.lang.String FEATURE_SENSOR_GYROSCOPE
  static const FEATURE_SENSOR_GYROSCOPE = "android.hardware.sensor.gyroscope";

  /// from: static public final java.lang.String FEATURE_SENSOR_HEART_RATE
  static const FEATURE_SENSOR_HEART_RATE = "android.hardware.sensor.heartrate";

  /// from: static public final java.lang.String FEATURE_SENSOR_HEART_RATE_ECG
  static const FEATURE_SENSOR_HEART_RATE_ECG =
      "android.hardware.sensor.heartrate.ecg";

  /// from: static public final java.lang.String FEATURE_SENSOR_LIGHT
  static const FEATURE_SENSOR_LIGHT = "android.hardware.sensor.light";

  /// from: static public final java.lang.String FEATURE_SENSOR_PROXIMITY
  static const FEATURE_SENSOR_PROXIMITY = "android.hardware.sensor.proximity";

  /// from: static public final java.lang.String FEATURE_SENSOR_RELATIVE_HUMIDITY
  static const FEATURE_SENSOR_RELATIVE_HUMIDITY =
      "android.hardware.sensor.relative_humidity";

  /// from: static public final java.lang.String FEATURE_SENSOR_STEP_COUNTER
  static const FEATURE_SENSOR_STEP_COUNTER =
      "android.hardware.sensor.stepcounter";

  /// from: static public final java.lang.String FEATURE_SENSOR_STEP_DETECTOR
  static const FEATURE_SENSOR_STEP_DETECTOR =
      "android.hardware.sensor.stepdetector";

  /// from: static public final java.lang.String FEATURE_SIP
  static const FEATURE_SIP = "android.software.sip";

  /// from: static public final java.lang.String FEATURE_SIP_VOIP
  static const FEATURE_SIP_VOIP = "android.software.sip.voip";

  /// from: static public final java.lang.String FEATURE_STRONGBOX_KEYSTORE
  static const FEATURE_STRONGBOX_KEYSTORE =
      "android.hardware.strongbox_keystore";

  /// from: static public final java.lang.String FEATURE_TELEPHONY
  static const FEATURE_TELEPHONY = "android.hardware.telephony";

  /// from: static public final java.lang.String FEATURE_TELEPHONY_CDMA
  static const FEATURE_TELEPHONY_CDMA = "android.hardware.telephony.cdma";

  /// from: static public final java.lang.String FEATURE_TELEPHONY_EUICC
  static const FEATURE_TELEPHONY_EUICC = "android.hardware.telephony.euicc";

  /// from: static public final java.lang.String FEATURE_TELEPHONY_GSM
  static const FEATURE_TELEPHONY_GSM = "android.hardware.telephony.gsm";

  /// from: static public final java.lang.String FEATURE_TELEPHONY_MBMS
  static const FEATURE_TELEPHONY_MBMS = "android.hardware.telephony.mbms";

  /// from: static public final java.lang.String FEATURE_TELEVISION
  static const FEATURE_TELEVISION = "android.hardware.type.television";

  /// from: static public final java.lang.String FEATURE_TOUCHSCREEN
  static const FEATURE_TOUCHSCREEN = "android.hardware.touchscreen";

  /// from: static public final java.lang.String FEATURE_TOUCHSCREEN_MULTITOUCH
  static const FEATURE_TOUCHSCREEN_MULTITOUCH =
      "android.hardware.touchscreen.multitouch";

  /// from: static public final java.lang.String FEATURE_TOUCHSCREEN_MULTITOUCH_DISTINCT
  static const FEATURE_TOUCHSCREEN_MULTITOUCH_DISTINCT =
      "android.hardware.touchscreen.multitouch.distinct";

  /// from: static public final java.lang.String FEATURE_TOUCHSCREEN_MULTITOUCH_JAZZHAND
  static const FEATURE_TOUCHSCREEN_MULTITOUCH_JAZZHAND =
      "android.hardware.touchscreen.multitouch.jazzhand";

  /// from: static public final java.lang.String FEATURE_USB_ACCESSORY
  static const FEATURE_USB_ACCESSORY = "android.hardware.usb.accessory";

  /// from: static public final java.lang.String FEATURE_USB_HOST
  static const FEATURE_USB_HOST = "android.hardware.usb.host";

  /// from: static public final java.lang.String FEATURE_VERIFIED_BOOT
  static const FEATURE_VERIFIED_BOOT = "android.software.verified_boot";

  /// from: static public final java.lang.String FEATURE_VR_HEADTRACKING
  static const FEATURE_VR_HEADTRACKING = "android.hardware.vr.headtracking";

  /// from: static public final java.lang.String FEATURE_VR_MODE
  static const FEATURE_VR_MODE = "android.software.vr.mode";

  /// from: static public final java.lang.String FEATURE_VR_MODE_HIGH_PERFORMANCE
  static const FEATURE_VR_MODE_HIGH_PERFORMANCE =
      "android.hardware.vr.high_performance";

  /// from: static public final java.lang.String FEATURE_VULKAN_HARDWARE_COMPUTE
  static const FEATURE_VULKAN_HARDWARE_COMPUTE =
      "android.hardware.vulkan.compute";

  /// from: static public final java.lang.String FEATURE_VULKAN_HARDWARE_LEVEL
  static const FEATURE_VULKAN_HARDWARE_LEVEL = "android.hardware.vulkan.level";

  /// from: static public final java.lang.String FEATURE_VULKAN_HARDWARE_VERSION
  static const FEATURE_VULKAN_HARDWARE_VERSION =
      "android.hardware.vulkan.version";

  /// from: static public final java.lang.String FEATURE_WATCH
  static const FEATURE_WATCH = "android.hardware.type.watch";

  /// from: static public final java.lang.String FEATURE_WEBVIEW
  static const FEATURE_WEBVIEW = "android.software.webview";

  /// from: static public final java.lang.String FEATURE_WIFI
  static const FEATURE_WIFI = "android.hardware.wifi";

  /// from: static public final java.lang.String FEATURE_WIFI_AWARE
  static const FEATURE_WIFI_AWARE = "android.hardware.wifi.aware";

  /// from: static public final java.lang.String FEATURE_WIFI_DIRECT
  static const FEATURE_WIFI_DIRECT = "android.hardware.wifi.direct";

  /// from: static public final java.lang.String FEATURE_WIFI_PASSPOINT
  static const FEATURE_WIFI_PASSPOINT = "android.hardware.wifi.passpoint";

  /// from: static public final java.lang.String FEATURE_WIFI_RTT
  static const FEATURE_WIFI_RTT = "android.hardware.wifi.rtt";

  /// from: static public final int GET_ACTIVITIES
  static const GET_ACTIVITIES = 1;

  /// from: static public final int GET_CONFIGURATIONS
  static const GET_CONFIGURATIONS = 16384;

  /// from: static public final int GET_DISABLED_COMPONENTS
  static const GET_DISABLED_COMPONENTS = 512;

  /// from: static public final int GET_DISABLED_UNTIL_USED_COMPONENTS
  static const GET_DISABLED_UNTIL_USED_COMPONENTS = 32768;

  /// from: static public final int GET_GIDS
  static const GET_GIDS = 256;

  /// from: static public final int GET_INSTRUMENTATION
  static const GET_INSTRUMENTATION = 16;

  /// from: static public final int GET_INTENT_FILTERS
  static const GET_INTENT_FILTERS = 32;

  /// from: static public final int GET_META_DATA
  static const GET_META_DATA = 128;

  /// from: static public final int GET_PERMISSIONS
  static const GET_PERMISSIONS = 4096;

  /// from: static public final int GET_PROVIDERS
  static const GET_PROVIDERS = 8;

  /// from: static public final int GET_RECEIVERS
  static const GET_RECEIVERS = 2;

  /// from: static public final int GET_RESOLVED_FILTER
  static const GET_RESOLVED_FILTER = 64;

  /// from: static public final int GET_SERVICES
  static const GET_SERVICES = 4;

  /// from: static public final int GET_SHARED_LIBRARY_FILES
  static const GET_SHARED_LIBRARY_FILES = 1024;

  /// from: static public final int GET_SIGNATURES
  static const GET_SIGNATURES = 64;

  /// from: static public final int GET_SIGNING_CERTIFICATES
  static const GET_SIGNING_CERTIFICATES = 134217728;

  /// from: static public final int GET_UNINSTALLED_PACKAGES
  static const GET_UNINSTALLED_PACKAGES = 8192;

  /// from: static public final int GET_URI_PERMISSION_PATTERNS
  static const GET_URI_PERMISSION_PATTERNS = 2048;

  /// from: static public final int INSTALL_REASON_DEVICE_RESTORE
  static const INSTALL_REASON_DEVICE_RESTORE = 2;

  /// from: static public final int INSTALL_REASON_DEVICE_SETUP
  static const INSTALL_REASON_DEVICE_SETUP = 3;

  /// from: static public final int INSTALL_REASON_POLICY
  static const INSTALL_REASON_POLICY = 1;

  /// from: static public final int INSTALL_REASON_UNKNOWN
  static const INSTALL_REASON_UNKNOWN = 0;

  /// from: static public final int INSTALL_REASON_USER
  static const INSTALL_REASON_USER = 4;

  /// from: static public final int MATCH_ALL
  static const MATCH_ALL = 131072;

  /// from: static public final int MATCH_DEFAULT_ONLY
  static const MATCH_DEFAULT_ONLY = 65536;

  /// from: static public final int MATCH_DIRECT_BOOT_AWARE
  static const MATCH_DIRECT_BOOT_AWARE = 524288;

  /// from: static public final int MATCH_DIRECT_BOOT_UNAWARE
  static const MATCH_DIRECT_BOOT_UNAWARE = 262144;

  /// from: static public final int MATCH_DISABLED_COMPONENTS
  static const MATCH_DISABLED_COMPONENTS = 512;

  /// from: static public final int MATCH_DISABLED_UNTIL_USED_COMPONENTS
  static const MATCH_DISABLED_UNTIL_USED_COMPONENTS = 32768;

  /// from: static public final int MATCH_SYSTEM_ONLY
  static const MATCH_SYSTEM_ONLY = 1048576;

  /// from: static public final int MATCH_UNINSTALLED_PACKAGES
  static const MATCH_UNINSTALLED_PACKAGES = 8192;

  /// from: static public final long MAXIMUM_VERIFICATION_TIMEOUT
  static const MAXIMUM_VERIFICATION_TIMEOUT = 3600000;

  /// from: static public final int PERMISSION_DENIED
  static const PERMISSION_DENIED = -1;

  /// from: static public final int PERMISSION_GRANTED
  static const PERMISSION_GRANTED = 0;

  /// from: static public final int SIGNATURE_FIRST_NOT_SIGNED
  static const SIGNATURE_FIRST_NOT_SIGNED = -1;

  /// from: static public final int SIGNATURE_MATCH
  static const SIGNATURE_MATCH = 0;

  /// from: static public final int SIGNATURE_NEITHER_SIGNED
  static const SIGNATURE_NEITHER_SIGNED = 1;

  /// from: static public final int SIGNATURE_NO_MATCH
  static const SIGNATURE_NO_MATCH = -3;

  /// from: static public final int SIGNATURE_SECOND_NOT_SIGNED
  static const SIGNATURE_SECOND_NOT_SIGNED = -2;

  /// from: static public final int SIGNATURE_UNKNOWN_PACKAGE
  static const SIGNATURE_UNKNOWN_PACKAGE = -4;

  /// from: static public final int VERIFICATION_ALLOW
  static const VERIFICATION_ALLOW = 1;

  /// from: static public final int VERIFICATION_REJECT
  static const VERIFICATION_REJECT = -1;

  /// from: static public final int VERSION_CODE_HIGHEST
  static const VERSION_CODE_HIGHEST = -1;

  static final _ctor =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "android_content_pm_PackageManager_new")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();

  /// from: public void <init>()
  PackageManager() : super.fromRef(_ctor());

  static final _getPackageInfo = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "android_content_pm_PackageManager_getPackageInfo")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public abstract android.content.pm.PackageInfo getPackageInfo(java.lang.String packageName, int flags)
  PackageInfo getPackageInfo(jni.JlString packageName, int flags) =>
      PackageInfo.fromRef(
          _getPackageInfo(reference, packageName.reference, flags));

  static final _getPackageInfo_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "android_content_pm_PackageManager_getPackageInfo_1")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public abstract android.content.pm.PackageInfo getPackageInfo(android.content.pm.VersionedPackage versionedPackage, int flags)
  PackageInfo getPackageInfo_1(VersionedPackage versionedPackage, int flags) =>
      PackageInfo.fromRef(
          _getPackageInfo_1(reference, versionedPackage.reference, flags));

  static final _currentToCanonicalPackageNames = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_PackageManager_currentToCanonicalPackageNames")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public abstract java.lang.String[] currentToCanonicalPackageNames(java.lang.String[] names)
  jni.JlObject currentToCanonicalPackageNames(jni.JlObject names) =>
      jni.JlObject.fromRef(
          _currentToCanonicalPackageNames(reference, names.reference));

  static final _canonicalToCurrentPackageNames = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_PackageManager_canonicalToCurrentPackageNames")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public abstract java.lang.String[] canonicalToCurrentPackageNames(java.lang.String[] names)
  jni.JlObject canonicalToCurrentPackageNames(jni.JlObject names) =>
      jni.JlObject.fromRef(
          _canonicalToCurrentPackageNames(reference, names.reference));

  static final _getLaunchIntentForPackage = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_PackageManager_getLaunchIntentForPackage")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public abstract android.content.Intent getLaunchIntentForPackage(java.lang.String packageName)
  content.Intent getLaunchIntentForPackage(jni.JlString packageName) =>
      content.Intent.fromRef(
          _getLaunchIntentForPackage(reference, packageName.reference));

  static final _getLeanbackLaunchIntentForPackage = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_PackageManager_getLeanbackLaunchIntentForPackage")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public abstract android.content.Intent getLeanbackLaunchIntentForPackage(java.lang.String packageName)
  content.Intent getLeanbackLaunchIntentForPackage(jni.JlString packageName) =>
      content.Intent.fromRef(
          _getLeanbackLaunchIntentForPackage(reference, packageName.reference));

  static final _getPackageGids = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_PackageManager_getPackageGids")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public abstract int[] getPackageGids(java.lang.String packageName)
  jni.JlObject getPackageGids(jni.JlString packageName) =>
      jni.JlObject.fromRef(_getPackageGids(reference, packageName.reference));

  static final _getPackageGids_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "android_content_pm_PackageManager_getPackageGids_1")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public abstract int[] getPackageGids(java.lang.String packageName, int flags)
  jni.JlObject getPackageGids_1(jni.JlString packageName, int flags) =>
      jni.JlObject.fromRef(
          _getPackageGids_1(reference, packageName.reference, flags));

  static final _getPackageUid = jlookup<
              ffi.NativeFunction<
                  ffi.Int32 Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "android_content_pm_PackageManager_getPackageUid")
      .asFunction<
          int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public abstract int getPackageUid(java.lang.String packageName, int flags)
  int getPackageUid(jni.JlString packageName, int flags) =>
      _getPackageUid(reference, packageName.reference, flags);

  static final _getPermissionInfo = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "android_content_pm_PackageManager_getPermissionInfo")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public abstract android.content.pm.PermissionInfo getPermissionInfo(java.lang.String name, int flags)
  PermissionInfo getPermissionInfo(jni.JlString name, int flags) =>
      PermissionInfo.fromRef(
          _getPermissionInfo(reference, name.reference, flags));

  static final _queryPermissionsByGroup = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "android_content_pm_PackageManager_queryPermissionsByGroup")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public abstract java.util.List<android.content.pm.PermissionInfo> queryPermissionsByGroup(java.lang.String group, int flags)
  jni.JlObject queryPermissionsByGroup(jni.JlString group, int flags) =>
      jni.JlObject.fromRef(
          _queryPermissionsByGroup(reference, group.reference, flags));

  static final _getPermissionGroupInfo = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "android_content_pm_PackageManager_getPermissionGroupInfo")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public abstract android.content.pm.PermissionGroupInfo getPermissionGroupInfo(java.lang.String name, int flags)
  PermissionGroupInfo getPermissionGroupInfo(jni.JlString name, int flags) =>
      PermissionGroupInfo.fromRef(
          _getPermissionGroupInfo(reference, name.reference, flags));

  static final _getAllPermissionGroups = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "android_content_pm_PackageManager_getAllPermissionGroups")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public abstract java.util.List<android.content.pm.PermissionGroupInfo> getAllPermissionGroups(int flags)
  jni.JlObject getAllPermissionGroups(int flags) =>
      jni.JlObject.fromRef(_getAllPermissionGroups(reference, flags));

  static final _getApplicationInfo = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "android_content_pm_PackageManager_getApplicationInfo")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public abstract android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String packageName, int flags)
  ApplicationInfo getApplicationInfo(jni.JlString packageName, int flags) =>
      ApplicationInfo.fromRef(
          _getApplicationInfo(reference, packageName.reference, flags));

  static final _getActivityInfo = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "android_content_pm_PackageManager_getActivityInfo")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public abstract android.content.pm.ActivityInfo getActivityInfo(android.content.ComponentName component, int flags)
  ActivityInfo getActivityInfo(content.ComponentName component, int flags) =>
      ActivityInfo.fromRef(
          _getActivityInfo(reference, component.reference, flags));

  static final _getReceiverInfo = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "android_content_pm_PackageManager_getReceiverInfo")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public abstract android.content.pm.ActivityInfo getReceiverInfo(android.content.ComponentName component, int flags)
  ActivityInfo getReceiverInfo(content.ComponentName component, int flags) =>
      ActivityInfo.fromRef(
          _getReceiverInfo(reference, component.reference, flags));

  static final _getServiceInfo = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "android_content_pm_PackageManager_getServiceInfo")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public abstract android.content.pm.ServiceInfo getServiceInfo(android.content.ComponentName component, int flags)
  ServiceInfo getServiceInfo(content.ComponentName component, int flags) =>
      ServiceInfo.fromRef(
          _getServiceInfo(reference, component.reference, flags));

  static final _getProviderInfo = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "android_content_pm_PackageManager_getProviderInfo")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public abstract android.content.pm.ProviderInfo getProviderInfo(android.content.ComponentName component, int flags)
  ProviderInfo getProviderInfo(content.ComponentName component, int flags) =>
      ProviderInfo.fromRef(
          _getProviderInfo(reference, component.reference, flags));

  static final _getInstalledPackages = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "android_content_pm_PackageManager_getInstalledPackages")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public abstract java.util.List<android.content.pm.PackageInfo> getInstalledPackages(int flags)
  jni.JlObject getInstalledPackages(int flags) =>
      jni.JlObject.fromRef(_getInstalledPackages(reference, flags));

  static final _getPackagesHoldingPermissions = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "android_content_pm_PackageManager_getPackagesHoldingPermissions")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public abstract java.util.List<android.content.pm.PackageInfo> getPackagesHoldingPermissions(java.lang.String[] permissions, int flags)
  jni.JlObject getPackagesHoldingPermissions(
          jni.JlObject permissions, int flags) =>
      jni.JlObject.fromRef(_getPackagesHoldingPermissions(
          reference, permissions.reference, flags));

  static final _checkPermission = jlookup<
              ffi.NativeFunction<
                  ffi.Int32 Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_PackageManager_checkPermission")
      .asFunction<
          int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public abstract int checkPermission(java.lang.String permName, java.lang.String pkgName)
  int checkPermission(jni.JlString permName, jni.JlString pkgName) =>
      _checkPermission(reference, permName.reference, pkgName.reference);

  static final _isPermissionRevokedByPolicy = jlookup<
              ffi.NativeFunction<
                  ffi.Uint8 Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_PackageManager_isPermissionRevokedByPolicy")
      .asFunction<
          int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public abstract boolean isPermissionRevokedByPolicy(java.lang.String permName, java.lang.String pkgName)
  bool isPermissionRevokedByPolicy(
          jni.JlString permName, jni.JlString pkgName) =>
      _isPermissionRevokedByPolicy(
          reference, permName.reference, pkgName.reference) !=
      0;

  static final _addPermission = jlookup<
              ffi.NativeFunction<
                  ffi.Uint8 Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_PackageManager_addPermission")
      .asFunction<int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public abstract boolean addPermission(android.content.pm.PermissionInfo info)
  bool addPermission(PermissionInfo info) =>
      _addPermission(reference, info.reference) != 0;

  static final _addPermissionAsync = jlookup<
              ffi.NativeFunction<
                  ffi.Uint8 Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_PackageManager_addPermissionAsync")
      .asFunction<int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public abstract boolean addPermissionAsync(android.content.pm.PermissionInfo info)
  bool addPermissionAsync(PermissionInfo info) =>
      _addPermissionAsync(reference, info.reference) != 0;

  static final _removePermission = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_PackageManager_removePermission")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public abstract void removePermission(java.lang.String name)
  void removePermission(jni.JlString name) =>
      _removePermission(reference, name.reference);

  static final _checkSignatures = jlookup<
              ffi.NativeFunction<
                  ffi.Int32 Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_PackageManager_checkSignatures")
      .asFunction<
          int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public abstract int checkSignatures(java.lang.String pkg1, java.lang.String pkg2)
  int checkSignatures(jni.JlString pkg1, jni.JlString pkg2) =>
      _checkSignatures(reference, pkg1.reference, pkg2.reference);

  static final _checkSignatures_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Int32 Function(
                      ffi.Pointer<ffi.Void>, ffi.Int32, ffi.Int32)>>(
          "android_content_pm_PackageManager_checkSignatures_1")
      .asFunction<int Function(ffi.Pointer<ffi.Void>, int, int)>();

  /// from: public abstract int checkSignatures(int uid1, int uid2)
  int checkSignatures_1(int uid1, int uid2) =>
      _checkSignatures_1(reference, uid1, uid2);

  static final _getPackagesForUid = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "android_content_pm_PackageManager_getPackagesForUid")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public abstract java.lang.String[] getPackagesForUid(int uid)
  jni.JlObject getPackagesForUid(int uid) =>
      jni.JlObject.fromRef(_getPackagesForUid(reference, uid));

  static final _getNameForUid = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "android_content_pm_PackageManager_getNameForUid")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public abstract java.lang.String getNameForUid(int uid)
  jni.JlString getNameForUid(int uid) =>
      jni.JlString.fromRef(_getNameForUid(reference, uid));

  static final _getInstalledApplications = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "android_content_pm_PackageManager_getInstalledApplications")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public abstract java.util.List<android.content.pm.ApplicationInfo> getInstalledApplications(int flags)
  jni.JlObject getInstalledApplications(int flags) =>
      jni.JlObject.fromRef(_getInstalledApplications(reference, flags));

  static final _isInstantApp =
      jlookup<ffi.NativeFunction<ffi.Uint8 Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_pm_PackageManager_isInstantApp")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public abstract boolean isInstantApp()
  bool isInstantApp() => _isInstantApp(reference) != 0;

  static final _isInstantApp_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Uint8 Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_PackageManager_isInstantApp_1")
      .asFunction<int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public abstract boolean isInstantApp(java.lang.String packageName)
  bool isInstantApp_1(jni.JlString packageName) =>
      _isInstantApp_1(reference, packageName.reference) != 0;

  static final _getInstantAppCookieMaxBytes =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_pm_PackageManager_getInstantAppCookieMaxBytes")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public abstract int getInstantAppCookieMaxBytes()
  int getInstantAppCookieMaxBytes() => _getInstantAppCookieMaxBytes(reference);

  static final _getInstantAppCookie = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_PackageManager_getInstantAppCookie")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public abstract byte[] getInstantAppCookie()
  jni.JlObject getInstantAppCookie() =>
      jni.JlObject.fromRef(_getInstantAppCookie(reference));

  static final _clearInstantAppCookie =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_pm_PackageManager_clearInstantAppCookie")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: public abstract void clearInstantAppCookie()
  void clearInstantAppCookie() => _clearInstantAppCookie(reference);

  static final _updateInstantAppCookie = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_PackageManager_updateInstantAppCookie")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public abstract void updateInstantAppCookie(byte[] cookie)
  void updateInstantAppCookie(jni.JlObject cookie) =>
      _updateInstantAppCookie(reference, cookie.reference);

  static final _getSystemSharedLibraryNames = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_PackageManager_getSystemSharedLibraryNames")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public abstract java.lang.String[] getSystemSharedLibraryNames()
  jni.JlObject getSystemSharedLibraryNames() =>
      jni.JlObject.fromRef(_getSystemSharedLibraryNames(reference));

  static final _getSharedLibraries = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "android_content_pm_PackageManager_getSharedLibraries")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public abstract java.util.List<android.content.pm.SharedLibraryInfo> getSharedLibraries(int flags)
  jni.JlObject getSharedLibraries(int flags) =>
      jni.JlObject.fromRef(_getSharedLibraries(reference, flags));

  static final _getChangedPackages = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "android_content_pm_PackageManager_getChangedPackages")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public abstract android.content.pm.ChangedPackages getChangedPackages(int sequenceNumber)
  ChangedPackages getChangedPackages(int sequenceNumber) =>
      ChangedPackages.fromRef(_getChangedPackages(reference, sequenceNumber));

  static final _getSystemAvailableFeatures = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_PackageManager_getSystemAvailableFeatures")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public abstract android.content.pm.FeatureInfo[] getSystemAvailableFeatures()
  jni.JlObject getSystemAvailableFeatures() =>
      jni.JlObject.fromRef(_getSystemAvailableFeatures(reference));

  static final _hasSystemFeature = jlookup<
              ffi.NativeFunction<
                  ffi.Uint8 Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_PackageManager_hasSystemFeature")
      .asFunction<int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public abstract boolean hasSystemFeature(java.lang.String name)
  bool hasSystemFeature(jni.JlString name) =>
      _hasSystemFeature(reference, name.reference) != 0;

  static final _hasSystemFeature_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Uint8 Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "android_content_pm_PackageManager_hasSystemFeature_1")
      .asFunction<
          int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public abstract boolean hasSystemFeature(java.lang.String name, int version)
  bool hasSystemFeature_1(jni.JlString name, int version) =>
      _hasSystemFeature_1(reference, name.reference, version) != 0;

  static final _resolveActivity = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "android_content_pm_PackageManager_resolveActivity")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public abstract android.content.pm.ResolveInfo resolveActivity(android.content.Intent intent, int flags)
  ResolveInfo resolveActivity(content.Intent intent, int flags) =>
      ResolveInfo.fromRef(_resolveActivity(reference, intent.reference, flags));

  static final _queryIntentActivities = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "android_content_pm_PackageManager_queryIntentActivities")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public abstract java.util.List<android.content.pm.ResolveInfo> queryIntentActivities(android.content.Intent intent, int flags)
  jni.JlObject queryIntentActivities(content.Intent intent, int flags) =>
      jni.JlObject.fromRef(
          _queryIntentActivities(reference, intent.reference, flags));

  static final _queryIntentActivityOptions = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Int32)>>(
          "android_content_pm_PackageManager_queryIntentActivityOptions")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              int)>();

  /// from: public abstract java.util.List<android.content.pm.ResolveInfo> queryIntentActivityOptions(android.content.ComponentName caller, android.content.Intent[] specifics, android.content.Intent intent, int flags)
  jni.JlObject queryIntentActivityOptions(content.ComponentName caller,
          jni.JlObject specifics, content.Intent intent, int flags) =>
      jni.JlObject.fromRef(_queryIntentActivityOptions(reference,
          caller.reference, specifics.reference, intent.reference, flags));

  static final _queryBroadcastReceivers = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "android_content_pm_PackageManager_queryBroadcastReceivers")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public abstract java.util.List<android.content.pm.ResolveInfo> queryBroadcastReceivers(android.content.Intent intent, int flags)
  jni.JlObject queryBroadcastReceivers(content.Intent intent, int flags) =>
      jni.JlObject.fromRef(
          _queryBroadcastReceivers(reference, intent.reference, flags));

  static final _resolveService = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "android_content_pm_PackageManager_resolveService")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public abstract android.content.pm.ResolveInfo resolveService(android.content.Intent intent, int flags)
  ResolveInfo resolveService(content.Intent intent, int flags) =>
      ResolveInfo.fromRef(_resolveService(reference, intent.reference, flags));

  static final _queryIntentServices = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "android_content_pm_PackageManager_queryIntentServices")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public abstract java.util.List<android.content.pm.ResolveInfo> queryIntentServices(android.content.Intent intent, int flags)
  jni.JlObject queryIntentServices(content.Intent intent, int flags) =>
      jni.JlObject.fromRef(
          _queryIntentServices(reference, intent.reference, flags));

  static final _queryIntentContentProviders = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "android_content_pm_PackageManager_queryIntentContentProviders")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public abstract java.util.List<android.content.pm.ResolveInfo> queryIntentContentProviders(android.content.Intent intent, int flags)
  jni.JlObject queryIntentContentProviders(content.Intent intent, int flags) =>
      jni.JlObject.fromRef(
          _queryIntentContentProviders(reference, intent.reference, flags));

  static final _resolveContentProvider = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "android_content_pm_PackageManager_resolveContentProvider")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public abstract android.content.pm.ProviderInfo resolveContentProvider(java.lang.String name, int flags)
  ProviderInfo resolveContentProvider(jni.JlString name, int flags) =>
      ProviderInfo.fromRef(
          _resolveContentProvider(reference, name.reference, flags));

  static final _queryContentProviders = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Int32, ffi.Int32)>>(
          "android_content_pm_PackageManager_queryContentProviders")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int, int)>();

  /// from: public abstract java.util.List<android.content.pm.ProviderInfo> queryContentProviders(java.lang.String processName, int uid, int flags)
  jni.JlObject queryContentProviders(
          jni.JlString processName, int uid, int flags) =>
      jni.JlObject.fromRef(
          _queryContentProviders(reference, processName.reference, uid, flags));

  static final _getInstrumentationInfo = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "android_content_pm_PackageManager_getInstrumentationInfo")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public abstract android.content.pm.InstrumentationInfo getInstrumentationInfo(android.content.ComponentName className, int flags)
  InstrumentationInfo getInstrumentationInfo(
          content.ComponentName className, int flags) =>
      InstrumentationInfo.fromRef(
          _getInstrumentationInfo(reference, className.reference, flags));

  static final _queryInstrumentation = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "android_content_pm_PackageManager_queryInstrumentation")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public abstract java.util.List<android.content.pm.InstrumentationInfo> queryInstrumentation(java.lang.String targetPackage, int flags)
  jni.JlObject queryInstrumentation(jni.JlString targetPackage, int flags) =>
      jni.JlObject.fromRef(
          _queryInstrumentation(reference, targetPackage.reference, flags));

  static final _getDrawable = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Int32,
                      ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_PackageManager_getDrawable")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, int, ffi.Pointer<ffi.Void>)>();

  /// from: public abstract android.graphics.drawable.Drawable getDrawable(java.lang.String packageName, int resid, android.content.pm.ApplicationInfo appInfo)
  jni.JlObject getDrawable(
          jni.JlString packageName, int resid, ApplicationInfo appInfo) =>
      jni.JlObject.fromRef(_getDrawable(
          reference, packageName.reference, resid, appInfo.reference));

  static final _getActivityIcon = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_PackageManager_getActivityIcon")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public abstract android.graphics.drawable.Drawable getActivityIcon(android.content.ComponentName activityName)
  jni.JlObject getActivityIcon(content.ComponentName activityName) =>
      jni.JlObject.fromRef(_getActivityIcon(reference, activityName.reference));

  static final _getActivityIcon_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_PackageManager_getActivityIcon_1")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public abstract android.graphics.drawable.Drawable getActivityIcon(android.content.Intent intent)
  jni.JlObject getActivityIcon_1(content.Intent intent) =>
      jni.JlObject.fromRef(_getActivityIcon_1(reference, intent.reference));

  static final _getActivityBanner = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_PackageManager_getActivityBanner")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public abstract android.graphics.drawable.Drawable getActivityBanner(android.content.ComponentName activityName)
  jni.JlObject getActivityBanner(content.ComponentName activityName) =>
      jni.JlObject.fromRef(
          _getActivityBanner(reference, activityName.reference));

  static final _getActivityBanner_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_PackageManager_getActivityBanner_1")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public abstract android.graphics.drawable.Drawable getActivityBanner(android.content.Intent intent)
  jni.JlObject getActivityBanner_1(content.Intent intent) =>
      jni.JlObject.fromRef(_getActivityBanner_1(reference, intent.reference));

  static final _getDefaultActivityIcon = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_PackageManager_getDefaultActivityIcon")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public abstract android.graphics.drawable.Drawable getDefaultActivityIcon()
  jni.JlObject getDefaultActivityIcon() =>
      jni.JlObject.fromRef(_getDefaultActivityIcon(reference));

  static final _getApplicationIcon = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_PackageManager_getApplicationIcon")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public abstract android.graphics.drawable.Drawable getApplicationIcon(android.content.pm.ApplicationInfo info)
  jni.JlObject getApplicationIcon(ApplicationInfo info) =>
      jni.JlObject.fromRef(_getApplicationIcon(reference, info.reference));

  static final _getApplicationIcon_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_PackageManager_getApplicationIcon_1")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public abstract android.graphics.drawable.Drawable getApplicationIcon(java.lang.String packageName)
  jni.JlObject getApplicationIcon_1(jni.JlString packageName) =>
      jni.JlObject.fromRef(
          _getApplicationIcon_1(reference, packageName.reference));

  static final _getApplicationBanner = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_PackageManager_getApplicationBanner")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public abstract android.graphics.drawable.Drawable getApplicationBanner(android.content.pm.ApplicationInfo info)
  jni.JlObject getApplicationBanner(ApplicationInfo info) =>
      jni.JlObject.fromRef(_getApplicationBanner(reference, info.reference));

  static final _getApplicationBanner_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_PackageManager_getApplicationBanner_1")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public abstract android.graphics.drawable.Drawable getApplicationBanner(java.lang.String packageName)
  jni.JlObject getApplicationBanner_1(jni.JlString packageName) =>
      jni.JlObject.fromRef(
          _getApplicationBanner_1(reference, packageName.reference));

  static final _getActivityLogo = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_PackageManager_getActivityLogo")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public abstract android.graphics.drawable.Drawable getActivityLogo(android.content.ComponentName activityName)
  jni.JlObject getActivityLogo(content.ComponentName activityName) =>
      jni.JlObject.fromRef(_getActivityLogo(reference, activityName.reference));

  static final _getActivityLogo_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_PackageManager_getActivityLogo_1")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public abstract android.graphics.drawable.Drawable getActivityLogo(android.content.Intent intent)
  jni.JlObject getActivityLogo_1(content.Intent intent) =>
      jni.JlObject.fromRef(_getActivityLogo_1(reference, intent.reference));

  static final _getApplicationLogo = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_PackageManager_getApplicationLogo")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public abstract android.graphics.drawable.Drawable getApplicationLogo(android.content.pm.ApplicationInfo info)
  jni.JlObject getApplicationLogo(ApplicationInfo info) =>
      jni.JlObject.fromRef(_getApplicationLogo(reference, info.reference));

  static final _getApplicationLogo_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_PackageManager_getApplicationLogo_1")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public abstract android.graphics.drawable.Drawable getApplicationLogo(java.lang.String packageName)
  jni.JlObject getApplicationLogo_1(jni.JlString packageName) =>
      jni.JlObject.fromRef(
          _getApplicationLogo_1(reference, packageName.reference));

  static final _getUserBadgedIcon = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_PackageManager_getUserBadgedIcon")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public abstract android.graphics.drawable.Drawable getUserBadgedIcon(android.graphics.drawable.Drawable icon, android.os.UserHandle user)
  jni.JlObject getUserBadgedIcon(jni.JlObject icon, os.UserHandle user) =>
      jni.JlObject.fromRef(
          _getUserBadgedIcon(reference, icon.reference, user.reference));

  static final _getUserBadgedDrawableForDensity = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Int32)>>(
          "android_content_pm_PackageManager_getUserBadgedDrawableForDensity")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              int)>();

  /// from: public abstract android.graphics.drawable.Drawable getUserBadgedDrawableForDensity(android.graphics.drawable.Drawable drawable, android.os.UserHandle user, android.graphics.Rect badgeLocation, int badgeDensity)
  jni.JlObject getUserBadgedDrawableForDensity(jni.JlObject drawable,
          os.UserHandle user, jni.JlObject badgeLocation, int badgeDensity) =>
      jni.JlObject.fromRef(_getUserBadgedDrawableForDensity(
          reference,
          drawable.reference,
          user.reference,
          badgeLocation.reference,
          badgeDensity));

  static final _getUserBadgedLabel = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_PackageManager_getUserBadgedLabel")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public abstract java.lang.CharSequence getUserBadgedLabel(java.lang.CharSequence label, android.os.UserHandle user)
  jni.JlObject getUserBadgedLabel(jni.JlObject label, os.UserHandle user) =>
      jni.JlObject.fromRef(
          _getUserBadgedLabel(reference, label.reference, user.reference));

  static final _getText = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Int32,
                      ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_PackageManager_getText")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, int, ffi.Pointer<ffi.Void>)>();

  /// from: public abstract java.lang.CharSequence getText(java.lang.String packageName, int resid, android.content.pm.ApplicationInfo appInfo)
  jni.JlObject getText(
          jni.JlString packageName, int resid, ApplicationInfo appInfo) =>
      jni.JlObject.fromRef(
          _getText(reference, packageName.reference, resid, appInfo.reference));

  static final _getXml = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Int32,
                      ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_PackageManager_getXml")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, int, ffi.Pointer<ffi.Void>)>();

  /// from: public abstract android.content.res.XmlResourceParser getXml(java.lang.String packageName, int resid, android.content.pm.ApplicationInfo appInfo)
  res.XmlResourceParser getXml(
          jni.JlString packageName, int resid, ApplicationInfo appInfo) =>
      res.XmlResourceParser.fromRef(
          _getXml(reference, packageName.reference, resid, appInfo.reference));

  static final _getApplicationLabel = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_PackageManager_getApplicationLabel")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public abstract java.lang.CharSequence getApplicationLabel(android.content.pm.ApplicationInfo info)
  jni.JlObject getApplicationLabel(ApplicationInfo info) =>
      jni.JlObject.fromRef(_getApplicationLabel(reference, info.reference));

  static final _getResourcesForActivity = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_PackageManager_getResourcesForActivity")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public abstract android.content.res.Resources getResourcesForActivity(android.content.ComponentName activityName)
  res.Resources getResourcesForActivity(content.ComponentName activityName) =>
      res.Resources.fromRef(
          _getResourcesForActivity(reference, activityName.reference));

  static final _getResourcesForApplication = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_PackageManager_getResourcesForApplication")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public abstract android.content.res.Resources getResourcesForApplication(android.content.pm.ApplicationInfo app)
  res.Resources getResourcesForApplication(ApplicationInfo app) =>
      res.Resources.fromRef(
          _getResourcesForApplication(reference, app.reference));

  static final _getResourcesForApplication_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_PackageManager_getResourcesForApplication_1")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public abstract android.content.res.Resources getResourcesForApplication(java.lang.String appPackageName)
  res.Resources getResourcesForApplication_1(jni.JlString appPackageName) =>
      res.Resources.fromRef(
          _getResourcesForApplication_1(reference, appPackageName.reference));

  static final _getPackageArchiveInfo = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "android_content_pm_PackageManager_getPackageArchiveInfo")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public android.content.pm.PackageInfo getPackageArchiveInfo(java.lang.String archiveFilePath, int flags)
  PackageInfo getPackageArchiveInfo(jni.JlString archiveFilePath, int flags) =>
      PackageInfo.fromRef(
          _getPackageArchiveInfo(reference, archiveFilePath.reference, flags));

  static final _verifyPendingInstall = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Int32, ffi.Int32)>>(
          "android_content_pm_PackageManager_verifyPendingInstall")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int, int)>();

  /// from: public abstract void verifyPendingInstall(int id, int verificationCode)
  void verifyPendingInstall(int id, int verificationCode) =>
      _verifyPendingInstall(reference, id, verificationCode);

  static final _extendVerificationTimeout = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Int32, ffi.Int32, ffi.Int64)>>(
          "android_content_pm_PackageManager_extendVerificationTimeout")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int, int, int)>();

  /// from: public abstract void extendVerificationTimeout(int id, int verificationCodeAtTimeout, long millisecondsToDelay)
  void extendVerificationTimeout(
          int id, int verificationCodeAtTimeout, int millisecondsToDelay) =>
      _extendVerificationTimeout(
          reference, id, verificationCodeAtTimeout, millisecondsToDelay);

  static final _setInstallerPackageName = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_PackageManager_setInstallerPackageName")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public abstract void setInstallerPackageName(java.lang.String targetPackage, java.lang.String installerPackageName)
  void setInstallerPackageName(
          jni.JlString targetPackage, jni.JlString installerPackageName) =>
      _setInstallerPackageName(
          reference, targetPackage.reference, installerPackageName.reference);

  static final _getInstallerPackageName = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_PackageManager_getInstallerPackageName")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public abstract java.lang.String getInstallerPackageName(java.lang.String packageName)
  jni.JlString getInstallerPackageName(jni.JlString packageName) =>
      jni.JlString.fromRef(
          _getInstallerPackageName(reference, packageName.reference));

  static final _addPackageToPreferred = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_PackageManager_addPackageToPreferred")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public abstract void addPackageToPreferred(java.lang.String packageName)
  void addPackageToPreferred(jni.JlString packageName) =>
      _addPackageToPreferred(reference, packageName.reference);

  static final _removePackageFromPreferred = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_PackageManager_removePackageFromPreferred")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public abstract void removePackageFromPreferred(java.lang.String packageName)
  void removePackageFromPreferred(jni.JlString packageName) =>
      _removePackageFromPreferred(reference, packageName.reference);

  static final _getPreferredPackages = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "android_content_pm_PackageManager_getPreferredPackages")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public abstract java.util.List<android.content.pm.PackageInfo> getPreferredPackages(int flags)
  jni.JlObject getPreferredPackages(int flags) =>
      jni.JlObject.fromRef(_getPreferredPackages(reference, flags));

  static final _addPreferredActivity = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Int32,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_PackageManager_addPreferredActivity")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public abstract void addPreferredActivity(android.content.IntentFilter filter, int match, android.content.ComponentName[] set, android.content.ComponentName activity)
  void addPreferredActivity(content.IntentFilter filter, int match,
          jni.JlObject set_, content.ComponentName activity) =>
      _addPreferredActivity(reference, filter.reference, match, set_.reference,
          activity.reference);

  static final _clearPackagePreferredActivities = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_PackageManager_clearPackagePreferredActivities")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public abstract void clearPackagePreferredActivities(java.lang.String packageName)
  void clearPackagePreferredActivities(jni.JlString packageName) =>
      _clearPackagePreferredActivities(reference, packageName.reference);

  static final _getPreferredActivities = jlookup<
              ffi.NativeFunction<
                  ffi.Int32 Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_PackageManager_getPreferredActivities")
      .asFunction<
          int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public abstract int getPreferredActivities(java.util.List<android.content.IntentFilter> outFilters, java.util.List<android.content.ComponentName> outActivities, java.lang.String packageName)
  int getPreferredActivities(jni.JlObject outFilters,
          jni.JlObject outActivities, jni.JlString packageName) =>
      _getPreferredActivities(reference, outFilters.reference,
          outActivities.reference, packageName.reference);

  static final _setComponentEnabledSetting = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Int32, ffi.Int32)>>(
          "android_content_pm_PackageManager_setComponentEnabledSetting")
      .asFunction<
          void Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int, int)>();

  /// from: public abstract void setComponentEnabledSetting(android.content.ComponentName componentName, int newState, int flags)
  void setComponentEnabledSetting(
          content.ComponentName componentName, int newState, int flags) =>
      _setComponentEnabledSetting(
          reference, componentName.reference, newState, flags);

  static final _getComponentEnabledSetting = jlookup<
              ffi.NativeFunction<
                  ffi.Int32 Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_PackageManager_getComponentEnabledSetting")
      .asFunction<int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public abstract int getComponentEnabledSetting(android.content.ComponentName componentName)
  int getComponentEnabledSetting(content.ComponentName componentName) =>
      _getComponentEnabledSetting(reference, componentName.reference);

  static final _setApplicationEnabledSetting = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Int32, ffi.Int32)>>(
          "android_content_pm_PackageManager_setApplicationEnabledSetting")
      .asFunction<
          void Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int, int)>();

  /// from: public abstract void setApplicationEnabledSetting(java.lang.String packageName, int newState, int flags)
  void setApplicationEnabledSetting(
          jni.JlString packageName, int newState, int flags) =>
      _setApplicationEnabledSetting(
          reference, packageName.reference, newState, flags);

  static final _getApplicationEnabledSetting = jlookup<
              ffi.NativeFunction<
                  ffi.Int32 Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_PackageManager_getApplicationEnabledSetting")
      .asFunction<int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public abstract int getApplicationEnabledSetting(java.lang.String packageName)
  int getApplicationEnabledSetting(jni.JlString packageName) =>
      _getApplicationEnabledSetting(reference, packageName.reference);

  static final _isSafeMode =
      jlookup<ffi.NativeFunction<ffi.Uint8 Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_pm_PackageManager_isSafeMode")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public abstract boolean isSafeMode()
  bool isSafeMode() => _isSafeMode(reference) != 0;

  static final _isPackageSuspended =
      jlookup<ffi.NativeFunction<ffi.Uint8 Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_pm_PackageManager_isPackageSuspended")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public boolean isPackageSuspended()
  bool isPackageSuspended() => _isPackageSuspended(reference) != 0;

  static final _getSuspendedPackageAppExtras = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_PackageManager_getSuspendedPackageAppExtras")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.os.Bundle getSuspendedPackageAppExtras()
  os.Bundle getSuspendedPackageAppExtras() =>
      os.Bundle.fromRef(_getSuspendedPackageAppExtras(reference));

  static final _setApplicationCategoryHint = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "android_content_pm_PackageManager_setApplicationCategoryHint")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public abstract void setApplicationCategoryHint(java.lang.String packageName, int categoryHint)
  void setApplicationCategoryHint(jni.JlString packageName, int categoryHint) =>
      _setApplicationCategoryHint(
          reference, packageName.reference, categoryHint);

  static final _getPackageInstaller = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_PackageManager_getPackageInstaller")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public abstract android.content.pm.PackageInstaller getPackageInstaller()
  PackageInstaller getPackageInstaller() =>
      PackageInstaller.fromRef(_getPackageInstaller(reference));

  static final _canRequestPackageInstalls =
      jlookup<ffi.NativeFunction<ffi.Uint8 Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_pm_PackageManager_canRequestPackageInstalls")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public abstract boolean canRequestPackageInstalls()
  bool canRequestPackageInstalls() =>
      _canRequestPackageInstalls(reference) != 0;

  static final _hasSigningCertificate = jlookup<
              ffi.NativeFunction<
                  ffi.Uint8 Function(
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>,
                      ffi.Int32)>>(
          "android_content_pm_PackageManager_hasSigningCertificate")
      .asFunction<
          int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, int)>();

  /// from: public boolean hasSigningCertificate(java.lang.String packageName, byte[] certificate, int type)
  bool hasSigningCertificate(
          jni.JlString packageName, jni.JlObject certificate, int type) =>
      _hasSigningCertificate(
          reference, packageName.reference, certificate.reference, type) !=
      0;

  static final _hasSigningCertificate_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Uint8 Function(ffi.Pointer<ffi.Void>, ffi.Int32,
                      ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "android_content_pm_PackageManager_hasSigningCertificate_1")
      .asFunction<
          int Function(
              ffi.Pointer<ffi.Void>, int, ffi.Pointer<ffi.Void>, int)>();

  /// from: public boolean hasSigningCertificate(int uid, byte[] certificate, int type)
  bool hasSigningCertificate_1(int uid, jni.JlObject certificate, int type) =>
      _hasSigningCertificate_1(reference, uid, certificate.reference, type) !=
      0;
}

class PackageManager_NameNotFoundException extends jni.JlObject {
  PackageManager_NameNotFoundException.fromRef(ffi.Pointer<ffi.Void> ref)
      : super.fromRef(ref);

  static final _ctor =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "android_content_pm_PackageManager__NameNotFoundException_new")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();

  /// from: public void <init>()
  PackageManager_NameNotFoundException() : super.fromRef(_ctor());

  static final _ctor_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_PackageManager__NameNotFoundException_new_1")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void <init>(java.lang.String name)
  PackageManager_NameNotFoundException.ctor_1(jni.JlString name)
      : super.fromRef(_ctor_1(name.reference));
}

class PackageInstaller extends jni.JlObject {
  PackageInstaller.fromRef(ffi.Pointer<ffi.Void> ref) : super.fromRef(ref);

  /// from: static public final java.lang.String ACTION_SESSION_COMMITTED
  static const ACTION_SESSION_COMMITTED =
      "android.content.pm.action.SESSION_COMMITTED";

  /// from: static public final java.lang.String ACTION_SESSION_DETAILS
  static const ACTION_SESSION_DETAILS =
      "android.content.pm.action.SESSION_DETAILS";

  /// from: static public final java.lang.String EXTRA_OTHER_PACKAGE_NAME
  static const EXTRA_OTHER_PACKAGE_NAME =
      "android.content.pm.extra.OTHER_PACKAGE_NAME";

  /// from: static public final java.lang.String EXTRA_PACKAGE_NAME
  static const EXTRA_PACKAGE_NAME = "android.content.pm.extra.PACKAGE_NAME";

  /// from: static public final java.lang.String EXTRA_SESSION
  static const EXTRA_SESSION = "android.content.pm.extra.SESSION";

  /// from: static public final java.lang.String EXTRA_SESSION_ID
  static const EXTRA_SESSION_ID = "android.content.pm.extra.SESSION_ID";

  /// from: static public final java.lang.String EXTRA_STATUS
  static const EXTRA_STATUS = "android.content.pm.extra.STATUS";

  /// from: static public final java.lang.String EXTRA_STATUS_MESSAGE
  static const EXTRA_STATUS_MESSAGE = "android.content.pm.extra.STATUS_MESSAGE";

  /// from: static public final java.lang.String EXTRA_STORAGE_PATH
  static const EXTRA_STORAGE_PATH = "android.content.pm.extra.STORAGE_PATH";

  /// from: static public final int STATUS_FAILURE
  static const STATUS_FAILURE = 1;

  /// from: static public final int STATUS_FAILURE_ABORTED
  static const STATUS_FAILURE_ABORTED = 3;

  /// from: static public final int STATUS_FAILURE_BLOCKED
  static const STATUS_FAILURE_BLOCKED = 2;

  /// from: static public final int STATUS_FAILURE_CONFLICT
  static const STATUS_FAILURE_CONFLICT = 5;

  /// from: static public final int STATUS_FAILURE_INCOMPATIBLE
  static const STATUS_FAILURE_INCOMPATIBLE = 7;

  /// from: static public final int STATUS_FAILURE_INVALID
  static const STATUS_FAILURE_INVALID = 4;

  /// from: static public final int STATUS_FAILURE_STORAGE
  static const STATUS_FAILURE_STORAGE = 6;

  /// from: static public final int STATUS_PENDING_USER_ACTION
  static const STATUS_PENDING_USER_ACTION = -1;

  /// from: static public final int STATUS_SUCCESS
  static const STATUS_SUCCESS = 0;

  static final _ctor =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "android_content_pm_PackageInstaller_new")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();

  /// from: void <init>()
  PackageInstaller() : super.fromRef(_ctor());

  static final _createSession = jlookup<
              ffi.NativeFunction<
                  ffi.Int32 Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_PackageInstaller_createSession")
      .asFunction<int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public int createSession(android.content.pm.PackageInstaller.SessionParams params)
  int createSession(PackageInstaller_SessionParams params) =>
      _createSession(reference, params.reference);

  static final _openSession = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "android_content_pm_PackageInstaller_openSession")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public android.content.pm.PackageInstaller.Session openSession(int sessionId)
  PackageInstaller_Session openSession(int sessionId) =>
      PackageInstaller_Session.fromRef(_openSession(reference, sessionId));

  static final _updateSessionAppIcon = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Int32,
                      ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_PackageInstaller_updateSessionAppIcon")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, int, ffi.Pointer<ffi.Void>)>();

  /// from: public void updateSessionAppIcon(int sessionId, android.graphics.Bitmap appIcon)
  void updateSessionAppIcon(int sessionId, jni.JlObject appIcon) =>
      _updateSessionAppIcon(reference, sessionId, appIcon.reference);

  static final _updateSessionAppLabel = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Int32,
                      ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_PackageInstaller_updateSessionAppLabel")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, int, ffi.Pointer<ffi.Void>)>();

  /// from: public void updateSessionAppLabel(int sessionId, java.lang.CharSequence appLabel)
  void updateSessionAppLabel(int sessionId, jni.JlObject appLabel) =>
      _updateSessionAppLabel(reference, sessionId, appLabel.reference);

  static final _abandonSession = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "android_content_pm_PackageInstaller_abandonSession")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public void abandonSession(int sessionId)
  void abandonSession(int sessionId) => _abandonSession(reference, sessionId);

  static final _getSessionInfo = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "android_content_pm_PackageInstaller_getSessionInfo")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public android.content.pm.PackageInstaller.SessionInfo getSessionInfo(int sessionId)
  PackageInstaller_SessionInfo getSessionInfo(int sessionId) =>
      PackageInstaller_SessionInfo.fromRef(
          _getSessionInfo(reference, sessionId));

  static final _getAllSessions = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_PackageInstaller_getAllSessions")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.util.List<android.content.pm.PackageInstaller.SessionInfo> getAllSessions()
  jni.JlObject getAllSessions() =>
      jni.JlObject.fromRef(_getAllSessions(reference));

  static final _getMySessions = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_PackageInstaller_getMySessions")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.util.List<android.content.pm.PackageInstaller.SessionInfo> getMySessions()
  jni.JlObject getMySessions() =>
      jni.JlObject.fromRef(_getMySessions(reference));

  static final _uninstall = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_PackageInstaller_uninstall")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public void uninstall(java.lang.String packageName, android.content.IntentSender statusReceiver)
  void uninstall(
          jni.JlString packageName, content.IntentSender statusReceiver) =>
      _uninstall(reference, packageName.reference, statusReceiver.reference);

  static final _uninstall_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_PackageInstaller_uninstall_1")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public void uninstall(android.content.pm.VersionedPackage versionedPackage, android.content.IntentSender statusReceiver)
  void uninstall_1(VersionedPackage versionedPackage,
          content.IntentSender statusReceiver) =>
      _uninstall_1(
          reference, versionedPackage.reference, statusReceiver.reference);

  static final _registerSessionCallback = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_PackageInstaller_registerSessionCallback")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void registerSessionCallback(android.content.pm.PackageInstaller.SessionCallback callback)
  void registerSessionCallback(PackageInstaller_SessionCallback callback) =>
      _registerSessionCallback(reference, callback.reference);

  static final _registerSessionCallback_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_PackageInstaller_registerSessionCallback_1")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public void registerSessionCallback(android.content.pm.PackageInstaller.SessionCallback callback, android.os.Handler handler)
  void registerSessionCallback_1(
          PackageInstaller_SessionCallback callback, os.Handler handler) =>
      _registerSessionCallback_1(
          reference, callback.reference, handler.reference);

  static final _unregisterSessionCallback = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_PackageInstaller_unregisterSessionCallback")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void unregisterSessionCallback(android.content.pm.PackageInstaller.SessionCallback callback)
  void unregisterSessionCallback(PackageInstaller_SessionCallback callback) =>
      _unregisterSessionCallback(reference, callback.reference);
}

class PackageInstaller_SessionParams extends jni.JlObject {
  PackageInstaller_SessionParams.fromRef(ffi.Pointer<ffi.Void> ref)
      : super.fromRef(ref);

  /// from: static public final android.os.Parcelable.Creator<android.content.pm.PackageInstaller.SessionParams> CREATOR
  static final _getCREATOR =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "get_android_content_pm_PackageInstaller__SessionParams_CREATOR")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();
  static os.Parcelable_Creator get CREATOR =>
      os.Parcelable_Creator.fromRef(_getCREATOR());

  /// from: static public final int MODE_FULL_INSTALL
  static const MODE_FULL_INSTALL = 1;

  /// from: static public final int MODE_INHERIT_EXISTING
  static const MODE_INHERIT_EXISTING = 2;

  static final _ctor =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function(ffi.Int32)>>(
              "android_content_pm_PackageInstaller__SessionParams_new")
          .asFunction<ffi.Pointer<ffi.Void> Function(int)>();

  /// from: public void <init>(int mode)
  PackageInstaller_SessionParams(int mode) : super.fromRef(_ctor(mode));

  static final _setInstallLocation = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "android_content_pm_PackageInstaller__SessionParams_setInstallLocation")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public void setInstallLocation(int installLocation)
  void setInstallLocation(int installLocation) =>
      _setInstallLocation(reference, installLocation);

  static final _setSize = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Int64)>>(
          "android_content_pm_PackageInstaller__SessionParams_setSize")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public void setSize(long sizeBytes)
  void setSize(int sizeBytes) => _setSize(reference, sizeBytes);

  static final _setAppPackageName = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_PackageInstaller__SessionParams_setAppPackageName")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void setAppPackageName(java.lang.String appPackageName)
  void setAppPackageName(jni.JlString appPackageName) =>
      _setAppPackageName(reference, appPackageName.reference);

  static final _setAppIcon = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_PackageInstaller__SessionParams_setAppIcon")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void setAppIcon(android.graphics.Bitmap appIcon)
  void setAppIcon(jni.JlObject appIcon) =>
      _setAppIcon(reference, appIcon.reference);

  static final _setAppLabel = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_PackageInstaller__SessionParams_setAppLabel")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void setAppLabel(java.lang.CharSequence appLabel)
  void setAppLabel(jni.JlObject appLabel) =>
      _setAppLabel(reference, appLabel.reference);

  static final _setOriginatingUri = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_PackageInstaller__SessionParams_setOriginatingUri")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void setOriginatingUri(android.net.Uri originatingUri)
  void setOriginatingUri(jni.JlObject originatingUri) =>
      _setOriginatingUri(reference, originatingUri.reference);

  static final _setOriginatingUid = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "android_content_pm_PackageInstaller__SessionParams_setOriginatingUid")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public void setOriginatingUid(int originatingUid)
  void setOriginatingUid(int originatingUid) =>
      _setOriginatingUid(reference, originatingUid);

  static final _setReferrerUri = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_PackageInstaller__SessionParams_setReferrerUri")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void setReferrerUri(android.net.Uri referrerUri)
  void setReferrerUri(jni.JlObject referrerUri) =>
      _setReferrerUri(reference, referrerUri.reference);

  static final _setInstallReason = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "android_content_pm_PackageInstaller__SessionParams_setInstallReason")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public void setInstallReason(int installReason)
  void setInstallReason(int installReason) =>
      _setInstallReason(reference, installReason);

  static final _describeContents = jlookup<
              ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_PackageInstaller__SessionParams_describeContents")
      .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int describeContents()
  int describeContents() => _describeContents(reference);

  static final _writeToParcel = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "android_content_pm_PackageInstaller__SessionParams_writeToParcel")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public void writeToParcel(android.os.Parcel dest, int flags)
  void writeToParcel(os.Parcel dest, int flags) =>
      _writeToParcel(reference, dest.reference, flags);
}

class PackageInstaller_SessionInfo extends jni.JlObject {
  PackageInstaller_SessionInfo.fromRef(ffi.Pointer<ffi.Void> ref)
      : super.fromRef(ref);

  /// from: static public final android.os.Parcelable.Creator<android.content.pm.PackageInstaller.SessionInfo> CREATOR
  static final _getCREATOR =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "get_android_content_pm_PackageInstaller__SessionInfo_CREATOR")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();
  static os.Parcelable_Creator get CREATOR =>
      os.Parcelable_Creator.fromRef(_getCREATOR());

  static final _ctor =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "android_content_pm_PackageInstaller__SessionInfo_new")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();

  /// from: void <init>()
  PackageInstaller_SessionInfo() : super.fromRef(_ctor());

  static final _getSessionId =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_pm_PackageInstaller__SessionInfo_getSessionId")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int getSessionId()
  int getSessionId() => _getSessionId(reference);

  static final _getInstallerPackageName = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_PackageInstaller__SessionInfo_getInstallerPackageName")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.String getInstallerPackageName()
  jni.JlString getInstallerPackageName() =>
      jni.JlString.fromRef(_getInstallerPackageName(reference));

  static final _getProgress =
      jlookup<ffi.NativeFunction<ffi.Float Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_pm_PackageInstaller__SessionInfo_getProgress")
          .asFunction<double Function(ffi.Pointer<ffi.Void>)>();

  /// from: public float getProgress()
  double getProgress() => _getProgress(reference);

  static final _isActive =
      jlookup<ffi.NativeFunction<ffi.Uint8 Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_pm_PackageInstaller__SessionInfo_isActive")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public boolean isActive()
  bool isActive() => _isActive(reference) != 0;

  static final _isSealed =
      jlookup<ffi.NativeFunction<ffi.Uint8 Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_pm_PackageInstaller__SessionInfo_isSealed")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public boolean isSealed()
  bool isSealed() => _isSealed(reference) != 0;

  static final _getInstallReason = jlookup<
              ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_PackageInstaller__SessionInfo_getInstallReason")
      .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int getInstallReason()
  int getInstallReason() => _getInstallReason(reference);

  static final _getAppPackageName = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_PackageInstaller__SessionInfo_getAppPackageName")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.String getAppPackageName()
  jni.JlString getAppPackageName() =>
      jni.JlString.fromRef(_getAppPackageName(reference));

  static final _getAppIcon = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_PackageInstaller__SessionInfo_getAppIcon")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.graphics.Bitmap getAppIcon()
  jni.JlObject getAppIcon() => jni.JlObject.fromRef(_getAppIcon(reference));

  static final _getAppLabel = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_PackageInstaller__SessionInfo_getAppLabel")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.CharSequence getAppLabel()
  jni.JlObject getAppLabel() => jni.JlObject.fromRef(_getAppLabel(reference));

  static final _createDetailsIntent = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_PackageInstaller__SessionInfo_createDetailsIntent")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.content.Intent createDetailsIntent()
  content.Intent createDetailsIntent() =>
      content.Intent.fromRef(_createDetailsIntent(reference));

  static final _getMode =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_pm_PackageInstaller__SessionInfo_getMode")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int getMode()
  int getMode() => _getMode(reference);

  static final _getInstallLocation = jlookup<
              ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_PackageInstaller__SessionInfo_getInstallLocation")
      .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int getInstallLocation()
  int getInstallLocation() => _getInstallLocation(reference);

  static final _getSize =
      jlookup<ffi.NativeFunction<ffi.Int64 Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_pm_PackageInstaller__SessionInfo_getSize")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public long getSize()
  int getSize() => _getSize(reference);

  static final _getOriginatingUri = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_PackageInstaller__SessionInfo_getOriginatingUri")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.net.Uri getOriginatingUri()
  jni.JlObject getOriginatingUri() =>
      jni.JlObject.fromRef(_getOriginatingUri(reference));

  static final _getOriginatingUid = jlookup<
              ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_PackageInstaller__SessionInfo_getOriginatingUid")
      .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int getOriginatingUid()
  int getOriginatingUid() => _getOriginatingUid(reference);

  static final _getReferrerUri = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_PackageInstaller__SessionInfo_getReferrerUri")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.net.Uri getReferrerUri()
  jni.JlObject getReferrerUri() =>
      jni.JlObject.fromRef(_getReferrerUri(reference));

  static final _describeContents = jlookup<
              ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_PackageInstaller__SessionInfo_describeContents")
      .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int describeContents()
  int describeContents() => _describeContents(reference);

  static final _writeToParcel = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "android_content_pm_PackageInstaller__SessionInfo_writeToParcel")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public void writeToParcel(android.os.Parcel dest, int flags)
  void writeToParcel(os.Parcel dest, int flags) =>
      _writeToParcel(reference, dest.reference, flags);
}

class PackageInstaller_SessionCallback extends jni.JlObject {
  PackageInstaller_SessionCallback.fromRef(ffi.Pointer<ffi.Void> ref)
      : super.fromRef(ref);

  static final _ctor =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "android_content_pm_PackageInstaller__SessionCallback_new")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();

  /// from: public void <init>()
  PackageInstaller_SessionCallback() : super.fromRef(_ctor());

  static final _onCreated = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "android_content_pm_PackageInstaller__SessionCallback_onCreated")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public abstract void onCreated(int sessionId)
  void onCreated(int sessionId) => _onCreated(reference, sessionId);

  static final _onBadgingChanged = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "android_content_pm_PackageInstaller__SessionCallback_onBadgingChanged")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public abstract void onBadgingChanged(int sessionId)
  void onBadgingChanged(int sessionId) =>
      _onBadgingChanged(reference, sessionId);

  static final _onActiveChanged = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Int32, ffi.Uint8)>>(
          "android_content_pm_PackageInstaller__SessionCallback_onActiveChanged")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int, int)>();

  /// from: public abstract void onActiveChanged(int sessionId, boolean active)
  void onActiveChanged(int sessionId, bool active) =>
      _onActiveChanged(reference, sessionId, active ? 1 : 0);

  static final _onProgressChanged = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Int32, ffi.Float)>>(
          "android_content_pm_PackageInstaller__SessionCallback_onProgressChanged")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int, double)>();

  /// from: public abstract void onProgressChanged(int sessionId, float progress)
  void onProgressChanged(int sessionId, double progress) =>
      _onProgressChanged(reference, sessionId, progress);

  static final _onFinished = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Int32, ffi.Uint8)>>(
          "android_content_pm_PackageInstaller__SessionCallback_onFinished")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int, int)>();

  /// from: public abstract void onFinished(int sessionId, boolean success)
  void onFinished(int sessionId, bool success) =>
      _onFinished(reference, sessionId, success ? 1 : 0);
}

class PackageInstaller_Session extends jni.JlObject {
  PackageInstaller_Session.fromRef(ffi.Pointer<ffi.Void> ref)
      : super.fromRef(ref);

  static final _ctor =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "android_content_pm_PackageInstaller__Session_new")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();

  /// from: void <init>()
  PackageInstaller_Session() : super.fromRef(_ctor());

  static final _setStagingProgress = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Float)>>(
          "android_content_pm_PackageInstaller__Session_setStagingProgress")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, double)>();

  /// from: public void setStagingProgress(float progress)
  void setStagingProgress(double progress) =>
      _setStagingProgress(reference, progress);

  static final _openWrite = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Int64, ffi.Int64)>>(
          "android_content_pm_PackageInstaller__Session_openWrite")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int, int)>();

  /// from: public java.io.OutputStream openWrite(java.lang.String name, long offsetBytes, long lengthBytes)
  jni.JlObject openWrite(jni.JlString name, int offsetBytes, int lengthBytes) =>
      jni.JlObject.fromRef(
          _openWrite(reference, name.reference, offsetBytes, lengthBytes));

  static final _fsync = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_PackageInstaller__Session_fsync")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void fsync(java.io.OutputStream out)
  void fsync(jni.JlObject out) => _fsync(reference, out.reference);

  static final _getNames = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_PackageInstaller__Session_getNames")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.String[] getNames()
  jni.JlObject getNames() => jni.JlObject.fromRef(_getNames(reference));

  static final _openRead = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_PackageInstaller__Session_openRead")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public java.io.InputStream openRead(java.lang.String name)
  jni.JlObject openRead(jni.JlString name) =>
      jni.JlObject.fromRef(_openRead(reference, name.reference));

  static final _removeSplit = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_PackageInstaller__Session_removeSplit")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void removeSplit(java.lang.String splitName)
  void removeSplit(jni.JlString splitName) =>
      _removeSplit(reference, splitName.reference);

  static final _commit = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_PackageInstaller__Session_commit")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void commit(android.content.IntentSender statusReceiver)
  void commit(content.IntentSender statusReceiver) =>
      _commit(reference, statusReceiver.reference);

  static final _transfer = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_PackageInstaller__Session_transfer")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void transfer(java.lang.String packageName)
  void transfer(jni.JlString packageName) =>
      _transfer(reference, packageName.reference);

  static final _close =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_pm_PackageInstaller__Session_close")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void close()
  void close() => _close(reference);

  static final _abandon =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_pm_PackageInstaller__Session_abandon")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void abandon()
  void abandon() => _abandon(reference);
}

class PackageInfo extends jni.JlObject {
  PackageInfo.fromRef(ffi.Pointer<ffi.Void> ref) : super.fromRef(ref);

  /// from: static public final android.os.Parcelable.Creator<android.content.pm.PackageInfo> CREATOR
  static final _getCREATOR =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "get_android_content_pm_PackageInfo_CREATOR")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();
  static os.Parcelable_Creator get CREATOR =>
      os.Parcelable_Creator.fromRef(_getCREATOR());

  /// from: static public final int INSTALL_LOCATION_AUTO
  static const INSTALL_LOCATION_AUTO = 0;

  /// from: static public final int INSTALL_LOCATION_INTERNAL_ONLY
  static const INSTALL_LOCATION_INTERNAL_ONLY = 1;

  /// from: static public final int INSTALL_LOCATION_PREFER_EXTERNAL
  static const INSTALL_LOCATION_PREFER_EXTERNAL = 2;

  /// from: static public final int REQUESTED_PERMISSION_GRANTED
  static const REQUESTED_PERMISSION_GRANTED = 2;

  /// from: public android.content.pm.ActivityInfo[] activities
  static final _getactivities = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_content_pm_PackageInfo_activities")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>();
  jni.JlObject get activities =>
      jni.JlObject.fromRef(_getactivities(reference));
  static final _setactivities = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "set_android_content_pm_PackageInfo_activities")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();
  set activities(jni.JlObject value) =>
      _setactivities(reference, value.reference);

  /// from: public android.content.pm.ApplicationInfo applicationInfo
  static final _getapplicationInfo = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_content_pm_PackageInfo_applicationInfo")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>();
  ApplicationInfo get applicationInfo =>
      ApplicationInfo.fromRef(_getapplicationInfo(reference));
  static final _setapplicationInfo = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "set_android_content_pm_PackageInfo_applicationInfo")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();
  set applicationInfo(ApplicationInfo value) =>
      _setapplicationInfo(reference, value.reference);

  /// from: public int baseRevisionCode
  static final _getbaseRevisionCode = jlookup<
          ffi.NativeFunction<
              ffi.Int32 Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_content_pm_PackageInfo_baseRevisionCode")
      .asFunction<
          int Function(
    ffi.Pointer<ffi.Void>,
  )>();
  int get baseRevisionCode => _getbaseRevisionCode(reference);
  static final _setbaseRevisionCode = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "set_android_content_pm_PackageInfo_baseRevisionCode")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();
  set baseRevisionCode(int value) => _setbaseRevisionCode(reference, value);

  /// from: public android.content.pm.ConfigurationInfo[] configPreferences
  static final _getconfigPreferences = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_content_pm_PackageInfo_configPreferences")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>();
  jni.JlObject get configPreferences =>
      jni.JlObject.fromRef(_getconfigPreferences(reference));
  static final _setconfigPreferences = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "set_android_content_pm_PackageInfo_configPreferences")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();
  set configPreferences(jni.JlObject value) =>
      _setconfigPreferences(reference, value.reference);

  /// from: public android.content.pm.FeatureGroupInfo[] featureGroups
  static final _getfeatureGroups = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_content_pm_PackageInfo_featureGroups")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>();
  jni.JlObject get featureGroups =>
      jni.JlObject.fromRef(_getfeatureGroups(reference));
  static final _setfeatureGroups = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "set_android_content_pm_PackageInfo_featureGroups")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();
  set featureGroups(jni.JlObject value) =>
      _setfeatureGroups(reference, value.reference);

  /// from: public long firstInstallTime
  static final _getfirstInstallTime = jlookup<
          ffi.NativeFunction<
              ffi.Int64 Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_content_pm_PackageInfo_firstInstallTime")
      .asFunction<
          int Function(
    ffi.Pointer<ffi.Void>,
  )>();
  int get firstInstallTime => _getfirstInstallTime(reference);
  static final _setfirstInstallTime = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Int64)>>(
          "set_android_content_pm_PackageInfo_firstInstallTime")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();
  set firstInstallTime(int value) => _setfirstInstallTime(reference, value);

  /// from: public int[] gids
  static final _getgids = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_content_pm_PackageInfo_gids")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>();
  jni.JlObject get gids => jni.JlObject.fromRef(_getgids(reference));
  static final _setgids = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "set_android_content_pm_PackageInfo_gids")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();
  set gids(jni.JlObject value) => _setgids(reference, value.reference);

  /// from: public int installLocation
  static final _getinstallLocation = jlookup<
          ffi.NativeFunction<
              ffi.Int32 Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_content_pm_PackageInfo_installLocation")
      .asFunction<
          int Function(
    ffi.Pointer<ffi.Void>,
  )>();
  int get installLocation => _getinstallLocation(reference);
  static final _setinstallLocation = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "set_android_content_pm_PackageInfo_installLocation")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();
  set installLocation(int value) => _setinstallLocation(reference, value);

  /// from: public android.content.pm.InstrumentationInfo[] instrumentation
  static final _getinstrumentation = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_content_pm_PackageInfo_instrumentation")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>();
  jni.JlObject get instrumentation =>
      jni.JlObject.fromRef(_getinstrumentation(reference));
  static final _setinstrumentation = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "set_android_content_pm_PackageInfo_instrumentation")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();
  set instrumentation(jni.JlObject value) =>
      _setinstrumentation(reference, value.reference);

  /// from: public long lastUpdateTime
  static final _getlastUpdateTime = jlookup<
          ffi.NativeFunction<
              ffi.Int64 Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_content_pm_PackageInfo_lastUpdateTime")
      .asFunction<
          int Function(
    ffi.Pointer<ffi.Void>,
  )>();
  int get lastUpdateTime => _getlastUpdateTime(reference);
  static final _setlastUpdateTime = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Int64)>>(
          "set_android_content_pm_PackageInfo_lastUpdateTime")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();
  set lastUpdateTime(int value) => _setlastUpdateTime(reference, value);

  /// from: public java.lang.String packageName
  static final _getpackageName = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_content_pm_PackageInfo_packageName")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>();
  jni.JlString get packageName =>
      jni.JlString.fromRef(_getpackageName(reference));
  static final _setpackageName = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "set_android_content_pm_PackageInfo_packageName")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();
  set packageName(jni.JlString value) =>
      _setpackageName(reference, value.reference);

  /// from: public android.content.pm.PermissionInfo[] permissions
  static final _getpermissions = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_content_pm_PackageInfo_permissions")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>();
  jni.JlObject get permissions =>
      jni.JlObject.fromRef(_getpermissions(reference));
  static final _setpermissions = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "set_android_content_pm_PackageInfo_permissions")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();
  set permissions(jni.JlObject value) =>
      _setpermissions(reference, value.reference);

  /// from: public android.content.pm.ProviderInfo[] providers
  static final _getproviders = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_content_pm_PackageInfo_providers")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>();
  jni.JlObject get providers => jni.JlObject.fromRef(_getproviders(reference));
  static final _setproviders = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "set_android_content_pm_PackageInfo_providers")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();
  set providers(jni.JlObject value) =>
      _setproviders(reference, value.reference);

  /// from: public android.content.pm.ActivityInfo[] receivers
  static final _getreceivers = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_content_pm_PackageInfo_receivers")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>();
  jni.JlObject get receivers => jni.JlObject.fromRef(_getreceivers(reference));
  static final _setreceivers = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "set_android_content_pm_PackageInfo_receivers")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();
  set receivers(jni.JlObject value) =>
      _setreceivers(reference, value.reference);

  /// from: public android.content.pm.FeatureInfo[] reqFeatures
  static final _getreqFeatures = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_content_pm_PackageInfo_reqFeatures")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>();
  jni.JlObject get reqFeatures =>
      jni.JlObject.fromRef(_getreqFeatures(reference));
  static final _setreqFeatures = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "set_android_content_pm_PackageInfo_reqFeatures")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();
  set reqFeatures(jni.JlObject value) =>
      _setreqFeatures(reference, value.reference);

  /// from: public java.lang.String[] requestedPermissions
  static final _getrequestedPermissions = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_content_pm_PackageInfo_requestedPermissions")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>();
  jni.JlObject get requestedPermissions =>
      jni.JlObject.fromRef(_getrequestedPermissions(reference));
  static final _setrequestedPermissions = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "set_android_content_pm_PackageInfo_requestedPermissions")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();
  set requestedPermissions(jni.JlObject value) =>
      _setrequestedPermissions(reference, value.reference);

  /// from: public int[] requestedPermissionsFlags
  static final _getrequestedPermissionsFlags = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_content_pm_PackageInfo_requestedPermissionsFlags")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>();
  jni.JlObject get requestedPermissionsFlags =>
      jni.JlObject.fromRef(_getrequestedPermissionsFlags(reference));
  static final _setrequestedPermissionsFlags = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "set_android_content_pm_PackageInfo_requestedPermissionsFlags")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();
  set requestedPermissionsFlags(jni.JlObject value) =>
      _setrequestedPermissionsFlags(reference, value.reference);

  /// from: public android.content.pm.ServiceInfo[] services
  static final _getservices = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_content_pm_PackageInfo_services")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>();
  jni.JlObject get services => jni.JlObject.fromRef(_getservices(reference));
  static final _setservices = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "set_android_content_pm_PackageInfo_services")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();
  set services(jni.JlObject value) => _setservices(reference, value.reference);

  /// from: public java.lang.String sharedUserId
  static final _getsharedUserId = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_content_pm_PackageInfo_sharedUserId")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>();
  jni.JlString get sharedUserId =>
      jni.JlString.fromRef(_getsharedUserId(reference));
  static final _setsharedUserId = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "set_android_content_pm_PackageInfo_sharedUserId")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();
  set sharedUserId(jni.JlString value) =>
      _setsharedUserId(reference, value.reference);

  /// from: public int sharedUserLabel
  static final _getsharedUserLabel = jlookup<
          ffi.NativeFunction<
              ffi.Int32 Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_content_pm_PackageInfo_sharedUserLabel")
      .asFunction<
          int Function(
    ffi.Pointer<ffi.Void>,
  )>();
  int get sharedUserLabel => _getsharedUserLabel(reference);
  static final _setsharedUserLabel = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "set_android_content_pm_PackageInfo_sharedUserLabel")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();
  set sharedUserLabel(int value) => _setsharedUserLabel(reference, value);

  /// from: public android.content.pm.Signature[] signatures
  static final _getsignatures = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_content_pm_PackageInfo_signatures")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>();
  jni.JlObject get signatures =>
      jni.JlObject.fromRef(_getsignatures(reference));
  static final _setsignatures = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "set_android_content_pm_PackageInfo_signatures")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();
  set signatures(jni.JlObject value) =>
      _setsignatures(reference, value.reference);

  /// from: public android.content.pm.SigningInfo signingInfo
  static final _getsigningInfo = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_content_pm_PackageInfo_signingInfo")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>();
  SigningInfo get signingInfo =>
      SigningInfo.fromRef(_getsigningInfo(reference));
  static final _setsigningInfo = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "set_android_content_pm_PackageInfo_signingInfo")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();
  set signingInfo(SigningInfo value) =>
      _setsigningInfo(reference, value.reference);

  /// from: public java.lang.String[] splitNames
  static final _getsplitNames = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_content_pm_PackageInfo_splitNames")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>();
  jni.JlObject get splitNames =>
      jni.JlObject.fromRef(_getsplitNames(reference));
  static final _setsplitNames = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "set_android_content_pm_PackageInfo_splitNames")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();
  set splitNames(jni.JlObject value) =>
      _setsplitNames(reference, value.reference);

  /// from: public int[] splitRevisionCodes
  static final _getsplitRevisionCodes = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_content_pm_PackageInfo_splitRevisionCodes")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>();
  jni.JlObject get splitRevisionCodes =>
      jni.JlObject.fromRef(_getsplitRevisionCodes(reference));
  static final _setsplitRevisionCodes = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "set_android_content_pm_PackageInfo_splitRevisionCodes")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();
  set splitRevisionCodes(jni.JlObject value) =>
      _setsplitRevisionCodes(reference, value.reference);

  /// from: public int versionCode
  static final _getversionCode = jlookup<
          ffi.NativeFunction<
              ffi.Int32 Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_content_pm_PackageInfo_versionCode")
      .asFunction<
          int Function(
    ffi.Pointer<ffi.Void>,
  )>();
  int get versionCode => _getversionCode(reference);
  static final _setversionCode = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("set_android_content_pm_PackageInfo_versionCode")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();
  set versionCode(int value) => _setversionCode(reference, value);

  /// from: public java.lang.String versionName
  static final _getversionName = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_content_pm_PackageInfo_versionName")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>();
  jni.JlString get versionName =>
      jni.JlString.fromRef(_getversionName(reference));
  static final _setversionName = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "set_android_content_pm_PackageInfo_versionName")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();
  set versionName(jni.JlString value) =>
      _setversionName(reference, value.reference);

  static final _ctor =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "android_content_pm_PackageInfo_new")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();

  /// from: public void <init>()
  PackageInfo() : super.fromRef(_ctor());

  static final _getLongVersionCode =
      jlookup<ffi.NativeFunction<ffi.Int64 Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_pm_PackageInfo_getLongVersionCode")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public long getLongVersionCode()
  int getLongVersionCode() => _getLongVersionCode(reference);

  static final _setLongVersionCode = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Int64)>>(
          "android_content_pm_PackageInfo_setLongVersionCode")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public void setLongVersionCode(long longVersionCode)
  void setLongVersionCode(int longVersionCode) =>
      _setLongVersionCode(reference, longVersionCode);

  static final _toString_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_PackageInfo_toString_1")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.String toString()
  jni.JlString toString_1() => jni.JlString.fromRef(_toString_1(reference));

  static final _describeContents =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_pm_PackageInfo_describeContents")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int describeContents()
  int describeContents() => _describeContents(reference);

  static final _writeToParcel = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_content_pm_PackageInfo_writeToParcel")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public void writeToParcel(android.os.Parcel dest, int parcelableFlags)
  void writeToParcel(os.Parcel dest, int parcelableFlags) =>
      _writeToParcel(reference, dest.reference, parcelableFlags);
}

class PackageStats extends jni.JlObject {
  PackageStats.fromRef(ffi.Pointer<ffi.Void> ref) : super.fromRef(ref);

  /// from: static public final android.os.Parcelable.Creator<android.content.pm.PackageStats> CREATOR
  static final _getCREATOR =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "get_android_content_pm_PackageStats_CREATOR")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();
  static os.Parcelable_Creator get CREATOR =>
      os.Parcelable_Creator.fromRef(_getCREATOR());

  /// from: public long cacheSize
  static final _getcacheSize = jlookup<
          ffi.NativeFunction<
              ffi.Int64 Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_content_pm_PackageStats_cacheSize")
      .asFunction<
          int Function(
    ffi.Pointer<ffi.Void>,
  )>();
  int get cacheSize => _getcacheSize(reference);
  static final _setcacheSize = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  ffi.Int64)>>("set_android_content_pm_PackageStats_cacheSize")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();
  set cacheSize(int value) => _setcacheSize(reference, value);

  /// from: public long codeSize
  static final _getcodeSize = jlookup<
          ffi.NativeFunction<
              ffi.Int64 Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_content_pm_PackageStats_codeSize")
      .asFunction<
          int Function(
    ffi.Pointer<ffi.Void>,
  )>();
  int get codeSize => _getcodeSize(reference);
  static final _setcodeSize = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  ffi.Int64)>>("set_android_content_pm_PackageStats_codeSize")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();
  set codeSize(int value) => _setcodeSize(reference, value);

  /// from: public long dataSize
  static final _getdataSize = jlookup<
          ffi.NativeFunction<
              ffi.Int64 Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_content_pm_PackageStats_dataSize")
      .asFunction<
          int Function(
    ffi.Pointer<ffi.Void>,
  )>();
  int get dataSize => _getdataSize(reference);
  static final _setdataSize = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  ffi.Int64)>>("set_android_content_pm_PackageStats_dataSize")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();
  set dataSize(int value) => _setdataSize(reference, value);

  /// from: public long externalCacheSize
  static final _getexternalCacheSize = jlookup<
          ffi.NativeFunction<
              ffi.Int64 Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_content_pm_PackageStats_externalCacheSize")
      .asFunction<
          int Function(
    ffi.Pointer<ffi.Void>,
  )>();
  int get externalCacheSize => _getexternalCacheSize(reference);
  static final _setexternalCacheSize = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Int64)>>(
          "set_android_content_pm_PackageStats_externalCacheSize")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();
  set externalCacheSize(int value) => _setexternalCacheSize(reference, value);

  /// from: public long externalCodeSize
  static final _getexternalCodeSize = jlookup<
          ffi.NativeFunction<
              ffi.Int64 Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_content_pm_PackageStats_externalCodeSize")
      .asFunction<
          int Function(
    ffi.Pointer<ffi.Void>,
  )>();
  int get externalCodeSize => _getexternalCodeSize(reference);
  static final _setexternalCodeSize = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Int64)>>(
          "set_android_content_pm_PackageStats_externalCodeSize")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();
  set externalCodeSize(int value) => _setexternalCodeSize(reference, value);

  /// from: public long externalDataSize
  static final _getexternalDataSize = jlookup<
          ffi.NativeFunction<
              ffi.Int64 Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_content_pm_PackageStats_externalDataSize")
      .asFunction<
          int Function(
    ffi.Pointer<ffi.Void>,
  )>();
  int get externalDataSize => _getexternalDataSize(reference);
  static final _setexternalDataSize = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Int64)>>(
          "set_android_content_pm_PackageStats_externalDataSize")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();
  set externalDataSize(int value) => _setexternalDataSize(reference, value);

  /// from: public long externalMediaSize
  static final _getexternalMediaSize = jlookup<
          ffi.NativeFunction<
              ffi.Int64 Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_content_pm_PackageStats_externalMediaSize")
      .asFunction<
          int Function(
    ffi.Pointer<ffi.Void>,
  )>();
  int get externalMediaSize => _getexternalMediaSize(reference);
  static final _setexternalMediaSize = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Int64)>>(
          "set_android_content_pm_PackageStats_externalMediaSize")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();
  set externalMediaSize(int value) => _setexternalMediaSize(reference, value);

  /// from: public long externalObbSize
  static final _getexternalObbSize = jlookup<
          ffi.NativeFunction<
              ffi.Int64 Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_content_pm_PackageStats_externalObbSize")
      .asFunction<
          int Function(
    ffi.Pointer<ffi.Void>,
  )>();
  int get externalObbSize => _getexternalObbSize(reference);
  static final _setexternalObbSize = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Int64)>>(
          "set_android_content_pm_PackageStats_externalObbSize")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();
  set externalObbSize(int value) => _setexternalObbSize(reference, value);

  /// from: public java.lang.String packageName
  static final _getpackageName = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_content_pm_PackageStats_packageName")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>();
  jni.JlString get packageName =>
      jni.JlString.fromRef(_getpackageName(reference));
  static final _setpackageName = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "set_android_content_pm_PackageStats_packageName")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();
  set packageName(jni.JlString value) =>
      _setpackageName(reference, value.reference);

  static final _ctor = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_PackageStats_new")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void <init>(java.lang.String pkgName)
  PackageStats(jni.JlString pkgName) : super.fromRef(_ctor(pkgName.reference));

  static final _ctor_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_PackageStats_new_1")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void <init>(android.os.Parcel source)
  PackageStats.ctor_1(os.Parcel source)
      : super.fromRef(_ctor_1(source.reference));

  static final _ctor_2 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_PackageStats_new_2")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void <init>(android.content.pm.PackageStats pStats)
  PackageStats.ctor_2(PackageStats pStats)
      : super.fromRef(_ctor_2(pStats.reference));

  static final _toString_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_PackageStats_toString_1")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.String toString()
  jni.JlString toString_1() => jni.JlString.fromRef(_toString_1(reference));

  static final _describeContents =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_pm_PackageStats_describeContents")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int describeContents()
  int describeContents() => _describeContents(reference);

  static final _writeToParcel = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_content_pm_PackageStats_writeToParcel")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public void writeToParcel(android.os.Parcel dest, int parcelableFlags)
  void writeToParcel(os.Parcel dest, int parcelableFlags) =>
      _writeToParcel(reference, dest.reference, parcelableFlags);

  static final _equals_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Uint8 Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_PackageStats_equals_1")
      .asFunction<int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public boolean equals(java.lang.Object obj)
  bool equals_1(jni.JlObject obj) => _equals_1(reference, obj.reference) != 0;

  static final _hashCode_1 =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_pm_PackageStats_hashCode_1")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int hashCode()
  int hashCode_1() => _hashCode_1(reference);
}

class ChangedPackages extends jni.JlObject {
  ChangedPackages.fromRef(ffi.Pointer<ffi.Void> ref) : super.fromRef(ref);

  /// from: static public final android.os.Parcelable.Creator<android.content.pm.ChangedPackages> CREATOR
  static final _getCREATOR =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "get_android_content_pm_ChangedPackages_CREATOR")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();
  static os.Parcelable_Creator get CREATOR =>
      os.Parcelable_Creator.fromRef(_getCREATOR());

  static final _ctor = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Int32, ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_ChangedPackages_new")
      .asFunction<ffi.Pointer<ffi.Void> Function(int, ffi.Pointer<ffi.Void>)>();

  /// from: public void <init>(int sequenceNumber, java.util.List<java.lang.String> packageNames)
  ChangedPackages(int sequenceNumber, jni.JlObject packageNames)
      : super.fromRef(_ctor(sequenceNumber, packageNames.reference));

  static final _describeContents =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_pm_ChangedPackages_describeContents")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int describeContents()
  int describeContents() => _describeContents(reference);

  static final _writeToParcel = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "android_content_pm_ChangedPackages_writeToParcel")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public void writeToParcel(android.os.Parcel dest, int flags)
  void writeToParcel(os.Parcel dest, int flags) =>
      _writeToParcel(reference, dest.reference, flags);

  static final _getSequenceNumber =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_pm_ChangedPackages_getSequenceNumber")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int getSequenceNumber()
  int getSequenceNumber() => _getSequenceNumber(reference);

  static final _getPackageNames = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_ChangedPackages_getPackageNames")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.util.List<java.lang.String> getPackageNames()
  jni.JlObject getPackageNames() =>
      jni.JlObject.fromRef(_getPackageNames(reference));
}

class Signature extends jni.JlObject {
  Signature.fromRef(ffi.Pointer<ffi.Void> ref) : super.fromRef(ref);

  /// from: static public final android.os.Parcelable.Creator<android.content.pm.Signature> CREATOR
  static final _getCREATOR =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "get_android_content_pm_Signature_CREATOR")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();
  static os.Parcelable_Creator get CREATOR =>
      os.Parcelable_Creator.fromRef(_getCREATOR());

  static final _ctor = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
                  ffi.Pointer<ffi.Void>)>>("android_content_pm_Signature_new")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void <init>(byte[] signature)
  Signature(jni.JlObject signature) : super.fromRef(_ctor(signature.reference));

  static final _ctor_1 = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
                  ffi.Pointer<ffi.Void>)>>("android_content_pm_Signature_new_1")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void <init>(java.lang.String text)
  Signature.ctor_1(jni.JlString text) : super.fromRef(_ctor_1(text.reference));

  static final _toChars = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_Signature_toChars")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public char[] toChars()
  jni.JlObject toChars() => jni.JlObject.fromRef(_toChars(reference));

  static final _toChars_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_Signature_toChars_1")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public char[] toChars(char[] existingArray, int[] outLen)
  jni.JlObject toChars_1(jni.JlObject existingArray, jni.JlObject outLen) =>
      jni.JlObject.fromRef(
          _toChars_1(reference, existingArray.reference, outLen.reference));

  static final _toCharsString = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_Signature_toCharsString")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.String toCharsString()
  jni.JlString toCharsString() =>
      jni.JlString.fromRef(_toCharsString(reference));

  static final _toByteArray = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_Signature_toByteArray")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public byte[] toByteArray()
  jni.JlObject toByteArray() => jni.JlObject.fromRef(_toByteArray(reference));

  static final _equals_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Uint8 Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_Signature_equals_1")
      .asFunction<int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public boolean equals(java.lang.Object obj)
  bool equals_1(jni.JlObject obj) => _equals_1(reference, obj.reference) != 0;

  static final _hashCode_1 =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_pm_Signature_hashCode_1")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int hashCode()
  int hashCode_1() => _hashCode_1(reference);

  static final _describeContents =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_pm_Signature_describeContents")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int describeContents()
  int describeContents() => _describeContents(reference);

  static final _writeToParcel = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("android_content_pm_Signature_writeToParcel")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public void writeToParcel(android.os.Parcel dest, int parcelableFlags)
  void writeToParcel(os.Parcel dest, int parcelableFlags) =>
      _writeToParcel(reference, dest.reference, parcelableFlags);
}

class ApplicationInfo extends PackageItemInfo {
  ApplicationInfo.fromRef(ffi.Pointer<ffi.Void> ref) : super.fromRef(ref);

  /// from: static public final int CATEGORY_AUDIO
  static const CATEGORY_AUDIO = 1;

  /// from: static public final int CATEGORY_GAME
  static const CATEGORY_GAME = 0;

  /// from: static public final int CATEGORY_IMAGE
  static const CATEGORY_IMAGE = 3;

  /// from: static public final int CATEGORY_MAPS
  static const CATEGORY_MAPS = 6;

  /// from: static public final int CATEGORY_NEWS
  static const CATEGORY_NEWS = 5;

  /// from: static public final int CATEGORY_PRODUCTIVITY
  static const CATEGORY_PRODUCTIVITY = 7;

  /// from: static public final int CATEGORY_SOCIAL
  static const CATEGORY_SOCIAL = 4;

  /// from: static public final int CATEGORY_UNDEFINED
  static const CATEGORY_UNDEFINED = -1;

  /// from: static public final int CATEGORY_VIDEO
  static const CATEGORY_VIDEO = 2;

  /// from: static public final android.os.Parcelable.Creator<android.content.pm.ApplicationInfo> CREATOR
  static final _getCREATOR =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "get_android_content_pm_ApplicationInfo_CREATOR")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();
  static os.Parcelable_Creator get CREATOR =>
      os.Parcelable_Creator.fromRef(_getCREATOR());

  /// from: static public final int FLAG_ALLOW_BACKUP
  static const FLAG_ALLOW_BACKUP = 32768;

  /// from: static public final int FLAG_ALLOW_CLEAR_USER_DATA
  static const FLAG_ALLOW_CLEAR_USER_DATA = 64;

  /// from: static public final int FLAG_ALLOW_TASK_REPARENTING
  static const FLAG_ALLOW_TASK_REPARENTING = 32;

  /// from: static public final int FLAG_DEBUGGABLE
  static const FLAG_DEBUGGABLE = 2;

  /// from: static public final int FLAG_EXTERNAL_STORAGE
  static const FLAG_EXTERNAL_STORAGE = 262144;

  /// from: static public final int FLAG_EXTRACT_NATIVE_LIBS
  static const FLAG_EXTRACT_NATIVE_LIBS = 268435456;

  /// from: static public final int FLAG_FACTORY_TEST
  static const FLAG_FACTORY_TEST = 16;

  /// from: static public final int FLAG_FULL_BACKUP_ONLY
  static const FLAG_FULL_BACKUP_ONLY = 67108864;

  /// from: static public final int FLAG_HARDWARE_ACCELERATED
  static const FLAG_HARDWARE_ACCELERATED = 536870912;

  /// from: static public final int FLAG_HAS_CODE
  static const FLAG_HAS_CODE = 4;

  /// from: static public final int FLAG_INSTALLED
  static const FLAG_INSTALLED = 8388608;

  /// from: static public final int FLAG_IS_DATA_ONLY
  static const FLAG_IS_DATA_ONLY = 16777216;

  /// from: static public final int FLAG_IS_GAME
  static const FLAG_IS_GAME = 33554432;

  /// from: static public final int FLAG_KILL_AFTER_RESTORE
  static const FLAG_KILL_AFTER_RESTORE = 65536;

  /// from: static public final int FLAG_LARGE_HEAP
  static const FLAG_LARGE_HEAP = 1048576;

  /// from: static public final int FLAG_MULTIARCH
  static const FLAG_MULTIARCH = -2147483648;

  /// from: static public final int FLAG_PERSISTENT
  static const FLAG_PERSISTENT = 8;

  /// from: static public final int FLAG_RESIZEABLE_FOR_SCREENS
  static const FLAG_RESIZEABLE_FOR_SCREENS = 4096;

  /// from: static public final int FLAG_RESTORE_ANY_VERSION
  static const FLAG_RESTORE_ANY_VERSION = 131072;

  /// from: static public final int FLAG_STOPPED
  static const FLAG_STOPPED = 2097152;

  /// from: static public final int FLAG_SUPPORTS_LARGE_SCREENS
  static const FLAG_SUPPORTS_LARGE_SCREENS = 2048;

  /// from: static public final int FLAG_SUPPORTS_NORMAL_SCREENS
  static const FLAG_SUPPORTS_NORMAL_SCREENS = 1024;

  /// from: static public final int FLAG_SUPPORTS_RTL
  static const FLAG_SUPPORTS_RTL = 4194304;

  /// from: static public final int FLAG_SUPPORTS_SCREEN_DENSITIES
  static const FLAG_SUPPORTS_SCREEN_DENSITIES = 8192;

  /// from: static public final int FLAG_SUPPORTS_SMALL_SCREENS
  static const FLAG_SUPPORTS_SMALL_SCREENS = 512;

  /// from: static public final int FLAG_SUPPORTS_XLARGE_SCREENS
  static const FLAG_SUPPORTS_XLARGE_SCREENS = 524288;

  /// from: static public final int FLAG_SUSPENDED
  static const FLAG_SUSPENDED = 1073741824;

  /// from: static public final int FLAG_SYSTEM
  static const FLAG_SYSTEM = 1;

  /// from: static public final int FLAG_TEST_ONLY
  static const FLAG_TEST_ONLY = 256;

  /// from: static public final int FLAG_UPDATED_SYSTEM_APP
  static const FLAG_UPDATED_SYSTEM_APP = 128;

  /// from: static public final int FLAG_USES_CLEARTEXT_TRAFFIC
  static const FLAG_USES_CLEARTEXT_TRAFFIC = 134217728;

  /// from: static public final int FLAG_VM_SAFE_MODE
  static const FLAG_VM_SAFE_MODE = 16384;

  /// from: public java.lang.String appComponentFactory
  static final _getappComponentFactory = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_content_pm_ApplicationInfo_appComponentFactory")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>();
  jni.JlString get appComponentFactory =>
      jni.JlString.fromRef(_getappComponentFactory(reference));
  static final _setappComponentFactory = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "set_android_content_pm_ApplicationInfo_appComponentFactory")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();
  set appComponentFactory(jni.JlString value) =>
      _setappComponentFactory(reference, value.reference);

  /// from: public java.lang.String backupAgentName
  static final _getbackupAgentName = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_content_pm_ApplicationInfo_backupAgentName")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>();
  jni.JlString get backupAgentName =>
      jni.JlString.fromRef(_getbackupAgentName(reference));
  static final _setbackupAgentName = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "set_android_content_pm_ApplicationInfo_backupAgentName")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();
  set backupAgentName(jni.JlString value) =>
      _setbackupAgentName(reference, value.reference);

  /// from: public int category
  static final _getcategory = jlookup<
          ffi.NativeFunction<
              ffi.Int32 Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_content_pm_ApplicationInfo_category")
      .asFunction<
          int Function(
    ffi.Pointer<ffi.Void>,
  )>();
  int get category => _getcategory(reference);
  static final _setcategory = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "set_android_content_pm_ApplicationInfo_category")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();
  set category(int value) => _setcategory(reference, value);

  /// from: public java.lang.String className
  static final _getclassName = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_content_pm_ApplicationInfo_className")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>();
  jni.JlString get className => jni.JlString.fromRef(_getclassName(reference));
  static final _setclassName = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "set_android_content_pm_ApplicationInfo_className")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();
  set className(jni.JlString value) =>
      _setclassName(reference, value.reference);

  /// from: public int compatibleWidthLimitDp
  static final _getcompatibleWidthLimitDp = jlookup<
          ffi.NativeFunction<
              ffi.Int32 Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_content_pm_ApplicationInfo_compatibleWidthLimitDp")
      .asFunction<
          int Function(
    ffi.Pointer<ffi.Void>,
  )>();
  int get compatibleWidthLimitDp => _getcompatibleWidthLimitDp(reference);
  static final _setcompatibleWidthLimitDp = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "set_android_content_pm_ApplicationInfo_compatibleWidthLimitDp")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();
  set compatibleWidthLimitDp(int value) =>
      _setcompatibleWidthLimitDp(reference, value);

  /// from: public java.lang.String dataDir
  static final _getdataDir = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_content_pm_ApplicationInfo_dataDir")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>();
  jni.JlString get dataDir => jni.JlString.fromRef(_getdataDir(reference));
  static final _setdataDir = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "set_android_content_pm_ApplicationInfo_dataDir")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();
  set dataDir(jni.JlString value) => _setdataDir(reference, value.reference);

  /// from: public int descriptionRes
  static final _getdescriptionRes = jlookup<
          ffi.NativeFunction<
              ffi.Int32 Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_content_pm_ApplicationInfo_descriptionRes")
      .asFunction<
          int Function(
    ffi.Pointer<ffi.Void>,
  )>();
  int get descriptionRes => _getdescriptionRes(reference);
  static final _setdescriptionRes = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "set_android_content_pm_ApplicationInfo_descriptionRes")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();
  set descriptionRes(int value) => _setdescriptionRes(reference, value);

  /// from: public java.lang.String deviceProtectedDataDir
  static final _getdeviceProtectedDataDir = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_content_pm_ApplicationInfo_deviceProtectedDataDir")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>();
  jni.JlString get deviceProtectedDataDir =>
      jni.JlString.fromRef(_getdeviceProtectedDataDir(reference));
  static final _setdeviceProtectedDataDir = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "set_android_content_pm_ApplicationInfo_deviceProtectedDataDir")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();
  set deviceProtectedDataDir(jni.JlString value) =>
      _setdeviceProtectedDataDir(reference, value.reference);

  /// from: public boolean enabled
  static final _getenabled = jlookup<
          ffi.NativeFunction<
              ffi.Uint8 Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_content_pm_ApplicationInfo_enabled")
      .asFunction<
          int Function(
    ffi.Pointer<ffi.Void>,
  )>();
  bool get enabled => _getenabled(reference) != 0;
  static final _setenabled = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  ffi.Uint8)>>("set_android_content_pm_ApplicationInfo_enabled")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();
  set enabled(bool value) => _setenabled(reference, value ? 1 : 0);

  /// from: public int flags
  static final _getflags = jlookup<
          ffi.NativeFunction<
              ffi.Int32 Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_content_pm_ApplicationInfo_flags")
      .asFunction<
          int Function(
    ffi.Pointer<ffi.Void>,
  )>();
  int get flags => _getflags(reference);
  static final _setflags = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("set_android_content_pm_ApplicationInfo_flags")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();
  set flags(int value) => _setflags(reference, value);

  /// from: public int largestWidthLimitDp
  static final _getlargestWidthLimitDp = jlookup<
          ffi.NativeFunction<
              ffi.Int32 Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_content_pm_ApplicationInfo_largestWidthLimitDp")
      .asFunction<
          int Function(
    ffi.Pointer<ffi.Void>,
  )>();
  int get largestWidthLimitDp => _getlargestWidthLimitDp(reference);
  static final _setlargestWidthLimitDp = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "set_android_content_pm_ApplicationInfo_largestWidthLimitDp")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();
  set largestWidthLimitDp(int value) =>
      _setlargestWidthLimitDp(reference, value);

  /// from: public java.lang.String manageSpaceActivityName
  static final _getmanageSpaceActivityName = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_content_pm_ApplicationInfo_manageSpaceActivityName")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>();
  jni.JlString get manageSpaceActivityName =>
      jni.JlString.fromRef(_getmanageSpaceActivityName(reference));
  static final _setmanageSpaceActivityName = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "set_android_content_pm_ApplicationInfo_manageSpaceActivityName")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();
  set manageSpaceActivityName(jni.JlString value) =>
      _setmanageSpaceActivityName(reference, value.reference);

  /// from: public int minSdkVersion
  static final _getminSdkVersion = jlookup<
          ffi.NativeFunction<
              ffi.Int32 Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_content_pm_ApplicationInfo_minSdkVersion")
      .asFunction<
          int Function(
    ffi.Pointer<ffi.Void>,
  )>();
  int get minSdkVersion => _getminSdkVersion(reference);
  static final _setminSdkVersion = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "set_android_content_pm_ApplicationInfo_minSdkVersion")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();
  set minSdkVersion(int value) => _setminSdkVersion(reference, value);

  /// from: public java.lang.String nativeLibraryDir
  static final _getnativeLibraryDir = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_content_pm_ApplicationInfo_nativeLibraryDir")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>();
  jni.JlString get nativeLibraryDir =>
      jni.JlString.fromRef(_getnativeLibraryDir(reference));
  static final _setnativeLibraryDir = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "set_android_content_pm_ApplicationInfo_nativeLibraryDir")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();
  set nativeLibraryDir(jni.JlString value) =>
      _setnativeLibraryDir(reference, value.reference);

  /// from: public java.lang.String permission
  static final _getpermission = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_content_pm_ApplicationInfo_permission")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>();
  jni.JlString get permission =>
      jni.JlString.fromRef(_getpermission(reference));
  static final _setpermission = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "set_android_content_pm_ApplicationInfo_permission")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();
  set permission(jni.JlString value) =>
      _setpermission(reference, value.reference);

  /// from: public java.lang.String processName
  static final _getprocessName = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_content_pm_ApplicationInfo_processName")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>();
  jni.JlString get processName =>
      jni.JlString.fromRef(_getprocessName(reference));
  static final _setprocessName = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "set_android_content_pm_ApplicationInfo_processName")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();
  set processName(jni.JlString value) =>
      _setprocessName(reference, value.reference);

  /// from: public java.lang.String publicSourceDir
  static final _getpublicSourceDir = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_content_pm_ApplicationInfo_publicSourceDir")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>();
  jni.JlString get publicSourceDir =>
      jni.JlString.fromRef(_getpublicSourceDir(reference));
  static final _setpublicSourceDir = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "set_android_content_pm_ApplicationInfo_publicSourceDir")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();
  set publicSourceDir(jni.JlString value) =>
      _setpublicSourceDir(reference, value.reference);

  /// from: public int requiresSmallestWidthDp
  static final _getrequiresSmallestWidthDp = jlookup<
          ffi.NativeFunction<
              ffi.Int32 Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_content_pm_ApplicationInfo_requiresSmallestWidthDp")
      .asFunction<
          int Function(
    ffi.Pointer<ffi.Void>,
  )>();
  int get requiresSmallestWidthDp => _getrequiresSmallestWidthDp(reference);
  static final _setrequiresSmallestWidthDp = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "set_android_content_pm_ApplicationInfo_requiresSmallestWidthDp")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();
  set requiresSmallestWidthDp(int value) =>
      _setrequiresSmallestWidthDp(reference, value);

  /// from: public java.lang.String[] sharedLibraryFiles
  static final _getsharedLibraryFiles = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_content_pm_ApplicationInfo_sharedLibraryFiles")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>();
  jni.JlObject get sharedLibraryFiles =>
      jni.JlObject.fromRef(_getsharedLibraryFiles(reference));
  static final _setsharedLibraryFiles = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "set_android_content_pm_ApplicationInfo_sharedLibraryFiles")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();
  set sharedLibraryFiles(jni.JlObject value) =>
      _setsharedLibraryFiles(reference, value.reference);

  /// from: public java.lang.String sourceDir
  static final _getsourceDir = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_content_pm_ApplicationInfo_sourceDir")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>();
  jni.JlString get sourceDir => jni.JlString.fromRef(_getsourceDir(reference));
  static final _setsourceDir = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "set_android_content_pm_ApplicationInfo_sourceDir")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();
  set sourceDir(jni.JlString value) =>
      _setsourceDir(reference, value.reference);

  /// from: public java.lang.String[] splitNames
  static final _getsplitNames = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_content_pm_ApplicationInfo_splitNames")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>();
  jni.JlObject get splitNames =>
      jni.JlObject.fromRef(_getsplitNames(reference));
  static final _setsplitNames = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "set_android_content_pm_ApplicationInfo_splitNames")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();
  set splitNames(jni.JlObject value) =>
      _setsplitNames(reference, value.reference);

  /// from: public java.lang.String[] splitPublicSourceDirs
  static final _getsplitPublicSourceDirs = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_content_pm_ApplicationInfo_splitPublicSourceDirs")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>();
  jni.JlObject get splitPublicSourceDirs =>
      jni.JlObject.fromRef(_getsplitPublicSourceDirs(reference));
  static final _setsplitPublicSourceDirs = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "set_android_content_pm_ApplicationInfo_splitPublicSourceDirs")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();
  set splitPublicSourceDirs(jni.JlObject value) =>
      _setsplitPublicSourceDirs(reference, value.reference);

  /// from: public java.lang.String[] splitSourceDirs
  static final _getsplitSourceDirs = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_content_pm_ApplicationInfo_splitSourceDirs")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>();
  jni.JlObject get splitSourceDirs =>
      jni.JlObject.fromRef(_getsplitSourceDirs(reference));
  static final _setsplitSourceDirs = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "set_android_content_pm_ApplicationInfo_splitSourceDirs")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();
  set splitSourceDirs(jni.JlObject value) =>
      _setsplitSourceDirs(reference, value.reference);

  /// from: public java.util.UUID storageUuid
  static final _getstorageUuid = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_content_pm_ApplicationInfo_storageUuid")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>();
  jni.JlObject get storageUuid =>
      jni.JlObject.fromRef(_getstorageUuid(reference));
  static final _setstorageUuid = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "set_android_content_pm_ApplicationInfo_storageUuid")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();
  set storageUuid(jni.JlObject value) =>
      _setstorageUuid(reference, value.reference);

  /// from: public int targetSdkVersion
  static final _gettargetSdkVersion = jlookup<
          ffi.NativeFunction<
              ffi.Int32 Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_content_pm_ApplicationInfo_targetSdkVersion")
      .asFunction<
          int Function(
    ffi.Pointer<ffi.Void>,
  )>();
  int get targetSdkVersion => _gettargetSdkVersion(reference);
  static final _settargetSdkVersion = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "set_android_content_pm_ApplicationInfo_targetSdkVersion")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();
  set targetSdkVersion(int value) => _settargetSdkVersion(reference, value);

  /// from: public java.lang.String taskAffinity
  static final _gettaskAffinity = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_content_pm_ApplicationInfo_taskAffinity")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>();
  jni.JlString get taskAffinity =>
      jni.JlString.fromRef(_gettaskAffinity(reference));
  static final _settaskAffinity = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "set_android_content_pm_ApplicationInfo_taskAffinity")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();
  set taskAffinity(jni.JlString value) =>
      _settaskAffinity(reference, value.reference);

  /// from: public int theme
  static final _gettheme = jlookup<
          ffi.NativeFunction<
              ffi.Int32 Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_content_pm_ApplicationInfo_theme")
      .asFunction<
          int Function(
    ffi.Pointer<ffi.Void>,
  )>();
  int get theme => _gettheme(reference);
  static final _settheme = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("set_android_content_pm_ApplicationInfo_theme")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();
  set theme(int value) => _settheme(reference, value);

  /// from: public int uiOptions
  static final _getuiOptions = jlookup<
          ffi.NativeFunction<
              ffi.Int32 Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_content_pm_ApplicationInfo_uiOptions")
      .asFunction<
          int Function(
    ffi.Pointer<ffi.Void>,
  )>();
  int get uiOptions => _getuiOptions(reference);
  static final _setuiOptions = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "set_android_content_pm_ApplicationInfo_uiOptions")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();
  set uiOptions(int value) => _setuiOptions(reference, value);

  /// from: public int uid
  static final _getuid = jlookup<
          ffi.NativeFunction<
              ffi.Int32 Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_content_pm_ApplicationInfo_uid")
      .asFunction<
          int Function(
    ffi.Pointer<ffi.Void>,
  )>();
  int get uid => _getuid(reference);
  static final _setuid = jlookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>,
                  ffi.Int32)>>("set_android_content_pm_ApplicationInfo_uid")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();
  set uid(int value) => _setuid(reference, value);

  static final _ctor =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "android_content_pm_ApplicationInfo_new")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();

  /// from: public void <init>()
  ApplicationInfo() : super.fromRef(_ctor());

  static final _ctor_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_ApplicationInfo_new_1")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void <init>(android.content.pm.ApplicationInfo orig)
  ApplicationInfo.ctor_1(ApplicationInfo orig)
      : super.fromRef(_ctor_1(orig.reference));

  static final _getCategoryTitle = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "android_content_pm_ApplicationInfo_getCategoryTitle")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: static public java.lang.CharSequence getCategoryTitle(android.content.Context context, int category)
  static jni.JlObject getCategoryTitle(content.Context context, int category) =>
      jni.JlObject.fromRef(_getCategoryTitle(context.reference, category));

  static final _dump = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_ApplicationInfo_dump")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public void dump(android.util.Printer pw, java.lang.String prefix)
  void dump(jni.JlObject pw, jni.JlString prefix) =>
      _dump(reference, pw.reference, prefix.reference);

  static final _toString_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_ApplicationInfo_toString_1")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.String toString()
  jni.JlString toString_1() => jni.JlString.fromRef(_toString_1(reference));

  static final _describeContents =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_pm_ApplicationInfo_describeContents")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int describeContents()
  int describeContents() => _describeContents(reference);

  static final _writeToParcel = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "android_content_pm_ApplicationInfo_writeToParcel")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public void writeToParcel(android.os.Parcel dest, int parcelableFlags)
  void writeToParcel(os.Parcel dest, int parcelableFlags) =>
      _writeToParcel(reference, dest.reference, parcelableFlags);

  static final _loadDescription = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_ApplicationInfo_loadDescription")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.CharSequence loadDescription(android.content.pm.PackageManager pm)
  jni.JlObject loadDescription(PackageManager pm) =>
      jni.JlObject.fromRef(_loadDescription(reference, pm.reference));

  static final _isVirtualPreload =
      jlookup<ffi.NativeFunction<ffi.Uint8 Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_pm_ApplicationInfo_isVirtualPreload")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public boolean isVirtualPreload()
  bool isVirtualPreload() => _isVirtualPreload(reference) != 0;
}

class ApplicationInfo_DisplayNameComparator extends jni.JlObject {
  ApplicationInfo_DisplayNameComparator.fromRef(ffi.Pointer<ffi.Void> ref)
      : super.fromRef(ref);

  static final _ctor = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_ApplicationInfo__DisplayNameComparator_new")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void <init>(android.content.pm.PackageManager pm)
  ApplicationInfo_DisplayNameComparator(PackageManager pm)
      : super.fromRef(_ctor(pm.reference));

  static final _compare = jlookup<
              ffi.NativeFunction<
                  ffi.Int32 Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_ApplicationInfo__DisplayNameComparator_compare")
      .asFunction<
          int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public final int compare(android.content.pm.ApplicationInfo aa, android.content.pm.ApplicationInfo ab)
  int compare(ApplicationInfo aa, ApplicationInfo ab) =>
      _compare(reference, aa.reference, ab.reference);
}

class InstrumentationInfo extends PackageItemInfo {
  InstrumentationInfo.fromRef(ffi.Pointer<ffi.Void> ref) : super.fromRef(ref);

  /// from: static public final android.os.Parcelable.Creator<android.content.pm.InstrumentationInfo> CREATOR
  static final _getCREATOR =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "get_android_content_pm_InstrumentationInfo_CREATOR")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();
  static os.Parcelable_Creator get CREATOR =>
      os.Parcelable_Creator.fromRef(_getCREATOR());

  /// from: public java.lang.String dataDir
  static final _getdataDir = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_content_pm_InstrumentationInfo_dataDir")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>();
  jni.JlString get dataDir => jni.JlString.fromRef(_getdataDir(reference));
  static final _setdataDir = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "set_android_content_pm_InstrumentationInfo_dataDir")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();
  set dataDir(jni.JlString value) => _setdataDir(reference, value.reference);

  /// from: public boolean functionalTest
  static final _getfunctionalTest = jlookup<
          ffi.NativeFunction<
              ffi.Uint8 Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_content_pm_InstrumentationInfo_functionalTest")
      .asFunction<
          int Function(
    ffi.Pointer<ffi.Void>,
  )>();
  bool get functionalTest => _getfunctionalTest(reference) != 0;
  static final _setfunctionalTest = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Uint8)>>(
          "set_android_content_pm_InstrumentationInfo_functionalTest")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();
  set functionalTest(bool value) =>
      _setfunctionalTest(reference, value ? 1 : 0);

  /// from: public boolean handleProfiling
  static final _gethandleProfiling = jlookup<
          ffi.NativeFunction<
              ffi.Uint8 Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_content_pm_InstrumentationInfo_handleProfiling")
      .asFunction<
          int Function(
    ffi.Pointer<ffi.Void>,
  )>();
  bool get handleProfiling => _gethandleProfiling(reference) != 0;
  static final _sethandleProfiling = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Uint8)>>(
          "set_android_content_pm_InstrumentationInfo_handleProfiling")
      .asFunction<void Function(ffi.Pointer<ffi.Void>, int)>();
  set handleProfiling(bool value) =>
      _sethandleProfiling(reference, value ? 1 : 0);

  /// from: public java.lang.String publicSourceDir
  static final _getpublicSourceDir = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_content_pm_InstrumentationInfo_publicSourceDir")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>();
  jni.JlString get publicSourceDir =>
      jni.JlString.fromRef(_getpublicSourceDir(reference));
  static final _setpublicSourceDir = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "set_android_content_pm_InstrumentationInfo_publicSourceDir")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();
  set publicSourceDir(jni.JlString value) =>
      _setpublicSourceDir(reference, value.reference);

  /// from: public java.lang.String sourceDir
  static final _getsourceDir = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_content_pm_InstrumentationInfo_sourceDir")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>();
  jni.JlString get sourceDir => jni.JlString.fromRef(_getsourceDir(reference));
  static final _setsourceDir = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "set_android_content_pm_InstrumentationInfo_sourceDir")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();
  set sourceDir(jni.JlString value) =>
      _setsourceDir(reference, value.reference);

  /// from: public java.lang.String[] splitNames
  static final _getsplitNames = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_content_pm_InstrumentationInfo_splitNames")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>();
  jni.JlObject get splitNames =>
      jni.JlObject.fromRef(_getsplitNames(reference));
  static final _setsplitNames = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "set_android_content_pm_InstrumentationInfo_splitNames")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();
  set splitNames(jni.JlObject value) =>
      _setsplitNames(reference, value.reference);

  /// from: public java.lang.String[] splitPublicSourceDirs
  static final _getsplitPublicSourceDirs = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_content_pm_InstrumentationInfo_splitPublicSourceDirs")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>();
  jni.JlObject get splitPublicSourceDirs =>
      jni.JlObject.fromRef(_getsplitPublicSourceDirs(reference));
  static final _setsplitPublicSourceDirs = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "set_android_content_pm_InstrumentationInfo_splitPublicSourceDirs")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();
  set splitPublicSourceDirs(jni.JlObject value) =>
      _setsplitPublicSourceDirs(reference, value.reference);

  /// from: public java.lang.String[] splitSourceDirs
  static final _getsplitSourceDirs = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_content_pm_InstrumentationInfo_splitSourceDirs")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>();
  jni.JlObject get splitSourceDirs =>
      jni.JlObject.fromRef(_getsplitSourceDirs(reference));
  static final _setsplitSourceDirs = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "set_android_content_pm_InstrumentationInfo_splitSourceDirs")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();
  set splitSourceDirs(jni.JlObject value) =>
      _setsplitSourceDirs(reference, value.reference);

  /// from: public java.lang.String targetPackage
  static final _gettargetPackage = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_content_pm_InstrumentationInfo_targetPackage")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>();
  jni.JlString get targetPackage =>
      jni.JlString.fromRef(_gettargetPackage(reference));
  static final _settargetPackage = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "set_android_content_pm_InstrumentationInfo_targetPackage")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();
  set targetPackage(jni.JlString value) =>
      _settargetPackage(reference, value.reference);

  /// from: public java.lang.String targetProcesses
  static final _gettargetProcesses = jlookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>>("get_android_content_pm_InstrumentationInfo_targetProcesses")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
    ffi.Pointer<ffi.Void>,
  )>();
  jni.JlString get targetProcesses =>
      jni.JlString.fromRef(_gettargetProcesses(reference));
  static final _settargetProcesses = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "set_android_content_pm_InstrumentationInfo_targetProcesses")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();
  set targetProcesses(jni.JlString value) =>
      _settargetProcesses(reference, value.reference);

  static final _ctor =
      jlookup<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function()>>(
              "android_content_pm_InstrumentationInfo_new")
          .asFunction<ffi.Pointer<ffi.Void> Function()>();

  /// from: public void <init>()
  InstrumentationInfo() : super.fromRef(_ctor());

  static final _ctor_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_InstrumentationInfo_new_1")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void <init>(android.content.pm.InstrumentationInfo orig)
  InstrumentationInfo.ctor_1(InstrumentationInfo orig)
      : super.fromRef(_ctor_1(orig.reference));

  static final _toString_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_InstrumentationInfo_toString_1")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.String toString()
  jni.JlString toString_1() => jni.JlString.fromRef(_toString_1(reference));

  static final _describeContents =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_pm_InstrumentationInfo_describeContents")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int describeContents()
  int describeContents() => _describeContents(reference);

  static final _writeToParcel = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "android_content_pm_InstrumentationInfo_writeToParcel")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, int)>();

  /// from: public void writeToParcel(android.os.Parcel dest, int parcelableFlags)
  void writeToParcel(os.Parcel dest, int parcelableFlags) =>
      _writeToParcel(reference, dest.reference, parcelableFlags);
}

class ShortcutManager extends jni.JlObject {
  ShortcutManager.fromRef(ffi.Pointer<ffi.Void> ref) : super.fromRef(ref);

  static final _ctor = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_ShortcutManager_new")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: void <init>(android.content.Context context)
  ShortcutManager(content.Context context)
      : super.fromRef(_ctor(context.reference));

  static final _setDynamicShortcuts = jlookup<
              ffi.NativeFunction<
                  ffi.Uint8 Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_ShortcutManager_setDynamicShortcuts")
      .asFunction<int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public boolean setDynamicShortcuts(java.util.List<android.content.pm.ShortcutInfo> shortcutInfoList)
  bool setDynamicShortcuts(jni.JlObject shortcutInfoList) =>
      _setDynamicShortcuts(reference, shortcutInfoList.reference) != 0;

  static final _getDynamicShortcuts = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_ShortcutManager_getDynamicShortcuts")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.util.List<android.content.pm.ShortcutInfo> getDynamicShortcuts()
  jni.JlObject getDynamicShortcuts() =>
      jni.JlObject.fromRef(_getDynamicShortcuts(reference));

  static final _getManifestShortcuts = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_ShortcutManager_getManifestShortcuts")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.util.List<android.content.pm.ShortcutInfo> getManifestShortcuts()
  jni.JlObject getManifestShortcuts() =>
      jni.JlObject.fromRef(_getManifestShortcuts(reference));

  static final _addDynamicShortcuts = jlookup<
              ffi.NativeFunction<
                  ffi.Uint8 Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_ShortcutManager_addDynamicShortcuts")
      .asFunction<int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public boolean addDynamicShortcuts(java.util.List<android.content.pm.ShortcutInfo> shortcutInfoList)
  bool addDynamicShortcuts(jni.JlObject shortcutInfoList) =>
      _addDynamicShortcuts(reference, shortcutInfoList.reference) != 0;

  static final _removeDynamicShortcuts = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_ShortcutManager_removeDynamicShortcuts")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void removeDynamicShortcuts(java.util.List<java.lang.String> shortcutIds)
  void removeDynamicShortcuts(jni.JlObject shortcutIds) =>
      _removeDynamicShortcuts(reference, shortcutIds.reference);

  static final _removeAllDynamicShortcuts =
      jlookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_pm_ShortcutManager_removeAllDynamicShortcuts")
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  /// from: public void removeAllDynamicShortcuts()
  void removeAllDynamicShortcuts() => _removeAllDynamicShortcuts(reference);

  static final _getPinnedShortcuts = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_ShortcutManager_getPinnedShortcuts")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.util.List<android.content.pm.ShortcutInfo> getPinnedShortcuts()
  jni.JlObject getPinnedShortcuts() =>
      jni.JlObject.fromRef(_getPinnedShortcuts(reference));

  static final _updateShortcuts = jlookup<
              ffi.NativeFunction<
                  ffi.Uint8 Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_ShortcutManager_updateShortcuts")
      .asFunction<int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public boolean updateShortcuts(java.util.List<android.content.pm.ShortcutInfo> shortcutInfoList)
  bool updateShortcuts(jni.JlObject shortcutInfoList) =>
      _updateShortcuts(reference, shortcutInfoList.reference) != 0;

  static final _disableShortcuts = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_ShortcutManager_disableShortcuts")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void disableShortcuts(java.util.List<java.lang.String> shortcutIds)
  void disableShortcuts(jni.JlObject shortcutIds) =>
      _disableShortcuts(reference, shortcutIds.reference);

  static final _disableShortcuts_1 = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_ShortcutManager_disableShortcuts_1")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public void disableShortcuts(java.util.List<java.lang.String> shortcutIds, java.lang.CharSequence disabledMessage)
  void disableShortcuts_1(
          jni.JlObject shortcutIds, jni.JlObject disabledMessage) =>
      _disableShortcuts_1(
          reference, shortcutIds.reference, disabledMessage.reference);

  static final _enableShortcuts = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_ShortcutManager_enableShortcuts")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void enableShortcuts(java.util.List<java.lang.String> shortcutIds)
  void enableShortcuts(jni.JlObject shortcutIds) =>
      _enableShortcuts(reference, shortcutIds.reference);

  static final _getMaxShortcutCountPerActivity = jlookup<
              ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_ShortcutManager_getMaxShortcutCountPerActivity")
      .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int getMaxShortcutCountPerActivity()
  int getMaxShortcutCountPerActivity() =>
      _getMaxShortcutCountPerActivity(reference);

  static final _isRateLimitingActive =
      jlookup<ffi.NativeFunction<ffi.Uint8 Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_pm_ShortcutManager_isRateLimitingActive")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public boolean isRateLimitingActive()
  bool isRateLimitingActive() => _isRateLimitingActive(reference) != 0;

  static final _getIconMaxWidth =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_pm_ShortcutManager_getIconMaxWidth")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int getIconMaxWidth()
  int getIconMaxWidth() => _getIconMaxWidth(reference);

  static final _getIconMaxHeight =
      jlookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_pm_ShortcutManager_getIconMaxHeight")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public int getIconMaxHeight()
  int getIconMaxHeight() => _getIconMaxHeight(reference);

  static final _reportShortcutUsed = jlookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_ShortcutManager_reportShortcutUsed")
      .asFunction<
          void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public void reportShortcutUsed(java.lang.String shortcutId)
  void reportShortcutUsed(jni.JlString shortcutId) =>
      _reportShortcutUsed(reference, shortcutId.reference);

  static final _isRequestPinShortcutSupported = jlookup<
              ffi.NativeFunction<ffi.Uint8 Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_ShortcutManager_isRequestPinShortcutSupported")
      .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public boolean isRequestPinShortcutSupported()
  bool isRequestPinShortcutSupported() =>
      _isRequestPinShortcutSupported(reference) != 0;

  static final _requestPinShortcut = jlookup<
              ffi.NativeFunction<
                  ffi.Uint8 Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_ShortcutManager_requestPinShortcut")
      .asFunction<
          int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>)>();

  /// from: public boolean requestPinShortcut(android.content.pm.ShortcutInfo shortcut, android.content.IntentSender resultIntent)
  bool requestPinShortcut(
          ShortcutInfo shortcut, content.IntentSender resultIntent) =>
      _requestPinShortcut(
          reference, shortcut.reference, resultIntent.reference) !=
      0;

  static final _createShortcutResultIntent = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_ShortcutManager_createShortcutResultIntent")
      .asFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  /// from: public android.content.Intent createShortcutResultIntent(android.content.pm.ShortcutInfo shortcut)
  content.Intent createShortcutResultIntent(ShortcutInfo shortcut) =>
      content.Intent.fromRef(
          _createShortcutResultIntent(reference, shortcut.reference));
}

class LauncherActivityInfo extends jni.JlObject {
  LauncherActivityInfo.fromRef(ffi.Pointer<ffi.Void> ref) : super.fromRef(ref);

  static final _ctor = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_LauncherActivityInfo_new")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: void <init>(android.content.Context context)
  LauncherActivityInfo(content.Context context)
      : super.fromRef(_ctor(context.reference));

  static final _getComponentName = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_LauncherActivityInfo_getComponentName")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.content.ComponentName getComponentName()
  content.ComponentName getComponentName() =>
      content.ComponentName.fromRef(_getComponentName(reference));

  static final _getUser = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_LauncherActivityInfo_getUser")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.os.UserHandle getUser()
  os.UserHandle getUser() => os.UserHandle.fromRef(_getUser(reference));

  static final _getLabel = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_LauncherActivityInfo_getLabel")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.CharSequence getLabel()
  jni.JlObject getLabel() => jni.JlObject.fromRef(_getLabel(reference));

  static final _getIcon = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "android_content_pm_LauncherActivityInfo_getIcon")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public android.graphics.drawable.Drawable getIcon(int density)
  jni.JlObject getIcon(int density) =>
      jni.JlObject.fromRef(_getIcon(reference, density));

  static final _getApplicationInfo = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_LauncherActivityInfo_getApplicationInfo")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public android.content.pm.ApplicationInfo getApplicationInfo()
  ApplicationInfo getApplicationInfo() =>
      ApplicationInfo.fromRef(_getApplicationInfo(reference));

  static final _getFirstInstallTime =
      jlookup<ffi.NativeFunction<ffi.Int64 Function(ffi.Pointer<ffi.Void>)>>(
              "android_content_pm_LauncherActivityInfo_getFirstInstallTime")
          .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  /// from: public long getFirstInstallTime()
  int getFirstInstallTime() => _getFirstInstallTime(reference);

  static final _getName = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
          "android_content_pm_LauncherActivityInfo_getName")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  /// from: public java.lang.String getName()
  jni.JlString getName() => jni.JlString.fromRef(_getName(reference));

  static final _getBadgedIcon = jlookup<
              ffi.NativeFunction<
                  ffi.Pointer<ffi.Void> Function(
                      ffi.Pointer<ffi.Void>, ffi.Int32)>>(
          "android_content_pm_LauncherActivityInfo_getBadgedIcon")
      .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, int)>();

  /// from: public android.graphics.drawable.Drawable getBadgedIcon(int density)
  jni.JlObject getBadgedIcon(int density) =>
      jni.JlObject.fromRef(_getBadgedIcon(reference, density));
}
